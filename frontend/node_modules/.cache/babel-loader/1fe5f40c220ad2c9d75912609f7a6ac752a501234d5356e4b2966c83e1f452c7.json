{"ast":null,"code":"import { registerWallet } from '@wallet-standard/wallet';\nimport { SolflareMetaMaskWallet } from './wallet.js';\nlet registered = false;\nfunction register() {\n  if (registered) return;\n  registerWallet(new SolflareMetaMaskWallet());\n  registered = true;\n}\n/** @internal */\nexport async function detectAndRegisterSolflareMetaMaskWallet() {\n  const id = 'solflare-detect-metamask';\n  function postMessage() {\n    window.postMessage({\n      target: 'metamask-contentscript',\n      data: {\n        name: 'metamask-provider',\n        data: {\n          id,\n          jsonrpc: '2.0',\n          method: 'wallet_getSnaps'\n        }\n      }\n    }, window.location.origin);\n  }\n  function onMessage(event) {\n    const message = event.data;\n    if (message?.target === 'metamask-inpage' && message.data?.name === 'metamask-provider') {\n      if (message.data.data?.id === id) {\n        window.removeEventListener('message', onMessage);\n        if (!message.data.data.error) {\n          register();\n        }\n      } else {\n        postMessage();\n      }\n    }\n  }\n  window.addEventListener('message', onMessage);\n  window.setTimeout(() => window.removeEventListener('message', onMessage), 5000);\n  postMessage();\n}","map":{"version":3,"names":["registerWallet","SolflareMetaMaskWallet","registered","register","detectAndRegisterSolflareMetaMaskWallet","id","postMessage","window","target","data","name","jsonrpc","method","location","origin","onMessage","event","message","removeEventListener","error","addEventListener","setTimeout"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@solana\\wallet-adapter-solflare\\src\\metamask\\detect.ts"],"sourcesContent":["import { registerWallet } from '@wallet-standard/wallet';\nimport { SolflareMetaMaskWallet } from './wallet.js';\n\nlet registered = false;\n\nfunction register() {\n    if (registered) return;\n    registerWallet(new SolflareMetaMaskWallet());\n    registered = true;\n}\n\n/** @internal */\nexport async function detectAndRegisterSolflareMetaMaskWallet(): Promise<void> {\n    const id = 'solflare-detect-metamask';\n\n    function postMessage() {\n        window.postMessage(\n            {\n                target: 'metamask-contentscript',\n                data: {\n                    name: 'metamask-provider',\n                    data: {\n                        id,\n                        jsonrpc: '2.0',\n                        method: 'wallet_getSnaps',\n                    },\n                },\n            },\n            window.location.origin\n        );\n    }\n\n    function onMessage(event: MessageEvent) {\n        const message = event.data;\n        if (message?.target === 'metamask-inpage' && message.data?.name === 'metamask-provider') {\n            if (message.data.data?.id === id) {\n                window.removeEventListener('message', onMessage);\n\n                if (!message.data.data.error) {\n                    register();\n                }\n            } else {\n                postMessage();\n            }\n        }\n    }\n\n    window.addEventListener('message', onMessage);\n    window.setTimeout(() => window.removeEventListener('message', onMessage), 5000);\n\n    postMessage();\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,yBAAyB;AACxD,SAASC,sBAAsB,QAAQ,aAAa;AAEpD,IAAIC,UAAU,GAAG,KAAK;AAEtB,SAASC,QAAQA,CAAA;EACb,IAAID,UAAU,EAAE;EAChBF,cAAc,CAAC,IAAIC,sBAAsB,EAAE,CAAC;EAC5CC,UAAU,GAAG,IAAI;AACrB;AAEA;AACA,OAAO,eAAeE,uCAAuCA,CAAA;EACzD,MAAMC,EAAE,GAAG,0BAA0B;EAErC,SAASC,WAAWA,CAAA;IAChBC,MAAM,CAACD,WAAW,CACd;MACIE,MAAM,EAAE,wBAAwB;MAChCC,IAAI,EAAE;QACFC,IAAI,EAAE,mBAAmB;QACzBD,IAAI,EAAE;UACFJ,EAAE;UACFM,OAAO,EAAE,KAAK;UACdC,MAAM,EAAE;;;KAGnB,EACDL,MAAM,CAACM,QAAQ,CAACC,MAAM,CACzB;EACL;EAEA,SAASC,SAASA,CAACC,KAAmB;IAClC,MAAMC,OAAO,GAAGD,KAAK,CAACP,IAAI;IAC1B,IAAIQ,OAAO,EAAET,MAAM,KAAK,iBAAiB,IAAIS,OAAO,CAACR,IAAI,EAAEC,IAAI,KAAK,mBAAmB,EAAE;MACrF,IAAIO,OAAO,CAACR,IAAI,CAACA,IAAI,EAAEJ,EAAE,KAAKA,EAAE,EAAE;QAC9BE,MAAM,CAACW,mBAAmB,CAAC,SAAS,EAAEH,SAAS,CAAC;QAEhD,IAAI,CAACE,OAAO,CAACR,IAAI,CAACA,IAAI,CAACU,KAAK,EAAE;UAC1BhB,QAAQ,EAAE;QACd;MACJ,CAAC,MAAM;QACHG,WAAW,EAAE;MACjB;IACJ;EACJ;EAEAC,MAAM,CAACa,gBAAgB,CAAC,SAAS,EAAEL,SAAS,CAAC;EAC7CR,MAAM,CAACc,UAAU,CAAC,MAAMd,MAAM,CAACW,mBAAmB,CAAC,SAAS,EAAEH,SAAS,CAAC,EAAE,IAAI,CAAC;EAE/ET,WAAW,EAAE;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}