{"ast":null,"code":"import { version } from './version.js';\nlet errorConfig = {\n  getDocsUrl: ({\n    docsBaseUrl,\n    docsPath = '',\n    docsSlug\n  }) => docsPath ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${docsSlug ? `#${docsSlug}` : ''}` : undefined,\n  version: `viem@${version}`\n};\nexport function setErrorConfig(config) {\n  errorConfig = config;\n}\nexport class BaseError extends Error {\n  constructor(shortMessage, args = {}) {\n    const details = (() => {\n      if (args.cause instanceof BaseError) return args.cause.details;\n      if (args.cause?.message) return args.cause.message;\n      return args.details;\n    })();\n    const docsPath = (() => {\n      if (args.cause instanceof BaseError) return args.cause.docsPath || args.docsPath;\n      return args.docsPath;\n    })();\n    const docsUrl = errorConfig.getDocsUrl?.({\n      ...args,\n      docsPath\n    });\n    const message = [shortMessage || 'An error occurred.', '', ...(args.metaMessages ? [...args.metaMessages, ''] : []), ...(docsUrl ? [`Docs: ${docsUrl}`] : []), ...(details ? [`Details: ${details}`] : []), ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : [])].join('\\n');\n    super(message, args.cause ? {\n      cause: args.cause\n    } : undefined);\n    Object.defineProperty(this, \"details\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"docsPath\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"metaMessages\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shortMessage\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'BaseError'\n    });\n    this.details = details;\n    this.docsPath = docsPath;\n    this.metaMessages = args.metaMessages;\n    this.name = args.name ?? this.name;\n    this.shortMessage = shortMessage;\n    this.version = version;\n  }\n  walk(fn) {\n    return walk(this, fn);\n  }\n}\nfunction walk(err, fn) {\n  if (fn?.(err)) return err;\n  if (err && typeof err === 'object' && 'cause' in err && err.cause !== undefined) return walk(err.cause, fn);\n  return fn ? null : err;\n}","map":{"version":3,"names":["version","errorConfig","getDocsUrl","docsBaseUrl","docsPath","docsSlug","undefined","setErrorConfig","config","BaseError","Error","constructor","shortMessage","args","details","cause","message","docsUrl","metaMessages","join","Object","defineProperty","name","walk","fn","err"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\viem\\errors\\base.ts"],"sourcesContent":["import { version } from './version.js'\n\ntype ErrorConfig = {\n  getDocsUrl?: ((args: BaseErrorParameters) => string | undefined) | undefined\n  version?: string | undefined\n}\n\nlet errorConfig: ErrorConfig = {\n  getDocsUrl: ({\n    docsBaseUrl,\n    docsPath = '',\n    docsSlug,\n  }: BaseErrorParameters) =>\n    docsPath\n      ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${\n          docsSlug ? `#${docsSlug}` : ''\n        }`\n      : undefined,\n  version: `viem@${version}`,\n}\n\nexport function setErrorConfig(config: ErrorConfig) {\n  errorConfig = config\n}\n\ntype BaseErrorParameters = {\n  cause?: BaseError | Error | undefined\n  details?: string | undefined\n  docsBaseUrl?: string | undefined\n  docsPath?: string | undefined\n  docsSlug?: string | undefined\n  metaMessages?: string[] | undefined\n  name?: string | undefined\n}\n\nexport type BaseErrorType = BaseError & { name: 'BaseError' }\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string | undefined\n  metaMessages?: string[] | undefined\n  shortMessage: string\n  version: string\n\n  override name = 'BaseError'\n\n  constructor(shortMessage: string, args: BaseErrorParameters = {}) {\n    const details = (() => {\n      if (args.cause instanceof BaseError) return args.cause.details\n      if (args.cause?.message) return args.cause.message\n      return args.details!\n    })()\n    const docsPath = (() => {\n      if (args.cause instanceof BaseError)\n        return args.cause.docsPath || args.docsPath\n      return args.docsPath\n    })()\n    const docsUrl = errorConfig.getDocsUrl?.({ ...args, docsPath })\n\n    const message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n      ...(docsUrl ? [`Docs: ${docsUrl}`] : []),\n      ...(details ? [`Details: ${details}`] : []),\n      ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : []),\n    ].join('\\n')\n\n    super(message, args.cause ? { cause: args.cause } : undefined)\n\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = args.metaMessages\n    this.name = args.name ?? this.name\n    this.shortMessage = shortMessage\n    this.version = version\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nfunction walk(\n  err: unknown,\n  fn?: ((err: unknown) => boolean) | undefined,\n): unknown {\n  if (fn?.(err)) return err\n  if (\n    err &&\n    typeof err === 'object' &&\n    'cause' in err &&\n    err.cause !== undefined\n  )\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}