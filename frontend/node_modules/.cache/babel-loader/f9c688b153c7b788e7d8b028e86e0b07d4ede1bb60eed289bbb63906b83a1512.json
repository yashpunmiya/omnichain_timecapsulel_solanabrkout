{"ast":null,"code":"import { isAddressEqual } from '../address/isAddressEqual.js';\n/**\n * @description Validates EIP-4361 message.\n *\n * @see https://eips.ethereum.org/EIPS/eip-4361\n */\nexport function validateSiweMessage(parameters) {\n  const {\n    address,\n    domain,\n    message,\n    nonce,\n    scheme,\n    time = new Date()\n  } = parameters;\n  if (domain && message.domain !== domain) return false;\n  if (nonce && message.nonce !== nonce) return false;\n  if (scheme && message.scheme !== scheme) return false;\n  if (message.expirationTime && time >= message.expirationTime) return false;\n  if (message.notBefore && time < message.notBefore) return false;\n  try {\n    if (!message.address) return false;\n    if (address && !isAddressEqual(message.address, address)) return false;\n  } catch {\n    return false;\n  }\n  return true;\n}","map":{"version":3,"names":["isAddressEqual","validateSiweMessage","parameters","address","domain","message","nonce","scheme","time","Date","expirationTime","notBefore"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\utils\\siwe\\validateSiweMessage.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { ExactPartial } from '../../types/utils.js'\nimport { isAddressEqual } from '../address/isAddressEqual.js'\nimport type { SiweMessage } from './types.js'\n\nexport type ValidateSiweMessageParameters = {\n  /**\n   * Ethereum address to check against.\n   */\n  address?: Address | undefined\n  /**\n   * [RFC 3986](https://www.rfc-editor.org/rfc/rfc3986) authority to check against.\n   */\n  domain?: string | undefined\n  /**\n   * EIP-4361 message fields.\n   */\n  message: ExactPartial<SiweMessage>\n  /**\n   * Random string to check against.\n   */\n  nonce?: string | undefined\n  /**\n   * [RFC 3986](https://www.rfc-editor.org/rfc/rfc3986#section-3.1) URI scheme to check against.\n   */\n  scheme?: string | undefined\n  /**\n   * Current time to check optional `expirationTime` and `notBefore` fields.\n   *\n   * @default new Date()\n   */\n  time?: Date | undefined\n}\n\nexport type ValidateSiweMessageReturnType = boolean\n\n/**\n * @description Validates EIP-4361 message.\n *\n * @see https://eips.ethereum.org/EIPS/eip-4361\n */\nexport function validateSiweMessage(\n  parameters: ValidateSiweMessageParameters,\n): ValidateSiweMessageReturnType {\n  const {\n    address,\n    domain,\n    message,\n    nonce,\n    scheme,\n    time = new Date(),\n  } = parameters\n\n  if (domain && message.domain !== domain) return false\n  if (nonce && message.nonce !== nonce) return false\n  if (scheme && message.scheme !== scheme) return false\n\n  if (message.expirationTime && time >= message.expirationTime) return false\n  if (message.notBefore && time < message.notBefore) return false\n\n  try {\n    if (!message.address) return false\n    if (address && !isAddressEqual(message.address, address)) return false\n  } catch {\n    return false\n  }\n\n  return true\n}\n"],"mappings":"AAGA,SAASA,cAAc,QAAQ,8BAA8B;AAkC7D;;;;;AAKA,OAAM,SAAUC,mBAAmBA,CACjCC,UAAyC;EAEzC,MAAM;IACJC,OAAO;IACPC,MAAM;IACNC,OAAO;IACPC,KAAK;IACLC,MAAM;IACNC,IAAI,GAAG,IAAIC,IAAI;EAAE,CAClB,GAAGP,UAAU;EAEd,IAAIE,MAAM,IAAIC,OAAO,CAACD,MAAM,KAAKA,MAAM,EAAE,OAAO,KAAK;EACrD,IAAIE,KAAK,IAAID,OAAO,CAACC,KAAK,KAAKA,KAAK,EAAE,OAAO,KAAK;EAClD,IAAIC,MAAM,IAAIF,OAAO,CAACE,MAAM,KAAKA,MAAM,EAAE,OAAO,KAAK;EAErD,IAAIF,OAAO,CAACK,cAAc,IAAIF,IAAI,IAAIH,OAAO,CAACK,cAAc,EAAE,OAAO,KAAK;EAC1E,IAAIL,OAAO,CAACM,SAAS,IAAIH,IAAI,GAAGH,OAAO,CAACM,SAAS,EAAE,OAAO,KAAK;EAE/D,IAAI;IACF,IAAI,CAACN,OAAO,CAACF,OAAO,EAAE,OAAO,KAAK;IAClC,IAAIA,OAAO,IAAI,CAACH,cAAc,CAACK,OAAO,CAACF,OAAO,EAAEA,OAAO,CAAC,EAAE,OAAO,KAAK;EACxE,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;EAEA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}