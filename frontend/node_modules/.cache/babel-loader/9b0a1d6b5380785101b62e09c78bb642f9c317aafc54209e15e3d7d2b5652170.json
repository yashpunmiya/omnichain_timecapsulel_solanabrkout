{"ast":null,"code":"import { secp256k1 } from '@noble/curves/secp256k1';\nimport { hexToBigInt } from '../encoding/fromHex.js';\n/**\n * @description Converts an [EIP-2098 compact signature](https://eips.ethereum.org/EIPS/eip-2098) into hex format.\n *\n * @param signature The compact signature to convert.\n * @returns The compact signature in hex format.\n *\n * @example\n * serializeCompactSignature({\n *   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n *   yParityAndS: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',\n * })\n * // \"0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c\"\n */\nexport function serializeCompactSignature({\n  r,\n  yParityAndS\n}) {\n  return `0x${new secp256k1.Signature(hexToBigInt(r), hexToBigInt(yParityAndS)).toCompactHex()}`;\n}","map":{"version":3,"names":["secp256k1","hexToBigInt","serializeCompactSignature","r","yParityAndS","Signature","toCompactHex"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\utils\\signature\\serializeCompactSignature.ts"],"sourcesContent":["import { secp256k1 } from '@noble/curves/secp256k1'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { CompactSignature, Hex } from '../../types/misc.js'\nimport { type HexToBigIntErrorType, hexToBigInt } from '../encoding/fromHex.js'\n\nexport type SerializeCompactSignatureErrorType =\n  | HexToBigIntErrorType\n  | ErrorType\n\n/**\n * @description Converts an [EIP-2098 compact signature](https://eips.ethereum.org/EIPS/eip-2098) into hex format.\n *\n * @param signature The compact signature to convert.\n * @returns The compact signature in hex format.\n *\n * @example\n * serializeCompactSignature({\n *   r: '0x68a020a209d3d56c46f38cc50a33f704f4a9a10a59377f8dd762ac66910e9b90',\n *   yParityAndS: '0x7e865ad05c4035ab5792787d4a0297a43617ae897930a6fe4d822b8faea52064',\n * })\n * // \"0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c\"\n */\nexport function serializeCompactSignature({\n  r,\n  yParityAndS,\n}: CompactSignature): Hex {\n  return `0x${new secp256k1.Signature(\n    hexToBigInt(r),\n    hexToBigInt(yParityAndS),\n  ).toCompactHex()}`\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,yBAAyB;AAGnD,SAAoCC,WAAW,QAAQ,wBAAwB;AAM/E;;;;;;;;;;;;;AAaA,OAAM,SAAUC,yBAAyBA,CAAC;EACxCC,CAAC;EACDC;AAAW,CACM;EACjB,OAAO,KAAK,IAAIJ,SAAS,CAACK,SAAS,CACjCJ,WAAW,CAACE,CAAC,CAAC,EACdF,WAAW,CAACG,WAAW,CAAC,CACzB,CAACE,YAAY,EAAE,EAAE;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}