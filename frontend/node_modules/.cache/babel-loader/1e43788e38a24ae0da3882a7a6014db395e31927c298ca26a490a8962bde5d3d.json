{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Intersect = Intersect;\nconst type_1 = require(\"../create/type\");\nconst index_1 = require(\"../never/index\");\nconst intersect_create_1 = require(\"./intersect-create\");\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nconst kind_1 = require(\"../guard/kind\");\n/** `[Json]` Creates an evaluated Intersect type */\nfunction Intersect(T, options) {\n  if (T.length === 0) return (0, index_1.Never)(options);\n  if (T.length === 1) return (0, type_1.CreateType)(T[0], options);\n  if (T.some(schema => (0, kind_1.IsTransform)(schema))) throw new Error('Cannot intersect transform types');\n  return (0, intersect_create_1.IntersectCreate)(T, options);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","Intersect","type_1","require","index_1","intersect_create_1","kind_1","T","options","length","Never","CreateType","some","schema","IsTransform","Error","IntersectCreate"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@sinclair/typebox/build/cjs/type/intersect/intersect.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Intersect = Intersect;\nconst type_1 = require(\"../create/type\");\nconst index_1 = require(\"../never/index\");\nconst intersect_create_1 = require(\"./intersect-create\");\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nconst kind_1 = require(\"../guard/kind\");\n/** `[Json]` Creates an evaluated Intersect type */\nfunction Intersect(T, options) {\n    if (T.length === 0)\n        return (0, index_1.Never)(options);\n    if (T.length === 1)\n        return (0, type_1.CreateType)(T[0], options);\n    if (T.some((schema) => (0, kind_1.IsTransform)(schema)))\n        throw new Error('Cannot intersect transform types');\n    return (0, intersect_create_1.IntersectCreate)(T, options);\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,SAAS,GAAGA,SAAS;AAC7B,MAAMC,MAAM,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACxC,MAAMC,OAAO,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACzC,MAAME,kBAAkB,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AACxD;AACA;AACA;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,eAAe,CAAC;AACvC;AACA,SAASF,SAASA,CAACM,CAAC,EAAEC,OAAO,EAAE;EAC3B,IAAID,CAAC,CAACE,MAAM,KAAK,CAAC,EACd,OAAO,CAAC,CAAC,EAAEL,OAAO,CAACM,KAAK,EAAEF,OAAO,CAAC;EACtC,IAAID,CAAC,CAACE,MAAM,KAAK,CAAC,EACd,OAAO,CAAC,CAAC,EAAEP,MAAM,CAACS,UAAU,EAAEJ,CAAC,CAAC,CAAC,CAAC,EAAEC,OAAO,CAAC;EAChD,IAAID,CAAC,CAACK,IAAI,CAAEC,MAAM,IAAK,CAAC,CAAC,EAAEP,MAAM,CAACQ,WAAW,EAAED,MAAM,CAAC,CAAC,EACnD,MAAM,IAAIE,KAAK,CAAC,kCAAkC,CAAC;EACvD,OAAO,CAAC,CAAC,EAAEV,kBAAkB,CAACW,eAAe,EAAET,CAAC,EAAEC,OAAO,CAAC;AAC9D","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}