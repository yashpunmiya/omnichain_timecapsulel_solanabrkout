{"ast":null,"code":"import { hexToBigInt } from '../utils/encoding/fromHex.js';\nimport { defineBlock } from '../utils/formatters/block.js';\nimport { defineTransaction, formatTransaction } from '../utils/formatters/transaction.js';\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js';\nexport const formatters = {\n  block: /*#__PURE__*/defineBlock({\n    format(args) {\n      const transactions = args.transactions?.map(transaction => {\n        if (typeof transaction === 'string') return transaction;\n        const formatted = formatTransaction(transaction);\n        if (formatted.typeHex === '0x7e') {\n          formatted.isSystemTx = transaction.isSystemTx;\n          formatted.mint = transaction.mint ? hexToBigInt(transaction.mint) : undefined;\n          formatted.sourceHash = transaction.sourceHash;\n          formatted.type = 'deposit';\n        }\n        return formatted;\n      });\n      return {\n        transactions,\n        stateRoot: args.stateRoot\n      };\n    }\n  }),\n  transaction: /*#__PURE__*/defineTransaction({\n    format(args) {\n      const transaction = {};\n      if (args.type === '0x7e') {\n        transaction.isSystemTx = args.isSystemTx;\n        transaction.mint = args.mint ? hexToBigInt(args.mint) : undefined;\n        transaction.sourceHash = args.sourceHash;\n        transaction.type = 'deposit';\n      }\n      return transaction;\n    }\n  }),\n  transactionReceipt: /*#__PURE__*/defineTransactionReceipt({\n    format(args) {\n      return {\n        l1GasPrice: args.l1GasPrice ? hexToBigInt(args.l1GasPrice) : null,\n        l1GasUsed: args.l1GasUsed ? hexToBigInt(args.l1GasUsed) : null,\n        l1Fee: args.l1Fee ? hexToBigInt(args.l1Fee) : null,\n        l1FeeScalar: args.l1FeeScalar ? Number(args.l1FeeScalar) : null\n      };\n    }\n  })\n};\n//# sourceMappingURL=formatters.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}