{"ast":null,"code":"import { useWallet } from '@solana/wallet-adapter-react';\nimport { useCallback } from 'react';\nexport function useWalletConnectButton() {\n  const {\n    connect,\n    connected,\n    connecting,\n    wallet\n  } = useWallet();\n  let buttonState;\n  if (connecting) {\n    buttonState = 'connecting';\n  } else if (connected) {\n    buttonState = 'connected';\n  } else if (wallet) {\n    buttonState = 'has-wallet';\n  } else {\n    buttonState = 'no-wallet';\n  }\n  const handleConnectButtonClick = useCallback(() => {\n    connect().catch(() => {\n      // Silently catch because any errors are caught by the context `onError` handler\n    });\n  }, [connect]);\n  return {\n    buttonDisabled: buttonState !== 'has-wallet',\n    buttonState,\n    onButtonClick: buttonState === 'has-wallet' ? handleConnectButtonClick : undefined,\n    walletIcon: wallet?.adapter.icon,\n    walletName: wallet?.adapter.name\n  };\n}\n//# sourceMappingURL=useWalletConnectButton.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}