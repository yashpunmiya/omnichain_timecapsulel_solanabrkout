{"ast":null,"code":"import { bytesToUnprefixedHex } from './bytes.js';\nexport class MapDB {\n  constructor(database) {\n    this._database = database ?? new Map();\n  }\n  async get(key) {\n    const dbKey = key instanceof Uint8Array ? bytesToUnprefixedHex(key) : key.toString();\n    return this._database.get(dbKey);\n  }\n  async put(key, val) {\n    const dbKey = key instanceof Uint8Array ? bytesToUnprefixedHex(key) : key.toString();\n    this._database.set(dbKey, val);\n  }\n  async del(key) {\n    const dbKey = key instanceof Uint8Array ? bytesToUnprefixedHex(key) : key.toString();\n    this._database.delete(dbKey);\n  }\n  async batch(opStack) {\n    for (const op of opStack) {\n      if (op.type === 'del') {\n        await this.del(op.key);\n      }\n      if (op.type === 'put') {\n        await this.put(op.key, op.value);\n      }\n    }\n  }\n  /**\n   * Note that the returned shallow copy will share the underlying database with the original\n   *\n   * @returns DB\n   */\n  shallowCopy() {\n    return new MapDB(this._database);\n  }\n  open() {\n    return Promise.resolve();\n  }\n}\n//# sourceMappingURL=mapDB.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}