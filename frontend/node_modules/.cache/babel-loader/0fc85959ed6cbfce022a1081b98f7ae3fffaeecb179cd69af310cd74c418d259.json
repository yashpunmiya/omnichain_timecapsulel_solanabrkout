{"ast":null,"code":"import { proxy, subscribe as sub } from 'valtio/vanilla';\nimport { subscribeKey as subKey } from 'valtio/vanilla/utils';\nimport { NumberUtil } from '@reown/appkit-common';\nimport { ConstantsUtil as CommonConstantsUtil } from '@reown/appkit-common';\nimport { W3mFrameRpcConstants } from '@reown/appkit-wallet/utils';\nimport { ConstantsUtil } from '../utils/ConstantsUtil.js';\nimport { CoreHelperUtil } from '../utils/CoreHelperUtil.js';\nimport { SendApiUtil } from '../utils/SendApiUtil.js';\nimport { SwapApiUtil } from '../utils/SwapApiUtil.js';\nimport { SwapCalculationUtil } from '../utils/SwapCalculationUtil.js';\nimport { AccountController } from './AccountController.js';\nimport { AlertController } from './AlertController.js';\nimport { BlockchainApiController } from './BlockchainApiController.js';\nimport { ChainController } from './ChainController.js';\nimport { ConnectionController } from './ConnectionController.js';\nimport { ConnectorController } from './ConnectorController.js';\nimport { EventsController } from './EventsController.js';\nimport { RouterController } from './RouterController.js';\nimport { SnackController } from './SnackController.js';\n// -- Constants ---------------------------------------- //\nexport const INITIAL_GAS_LIMIT = 150000;\nexport const TO_AMOUNT_DECIMALS = 6;\nclass TransactionError extends Error {\n  constructor(message, shortMessage) {\n    super(message);\n    this.name = 'TransactionError';\n    this.shortMessage = shortMessage;\n  }\n}\n// -- State --------------------------------------------- //\nconst initialState = {\n  // Loading states\n  initializing: false,\n  initialized: false,\n  loadingPrices: false,\n  loadingQuote: false,\n  loadingApprovalTransaction: false,\n  loadingBuildTransaction: false,\n  loadingTransaction: false,\n  // Error states\n  fetchError: false,\n  // Approval & Swap transaction states\n  approvalTransaction: undefined,\n  swapTransaction: undefined,\n  transactionError: undefined,\n  // Input values\n  sourceToken: undefined,\n  sourceTokenAmount: '',\n  sourceTokenPriceInUSD: 0,\n  toToken: undefined,\n  toTokenAmount: '',\n  toTokenPriceInUSD: 0,\n  networkPrice: '0',\n  networkBalanceInUSD: '0',\n  networkTokenSymbol: '',\n  inputError: undefined,\n  // Request values\n  slippage: ConstantsUtil.CONVERT_SLIPPAGE_TOLERANCE,\n  // Tokens\n  tokens: undefined,\n  popularTokens: undefined,\n  suggestedTokens: undefined,\n  foundTokens: undefined,\n  myTokensWithBalance: undefined,\n  tokensPriceMap: {},\n  // Calculations\n  gasFee: '0',\n  gasPriceInUSD: 0,\n  priceImpact: undefined,\n  maxSlippage: undefined,\n  providerFee: undefined\n};\nconst state = proxy(initialState);\n// -- Controller ---------------------------------------- //\nexport const SwapController = {\n  state,\n  subscribe(callback) {\n    return sub(state, () => callback(state));\n  },\n  subscribeKey(key, callback) {\n    return subKey(state, key, callback);\n  },\n  getParams() {\n    const caipAddress = ChainController.state.activeCaipAddress;\n    const namespace = ChainController.state.activeChain;\n    const address = CoreHelperUtil.getPlainAddress(caipAddress);\n    const networkAddress = ChainController.getActiveNetworkTokenAddress();\n    const connectorId = ConnectorController.getConnectorId(namespace);\n    if (!address) {\n      throw new Error('No address found to swap the tokens from.');\n    }\n    const invalidToToken = !state.toToken?.address || !state.toToken?.decimals;\n    const invalidSourceToken = !state.sourceToken?.address || !state.sourceToken?.decimals || !NumberUtil.bigNumber(state.sourceTokenAmount).gt(0);\n    const invalidSourceTokenAmount = !state.sourceTokenAmount;\n    return {\n      networkAddress,\n      fromAddress: address,\n      fromCaipAddress: caipAddress,\n      sourceTokenAddress: state.sourceToken?.address,\n      toTokenAddress: state.toToken?.address,\n      toTokenAmount: state.toTokenAmount,\n      toTokenDecimals: state.toToken?.decimals,\n      sourceTokenAmount: state.sourceTokenAmount,\n      sourceTokenDecimals: state.sourceToken?.decimals,\n      invalidToToken,\n      invalidSourceToken,\n      invalidSourceTokenAmount,\n      availableToSwap: caipAddress && !invalidToToken && !invalidSourceToken && !invalidSourceTokenAmount,\n      isAuthConnector: connectorId === CommonConstantsUtil.CONNECTOR_ID.AUTH\n    };\n  },\n  setSourceToken(sourceToken) {\n    if (!sourceToken) {\n      state.sourceToken = sourceToken;\n      state.sourceTokenAmount = '';\n      state.sourceTokenPriceInUSD = 0;\n      return;\n    }\n    state.sourceToken = sourceToken;\n    this.setTokenPrice(sourceToken.address, 'sourceToken');\n  },\n  setSourceTokenAmount(amount) {\n    state.sourceTokenAmount = amount;\n  },\n  setToToken(toToken) {\n    if (!toToken) {\n      state.toToken = toToken;\n      state.toTokenAmount = '';\n      state.toTokenPriceInUSD = 0;\n      return;\n    }\n    state.toToken = toToken;\n    this.setTokenPrice(toToken.address, 'toToken');\n  },\n  setToTokenAmount(amount) {\n    state.toTokenAmount = amount ? NumberUtil.formatNumberToLocalString(amount, TO_AMOUNT_DECIMALS) : '';\n  },\n  async setTokenPrice(address, target) {\n    let price = state.tokensPriceMap[address] || 0;\n    if (!price) {\n      state.loadingPrices = true;\n      price = await this.getAddressPrice(address);\n    }\n    if (target === 'sourceToken') {\n      state.sourceTokenPriceInUSD = price;\n    } else if (target === 'toToken') {\n      state.toTokenPriceInUSD = price;\n    }\n    if (state.loadingPrices) {\n      state.loadingPrices = false;\n    }\n    if (this.getParams().availableToSwap) {\n      this.swapTokens();\n    }\n  },\n  switchTokens() {\n    if (state.initializing || !state.initialized) {\n      return;\n    }\n    const newSourceToken = state.toToken ? {\n      ...state.toToken\n    } : undefined;\n    const newToToken = state.sourceToken ? {\n      ...state.sourceToken\n    } : undefined;\n    const newSourceTokenAmount = newSourceToken && state.toTokenAmount === '' ? '1' : state.toTokenAmount;\n    this.setSourceToken(newSourceToken);\n    this.setToToken(newToToken);\n    this.setSourceTokenAmount(newSourceTokenAmount);\n    this.setToTokenAmount('');\n    this.swapTokens();\n  },\n  resetState() {\n    state.myTokensWithBalance = initialState.myTokensWithBalance;\n    state.tokensPriceMap = initialState.tokensPriceMap;\n    state.initialized = initialState.initialized;\n    state.sourceToken = initialState.sourceToken;\n    state.sourceTokenAmount = initialState.sourceTokenAmount;\n    state.sourceTokenPriceInUSD = initialState.sourceTokenPriceInUSD;\n    state.toToken = initialState.toToken;\n    state.toTokenAmount = initialState.toTokenAmount;\n    state.toTokenPriceInUSD = initialState.toTokenPriceInUSD;\n    state.networkPrice = initialState.networkPrice;\n    state.networkTokenSymbol = initialState.networkTokenSymbol;\n    state.networkBalanceInUSD = initialState.networkBalanceInUSD;\n    state.inputError = initialState.inputError;\n  },\n  resetValues() {\n    const {\n      networkAddress\n    } = this.getParams();\n    const networkToken = state.tokens?.find(token => token.address === networkAddress);\n    this.setSourceToken(networkToken);\n    this.setToToken(undefined);\n  },\n  getApprovalLoadingState() {\n    return state.loadingApprovalTransaction;\n  },\n  clearError() {\n    state.transactionError = undefined;\n  },\n  async initializeState() {\n    if (state.initializing) {\n      return;\n    }\n    state.initializing = true;\n    if (!state.initialized) {\n      try {\n        await this.fetchTokens();\n        state.initialized = true;\n      } catch (error) {\n        state.initialized = false;\n        SnackController.showError('Failed to initialize swap');\n        RouterController.goBack();\n      }\n    }\n    state.initializing = false;\n  },\n  async fetchTokens() {\n    const {\n      networkAddress\n    } = this.getParams();\n    await this.getTokenList();\n    await this.getNetworkTokenPrice();\n    await this.getMyTokensWithBalance();\n    const networkToken = state.tokens?.find(token => token.address === networkAddress);\n    if (networkToken) {\n      state.networkTokenSymbol = networkToken.symbol;\n      this.setSourceToken(networkToken);\n      this.setSourceTokenAmount('1');\n    }\n  },\n  async getTokenList() {\n    const tokens = await SwapApiUtil.getTokenList();\n    state.tokens = tokens;\n    state.popularTokens = tokens.sort((aTokenInfo, bTokenInfo) => {\n      if (aTokenInfo.symbol < bTokenInfo.symbol) {\n        return -1;\n      }\n      if (aTokenInfo.symbol > bTokenInfo.symbol) {\n        return 1;\n      }\n      return 0;\n    });\n    state.suggestedTokens = tokens.filter(token => {\n      if (ConstantsUtil.SWAP_SUGGESTED_TOKENS.includes(token.symbol)) {\n        return true;\n      }\n      return false;\n    }, {});\n  },\n  async getAddressPrice(address) {\n    const existPrice = state.tokensPriceMap[address];\n    if (existPrice) {\n      return existPrice;\n    }\n    const response = await BlockchainApiController.fetchTokenPrice({\n      addresses: [address]\n    });\n    const fungibles = response?.fungibles || [];\n    const allTokens = [...(state.tokens || []), ...(state.myTokensWithBalance || [])];\n    const symbol = allTokens?.find(token => token.address === address)?.symbol;\n    const price = fungibles.find(p => p.symbol.toLowerCase() === symbol?.toLowerCase())?.price || 0;\n    const priceAsFloat = parseFloat(price.toString());\n    state.tokensPriceMap[address] = priceAsFloat;\n    return priceAsFloat;\n  },\n  async getNetworkTokenPrice() {\n    const {\n      networkAddress\n    } = this.getParams();\n    const response = await BlockchainApiController.fetchTokenPrice({\n      addresses: [networkAddress]\n    }).catch(() => {\n      SnackController.showError('Failed to fetch network token price');\n      return {\n        fungibles: []\n      };\n    });\n    const token = response.fungibles?.[0];\n    const price = token?.price.toString() || '0';\n    state.tokensPriceMap[networkAddress] = parseFloat(price);\n    state.networkTokenSymbol = token?.symbol || '';\n    state.networkPrice = price;\n  },\n  async getMyTokensWithBalance(forceUpdate) {\n    const balances = await SendApiUtil.getMyTokensWithBalance(forceUpdate);\n    const swapBalances = SendApiUtil.mapBalancesToSwapTokens(balances);\n    if (!swapBalances) {\n      return;\n    }\n    await this.getInitialGasPrice();\n    this.setBalances(swapBalances);\n  },\n  setBalances(balances) {\n    const {\n      networkAddress\n    } = this.getParams();\n    const caipNetwork = ChainController.state.activeCaipNetwork;\n    if (!caipNetwork) {\n      return;\n    }\n    const networkToken = balances.find(token => token.address === networkAddress);\n    balances.forEach(token => {\n      state.tokensPriceMap[token.address] = token.price || 0;\n    });\n    state.myTokensWithBalance = balances.filter(token => token.address.startsWith(caipNetwork.caipNetworkId));\n    state.networkBalanceInUSD = networkToken ? NumberUtil.multiply(networkToken.quantity.numeric, networkToken.price).toString() : '0';\n  },\n  async getInitialGasPrice() {\n    const res = await SwapApiUtil.fetchGasPrice();\n    if (!res) {\n      return {\n        gasPrice: null,\n        gasPriceInUSD: null\n      };\n    }\n    switch (ChainController.state?.activeCaipNetwork?.chainNamespace) {\n      case 'solana':\n        state.gasFee = res.standard ?? '0';\n        state.gasPriceInUSD = NumberUtil.multiply(res.standard, state.networkPrice).div(1e9).toNumber();\n        return {\n          gasPrice: BigInt(state.gasFee),\n          gasPriceInUSD: Number(state.gasPriceInUSD)\n        };\n      case 'eip155':\n      default:\n        // eslint-disable-next-line no-case-declarations\n        const value = res.standard ?? '0';\n        // eslint-disable-next-line no-case-declarations\n        const gasFee = BigInt(value);\n        // eslint-disable-next-line no-case-declarations\n        const gasLimit = BigInt(INITIAL_GAS_LIMIT);\n        // eslint-disable-next-line no-case-declarations\n        const gasPrice = SwapCalculationUtil.getGasPriceInUSD(state.networkPrice, gasLimit, gasFee);\n        state.gasFee = value;\n        state.gasPriceInUSD = gasPrice;\n        return {\n          gasPrice: gasFee,\n          gasPriceInUSD: gasPrice\n        };\n    }\n  },\n  // -- Swap -------------------------------------- //\n  async swapTokens() {\n    const address = AccountController.state.address;\n    const sourceToken = state.sourceToken;\n    const toToken = state.toToken;\n    const haveSourceTokenAmount = NumberUtil.bigNumber(state.sourceTokenAmount).gt(0);\n    if (!haveSourceTokenAmount) {\n      this.setToTokenAmount('');\n    }\n    if (!toToken || !sourceToken || state.loadingPrices || !haveSourceTokenAmount) {\n      return;\n    }\n    state.loadingQuote = true;\n    const amountDecimal = NumberUtil.bigNumber(state.sourceTokenAmount).times(10 ** sourceToken.decimals).round(0);\n    try {\n      const quoteResponse = await BlockchainApiController.fetchSwapQuote({\n        userAddress: address,\n        from: sourceToken.address,\n        to: toToken.address,\n        gasPrice: state.gasFee,\n        amount: amountDecimal.toString()\n      });\n      state.loadingQuote = false;\n      const quoteToAmount = quoteResponse?.quotes?.[0]?.toAmount;\n      if (!quoteToAmount) {\n        AlertController.open({\n          shortMessage: 'Incorrect amount',\n          longMessage: 'Please enter a valid amount'\n        }, 'error');\n        return;\n      }\n      const toTokenAmount = NumberUtil.bigNumber(quoteToAmount).div(10 ** toToken.decimals).toString();\n      this.setToTokenAmount(toTokenAmount);\n      const isInsufficientToken = this.hasInsufficientToken(state.sourceTokenAmount, sourceToken.address);\n      if (isInsufficientToken) {\n        state.inputError = 'Insufficient balance';\n      } else {\n        state.inputError = undefined;\n        this.setTransactionDetails();\n      }\n    } catch (error) {\n      state.loadingQuote = false;\n      state.inputError = 'Insufficient balance';\n    }\n  },\n  // -- Create Transactions -------------------------------------- //\n  async getTransaction() {\n    const {\n      fromCaipAddress,\n      availableToSwap\n    } = this.getParams();\n    const sourceToken = state.sourceToken;\n    const toToken = state.toToken;\n    if (!fromCaipAddress || !availableToSwap || !sourceToken || !toToken || state.loadingQuote) {\n      return undefined;\n    }\n    try {\n      state.loadingBuildTransaction = true;\n      const hasAllowance = await SwapApiUtil.fetchSwapAllowance({\n        userAddress: fromCaipAddress,\n        tokenAddress: sourceToken.address,\n        sourceTokenAmount: state.sourceTokenAmount,\n        sourceTokenDecimals: sourceToken.decimals\n      });\n      let transaction = undefined;\n      if (hasAllowance) {\n        transaction = await this.createSwapTransaction();\n      } else {\n        transaction = await this.createAllowanceTransaction();\n      }\n      state.loadingBuildTransaction = false;\n      state.fetchError = false;\n      return transaction;\n    } catch (error) {\n      RouterController.goBack();\n      SnackController.showError('Failed to check allowance');\n      state.loadingBuildTransaction = false;\n      state.approvalTransaction = undefined;\n      state.swapTransaction = undefined;\n      state.fetchError = true;\n      return undefined;\n    }\n  },\n  async createAllowanceTransaction() {\n    const {\n      fromCaipAddress,\n      sourceTokenAddress,\n      fromAddress,\n      toTokenAddress\n    } = this.getParams();\n    if (!fromCaipAddress || !toTokenAddress) {\n      return undefined;\n    }\n    if (!sourceTokenAddress) {\n      throw new Error('createAllowanceTransaction - No source token address found.');\n    }\n    try {\n      const response = await BlockchainApiController.generateApproveCalldata({\n        from: sourceTokenAddress,\n        to: toTokenAddress,\n        userAddress: fromCaipAddress\n      });\n      const gasLimit = await ConnectionController.estimateGas({\n        chainNamespace: CommonConstantsUtil.CHAIN.EVM,\n        address: fromAddress,\n        to: CoreHelperUtil.getPlainAddress(response.tx.to),\n        data: response.tx.data\n      });\n      const transaction = {\n        data: response.tx.data,\n        to: CoreHelperUtil.getPlainAddress(response.tx.from),\n        gas: gasLimit,\n        gasPrice: BigInt(response.tx.eip155.gasPrice),\n        value: BigInt(response.tx.value),\n        toAmount: state.toTokenAmount\n      };\n      state.swapTransaction = undefined;\n      state.approvalTransaction = {\n        data: transaction.data,\n        to: transaction.to,\n        gas: transaction.gas ?? BigInt(0),\n        gasPrice: transaction.gasPrice,\n        value: transaction.value,\n        toAmount: transaction.toAmount\n      };\n      return {\n        data: transaction.data,\n        to: transaction.to,\n        gas: transaction.gas ?? BigInt(0),\n        gasPrice: transaction.gasPrice,\n        value: transaction.value,\n        toAmount: transaction.toAmount\n      };\n    } catch (error) {\n      RouterController.goBack();\n      SnackController.showError('Failed to create approval transaction');\n      state.approvalTransaction = undefined;\n      state.swapTransaction = undefined;\n      state.fetchError = true;\n      return undefined;\n    }\n  },\n  async createSwapTransaction() {\n    const {\n      networkAddress,\n      fromCaipAddress,\n      sourceTokenAmount\n    } = this.getParams();\n    const sourceToken = state.sourceToken;\n    const toToken = state.toToken;\n    if (!fromCaipAddress || !sourceTokenAmount || !sourceToken || !toToken) {\n      return undefined;\n    }\n    const amount = ConnectionController.parseUnits(sourceTokenAmount, sourceToken.decimals)?.toString();\n    try {\n      const response = await BlockchainApiController.generateSwapCalldata({\n        userAddress: fromCaipAddress,\n        from: sourceToken.address,\n        to: toToken.address,\n        amount: amount,\n        disableEstimate: true\n      });\n      const isSourceTokenIsNetworkToken = sourceToken.address === networkAddress;\n      const gas = BigInt(response.tx.eip155.gas);\n      const gasPrice = BigInt(response.tx.eip155.gasPrice);\n      const transaction = {\n        data: response.tx.data,\n        to: CoreHelperUtil.getPlainAddress(response.tx.to),\n        gas,\n        gasPrice,\n        value: isSourceTokenIsNetworkToken ? BigInt(amount ?? '0') : BigInt('0'),\n        toAmount: state.toTokenAmount\n      };\n      state.gasPriceInUSD = SwapCalculationUtil.getGasPriceInUSD(state.networkPrice, gas, gasPrice);\n      state.approvalTransaction = undefined;\n      state.swapTransaction = transaction;\n      return transaction;\n    } catch (error) {\n      RouterController.goBack();\n      SnackController.showError('Failed to create transaction');\n      state.approvalTransaction = undefined;\n      state.swapTransaction = undefined;\n      state.fetchError = true;\n      return undefined;\n    }\n  },\n  // -- Send Transactions --------------------------------- //\n  async sendTransactionForApproval(data) {\n    const {\n      fromAddress,\n      isAuthConnector\n    } = this.getParams();\n    state.loadingApprovalTransaction = true;\n    const approveLimitMessage = `Approve limit increase in your wallet`;\n    if (isAuthConnector) {\n      RouterController.pushTransactionStack({\n        view: null,\n        goBack: true,\n        onSuccess() {\n          SnackController.showLoading(approveLimitMessage);\n        }\n      });\n    } else {\n      SnackController.showLoading(approveLimitMessage);\n    }\n    try {\n      await ConnectionController.sendTransaction({\n        address: fromAddress,\n        to: data.to,\n        data: data.data,\n        value: data.value,\n        chainNamespace: 'eip155'\n      });\n      await this.swapTokens();\n      await this.getTransaction();\n      state.approvalTransaction = undefined;\n      state.loadingApprovalTransaction = false;\n    } catch (err) {\n      const error = err;\n      state.transactionError = error?.shortMessage;\n      state.loadingApprovalTransaction = false;\n      SnackController.showError(error?.shortMessage || 'Transaction error');\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SWAP_APPROVAL_ERROR',\n        properties: {\n          message: error?.shortMessage || error?.message || 'Unknown',\n          network: ChainController.state.activeCaipNetwork?.caipNetworkId || '',\n          swapFromToken: this.state.sourceToken?.symbol || '',\n          swapToToken: this.state.toToken?.symbol || '',\n          swapFromAmount: this.state.sourceTokenAmount || '',\n          swapToAmount: this.state.toTokenAmount || '',\n          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT\n        }\n      });\n    }\n  },\n  async sendTransactionForSwap(data) {\n    if (!data) {\n      return undefined;\n    }\n    const {\n      fromAddress,\n      toTokenAmount,\n      isAuthConnector\n    } = this.getParams();\n    state.loadingTransaction = true;\n    const snackbarPendingMessage = `Swapping ${state.sourceToken?.symbol} to ${NumberUtil.formatNumberToLocalString(toTokenAmount, 3)} ${state.toToken?.symbol}`;\n    const snackbarSuccessMessage = `Swapped ${state.sourceToken?.symbol} to ${NumberUtil.formatNumberToLocalString(toTokenAmount, 3)} ${state.toToken?.symbol}`;\n    if (isAuthConnector) {\n      RouterController.pushTransactionStack({\n        view: 'Account',\n        goBack: false,\n        onSuccess() {\n          SnackController.showLoading(snackbarPendingMessage);\n          SwapController.resetState();\n        }\n      });\n    } else {\n      SnackController.showLoading('Confirm transaction in your wallet');\n    }\n    try {\n      const forceUpdateAddresses = [state.sourceToken?.address, state.toToken?.address].join(',');\n      const transactionHash = await ConnectionController.sendTransaction({\n        address: fromAddress,\n        to: data.to,\n        data: data.data,\n        value: data.value,\n        chainNamespace: 'eip155'\n      });\n      state.loadingTransaction = false;\n      SnackController.showSuccess(snackbarSuccessMessage);\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SWAP_SUCCESS',\n        properties: {\n          network: ChainController.state.activeCaipNetwork?.caipNetworkId || '',\n          swapFromToken: this.state.sourceToken?.symbol || '',\n          swapToToken: this.state.toToken?.symbol || '',\n          swapFromAmount: this.state.sourceTokenAmount || '',\n          swapToAmount: this.state.toTokenAmount || '',\n          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT\n        }\n      });\n      SwapController.resetState();\n      if (!isAuthConnector) {\n        RouterController.replace('Account');\n      }\n      SwapController.getMyTokensWithBalance(forceUpdateAddresses);\n      return transactionHash;\n    } catch (err) {\n      const error = err;\n      state.transactionError = error?.shortMessage;\n      state.loadingTransaction = false;\n      SnackController.showError(error?.shortMessage || 'Transaction error');\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SWAP_ERROR',\n        properties: {\n          message: error?.shortMessage || error?.message || 'Unknown',\n          network: ChainController.state.activeCaipNetwork?.caipNetworkId || '',\n          swapFromToken: this.state.sourceToken?.symbol || '',\n          swapToToken: this.state.toToken?.symbol || '',\n          swapFromAmount: this.state.sourceTokenAmount || '',\n          swapToAmount: this.state.toTokenAmount || '',\n          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT\n        }\n      });\n      return undefined;\n    }\n  },\n  // -- Checks -------------------------------------------- //\n  hasInsufficientToken(sourceTokenAmount, sourceTokenAddress) {\n    const isInsufficientSourceTokenForSwap = SwapCalculationUtil.isInsufficientSourceTokenForSwap(sourceTokenAmount, sourceTokenAddress, state.myTokensWithBalance);\n    let insufficientNetworkTokenForGas = true;\n    if (AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT) {\n      // Smart Accounts may pay gas in any ERC20 token\n      insufficientNetworkTokenForGas = false;\n    } else {\n      insufficientNetworkTokenForGas = SwapCalculationUtil.isInsufficientNetworkTokenForGas(state.networkBalanceInUSD, state.gasPriceInUSD);\n    }\n    return insufficientNetworkTokenForGas || isInsufficientSourceTokenForSwap;\n  },\n  // -- Calculations -------------------------------------- //\n  setTransactionDetails() {\n    const {\n      toTokenAddress,\n      toTokenDecimals\n    } = this.getParams();\n    if (!toTokenAddress || !toTokenDecimals) {\n      return;\n    }\n    state.gasPriceInUSD = SwapCalculationUtil.getGasPriceInUSD(state.networkPrice, BigInt(state.gasFee), BigInt(INITIAL_GAS_LIMIT));\n    state.priceImpact = SwapCalculationUtil.getPriceImpact({\n      sourceTokenAmount: state.sourceTokenAmount,\n      sourceTokenPriceInUSD: state.sourceTokenPriceInUSD,\n      toTokenPriceInUSD: state.toTokenPriceInUSD,\n      toTokenAmount: state.toTokenAmount\n    });\n    state.maxSlippage = SwapCalculationUtil.getMaxSlippage(state.slippage, state.toTokenAmount);\n    state.providerFee = SwapCalculationUtil.getProviderFee(state.sourceTokenAmount);\n  }\n};","map":{"version":3,"names":["proxy","subscribe","sub","subscribeKey","subKey","NumberUtil","ConstantsUtil","CommonConstantsUtil","W3mFrameRpcConstants","CoreHelperUtil","SendApiUtil","SwapApiUtil","SwapCalculationUtil","AccountController","AlertController","BlockchainApiController","ChainController","ConnectionController","ConnectorController","EventsController","RouterController","SnackController","INITIAL_GAS_LIMIT","TO_AMOUNT_DECIMALS","TransactionError","Error","constructor","message","shortMessage","name","initialState","initializing","initialized","loadingPrices","loadingQuote","loadingApprovalTransaction","loadingBuildTransaction","loadingTransaction","fetchError","approvalTransaction","undefined","swapTransaction","transactionError","sourceToken","sourceTokenAmount","sourceTokenPriceInUSD","toToken","toTokenAmount","toTokenPriceInUSD","networkPrice","networkBalanceInUSD","networkTokenSymbol","inputError","slippage","CONVERT_SLIPPAGE_TOLERANCE","tokens","popularTokens","suggestedTokens","foundTokens","myTokensWithBalance","tokensPriceMap","gasFee","gasPriceInUSD","priceImpact","maxSlippage","providerFee","state","SwapController","callback","key","getParams","caipAddress","activeCaipAddress","namespace","activeChain","address","getPlainAddress","networkAddress","getActiveNetworkTokenAddress","connectorId","getConnectorId","invalidToToken","decimals","invalidSourceToken","bigNumber","gt","invalidSourceTokenAmount","fromAddress","fromCaipAddress","sourceTokenAddress","toTokenAddress","toTokenDecimals","sourceTokenDecimals","availableToSwap","isAuthConnector","CONNECTOR_ID","AUTH","setSourceToken","setTokenPrice","setSourceTokenAmount","amount","setToToken","setToTokenAmount","formatNumberToLocalString","target","price","getAddressPrice","swapTokens","switchTokens","newSourceToken","newToToken","newSourceTokenAmount","resetState","resetValues","networkToken","find","token","getApprovalLoadingState","clearError","initializeState","fetchTokens","error","showError","goBack","getTokenList","getNetworkTokenPrice","getMyTokensWithBalance","symbol","sort","aTokenInfo","bTokenInfo","filter","SWAP_SUGGESTED_TOKENS","includes","existPrice","response","fetchTokenPrice","addresses","fungibles","allTokens","p","toLowerCase","priceAsFloat","parseFloat","toString","catch","forceUpdate","balances","swapBalances","mapBalancesToSwapTokens","getInitialGasPrice","setBalances","caipNetwork","activeCaipNetwork","forEach","startsWith","caipNetworkId","multiply","quantity","numeric","res","fetchGasPrice","gasPrice","chainNamespace","standard","div","toNumber","BigInt","Number","value","gasLimit","getGasPriceInUSD","haveSourceTokenAmount","amountDecimal","times","round","quoteResponse","fetchSwapQuote","userAddress","from","to","quoteToAmount","quotes","toAmount","open","longMessage","isInsufficientToken","hasInsufficientToken","setTransactionDetails","getTransaction","hasAllowance","fetchSwapAllowance","tokenAddress","transaction","createSwapTransaction","createAllowanceTransaction","generateApproveCalldata","estimateGas","CHAIN","EVM","tx","data","gas","eip155","parseUnits","generateSwapCalldata","disableEstimate","isSourceTokenIsNetworkToken","sendTransactionForApproval","approveLimitMessage","pushTransactionStack","view","onSuccess","showLoading","sendTransaction","err","sendEvent","type","event","properties","network","swapFromToken","swapToToken","swapFromAmount","swapToAmount","isSmartAccount","preferredAccountType","ACCOUNT_TYPES","SMART_ACCOUNT","sendTransactionForSwap","snackbarPendingMessage","snackbarSuccessMessage","forceUpdateAddresses","join","transactionHash","showSuccess","replace","isInsufficientSourceTokenForSwap","insufficientNetworkTokenForGas","isInsufficientNetworkTokenForGas","getPriceImpact","getMaxSlippage","getProviderFee"],"sources":["../../../../src/controllers/SwapController.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}