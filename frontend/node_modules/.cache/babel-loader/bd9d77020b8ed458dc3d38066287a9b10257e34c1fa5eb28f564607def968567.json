{"ast":null,"code":"/**\n * EvEmitter v2.1.1\n * Lil' event emitter\n * MIT License\n */\n\n(function (global, factory) {\n  // universal module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n})(typeof window != 'undefined' ? window : this, function () {\n  function EvEmitter() {}\n  let proto = EvEmitter.prototype;\n  proto.on = function (eventName, listener) {\n    if (!eventName || !listener) return this;\n\n    // set events hash\n    let events = this._events = this._events || {};\n    // set listeners array\n    let listeners = events[eventName] = events[eventName] || [];\n    // only add once\n    if (!listeners.includes(listener)) {\n      listeners.push(listener);\n    }\n    return this;\n  };\n  proto.once = function (eventName, listener) {\n    if (!eventName || !listener) return this;\n\n    // add event\n    this.on(eventName, listener);\n    // set once flag\n    // set onceEvents hash\n    let onceEvents = this._onceEvents = this._onceEvents || {};\n    // set onceListeners object\n    let onceListeners = onceEvents[eventName] = onceEvents[eventName] || {};\n    // set flag\n    onceListeners[listener] = true;\n    return this;\n  };\n  proto.off = function (eventName, listener) {\n    let listeners = this._events && this._events[eventName];\n    if (!listeners || !listeners.length) return this;\n    let index = listeners.indexOf(listener);\n    if (index != -1) {\n      listeners.splice(index, 1);\n    }\n    return this;\n  };\n  proto.emitEvent = function (eventName, args) {\n    let listeners = this._events && this._events[eventName];\n    if (!listeners || !listeners.length) return this;\n\n    // copy over to avoid interference if .off() in listener\n    listeners = listeners.slice(0);\n    args = args || [];\n    // once stuff\n    let onceListeners = this._onceEvents && this._onceEvents[eventName];\n    for (let listener of listeners) {\n      let isOnce = onceListeners && onceListeners[listener];\n      if (isOnce) {\n        // remove listener\n        // remove before trigger to prevent recursion\n        this.off(eventName, listener);\n        // unset once flag\n        delete onceListeners[listener];\n      }\n      // trigger listener\n      listener.apply(this, args);\n    }\n    return this;\n  };\n  proto.allOff = function () {\n    delete this._events;\n    delete this._onceEvents;\n    return this;\n  };\n  return EvEmitter;\n});","map":{"version":3,"names":["global","factory","module","exports","EvEmitter","window","proto","prototype","on","eventName","listener","events","_events","listeners","includes","push","once","onceEvents","_onceEvents","onceListeners","off","length","index","indexOf","splice","emitEvent","args","slice","isOnce","apply","allOff"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/ev-emitter/ev-emitter.js"],"sourcesContent":["/**\n * EvEmitter v2.1.1\n * Lil' event emitter\n * MIT License\n */\n\n( function( global, factory ) {\n  // universal module definition\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\nfunction EvEmitter() {}\n\nlet proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) return this;\n\n  // set events hash\n  let events = this._events = this._events || {};\n  // set listeners array\n  let listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( !listeners.includes( listener ) ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) return this;\n\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  let onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  let onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  let listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) return this;\n\n  let index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  let listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) return this;\n\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice( 0 );\n  args = args || [];\n  // once stuff\n  let onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( let listener of listeners ) {\n    let isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n  return this;\n};\n\nreturn EvEmitter;\n\n} ) );\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}