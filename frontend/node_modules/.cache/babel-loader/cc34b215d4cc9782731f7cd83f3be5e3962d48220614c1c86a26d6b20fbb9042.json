{"ast":null,"code":"import { solidityError, solidityPanic } from '../../constants/solidity.js';\nimport { AbiDecodingZeroDataError, AbiErrorSignatureNotFoundError } from '../../errors/abi.js';\nimport { slice } from '../data/slice.js';\nimport { toFunctionSelector } from '../hash/toFunctionSelector.js';\nimport { decodeAbiParameters } from './decodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nexport function decodeErrorResult(parameters) {\n  const {\n    abi,\n    data\n  } = parameters;\n  const signature = slice(data, 0, 4);\n  if (signature === '0x') throw new AbiDecodingZeroDataError();\n  const abi_ = [...(abi || []), solidityError, solidityPanic];\n  const abiItem = abi_.find(x => x.type === 'error' && signature === toFunctionSelector(formatAbiItem(x)));\n  if (!abiItem) throw new AbiErrorSignatureNotFoundError(signature, {\n    docsPath: '/docs/contract/decodeErrorResult'\n  });\n  return {\n    abiItem,\n    args: 'inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0 ? decodeAbiParameters(abiItem.inputs, slice(data, 4)) : undefined,\n    errorName: abiItem.name\n  };\n}\n//# sourceMappingURL=decodeErrorResult.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}