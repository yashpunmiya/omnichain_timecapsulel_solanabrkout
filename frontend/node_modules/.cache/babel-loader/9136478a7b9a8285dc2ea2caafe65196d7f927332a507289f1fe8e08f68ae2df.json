{"ast":null,"code":"import { BaseError } from '../../errors.js';\nexport class InvalidAbiParameterError extends BaseError {\n  constructor({\n    param\n  }) {\n    super('Failed to parse ABI parameter.', {\n      details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,\n      docsPath: '/api/human#parseabiparameter-1'\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidAbiParameterError'\n    });\n  }\n}\nexport class InvalidAbiParametersError extends BaseError {\n  constructor({\n    params\n  }) {\n    super('Failed to parse ABI parameters.', {\n      details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,\n      docsPath: '/api/human#parseabiparameters-1'\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidAbiParametersError'\n    });\n  }\n}\nexport class InvalidParameterError extends BaseError {\n  constructor({\n    param\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidParameterError'\n    });\n  }\n}\nexport class SolidityProtectedKeywordError extends BaseError {\n  constructor({\n    param,\n    name\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [`\"${name}\" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'SolidityProtectedKeywordError'\n    });\n  }\n}\nexport class InvalidModifierError extends BaseError {\n  constructor({\n    param,\n    type,\n    modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [`Modifier \"${modifier}\" not allowed${type ? ` in \"${type}\" type` : ''}.`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidModifierError'\n    });\n  }\n}\nexport class InvalidFunctionModifierError extends BaseError {\n  constructor({\n    param,\n    type,\n    modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [`Modifier \"${modifier}\" not allowed${type ? ` in \"${type}\" type` : ''}.`, `Data location can only be specified for array, struct, or mapping types, but \"${modifier}\" was given.`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidFunctionModifierError'\n    });\n  }\n}\nexport class InvalidAbiTypeParameterError extends BaseError {\n  constructor({\n    abiParameter\n  }) {\n    super('Invalid ABI parameter.', {\n      details: JSON.stringify(abiParameter, null, 2),\n      metaMessages: ['ABI parameter type is invalid.']\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidAbiTypeParameterError'\n    });\n  }\n}","map":{"version":3,"names":["BaseError","InvalidAbiParameterError","constructor","param","details","JSON","stringify","docsPath","Object","defineProperty","InvalidAbiParametersError","params","InvalidParameterError","SolidityProtectedKeywordError","name","metaMessages","InvalidModifierError","type","modifier","InvalidFunctionModifierError","InvalidAbiTypeParameterError","abiParameter"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\abitype\\src\\human-readable\\errors\\abiParameter.ts"],"sourcesContent":["import type { AbiItemType, AbiParameter } from '../../abi.js'\nimport { BaseError } from '../../errors.js'\nimport type { Modifier } from '../types/signatures.js'\n\nexport class InvalidAbiParameterError extends BaseError {\n  override name = 'InvalidAbiParameterError'\n\n  constructor({ param }: { param: string | object }) {\n    super('Failed to parse ABI parameter.', {\n      details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,\n      docsPath: '/api/human#parseabiparameter-1',\n    })\n  }\n}\n\nexport class InvalidAbiParametersError extends BaseError {\n  override name = 'InvalidAbiParametersError'\n\n  constructor({ params }: { params: string | object }) {\n    super('Failed to parse ABI parameters.', {\n      details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,\n      docsPath: '/api/human#parseabiparameters-1',\n    })\n  }\n}\n\nexport class InvalidParameterError extends BaseError {\n  override name = 'InvalidParameterError'\n\n  constructor({ param }: { param: string }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n    })\n  }\n}\n\nexport class SolidityProtectedKeywordError extends BaseError {\n  override name = 'SolidityProtectedKeywordError'\n\n  constructor({ param, name }: { param: string; name: string }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `\"${name}\" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,\n      ],\n    })\n  }\n}\n\nexport class InvalidModifierError extends BaseError {\n  override name = 'InvalidModifierError'\n\n  constructor({\n    param,\n    type,\n    modifier,\n  }: {\n    param: string\n    type?: AbiItemType | 'struct' | undefined\n    modifier: Modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `Modifier \"${modifier}\" not allowed${\n          type ? ` in \"${type}\" type` : ''\n        }.`,\n      ],\n    })\n  }\n}\n\nexport class InvalidFunctionModifierError extends BaseError {\n  override name = 'InvalidFunctionModifierError'\n\n  constructor({\n    param,\n    type,\n    modifier,\n  }: {\n    param: string\n    type?: AbiItemType | 'struct' | undefined\n    modifier: Modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `Modifier \"${modifier}\" not allowed${\n          type ? ` in \"${type}\" type` : ''\n        }.`,\n        `Data location can only be specified for array, struct, or mapping types, but \"${modifier}\" was given.`,\n      ],\n    })\n  }\n}\n\nexport class InvalidAbiTypeParameterError extends BaseError {\n  override name = 'InvalidAbiTypeParameterError'\n\n  constructor({\n    abiParameter,\n  }: {\n    abiParameter: AbiParameter & { indexed?: boolean | undefined }\n  }) {\n    super('Invalid ABI parameter.', {\n      details: JSON.stringify(abiParameter, null, 2),\n      metaMessages: ['ABI parameter type is invalid.'],\n    })\n  }\n}\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,iBAAiB;AAG3C,OAAM,MAAOC,wBAAyB,SAAQD,SAAS;EAGrDE,YAAY;IAAEC;EAAK,CAA8B;IAC/C,KAAK,CAAC,gCAAgC,EAAE;MACtCC,OAAO,EAAE,qBAAqBC,IAAI,CAACC,SAAS,CAACH,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG;MAC/DI,QAAQ,EAAE;KACX,CAAC;IANKC,MAAA,CAAAC,cAAA;;;;aAAO;;EAOhB;;AAGF,OAAM,MAAOC,yBAA0B,SAAQV,SAAS;EAGtDE,YAAY;IAAES;EAAM,CAA+B;IACjD,KAAK,CAAC,iCAAiC,EAAE;MACvCP,OAAO,EAAE,sBAAsBC,IAAI,CAACC,SAAS,CAACK,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG;MACjEJ,QAAQ,EAAE;KACX,CAAC;IANKC,MAAA,CAAAC,cAAA;;;;aAAO;;EAOhB;;AAGF,OAAM,MAAOG,qBAAsB,SAAQZ,SAAS;EAGlDE,YAAY;IAAEC;EAAK,CAAqB;IACtC,KAAK,CAAC,wBAAwB,EAAE;MAC9BC,OAAO,EAAED;KACV,CAAC;IALKK,MAAA,CAAAC,cAAA;;;;aAAO;;EAMhB;;AAGF,OAAM,MAAOI,6BAA8B,SAAQb,SAAS;EAG1DE,YAAY;IAAEC,KAAK;IAAEW;EAAI,CAAmC;IAC1D,KAAK,CAAC,wBAAwB,EAAE;MAC9BV,OAAO,EAAED,KAAK;MACdY,YAAY,EAAE,CACZ,IAAID,IAAI,uGAAuG;KAElH,CAAC;IARKN,MAAA,CAAAC,cAAA;;;;aAAO;;EAShB;;AAGF,OAAM,MAAOO,oBAAqB,SAAQhB,SAAS;EAGjDE,YAAY;IACVC,KAAK;IACLc,IAAI;IACJC;EAAQ,CAKT;IACC,KAAK,CAAC,wBAAwB,EAAE;MAC9Bd,OAAO,EAAED,KAAK;MACdY,YAAY,EAAE,CACZ,aAAaG,QAAQ,gBACnBD,IAAI,GAAG,QAAQA,IAAI,QAAQ,GAAG,EAChC,GAAG;KAEN,CAAC;IAlBKT,MAAA,CAAAC,cAAA;;;;aAAO;;EAmBhB;;AAGF,OAAM,MAAOU,4BAA6B,SAAQnB,SAAS;EAGzDE,YAAY;IACVC,KAAK;IACLc,IAAI;IACJC;EAAQ,CAKT;IACC,KAAK,CAAC,wBAAwB,EAAE;MAC9Bd,OAAO,EAAED,KAAK;MACdY,YAAY,EAAE,CACZ,aAAaG,QAAQ,gBACnBD,IAAI,GAAG,QAAQA,IAAI,QAAQ,GAAG,EAChC,GAAG,EACH,iFAAiFC,QAAQ,cAAc;KAE1G,CAAC;IAnBKV,MAAA,CAAAC,cAAA;;;;aAAO;;EAoBhB;;AAGF,OAAM,MAAOW,4BAA6B,SAAQpB,SAAS;EAGzDE,YAAY;IACVmB;EAAY,CAGb;IACC,KAAK,CAAC,wBAAwB,EAAE;MAC9BjB,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACe,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;MAC9CN,YAAY,EAAE,CAAC,gCAAgC;KAChD,CAAC;IAVKP,MAAA,CAAAC,cAAA;;;;aAAO;;EAWhB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}