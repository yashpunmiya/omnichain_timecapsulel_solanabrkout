{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nexport function isSnapSupported(provider) {\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      yield provider.request({\n        method: 'wallet_getSnaps'\n      });\n      return true;\n    } catch (error) {\n      return false;\n    }\n  });\n}\nexport function detectProvider() {\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      const provider = window.ethereum;\n      if (!provider) {\n        return null;\n      }\n      if (provider.providers && Array.isArray(provider.providers)) {\n        const providers = provider.providers;\n        for (const provider of providers) {\n          if (yield isSnapSupported(provider)) {\n            return provider;\n          }\n        }\n      }\n      if (provider.detected && Array.isArray(provider.detected)) {\n        const providers = provider.detected;\n        for (const provider of providers) {\n          if (yield isSnapSupported(provider)) {\n            return provider;\n          }\n        }\n      }\n      if (yield isSnapSupported(provider)) {\n        return provider;\n      }\n      return null;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  });\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","isSnapSupported","provider","request","method","error","detectProvider","window","ethereum","providers","Array","isArray","detected","console"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@solflare-wallet/metamask-sdk/lib/esm/detectProvider.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function isSnapSupported(provider) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            yield provider.request({ method: 'wallet_getSnaps' });\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    });\n}\nexport function detectProvider() {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const provider = window.ethereum;\n            if (!provider) {\n                return null;\n            }\n            if (provider.providers && Array.isArray(provider.providers)) {\n                const providers = provider.providers;\n                for (const provider of providers) {\n                    if (yield isSnapSupported(provider)) {\n                        return provider;\n                    }\n                }\n            }\n            if (provider.detected && Array.isArray(provider.detected)) {\n                const providers = provider.detected;\n                for (const provider of providers) {\n                    if (yield isSnapSupported(provider)) {\n                        return provider;\n                    }\n                }\n            }\n            if (yield isSnapSupported(provider)) {\n                return provider;\n            }\n            return null;\n        }\n        catch (error) {\n            console.error(error);\n            return null;\n        }\n    });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}