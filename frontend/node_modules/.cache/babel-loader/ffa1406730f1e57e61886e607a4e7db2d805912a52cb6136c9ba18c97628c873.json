{"ast":null,"code":"import QRCodeUtil from 'qrcode';\nimport { svg } from 'lit';\nconst CONNECTING_ERROR_MARGIN = 0.1;\nconst CIRCLE_SIZE_MODIFIER = 2.5;\nconst QRCODE_MATRIX_MARGIN = 7;\nfunction isAdjecentDots(cy, otherCy, cellSize) {\n  if (cy === otherCy) {\n    return false;\n  }\n  const diff = cy - otherCy < 0 ? otherCy - cy : cy - otherCy;\n  return diff <= cellSize + CONNECTING_ERROR_MARGIN;\n}\nfunction getMatrix(value, errorCorrectionLevel) {\n  const arr = Array.prototype.slice.call(QRCodeUtil.create(value, {\n    errorCorrectionLevel\n  }).modules.data, 0);\n  const sqrt = Math.sqrt(arr.length);\n  return arr.reduce((rows, key, index) => (index % sqrt === 0 ? rows.push([key]) : rows[rows.length - 1].push(key)) && rows, []);\n}\nexport const QrCodeUtil = {\n  generate({\n    uri,\n    size,\n    logoSize,\n    dotColor = '#141414'\n  }) {\n    const edgeColor = 'transparent';\n    const strokeWidth = 5;\n    const dots = [];\n    const matrix = getMatrix(uri, 'Q');\n    const cellSize = size / matrix.length;\n    const qrList = [{\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }];\n    qrList.forEach(({\n      x,\n      y\n    }) => {\n      const x1 = (matrix.length - QRCODE_MATRIX_MARGIN) * cellSize * x;\n      const y1 = (matrix.length - QRCODE_MATRIX_MARGIN) * cellSize * y;\n      const borderRadius = 0.45;\n      for (let i = 0; i < qrList.length; i += 1) {\n        const dotSize = cellSize * (QRCODE_MATRIX_MARGIN - i * 2);\n        dots.push(svg`\n            <rect\n              fill=${i === 2 ? dotColor : edgeColor}\n              width=${i === 0 ? dotSize - strokeWidth : dotSize}\n              rx= ${i === 0 ? (dotSize - strokeWidth) * borderRadius : dotSize * borderRadius}\n              ry= ${i === 0 ? (dotSize - strokeWidth) * borderRadius : dotSize * borderRadius}\n              stroke=${dotColor}\n              stroke-width=${i === 0 ? strokeWidth : 0}\n              height=${i === 0 ? dotSize - strokeWidth : dotSize}\n              x= ${i === 0 ? y1 + cellSize * i + strokeWidth / 2 : y1 + cellSize * i}\n              y= ${i === 0 ? x1 + cellSize * i + strokeWidth / 2 : x1 + cellSize * i}\n            />\n          `);\n      }\n    });\n    const clearArenaSize = Math.floor((logoSize + 25) / cellSize);\n    const matrixMiddleStart = matrix.length / 2 - clearArenaSize / 2;\n    const matrixMiddleEnd = matrix.length / 2 + clearArenaSize / 2 - 1;\n    const circles = [];\n    matrix.forEach((row, i) => {\n      row.forEach((_, j) => {\n        if (matrix[i][j]) {\n          if (!(i < QRCODE_MATRIX_MARGIN && j < QRCODE_MATRIX_MARGIN || i > matrix.length - (QRCODE_MATRIX_MARGIN + 1) && j < QRCODE_MATRIX_MARGIN || i < QRCODE_MATRIX_MARGIN && j > matrix.length - (QRCODE_MATRIX_MARGIN + 1))) {\n            if (!(i > matrixMiddleStart && i < matrixMiddleEnd && j > matrixMiddleStart && j < matrixMiddleEnd)) {\n              const cx = i * cellSize + cellSize / 2;\n              const cy = j * cellSize + cellSize / 2;\n              circles.push([cx, cy]);\n            }\n          }\n        }\n      });\n    });\n    const circlesToConnect = {};\n    circles.forEach(([cx, cy]) => {\n      if (circlesToConnect[cx]) {\n        circlesToConnect[cx]?.push(cy);\n      } else {\n        circlesToConnect[cx] = [cy];\n      }\n    });\n    Object.entries(circlesToConnect).map(([cx, cys]) => {\n      const newCys = cys.filter(cy => cys.every(otherCy => !isAdjecentDots(cy, otherCy, cellSize)));\n      return [Number(cx), newCys];\n    }).forEach(([cx, cys]) => {\n      cys.forEach(cy => {\n        dots.push(svg`<circle cx=${cx} cy=${cy} fill=${dotColor} r=${cellSize / CIRCLE_SIZE_MODIFIER} />`);\n      });\n    });\n    Object.entries(circlesToConnect).filter(([_, cys]) => cys.length > 1).map(([cx, cys]) => {\n      const newCys = cys.filter(cy => cys.some(otherCy => isAdjecentDots(cy, otherCy, cellSize)));\n      return [Number(cx), newCys];\n    }).map(([cx, cys]) => {\n      cys.sort((a, b) => a < b ? -1 : 1);\n      const groups = [];\n      for (const cy of cys) {\n        const group = groups.find(item => item.some(otherCy => isAdjecentDots(cy, otherCy, cellSize)));\n        if (group) {\n          group.push(cy);\n        } else {\n          groups.push([cy]);\n        }\n      }\n      return [cx, groups.map(item => [item[0], item[item.length - 1]])];\n    }).forEach(([cx, groups]) => {\n      groups.forEach(([y1, y2]) => {\n        dots.push(svg`\n              <line\n                x1=${cx}\n                x2=${cx}\n                y1=${y1}\n                y2=${y2}\n                stroke=${dotColor}\n                stroke-width=${cellSize / (CIRCLE_SIZE_MODIFIER / 2)}\n                stroke-linecap=\"round\"\n              />\n            `);\n      });\n    });\n    return dots;\n  }\n};","map":{"version":3,"names":["QRCodeUtil","svg","CONNECTING_ERROR_MARGIN","CIRCLE_SIZE_MODIFIER","QRCODE_MATRIX_MARGIN","isAdjecentDots","cy","otherCy","cellSize","diff","getMatrix","value","errorCorrectionLevel","arr","Array","prototype","slice","call","create","modules","data","sqrt","Math","length","reduce","rows","key","index","push","QrCodeUtil","generate","uri","size","logoSize","dotColor","edgeColor","strokeWidth","dots","matrix","qrList","x","y","forEach","x1","y1","borderRadius","i","dotSize","clearArenaSize","floor","matrixMiddleStart","matrixMiddleEnd","circles","row","_","j","cx","circlesToConnect","Object","entries","map","cys","newCys","filter","every","Number","some","sort","a","b","groups","group","find","item","y2"],"sources":["../../../../src/utils/QrCode.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,UAAU,MAAM,QAAQ;AAG/B,SAASC,GAAG,QAAQ,KAAK;AAIzB,MAAMC,uBAAuB,GAAG,GAAG;AACnC,MAAMC,oBAAoB,GAAG,GAAG;AAChC,MAAMC,oBAAoB,GAAG,CAAC;AAE9B,SAASC,cAAcA,CAACC,EAAU,EAAEC,OAAe,EAAEC,QAAgB;EACnE,IAAIF,EAAE,KAAKC,OAAO,EAAE;IAClB,OAAO,KAAK;EACd;EACA,MAAME,IAAI,GAAGH,EAAE,GAAGC,OAAO,GAAG,CAAC,GAAGA,OAAO,GAAGD,EAAE,GAAGA,EAAE,GAAGC,OAAO;EAE3D,OAAOE,IAAI,IAAID,QAAQ,GAAGN,uBAAuB;AACnD;AAEA,SAASQ,SAASA,CAACC,KAAa,EAAEC,oBAA2D;EAC3F,MAAMC,GAAG,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CACpCjB,UAAU,CAACkB,MAAM,CAACP,KAAK,EAAE;IAAEC;EAAoB,CAAE,CAAC,CAACO,OAAO,CAACC,IAAI,EAC/D,CAAC,CACF;EACD,MAAMC,IAAI,GAAGC,IAAI,CAACD,IAAI,CAACR,GAAG,CAACU,MAAM,CAAC;EAGlC,OAAOV,GAAG,CAACW,MAAM,CACf,CAACC,IAAI,EAAEC,GAAG,EAAEC,KAAK,KAEf,CAACA,KAAK,GAAGN,IAAI,KAAK,CAAC,GAAGI,IAAI,CAACG,IAAI,CAAC,CAACF,GAAG,CAAC,CAAC,GAAGD,IAAI,CAACA,IAAI,CAACF,MAAM,GAAG,CAAC,CAAC,CAACK,IAAI,CAACF,GAAG,CAAC,KAAKD,IAAI,EACnF,EAAE,CACH;AACH;AAEA,OAAO,MAAMI,UAAU,GAAG;EACxBC,QAAQA,CAAC;IACPC,GAAG;IACHC,IAAI;IACJC,QAAQ;IACRC,QAAQ,GAAG;EAAS,CAMrB;IACC,MAAMC,SAAS,GAAG,aAAa;IAC/B,MAAMC,WAAW,GAAG,CAAC;IACrB,MAAMC,IAAI,GAAqB,EAAE;IACjC,MAAMC,MAAM,GAAG5B,SAAS,CAACqB,GAAG,EAAE,GAAG,CAAC;IAClC,MAAMvB,QAAQ,GAAGwB,IAAI,GAAGM,MAAM,CAACf,MAAM;IACrC,MAAMgB,MAAM,GAAG,CACb;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAC,CAAE,EACd;MAAED,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAC,CAAE,EACd;MAAED,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAC,CAAE,CACf;IAEDF,MAAM,CAACG,OAAO,CAAC,CAAC;MAAEF,CAAC;MAAEC;IAAC,CAAE,KAAI;MAC1B,MAAME,EAAE,GAAG,CAACL,MAAM,CAACf,MAAM,GAAGnB,oBAAoB,IAAII,QAAQ,GAAGgC,CAAC;MAChE,MAAMI,EAAE,GAAG,CAACN,MAAM,CAACf,MAAM,GAAGnB,oBAAoB,IAAII,QAAQ,GAAGiC,CAAC;MAChE,MAAMI,YAAY,GAAG,IAAI;MACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,CAAChB,MAAM,EAAEuB,CAAC,IAAI,CAAC,EAAE;QACzC,MAAMC,OAAO,GAAGvC,QAAQ,IAAIJ,oBAAoB,GAAG0C,CAAC,GAAG,CAAC,CAAC;QACzDT,IAAI,CAACT,IAAI,CACP3B,GAAG;;qBAEQ6C,CAAC,KAAK,CAAC,GAAGZ,QAAQ,GAAGC,SAAS;sBAC7BW,CAAC,KAAK,CAAC,GAAGC,OAAO,GAAGX,WAAW,GAAGW,OAAO;oBAC3CD,CAAC,KAAK,CAAC,GAAG,CAACC,OAAO,GAAGX,WAAW,IAAIS,YAAY,GAAGE,OAAO,GAAGF,YAAY;oBACzEC,CAAC,KAAK,CAAC,GAAG,CAACC,OAAO,GAAGX,WAAW,IAAIS,YAAY,GAAGE,OAAO,GAAGF,YAAY;uBACtEX,QAAQ;6BACFY,CAAC,KAAK,CAAC,GAAGV,WAAW,GAAG,CAAC;uBAC/BU,CAAC,KAAK,CAAC,GAAGC,OAAO,GAAGX,WAAW,GAAGW,OAAO;mBAC7CD,CAAC,KAAK,CAAC,GAAGF,EAAE,GAAGpC,QAAQ,GAAGsC,CAAC,GAAGV,WAAW,GAAG,CAAC,GAAGQ,EAAE,GAAGpC,QAAQ,GAAGsC,CAAC;mBACjEA,CAAC,KAAK,CAAC,GAAGH,EAAE,GAAGnC,QAAQ,GAAGsC,CAAC,GAAGV,WAAW,GAAG,CAAC,GAAGO,EAAE,GAAGnC,QAAQ,GAAGsC,CAAC;;WAEzE,CACF;MACH;IACF,CAAC,CAAC;IAEF,MAAME,cAAc,GAAG1B,IAAI,CAAC2B,KAAK,CAAC,CAAChB,QAAQ,GAAG,EAAE,IAAIzB,QAAQ,CAAC;IAC7D,MAAM0C,iBAAiB,GAAGZ,MAAM,CAACf,MAAM,GAAG,CAAC,GAAGyB,cAAc,GAAG,CAAC;IAChE,MAAMG,eAAe,GAAGb,MAAM,CAACf,MAAM,GAAG,CAAC,GAAGyB,cAAc,GAAG,CAAC,GAAG,CAAC;IAClE,MAAMI,OAAO,GAAuB,EAAE;IAGtCd,MAAM,CAACI,OAAO,CAAC,CAACW,GAAwB,EAAEP,CAAS,KAAI;MACrDO,GAAG,CAACX,OAAO,CAAC,CAACY,CAAC,EAAEC,CAAS,KAAI;QAC3B,IAAIjB,MAAM,CAACQ,CAAC,CAAC,CAACS,CAAC,CAAC,EAAE;UAChB,IACE,EACGT,CAAC,GAAG1C,oBAAoB,IAAImD,CAAC,GAAGnD,oBAAoB,IACpD0C,CAAC,GAAGR,MAAM,CAACf,MAAM,IAAInB,oBAAoB,GAAG,CAAC,CAAC,IAAImD,CAAC,GAAGnD,oBAAqB,IAC3E0C,CAAC,GAAG1C,oBAAoB,IAAImD,CAAC,GAAGjB,MAAM,CAACf,MAAM,IAAInB,oBAAoB,GAAG,CAAC,CAAE,CAC7E,EACD;YACA,IACE,EACE0C,CAAC,GAAGI,iBAAiB,IACrBJ,CAAC,GAAGK,eAAe,IACnBI,CAAC,GAAGL,iBAAiB,IACrBK,CAAC,GAAGJ,eAAe,CACpB,EACD;cACA,MAAMK,EAAE,GAAGV,CAAC,GAAGtC,QAAQ,GAAGA,QAAQ,GAAG,CAAC;cACtC,MAAMF,EAAE,GAAGiD,CAAC,GAAG/C,QAAQ,GAAGA,QAAQ,GAAG,CAAC;cACtC4C,OAAO,CAACxB,IAAI,CAAC,CAAC4B,EAAE,EAAElD,EAAE,CAAC,CAAC;YACxB;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAGF,MAAMmD,gBAAgB,GAA6B,EAAE;IAGrDL,OAAO,CAACV,OAAO,CAAC,CAAC,CAACc,EAAE,EAAElD,EAAE,CAAC,KAAI;MAE3B,IAAImD,gBAAgB,CAACD,EAAE,CAAC,EAAE;QACxBC,gBAAgB,CAACD,EAAE,CAAC,EAAE5B,IAAI,CAACtB,EAAE,CAAC;MAChC,CAAC,MAAM;QACLmD,gBAAgB,CAACD,EAAE,CAAC,GAAG,CAAClD,EAAE,CAAC;MAC7B;IACF,CAAC,CAAC;IAGFoD,MAAM,CAACC,OAAO,CAACF,gBAAgB,CAAC,CAE7BG,GAAG,CAAC,CAAC,CAACJ,EAAE,EAAEK,GAAG,CAAC,KAAI;MACjB,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAM,CAACzD,EAAE,IAC1BuD,GAAG,CAACG,KAAK,CAACzD,OAAO,IAAI,CAACF,cAAc,CAACC,EAAE,EAAEC,OAAO,EAAEC,QAAQ,CAAC,CAAC,CAC7D;MAED,OAAO,CAACyD,MAAM,CAACT,EAAE,CAAC,EAAEM,MAAM,CAAsB;IAClD,CAAC,CAAC,CACDpB,OAAO,CAAC,CAAC,CAACc,EAAE,EAAEK,GAAG,CAAC,KAAI;MACrBA,GAAG,CAACnB,OAAO,CAACpC,EAAE,IAAG;QACf+B,IAAI,CAACT,IAAI,CACP3B,GAAG,cAAcuD,EAAE,OAAOlD,EAAE,SAAS4B,QAAQ,MAAM1B,QAAQ,GAAGL,oBAAoB,KAAK,CACxF;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;IAGJuD,MAAM,CAACC,OAAO,CAACF,gBAAgB,CAAC,CAE7BM,MAAM,CAAC,CAAC,CAACT,CAAC,EAAEO,GAAG,CAAC,KAAKA,GAAG,CAACtC,MAAM,GAAG,CAAC,CAAC,CAEpCqC,GAAG,CAAC,CAAC,CAACJ,EAAE,EAAEK,GAAG,CAAC,KAAI;MACjB,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAM,CAACzD,EAAE,IAAIuD,GAAG,CAACK,IAAI,CAAC3D,OAAO,IAAIF,cAAc,CAACC,EAAE,EAAEC,OAAO,EAAEC,QAAQ,CAAC,CAAC,CAAC;MAE3F,OAAO,CAACyD,MAAM,CAACT,EAAE,CAAC,EAAEM,MAAM,CAAsB;IAClD,CAAC,CAAC,CAEDF,GAAG,CAAC,CAAC,CAACJ,EAAE,EAAEK,GAAG,CAAC,KAAI;MACjBA,GAAG,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAE,CAAC;MACpC,MAAMC,MAAM,GAAe,EAAE;MAE7B,KAAK,MAAMhE,EAAE,IAAIuD,GAAG,EAAE;QACpB,MAAMU,KAAK,GAAGD,MAAM,CAACE,IAAI,CAACC,IAAI,IAC5BA,IAAI,CAACP,IAAI,CAAC3D,OAAO,IAAIF,cAAc,CAACC,EAAE,EAAEC,OAAO,EAAEC,QAAQ,CAAC,CAAC,CAC5D;QACD,IAAI+D,KAAK,EAAE;UACTA,KAAK,CAAC3C,IAAI,CAACtB,EAAE,CAAC;QAChB,CAAC,MAAM;UACLgE,MAAM,CAAC1C,IAAI,CAAC,CAACtB,EAAE,CAAC,CAAC;QACnB;MACF;MAEA,OAAO,CAACkD,EAAE,EAAEc,MAAM,CAACV,GAAG,CAACa,IAAI,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAACA,IAAI,CAAClD,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAyB;IAC3F,CAAC,CAAC,CACDmB,OAAO,CAAC,CAAC,CAACc,EAAE,EAAEc,MAAM,CAAC,KAAI;MACxBA,MAAM,CAAC5B,OAAO,CAAC,CAAC,CAACE,EAAE,EAAE8B,EAAE,CAAC,KAAI;QAC1BrC,IAAI,CAACT,IAAI,CACP3B,GAAG;;qBAEMuD,EAAE;qBACFA,EAAE;qBACFZ,EAAE;qBACF8B,EAAE;yBACExC,QAAQ;+BACF1B,QAAQ,IAAIL,oBAAoB,GAAG,CAAC,CAAC;;;aAGvD,CACF;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;IAEJ,OAAOkC,IAAI;EACb;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}