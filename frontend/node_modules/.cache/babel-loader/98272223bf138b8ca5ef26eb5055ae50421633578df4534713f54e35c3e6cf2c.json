{"ast":null,"code":"import { createContext, useContext } from 'react';\nconst EMPTY_ARRAY = [];\nconst DEFAULT_CONTEXT = {\n  autoConnect: false,\n  connecting: false,\n  connected: false,\n  disconnecting: false,\n  select() {\n    logMissingProviderError('call', 'select');\n  },\n  connect() {\n    return Promise.reject(logMissingProviderError('call', 'connect'));\n  },\n  disconnect() {\n    return Promise.reject(logMissingProviderError('call', 'disconnect'));\n  },\n  sendTransaction() {\n    return Promise.reject(logMissingProviderError('call', 'sendTransaction'));\n  },\n  signTransaction() {\n    return Promise.reject(logMissingProviderError('call', 'signTransaction'));\n  },\n  signAllTransactions() {\n    return Promise.reject(logMissingProviderError('call', 'signAllTransactions'));\n  },\n  signMessage() {\n    return Promise.reject(logMissingProviderError('call', 'signMessage'));\n  },\n  signIn() {\n    return Promise.reject(logMissingProviderError('call', 'signIn'));\n  }\n};\nObject.defineProperty(DEFAULT_CONTEXT, 'wallets', {\n  get() {\n    logMissingProviderError('read', 'wallets');\n    return EMPTY_ARRAY;\n  }\n});\nObject.defineProperty(DEFAULT_CONTEXT, 'wallet', {\n  get() {\n    logMissingProviderError('read', 'wallet');\n    return null;\n  }\n});\nObject.defineProperty(DEFAULT_CONTEXT, 'publicKey', {\n  get() {\n    logMissingProviderError('read', 'publicKey');\n    return null;\n  }\n});\nfunction logMissingProviderError(action, property) {\n  const error = new Error(`You have tried to ${action} \"${property}\" on a WalletContext without providing one. ` + 'Make sure to render a WalletProvider as an ancestor of the component that uses WalletContext.');\n  console.error(error);\n  return error;\n}\nexport const WalletContext = createContext(DEFAULT_CONTEXT);\nexport function useWallet() {\n  return useContext(WalletContext);\n}","map":{"version":3,"names":["createContext","useContext","EMPTY_ARRAY","DEFAULT_CONTEXT","autoConnect","connecting","connected","disconnecting","select","logMissingProviderError","connect","Promise","reject","disconnect","sendTransaction","signTransaction","signAllTransactions","signMessage","signIn","Object","defineProperty","get","action","property","error","Error","console","WalletContext","useWallet"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@solana\\wallet-adapter-react\\src\\useWallet.ts"],"sourcesContent":["import {\n    type Adapter,\n    type MessageSignerWalletAdapterProps,\n    type SignerWalletAdapterProps,\n    type SignInMessageSignerWalletAdapterProps,\n    type WalletAdapterProps,\n    type WalletName,\n    type WalletReadyState,\n} from '@solana/wallet-adapter-base';\nimport { type PublicKey } from '@solana/web3.js';\nimport { createContext, useContext } from 'react';\n\nexport interface Wallet {\n    adapter: Adapter;\n    readyState: WalletReadyState;\n}\n\nexport interface WalletContextState {\n    autoConnect: boolean;\n    wallets: Wallet[];\n    wallet: Wallet | null;\n    publicKey: PublicKey | null;\n    connecting: boolean;\n    connected: boolean;\n    disconnecting: boolean;\n\n    select(walletName: WalletName | null): void;\n    connect(): Promise<void>;\n    disconnect(): Promise<void>;\n\n    sendTransaction: WalletAdapterProps['sendTransaction'];\n    signTransaction: SignerWalletAdapterProps['signTransaction'] | undefined;\n    signAllTransactions: SignerWalletAdapterProps['signAllTransactions'] | undefined;\n    signMessage: MessageSignerWalletAdapterProps['signMessage'] | undefined;\n    signIn: SignInMessageSignerWalletAdapterProps['signIn'] | undefined;\n}\n\nconst EMPTY_ARRAY: ReadonlyArray<never> = [];\n\nconst DEFAULT_CONTEXT: Partial<WalletContextState> = {\n    autoConnect: false,\n    connecting: false,\n    connected: false,\n    disconnecting: false,\n    select() {\n        logMissingProviderError('call', 'select');\n    },\n    connect() {\n        return Promise.reject(logMissingProviderError('call', 'connect'));\n    },\n    disconnect() {\n        return Promise.reject(logMissingProviderError('call', 'disconnect'));\n    },\n    sendTransaction() {\n        return Promise.reject(logMissingProviderError('call', 'sendTransaction'));\n    },\n    signTransaction() {\n        return Promise.reject(logMissingProviderError('call', 'signTransaction'));\n    },\n    signAllTransactions() {\n        return Promise.reject(logMissingProviderError('call', 'signAllTransactions'));\n    },\n    signMessage() {\n        return Promise.reject(logMissingProviderError('call', 'signMessage'));\n    },\n    signIn() {\n        return Promise.reject(logMissingProviderError('call', 'signIn'));\n    },\n};\nObject.defineProperty(DEFAULT_CONTEXT, 'wallets', {\n    get() {\n        logMissingProviderError('read', 'wallets');\n        return EMPTY_ARRAY;\n    },\n});\nObject.defineProperty(DEFAULT_CONTEXT, 'wallet', {\n    get() {\n        logMissingProviderError('read', 'wallet');\n        return null;\n    },\n});\nObject.defineProperty(DEFAULT_CONTEXT, 'publicKey', {\n    get() {\n        logMissingProviderError('read', 'publicKey');\n        return null;\n    },\n});\n\nfunction logMissingProviderError(action: string, property: string) {\n    const error = new Error(\n        `You have tried to ${action} \"${property}\" on a WalletContext without providing one. ` +\n            'Make sure to render a WalletProvider as an ancestor of the component that uses WalletContext.'\n    );\n    console.error(error);\n    return error;\n}\n\nexport const WalletContext = createContext<WalletContextState>(DEFAULT_CONTEXT as WalletContextState);\n\nexport function useWallet(): WalletContextState {\n    return useContext(WalletContext);\n}\n"],"mappings":"AAUA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AA2BjD,MAAMC,WAAW,GAAyB,EAAE;AAE5C,MAAMC,eAAe,GAAgC;EACjDC,WAAW,EAAE,KAAK;EAClBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE,KAAK;EAChBC,aAAa,EAAE,KAAK;EACpBC,MAAMA,CAAA;IACFC,uBAAuB,CAAC,MAAM,EAAE,QAAQ,CAAC;EAC7C,CAAC;EACDC,OAAOA,CAAA;IACH,OAAOC,OAAO,CAACC,MAAM,CAACH,uBAAuB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;EACrE,CAAC;EACDI,UAAUA,CAAA;IACN,OAAOF,OAAO,CAACC,MAAM,CAACH,uBAAuB,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;EACxE,CAAC;EACDK,eAAeA,CAAA;IACX,OAAOH,OAAO,CAACC,MAAM,CAACH,uBAAuB,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;EAC7E,CAAC;EACDM,eAAeA,CAAA;IACX,OAAOJ,OAAO,CAACC,MAAM,CAACH,uBAAuB,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;EAC7E,CAAC;EACDO,mBAAmBA,CAAA;IACf,OAAOL,OAAO,CAACC,MAAM,CAACH,uBAAuB,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;EACjF,CAAC;EACDQ,WAAWA,CAAA;IACP,OAAON,OAAO,CAACC,MAAM,CAACH,uBAAuB,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;EACzE,CAAC;EACDS,MAAMA,CAAA;IACF,OAAOP,OAAO,CAACC,MAAM,CAACH,uBAAuB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;EACpE;CACH;AACDU,MAAM,CAACC,cAAc,CAACjB,eAAe,EAAE,SAAS,EAAE;EAC9CkB,GAAGA,CAAA;IACCZ,uBAAuB,CAAC,MAAM,EAAE,SAAS,CAAC;IAC1C,OAAOP,WAAW;EACtB;CACH,CAAC;AACFiB,MAAM,CAACC,cAAc,CAACjB,eAAe,EAAE,QAAQ,EAAE;EAC7CkB,GAAGA,CAAA;IACCZ,uBAAuB,CAAC,MAAM,EAAE,QAAQ,CAAC;IACzC,OAAO,IAAI;EACf;CACH,CAAC;AACFU,MAAM,CAACC,cAAc,CAACjB,eAAe,EAAE,WAAW,EAAE;EAChDkB,GAAGA,CAAA;IACCZ,uBAAuB,CAAC,MAAM,EAAE,WAAW,CAAC;IAC5C,OAAO,IAAI;EACf;CACH,CAAC;AAEF,SAASA,uBAAuBA,CAACa,MAAc,EAAEC,QAAgB;EAC7D,MAAMC,KAAK,GAAG,IAAIC,KAAK,CACnB,qBAAqBH,MAAM,KAAKC,QAAQ,8CAA8C,GAClF,+FAA+F,CACtG;EACDG,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;EACpB,OAAOA,KAAK;AAChB;AAEA,OAAO,MAAMG,aAAa,GAAG3B,aAAa,CAAqBG,eAAqC,CAAC;AAErG,OAAM,SAAUyB,SAASA,CAAA;EACrB,OAAO3B,UAAU,CAAC0B,aAAa,CAAC;AACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}