{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RegistryItem = void 0;\nconst bc_ur_1 = require(\"@ngraveio/bc-ur\");\nconst lib_1 = require(\"./lib\");\nclass RegistryItem {\n  constructor() {\n    this.toCBOR = () => {\n      if (this.toDataItem() === undefined) {\n        throw new Error(`#[ur-registry][RegistryItem][fn.toCBOR]: registry ${this.getRegistryType()}'s method toDataItem returns undefined`);\n      }\n      return (0, lib_1.encodeDataItem)(this.toDataItem());\n    };\n    this.toUR = () => {\n      return new bc_ur_1.UR(this.toCBOR(), this.getRegistryType().getType());\n    };\n    this.toUREncoder = (maxFragmentLength, firstSeqNum, minFragmentLength) => {\n      const ur = this.toUR();\n      const urEncoder = new bc_ur_1.UREncoder(ur, maxFragmentLength, firstSeqNum, minFragmentLength);\n      return urEncoder;\n    };\n  }\n}\nexports.RegistryItem = RegistryItem;","map":{"version":3,"names":["bc_ur_1","require","lib_1","RegistryItem","constructor","toCBOR","toDataItem","undefined","Error","getRegistryType","encodeDataItem","toUR","UR","getType","toUREncoder","maxFragmentLength","firstSeqNum","minFragmentLength","ur","urEncoder","UREncoder","exports"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@keystonehq\\bc-ur-registry-sol\\node_modules\\@keystonehq\\bc-ur-registry\\src\\RegistryItem.ts"],"sourcesContent":["import { UR, UREncoder } from '@ngraveio/bc-ur';\nimport { encodeDataItem, DataItem } from './lib';\nimport { RegistryType } from './RegistryType';\n\nexport abstract class RegistryItem {\n  abstract getRegistryType: () => RegistryType;\n  abstract toDataItem: () => DataItem;\n  public toCBOR = () => {\n    if (this.toDataItem() === undefined) {\n      throw new Error(\n        `#[ur-registry][RegistryItem][fn.toCBOR]: registry ${this.getRegistryType()}'s method toDataItem returns undefined`,\n      );\n    }\n    return encodeDataItem(this.toDataItem());\n  };\n\n  public toUR = () => {\n    return new UR(this.toCBOR(), this.getRegistryType().getType());\n  };\n\n  public toUREncoder = (\n    maxFragmentLength?: number,\n    firstSeqNum?: number,\n    minFragmentLength?: number,\n  ) => {\n    const ur = this.toUR();\n    const urEncoder = new UREncoder(\n      ur,\n      maxFragmentLength,\n      firstSeqNum,\n      minFragmentLength,\n    );\n    return urEncoder;\n  };\n}\n"],"mappings":";;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AACA,MAAAC,KAAA,GAAAD,OAAA;AAGA,MAAsBE,YAAY;EAAlCC,YAAA;IAGS,KAAAC,MAAM,GAAG,MAAK;MACnB,IAAI,IAAI,CAACC,UAAU,EAAE,KAAKC,SAAS,EAAE;QACnC,MAAM,IAAIC,KAAK,CACb,qDAAqD,IAAI,CAACC,eAAe,EAAE,wCAAwC,CACpH;;MAEH,OAAO,IAAAP,KAAA,CAAAQ,cAAc,EAAC,IAAI,CAACJ,UAAU,EAAE,CAAC;IAC1C,CAAC;IAEM,KAAAK,IAAI,GAAG,MAAK;MACjB,OAAO,IAAIX,OAAA,CAAAY,EAAE,CAAC,IAAI,CAACP,MAAM,EAAE,EAAE,IAAI,CAACI,eAAe,EAAE,CAACI,OAAO,EAAE,CAAC;IAChE,CAAC;IAEM,KAAAC,WAAW,GAAG,CACnBC,iBAA0B,EAC1BC,WAAoB,EACpBC,iBAA0B,KACxB;MACF,MAAMC,EAAE,GAAG,IAAI,CAACP,IAAI,EAAE;MACtB,MAAMQ,SAAS,GAAG,IAAInB,OAAA,CAAAoB,SAAS,CAC7BF,EAAE,EACFH,iBAAiB,EACjBC,WAAW,EACXC,iBAAiB,CAClB;MACD,OAAOE,SAAS;IAClB,CAAC;EACH;;AA9BAE,OAAA,CAAAlB,YAAA,GAAAA,YAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}