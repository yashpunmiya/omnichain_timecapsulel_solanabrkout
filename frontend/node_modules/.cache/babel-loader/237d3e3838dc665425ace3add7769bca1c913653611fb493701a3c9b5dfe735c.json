{"ast":null,"code":"import { proxy, ref, snapshot, subscribe as sub } from 'valtio/vanilla';\nimport { subscribeKey as subKey } from 'valtio/vanilla/utils';\nimport { ConstantsUtil, getW3mThemeVariables } from '@reown/appkit-common';\nimport { MobileWalletUtil } from '../utils/MobileWallet.js';\nimport { StorageUtil } from '../utils/StorageUtil.js';\nimport { ApiController } from './ApiController.js';\nimport { ChainController } from './ChainController.js';\nimport { OptionsController } from './OptionsController.js';\nimport { RouterController } from './RouterController.js';\nimport { ThemeController } from './ThemeController.js';\nconst defaultActiveConnectors = {\n  eip155: undefined,\n  solana: undefined,\n  polkadot: undefined,\n  bip122: undefined\n};\n// -- State --------------------------------------------- //\nconst state = proxy({\n  allConnectors: [],\n  connectors: [],\n  activeConnector: undefined,\n  filterByNamespace: undefined,\n  activeConnectorIds: {\n    ...defaultActiveConnectors\n  }\n});\n// -- Controller ---------------------------------------- //\nexport const ConnectorController = {\n  state,\n  subscribe(callback) {\n    return sub(state, () => {\n      callback(state);\n    });\n  },\n  subscribeKey(key, callback) {\n    return subKey(state, key, callback);\n  },\n  initialize(namespaces) {\n    namespaces.forEach(namespace => {\n      const connectorId = StorageUtil.getConnectedConnectorId(namespace);\n      if (connectorId) {\n        this.setConnectorId(connectorId, namespace);\n      }\n    });\n  },\n  setActiveConnector(connector) {\n    if (connector) {\n      state.activeConnector = ref(connector);\n    }\n  },\n  setConnectors(connectors) {\n    const newConnectors = connectors.filter(newConnector => !state.allConnectors.some(existingConnector => existingConnector.id === newConnector.id && this.getConnectorName(existingConnector.name) === this.getConnectorName(newConnector.name) && existingConnector.chain === newConnector.chain));\n    /**\n     * We are reassigning the state of the proxy to a new array of new objects, this can cause issues. So it is better to use ref in this case.\n     * Check more about proxy on https://valtio.dev/docs/api/basic/proxy#Gotchas\n     * Check more about ref on https://valtio.dev/docs/api/basic/ref\n     */\n    newConnectors.forEach(connector => {\n      if (connector.type !== 'MULTI_CHAIN') {\n        state.allConnectors.push(ref(connector));\n      }\n    });\n    state.connectors = this.mergeMultiChainConnectors(state.allConnectors);\n  },\n  removeAdapter(namespace) {\n    state.allConnectors = state.allConnectors.filter(connector => connector.chain !== namespace);\n    state.connectors = this.mergeMultiChainConnectors(state.allConnectors);\n  },\n  mergeMultiChainConnectors(connectors) {\n    const connectorsByNameMap = this.generateConnectorMapByName(connectors);\n    const mergedConnectors = [];\n    connectorsByNameMap.forEach(keyConnectors => {\n      const firstItem = keyConnectors[0];\n      const isAuthConnector = firstItem?.id === ConstantsUtil.CONNECTOR_ID.AUTH;\n      if (keyConnectors.length > 1 && firstItem) {\n        mergedConnectors.push({\n          name: firstItem.name,\n          imageUrl: firstItem.imageUrl,\n          imageId: firstItem.imageId,\n          connectors: [...keyConnectors],\n          type: isAuthConnector ? 'AUTH' : 'MULTI_CHAIN',\n          // These values are just placeholders, we don't use them in multi-chain connector select screen\n          chain: 'eip155',\n          id: firstItem?.id || ''\n        });\n      } else if (firstItem) {\n        mergedConnectors.push(firstItem);\n      }\n    });\n    return mergedConnectors;\n  },\n  generateConnectorMapByName(connectors) {\n    const connectorsByNameMap = new Map();\n    connectors.forEach(connector => {\n      const {\n        name\n      } = connector;\n      const connectorName = this.getConnectorName(name);\n      if (!connectorName) {\n        return;\n      }\n      const connectorsByName = connectorsByNameMap.get(connectorName) || [];\n      const haveSameConnector = connectorsByName.find(c => c.chain === connector.chain);\n      if (!haveSameConnector) {\n        connectorsByName.push(connector);\n      }\n      connectorsByNameMap.set(connectorName, connectorsByName);\n    });\n    return connectorsByNameMap;\n  },\n  getConnectorName(name) {\n    if (!name) {\n      return name;\n    }\n    const nameOverrideMap = {\n      'Trust Wallet': 'Trust'\n    };\n    return nameOverrideMap[name] || name;\n  },\n  getUniqueConnectorsByName(connectors) {\n    const uniqueConnectors = [];\n    connectors.forEach(c => {\n      if (!uniqueConnectors.find(uc => uc.chain === c.chain)) {\n        uniqueConnectors.push(c);\n      }\n    });\n    return uniqueConnectors;\n  },\n  addConnector(connector) {\n    if (connector.id === ConstantsUtil.CONNECTOR_ID.AUTH) {\n      const authConnector = connector;\n      const optionsState = snapshot(OptionsController.state);\n      const themeMode = ThemeController.getSnapshot().themeMode;\n      const themeVariables = ThemeController.getSnapshot().themeVariables;\n      authConnector?.provider?.syncDappData?.({\n        metadata: optionsState.metadata,\n        sdkVersion: optionsState.sdkVersion,\n        projectId: optionsState.projectId,\n        sdkType: optionsState.sdkType\n      });\n      authConnector?.provider?.syncTheme({\n        themeMode,\n        themeVariables,\n        w3mThemeVariables: getW3mThemeVariables(themeVariables, themeMode)\n      });\n      this.setConnectors([connector]);\n    } else {\n      this.setConnectors([connector]);\n    }\n  },\n  getAuthConnector(chainNamespace) {\n    const activeNamespace = chainNamespace || ChainController.state.activeChain;\n    const authConnector = state.connectors.find(c => c.id === ConstantsUtil.CONNECTOR_ID.AUTH);\n    if (!authConnector) {\n      return undefined;\n    }\n    if (authConnector?.connectors?.length) {\n      const connector = authConnector.connectors.find(c => c.chain === activeNamespace);\n      return connector;\n    }\n    return authConnector;\n  },\n  getAnnouncedConnectorRdns() {\n    return state.connectors.filter(c => c.type === 'ANNOUNCED').map(c => c.info?.rdns);\n  },\n  getConnectorById(id) {\n    return state.allConnectors.find(c => c.id === id);\n  },\n  getConnector(id, rdns) {\n    const connectorsByNamespace = state.allConnectors.filter(c => c.chain === ChainController.state.activeChain);\n    return connectorsByNamespace.find(c => c.explorerId === id || c.info?.rdns === rdns);\n  },\n  syncIfAuthConnector(connector) {\n    if (connector.id !== 'ID_AUTH') {\n      return;\n    }\n    const authConnector = connector;\n    const optionsState = snapshot(OptionsController.state);\n    const themeMode = ThemeController.getSnapshot().themeMode;\n    const themeVariables = ThemeController.getSnapshot().themeVariables;\n    authConnector?.provider?.syncDappData?.({\n      metadata: optionsState.metadata,\n      sdkVersion: optionsState.sdkVersion,\n      sdkType: optionsState.sdkType,\n      projectId: optionsState.projectId\n    });\n    authConnector.provider.syncTheme({\n      themeMode,\n      themeVariables,\n      w3mThemeVariables: getW3mThemeVariables(themeVariables, themeMode)\n    });\n  },\n  /**\n   * Returns the connectors filtered by namespace.\n   * @param namespace - The namespace to filter the connectors by.\n   * @returns ConnectorWithProviders[].\n   */\n  getConnectorsByNamespace(namespace) {\n    const namespaceConnectors = state.allConnectors.filter(connector => connector.chain === namespace);\n    return this.mergeMultiChainConnectors(namespaceConnectors);\n  },\n  selectWalletConnector(wallet) {\n    const connector = ConnectorController.getConnector(wallet.id, wallet.rdns);\n    if (ChainController.state.activeChain === ConstantsUtil.CHAIN.SOLANA) {\n      MobileWalletUtil.handleSolanaDeeplinkRedirect(connector?.name || wallet.name || '');\n    }\n    if (connector) {\n      RouterController.push('ConnectingExternal', {\n        connector\n      });\n    } else {\n      RouterController.push('ConnectingWalletConnect', {\n        wallet\n      });\n    }\n  },\n  /**\n   * Returns the connectors. If a namespace is provided, the connectors are filtered by namespace.\n   * @param namespace - The namespace to filter the connectors by. If not provided, all connectors are returned.\n   * @returns ConnectorWithProviders[].\n   */\n  getConnectors(namespace) {\n    if (namespace) {\n      return this.getConnectorsByNamespace(namespace);\n    }\n    return this.mergeMultiChainConnectors(state.allConnectors);\n  },\n  /**\n   * Sets the filter by namespace and updates the connectors.\n   * @param namespace - The namespace to filter the connectors by.\n   */\n  setFilterByNamespace(namespace) {\n    state.filterByNamespace = namespace;\n    state.connectors = this.getConnectors(namespace);\n    ApiController.setFilterByNamespace(namespace);\n  },\n  setConnectorId(connectorId, namespace) {\n    if (connectorId) {\n      state.activeConnectorIds = {\n        ...state.activeConnectorIds,\n        [namespace]: connectorId\n      };\n      StorageUtil.setConnectedConnectorId(namespace, connectorId);\n    }\n  },\n  removeConnectorId(namespace) {\n    state.activeConnectorIds = {\n      ...state.activeConnectorIds,\n      [namespace]: undefined\n    };\n    StorageUtil.deleteConnectedConnectorId(namespace);\n  },\n  getConnectorId(namespace) {\n    if (!namespace) {\n      return undefined;\n    }\n    return state.activeConnectorIds[namespace];\n  },\n  isConnected(namespace) {\n    if (!namespace) {\n      return Object.values(state.activeConnectorIds).some(id => Boolean(id));\n    }\n    return Boolean(state.activeConnectorIds[namespace]);\n  },\n  resetConnectorIds() {\n    state.activeConnectorIds = {\n      ...defaultActiveConnectors\n    };\n  }\n};","map":{"version":3,"names":["proxy","ref","snapshot","subscribe","sub","subscribeKey","subKey","ConstantsUtil","getW3mThemeVariables","MobileWalletUtil","StorageUtil","ApiController","ChainController","OptionsController","RouterController","ThemeController","defaultActiveConnectors","eip155","undefined","solana","polkadot","bip122","state","allConnectors","connectors","activeConnector","filterByNamespace","activeConnectorIds","ConnectorController","callback","key","initialize","namespaces","forEach","namespace","connectorId","getConnectedConnectorId","setConnectorId","setActiveConnector","connector","setConnectors","newConnectors","filter","newConnector","some","existingConnector","id","getConnectorName","name","chain","type","push","mergeMultiChainConnectors","removeAdapter","connectorsByNameMap","generateConnectorMapByName","mergedConnectors","keyConnectors","firstItem","isAuthConnector","CONNECTOR_ID","AUTH","length","imageUrl","imageId","Map","connectorName","connectorsByName","get","haveSameConnector","find","c","set","nameOverrideMap","getUniqueConnectorsByName","uniqueConnectors","uc","addConnector","authConnector","optionsState","themeMode","getSnapshot","themeVariables","provider","syncDappData","metadata","sdkVersion","projectId","sdkType","syncTheme","w3mThemeVariables","getAuthConnector","chainNamespace","activeNamespace","activeChain","getAnnouncedConnectorRdns","map","info","rdns","getConnectorById","getConnector","connectorsByNamespace","explorerId","syncIfAuthConnector","getConnectorsByNamespace","namespaceConnectors","selectWalletConnector","wallet","CHAIN","SOLANA","handleSolanaDeeplinkRedirect","getConnectors","setFilterByNamespace","setConnectedConnectorId","removeConnectorId","deleteConnectedConnectorId","getConnectorId","isConnected","Object","values","Boolean","resetConnectorIds"],"sources":["../../../../src/controllers/ConnectorController.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}