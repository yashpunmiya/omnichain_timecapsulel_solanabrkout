{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Awaited = Awaited;\nconst index_1 = require(\"../intersect/index\");\nconst index_2 = require(\"../union/index\");\nconst type_1 = require(\"../create/type\");\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nconst kind_1 = require(\"../guard/kind\");\n// prettier-ignore\nfunction FromRest(T) {\n  return T.map(L => AwaitedResolve(L));\n}\n// prettier-ignore\nfunction FromIntersect(T) {\n  return (0, index_1.Intersect)(FromRest(T));\n}\n// prettier-ignore\nfunction FromUnion(T) {\n  return (0, index_2.Union)(FromRest(T));\n}\n// prettier-ignore\nfunction FromPromise(T) {\n  return AwaitedResolve(T);\n}\n// ----------------------------------------------------------------\n// AwaitedResolve\n// ----------------------------------------------------------------\n// prettier-ignore\nfunction AwaitedResolve(T) {\n  return (0, kind_1.IsIntersect)(T) ? FromIntersect(T.allOf) : (0, kind_1.IsUnion)(T) ? FromUnion(T.anyOf) : (0, kind_1.IsPromise)(T) ? FromPromise(T.item) : T;\n}\n/** `[JavaScript]` Constructs a type by recursively unwrapping Promise types */\nfunction Awaited(T, options) {\n  return (0, type_1.CreateType)(AwaitedResolve(T), options);\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}