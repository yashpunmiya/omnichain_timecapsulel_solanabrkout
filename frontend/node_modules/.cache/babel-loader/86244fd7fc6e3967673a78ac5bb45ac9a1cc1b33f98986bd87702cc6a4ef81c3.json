{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport '../../components/wui-icon/index.js';\nimport { elementStyles, resetStyles } from '../../utils/ThemeUtil.js';\nimport { customElement } from '../../utils/WebComponentsUtil.js';\nimport styles from './styles.js';\nlet WuiInputText = class WuiInputText extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.inputElementRef = createRef();\n    this.size = 'md';\n    this.disabled = false;\n    this.placeholder = '';\n    this.type = 'text';\n    this.value = '';\n  }\n  render() {\n    const inputClass = `wui-padding-right-${this.inputRightPadding}`;\n    const sizeClass = `wui-size-${this.size}`;\n    const classes = {\n      [sizeClass]: true,\n      [inputClass]: Boolean(this.inputRightPadding)\n    };\n    return html`${this.templateIcon()}\n      <input\n        data-testid=\"wui-input-text\"\n        ${ref(this.inputElementRef)}\n        class=${classMap(classes)}\n        type=${this.type}\n        enterkeyhint=${ifDefined(this.enterKeyHint)}\n        ?disabled=${this.disabled}\n        placeholder=${this.placeholder}\n        @input=${this.dispatchInputChangeEvent.bind(this)}\n        .value=${this.value || ''}\n        tabindex=${ifDefined(this.tabIdx)}\n      />\n      <slot></slot>`;\n  }\n  templateIcon() {\n    if (this.icon) {\n      return html`<wui-icon\n        data-input=${this.size}\n        size=${this.size}\n        color=\"inherit\"\n        name=${this.icon}\n      ></wui-icon>`;\n    }\n    return null;\n  }\n  dispatchInputChangeEvent() {\n    this.dispatchEvent(new CustomEvent('inputChange', {\n      detail: this.inputElementRef.value?.value,\n      bubbles: true,\n      composed: true\n    }));\n  }\n};\nWuiInputText.styles = [resetStyles, elementStyles, styles];\n__decorate([property()], WuiInputText.prototype, \"size\", void 0);\n__decorate([property()], WuiInputText.prototype, \"icon\", void 0);\n__decorate([property({\n  type: Boolean\n})], WuiInputText.prototype, \"disabled\", void 0);\n__decorate([property()], WuiInputText.prototype, \"placeholder\", void 0);\n__decorate([property()], WuiInputText.prototype, \"type\", void 0);\n__decorate([property()], WuiInputText.prototype, \"keyHint\", void 0);\n__decorate([property()], WuiInputText.prototype, \"value\", void 0);\n__decorate([property()], WuiInputText.prototype, \"inputRightPadding\", void 0);\n__decorate([property()], WuiInputText.prototype, \"tabIdx\", void 0);\nWuiInputText = __decorate([customElement('wui-input-text')], WuiInputText);\nexport { WuiInputText };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}