{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CryptoCoinInfo = exports.Network = exports.Type = void 0;\nconst lib_1 = require(\"./lib\");\nconst RegistryItem_1 = require(\"./RegistryItem\");\nconst RegistryType_1 = require(\"./RegistryType\");\nvar Keys;\n(function (Keys) {\n  Keys[\"type\"] = \"1\";\n  Keys[\"network\"] = \"2\";\n})(Keys || (Keys = {}));\nvar Type;\n(function (Type) {\n  Type[Type[\"bitcoin\"] = 0] = \"bitcoin\";\n})(Type = exports.Type || (exports.Type = {}));\nvar Network;\n(function (Network) {\n  Network[Network[\"mainnet\"] = 0] = \"mainnet\";\n  Network[Network[\"testnet\"] = 1] = \"testnet\";\n})(Network = exports.Network || (exports.Network = {}));\nclass CryptoCoinInfo extends RegistryItem_1.RegistryItem {\n  constructor(type, network) {\n    super();\n    this.type = type;\n    this.network = network;\n    this.getRegistryType = () => {\n      return RegistryType_1.RegistryTypes.CRYPTO_COIN_INFO;\n    };\n    this.getType = () => {\n      return this.type || Type.bitcoin;\n    };\n    this.getNetwork = () => {\n      return this.network || Network.mainnet;\n    };\n    this.toDataItem = () => {\n      const map = {};\n      if (this.type) {\n        map[Keys.type] = this.type;\n      }\n      if (this.network) {\n        map[Keys.network] = this.network;\n      }\n      return new lib_1.DataItem(map);\n    };\n  }\n}\nexports.CryptoCoinInfo = CryptoCoinInfo;\nCryptoCoinInfo.fromDataItem = dataItem => {\n  const map = dataItem.getData();\n  const type = map[Keys.type];\n  const network = map[Keys.network];\n  return new CryptoCoinInfo(type, network);\n};\nCryptoCoinInfo.fromCBOR = _cborPayload => {\n  const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);\n  return CryptoCoinInfo.fromDataItem(dataItem);\n};\n//# sourceMappingURL=CryptoCoinInfo.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}