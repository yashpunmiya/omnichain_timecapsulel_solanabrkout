{"ast":null,"code":"/* [Multicall3](https://github.com/mds1/multicall) */\nexport const multicall3Abi = [{\n  inputs: [{\n    components: [{\n      name: 'target',\n      type: 'address'\n    }, {\n      name: 'allowFailure',\n      type: 'bool'\n    }, {\n      name: 'callData',\n      type: 'bytes'\n    }],\n    name: 'calls',\n    type: 'tuple[]'\n  }],\n  name: 'aggregate3',\n  outputs: [{\n    components: [{\n      name: 'success',\n      type: 'bool'\n    }, {\n      name: 'returnData',\n      type: 'bytes'\n    }],\n    name: 'returnData',\n    type: 'tuple[]'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}];\nconst universalResolverErrors = [{\n  inputs: [],\n  name: 'ResolverNotFound',\n  type: 'error'\n}, {\n  inputs: [],\n  name: 'ResolverWildcardNotSupported',\n  type: 'error'\n}, {\n  inputs: [],\n  name: 'ResolverNotContract',\n  type: 'error'\n}, {\n  inputs: [{\n    name: 'returnData',\n    type: 'bytes'\n  }],\n  name: 'ResolverError',\n  type: 'error'\n}, {\n  inputs: [{\n    components: [{\n      name: 'status',\n      type: 'uint16'\n    }, {\n      name: 'message',\n      type: 'string'\n    }],\n    name: 'errors',\n    type: 'tuple[]'\n  }],\n  name: 'HttpError',\n  type: 'error'\n}];\nexport const universalResolverResolveAbi = [...universalResolverErrors, {\n  name: 'resolve',\n  type: 'function',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'name',\n    type: 'bytes'\n  }, {\n    name: 'data',\n    type: 'bytes'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bytes'\n  }, {\n    name: 'address',\n    type: 'address'\n  }]\n}, {\n  name: 'resolve',\n  type: 'function',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'name',\n    type: 'bytes'\n  }, {\n    name: 'data',\n    type: 'bytes'\n  }, {\n    name: 'gateways',\n    type: 'string[]'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bytes'\n  }, {\n    name: 'address',\n    type: 'address'\n  }]\n}];\nexport const universalResolverReverseAbi = [...universalResolverErrors, {\n  name: 'reverse',\n  type: 'function',\n  stateMutability: 'view',\n  inputs: [{\n    type: 'bytes',\n    name: 'reverseName'\n  }],\n  outputs: [{\n    type: 'string',\n    name: 'resolvedName'\n  }, {\n    type: 'address',\n    name: 'resolvedAddress'\n  }, {\n    type: 'address',\n    name: 'reverseResolver'\n  }, {\n    type: 'address',\n    name: 'resolver'\n  }]\n}, {\n  name: 'reverse',\n  type: 'function',\n  stateMutability: 'view',\n  inputs: [{\n    type: 'bytes',\n    name: 'reverseName'\n  }, {\n    type: 'string[]',\n    name: 'gateways'\n  }],\n  outputs: [{\n    type: 'string',\n    name: 'resolvedName'\n  }, {\n    type: 'address',\n    name: 'resolvedAddress'\n  }, {\n    type: 'address',\n    name: 'reverseResolver'\n  }, {\n    type: 'address',\n    name: 'resolver'\n  }]\n}];\nexport const textResolverAbi = [{\n  name: 'text',\n  type: 'function',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'name',\n    type: 'bytes32'\n  }, {\n    name: 'key',\n    type: 'string'\n  }],\n  outputs: [{\n    name: '',\n    type: 'string'\n  }]\n}];\nexport const addressResolverAbi = [{\n  name: 'addr',\n  type: 'function',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'name',\n    type: 'bytes32'\n  }],\n  outputs: [{\n    name: '',\n    type: 'address'\n  }]\n}, {\n  name: 'addr',\n  type: 'function',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'name',\n    type: 'bytes32'\n  }, {\n    name: 'coinType',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bytes'\n  }]\n}];\n// ERC-1271\n// isValidSignature(bytes32 hash, bytes signature) → bytes4 magicValue\n/** @internal */\nexport const smartAccountAbi = [{\n  name: 'isValidSignature',\n  type: 'function',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'hash',\n    type: 'bytes32'\n  }, {\n    name: 'signature',\n    type: 'bytes'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bytes4'\n  }]\n}];\n// ERC-6492 - universal deployless signature validator contract\n// constructor(address _signer, bytes32 _hash, bytes _signature) → bytes4 returnValue\n// returnValue is either 0x1 (valid) or 0x0 (invalid)\nexport const universalSignatureValidatorAbi = [{\n  inputs: [{\n    name: '_signer',\n    type: 'address'\n  }, {\n    name: '_hash',\n    type: 'bytes32'\n  }, {\n    name: '_signature',\n    type: 'bytes'\n  }],\n  stateMutability: 'nonpayable',\n  type: 'constructor'\n}, {\n  inputs: [{\n    name: '_signer',\n    type: 'address'\n  }, {\n    name: '_hash',\n    type: 'bytes32'\n  }, {\n    name: '_signature',\n    type: 'bytes'\n  }],\n  outputs: [{\n    type: 'bool'\n  }],\n  stateMutability: 'nonpayable',\n  type: 'function',\n  name: 'isValidSig'\n}];\n/** [ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20) */\nexport const erc20Abi = [{\n  type: 'event',\n  name: 'Approval',\n  inputs: [{\n    indexed: true,\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'spender',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }]\n}, {\n  type: 'event',\n  name: 'Transfer',\n  inputs: [{\n    indexed: true,\n    name: 'from',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'to',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'allowance',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'owner',\n    type: 'address'\n  }, {\n    name: 'spender',\n    type: 'address'\n  }],\n  outputs: [{\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'approve',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'spender',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  outputs: [{\n    type: 'bool'\n  }]\n}, {\n  type: 'function',\n  name: 'balanceOf',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'account',\n    type: 'address'\n  }],\n  outputs: [{\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'decimals',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    type: 'uint8'\n  }]\n}, {\n  type: 'function',\n  name: 'name',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    type: 'string'\n  }]\n}, {\n  type: 'function',\n  name: 'symbol',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    type: 'string'\n  }]\n}, {\n  type: 'function',\n  name: 'totalSupply',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'transfer',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'recipient',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  outputs: [{\n    type: 'bool'\n  }]\n}, {\n  type: 'function',\n  name: 'transferFrom',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'sender',\n    type: 'address'\n  }, {\n    name: 'recipient',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  outputs: [{\n    type: 'bool'\n  }]\n}];\n/**\n * [bytes32-flavored ERC-20](https://docs.makerdao.com/smart-contract-modules/mkr-module#4.-gotchas-potential-source-of-user-error)\n * for tokens (ie. Maker) that use bytes32 instead of string.\n */\nexport const erc20Abi_bytes32 = [{\n  type: 'event',\n  name: 'Approval',\n  inputs: [{\n    indexed: true,\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'spender',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }]\n}, {\n  type: 'event',\n  name: 'Transfer',\n  inputs: [{\n    indexed: true,\n    name: 'from',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'to',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'allowance',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'owner',\n    type: 'address'\n  }, {\n    name: 'spender',\n    type: 'address'\n  }],\n  outputs: [{\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'approve',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'spender',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  outputs: [{\n    type: 'bool'\n  }]\n}, {\n  type: 'function',\n  name: 'balanceOf',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'account',\n    type: 'address'\n  }],\n  outputs: [{\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'decimals',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    type: 'uint8'\n  }]\n}, {\n  type: 'function',\n  name: 'name',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    type: 'bytes32'\n  }]\n}, {\n  type: 'function',\n  name: 'symbol',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    type: 'bytes32'\n  }]\n}, {\n  type: 'function',\n  name: 'totalSupply',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'transfer',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'recipient',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  outputs: [{\n    type: 'bool'\n  }]\n}, {\n  type: 'function',\n  name: 'transferFrom',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'sender',\n    type: 'address'\n  }, {\n    name: 'recipient',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  outputs: [{\n    type: 'bool'\n  }]\n}];\n/** [ERC-721 Non-Fungible Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-721) */\nexport const erc721Abi = [{\n  type: 'event',\n  name: 'Approval',\n  inputs: [{\n    indexed: true,\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'spender',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'tokenId',\n    type: 'uint256'\n  }]\n}, {\n  type: 'event',\n  name: 'ApprovalForAll',\n  inputs: [{\n    indexed: true,\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'operator',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'approved',\n    type: 'bool'\n  }]\n}, {\n  type: 'event',\n  name: 'Transfer',\n  inputs: [{\n    indexed: true,\n    name: 'from',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'to',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'tokenId',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'approve',\n  stateMutability: 'payable',\n  inputs: [{\n    name: 'spender',\n    type: 'address'\n  }, {\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  outputs: []\n}, {\n  type: 'function',\n  name: 'balanceOf',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'account',\n    type: 'address'\n  }],\n  outputs: [{\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'getApproved',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  outputs: [{\n    type: 'address'\n  }]\n}, {\n  type: 'function',\n  name: 'isApprovedForAll',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'owner',\n    type: 'address'\n  }, {\n    name: 'operator',\n    type: 'address'\n  }],\n  outputs: [{\n    type: 'bool'\n  }]\n}, {\n  type: 'function',\n  name: 'name',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    type: 'string'\n  }]\n}, {\n  type: 'function',\n  name: 'ownerOf',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: 'owner',\n    type: 'address'\n  }]\n}, {\n  type: 'function',\n  name: 'safeTransferFrom',\n  stateMutability: 'payable',\n  inputs: [{\n    name: 'from',\n    type: 'address'\n  }, {\n    name: 'to',\n    type: 'address'\n  }, {\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  outputs: []\n}, {\n  type: 'function',\n  name: 'safeTransferFrom',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'from',\n    type: 'address'\n  }, {\n    name: 'to',\n    type: 'address'\n  }, {\n    name: 'id',\n    type: 'uint256'\n  }, {\n    name: 'data',\n    type: 'bytes'\n  }],\n  outputs: []\n}, {\n  type: 'function',\n  name: 'setApprovalForAll',\n  stateMutability: 'nonpayable',\n  inputs: [{\n    name: 'operator',\n    type: 'address'\n  }, {\n    name: 'approved',\n    type: 'bool'\n  }],\n  outputs: []\n}, {\n  type: 'function',\n  name: 'symbol',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    type: 'string'\n  }]\n}, {\n  type: 'function',\n  name: 'tokenByIndex',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'index',\n    type: 'uint256'\n  }],\n  outputs: [{\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'tokenByIndex',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'owner',\n    type: 'address'\n  }, {\n    name: 'index',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: 'tokenId',\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'tokenURI',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'tokenId',\n    type: 'uint256'\n  }],\n  outputs: [{\n    type: 'string'\n  }]\n}, {\n  type: 'function',\n  name: 'totalSupply',\n  stateMutability: 'view',\n  inputs: [],\n  outputs: [{\n    type: 'uint256'\n  }]\n}, {\n  type: 'function',\n  name: 'transferFrom',\n  stateMutability: 'payable',\n  inputs: [{\n    name: 'sender',\n    type: 'address'\n  }, {\n    name: 'recipient',\n    type: 'address'\n  }, {\n    name: 'tokeId',\n    type: 'uint256'\n  }],\n  outputs: []\n}];\n/** [ERC-4626 Tokenized Vaults Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-4626) */\nexport const erc4626Abi = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'spender',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }],\n  name: 'Approval',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: 'sender',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'receiver',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'assets',\n    type: 'uint256'\n  }, {\n    indexed: false,\n    name: 'shares',\n    type: 'uint256'\n  }],\n  name: 'Deposit',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: 'from',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'to',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'value',\n    type: 'uint256'\n  }],\n  name: 'Transfer',\n  type: 'event'\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: 'sender',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'receiver',\n    type: 'address'\n  }, {\n    indexed: true,\n    name: 'owner',\n    type: 'address'\n  }, {\n    indexed: false,\n    name: 'assets',\n    type: 'uint256'\n  }, {\n    indexed: false,\n    name: 'shares',\n    type: 'uint256'\n  }],\n  name: 'Withdraw',\n  type: 'event'\n}, {\n  inputs: [{\n    name: 'owner',\n    type: 'address'\n  }, {\n    name: 'spender',\n    type: 'address'\n  }],\n  name: 'allowance',\n  outputs: [{\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'spender',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  name: 'approve',\n  outputs: [{\n    type: 'bool'\n  }],\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  inputs: [],\n  name: 'asset',\n  outputs: [{\n    name: 'assetTokenAddress',\n    type: 'address'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'account',\n    type: 'address'\n  }],\n  name: 'balanceOf',\n  outputs: [{\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'shares',\n    type: 'uint256'\n  }],\n  name: 'convertToAssets',\n  outputs: [{\n    name: 'assets',\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'assets',\n    type: 'uint256'\n  }],\n  name: 'convertToShares',\n  outputs: [{\n    name: 'shares',\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'assets',\n    type: 'uint256'\n  }, {\n    name: 'receiver',\n    type: 'address'\n  }],\n  name: 'deposit',\n  outputs: [{\n    name: 'shares',\n    type: 'uint256'\n  }],\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'caller',\n    type: 'address'\n  }],\n  name: 'maxDeposit',\n  outputs: [{\n    name: 'maxAssets',\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'caller',\n    type: 'address'\n  }],\n  name: 'maxMint',\n  outputs: [{\n    name: 'maxShares',\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'owner',\n    type: 'address'\n  }],\n  name: 'maxRedeem',\n  outputs: [{\n    name: 'maxShares',\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'owner',\n    type: 'address'\n  }],\n  name: 'maxWithdraw',\n  outputs: [{\n    name: 'maxAssets',\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'shares',\n    type: 'uint256'\n  }, {\n    name: 'receiver',\n    type: 'address'\n  }],\n  name: 'mint',\n  outputs: [{\n    name: 'assets',\n    type: 'uint256'\n  }],\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'assets',\n    type: 'uint256'\n  }],\n  name: 'previewDeposit',\n  outputs: [{\n    name: 'shares',\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'shares',\n    type: 'uint256'\n  }],\n  name: 'previewMint',\n  outputs: [{\n    name: 'assets',\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'shares',\n    type: 'uint256'\n  }],\n  name: 'previewRedeem',\n  outputs: [{\n    name: 'assets',\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'assets',\n    type: 'uint256'\n  }],\n  name: 'previewWithdraw',\n  outputs: [{\n    name: 'shares',\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'shares',\n    type: 'uint256'\n  }, {\n    name: 'receiver',\n    type: 'address'\n  }, {\n    name: 'owner',\n    type: 'address'\n  }],\n  name: 'redeem',\n  outputs: [{\n    name: 'assets',\n    type: 'uint256'\n  }],\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  inputs: [],\n  name: 'totalAssets',\n  outputs: [{\n    name: 'totalManagedAssets',\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [],\n  name: 'totalSupply',\n  outputs: [{\n    type: 'uint256'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'to',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  name: 'transfer',\n  outputs: [{\n    type: 'bool'\n  }],\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'from',\n    type: 'address'\n  }, {\n    name: 'to',\n    type: 'address'\n  }, {\n    name: 'amount',\n    type: 'uint256'\n  }],\n  name: 'transferFrom',\n  outputs: [{\n    type: 'bool'\n  }],\n  stateMutability: 'nonpayable',\n  type: 'function'\n}, {\n  inputs: [{\n    name: 'assets',\n    type: 'uint256'\n  }, {\n    name: 'receiver',\n    type: 'address'\n  }, {\n    name: 'owner',\n    type: 'address'\n  }],\n  name: 'withdraw',\n  outputs: [{\n    name: 'shares',\n    type: 'uint256'\n  }],\n  stateMutability: 'nonpayable',\n  type: 'function'\n}];\n//# sourceMappingURL=abis.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}