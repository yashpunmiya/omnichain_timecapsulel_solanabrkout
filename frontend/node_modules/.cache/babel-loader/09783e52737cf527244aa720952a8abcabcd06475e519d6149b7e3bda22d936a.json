{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PublicKey = exports.GetPublicKey = exports.GetAddress = exports.DerivationPath = exports.Bundle = void 0;\nconst schema_utils_1 = require(\"@trezor/schema-utils\");\nconst Bundle = type => schema_utils_1.Type.Object({\n  bundle: schema_utils_1.Type.Array(type, {\n    minItems: 1\n  })\n});\nexports.Bundle = Bundle;\nexports.DerivationPath = schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Array(schema_utils_1.Type.Number())], {\n  description: 'Derivation Path (BIP32).',\n  $id: 'DerivationPath'\n});\nexports.GetAddress = schema_utils_1.Type.Object({\n  path: exports.DerivationPath,\n  address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  showOnTrezor: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean({\n    default: true\n  })),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  useEventListener: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n});\nexports.GetPublicKey = schema_utils_1.Type.Object({\n  path: exports.DerivationPath,\n  showOnTrezor: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  suppressBackupWarning: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n});\nexports.PublicKey = schema_utils_1.Type.Object({\n  publicKey: schema_utils_1.Type.String(),\n  path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  serializedPath: schema_utils_1.Type.String()\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","PublicKey","GetPublicKey","GetAddress","DerivationPath","Bundle","schema_utils_1","require","type","Type","bundle","Array","minItems","Union","String","Number","description","$id","path","address","Optional","showOnTrezor","Boolean","default","chunkify","useEventListener","suppressBackupWarning","publicKey","serializedPath"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@trezor/connect/lib/types/params.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PublicKey = exports.GetPublicKey = exports.GetAddress = exports.DerivationPath = exports.Bundle = void 0;\nconst schema_utils_1 = require(\"@trezor/schema-utils\");\nconst Bundle = (type) => schema_utils_1.Type.Object({ bundle: schema_utils_1.Type.Array(type, { minItems: 1 }) });\nexports.Bundle = Bundle;\nexports.DerivationPath = schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Array(schema_utils_1.Type.Number())], {\n    description: 'Derivation Path (BIP32).',\n    $id: 'DerivationPath',\n});\nexports.GetAddress = schema_utils_1.Type.Object({\n    path: exports.DerivationPath,\n    address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    showOnTrezor: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean({ default: true })),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    useEventListener: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.GetPublicKey = schema_utils_1.Type.Object({\n    path: exports.DerivationPath,\n    showOnTrezor: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    suppressBackupWarning: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n});\nexports.PublicKey = schema_utils_1.Type.Object({\n    publicKey: schema_utils_1.Type.String(),\n    path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    serializedPath: schema_utils_1.Type.String(),\n});\n//# sourceMappingURL=params.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,SAAS,GAAGF,OAAO,CAACG,YAAY,GAAGH,OAAO,CAACI,UAAU,GAAGJ,OAAO,CAACK,cAAc,GAAGL,OAAO,CAACM,MAAM,GAAG,KAAK,CAAC;AAChH,MAAMC,cAAc,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AACtD,MAAMF,MAAM,GAAIG,IAAI,IAAKF,cAAc,CAACG,IAAI,CAACZ,MAAM,CAAC;EAAEa,MAAM,EAAEJ,cAAc,CAACG,IAAI,CAACE,KAAK,CAACH,IAAI,EAAE;IAAEI,QAAQ,EAAE;EAAE,CAAC;AAAE,CAAC,CAAC;AACjHb,OAAO,CAACM,MAAM,GAAGA,MAAM;AACvBN,OAAO,CAACK,cAAc,GAAGE,cAAc,CAACG,IAAI,CAACI,KAAK,CAAC,CAACP,cAAc,CAACG,IAAI,CAACK,MAAM,CAAC,CAAC,EAAER,cAAc,CAACG,IAAI,CAACE,KAAK,CAACL,cAAc,CAACG,IAAI,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;EACxIC,WAAW,EAAE,0BAA0B;EACvCC,GAAG,EAAE;AACT,CAAC,CAAC;AACFlB,OAAO,CAACI,UAAU,GAAGG,cAAc,CAACG,IAAI,CAACZ,MAAM,CAAC;EAC5CqB,IAAI,EAAEnB,OAAO,CAACK,cAAc;EAC5Be,OAAO,EAAEb,cAAc,CAACG,IAAI,CAACW,QAAQ,CAACd,cAAc,CAACG,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC;EACnEO,YAAY,EAAEf,cAAc,CAACG,IAAI,CAACW,QAAQ,CAACd,cAAc,CAACG,IAAI,CAACa,OAAO,CAAC;IAAEC,OAAO,EAAE;EAAK,CAAC,CAAC,CAAC;EAC1FC,QAAQ,EAAElB,cAAc,CAACG,IAAI,CAACW,QAAQ,CAACd,cAAc,CAACG,IAAI,CAACa,OAAO,CAAC,CAAC,CAAC;EACrEG,gBAAgB,EAAEnB,cAAc,CAACG,IAAI,CAACW,QAAQ,CAACd,cAAc,CAACG,IAAI,CAACa,OAAO,CAAC,CAAC;AAChF,CAAC,CAAC;AACFvB,OAAO,CAACG,YAAY,GAAGI,cAAc,CAACG,IAAI,CAACZ,MAAM,CAAC;EAC9CqB,IAAI,EAAEnB,OAAO,CAACK,cAAc;EAC5BiB,YAAY,EAAEf,cAAc,CAACG,IAAI,CAACW,QAAQ,CAACd,cAAc,CAACG,IAAI,CAACa,OAAO,CAAC,CAAC,CAAC;EACzEI,qBAAqB,EAAEpB,cAAc,CAACG,IAAI,CAACW,QAAQ,CAACd,cAAc,CAACG,IAAI,CAACa,OAAO,CAAC,CAAC,CAAC;EAClFE,QAAQ,EAAElB,cAAc,CAACG,IAAI,CAACW,QAAQ,CAACd,cAAc,CAACG,IAAI,CAACa,OAAO,CAAC,CAAC;AACxE,CAAC,CAAC;AACFvB,OAAO,CAACE,SAAS,GAAGK,cAAc,CAACG,IAAI,CAACZ,MAAM,CAAC;EAC3C8B,SAAS,EAAErB,cAAc,CAACG,IAAI,CAACK,MAAM,CAAC,CAAC;EACvCI,IAAI,EAAEZ,cAAc,CAACG,IAAI,CAACE,KAAK,CAACL,cAAc,CAACG,IAAI,CAACM,MAAM,CAAC,CAAC,CAAC;EAC7Da,cAAc,EAAEtB,cAAc,CAACG,IAAI,CAACK,MAAM,CAAC;AAC/C,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}