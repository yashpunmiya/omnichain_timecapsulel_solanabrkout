{"ast":null,"code":"import { hexToNumber } from '../../utils/encoding/fromHex.js';\n/**\n * Returns a summary of all the transactions currently pending for inclusion in the next block(s), as well as the ones that are being scheduled for future execution only.\n *\n * - Docs: https://viem.sh/docs/actions/test/getTxpoolStatus\n *\n * @param client - Client to use\n * @returns Transaction pool status. {@link GetTxpoolStatusReturnType}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { getTxpoolStatus } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * const status = await getTxpoolStatus(client)\n */\nexport async function getTxpoolStatus(client) {\n  const {\n    pending,\n    queued\n  } = await client.request({\n    method: 'txpool_status'\n  });\n  return {\n    pending: hexToNumber(pending),\n    queued: hexToNumber(queued)\n  };\n}\n//# sourceMappingURL=getTxpoolStatus.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}