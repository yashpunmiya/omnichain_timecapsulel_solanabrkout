{"ast":null,"code":"import { parseAccount } from '../../accounts/utils/parseAccount.js';\nimport { maxUint256 } from '../../constants/number.js';\nimport { InvalidAddressError } from '../../errors/address.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError } from '../../errors/node.js';\nimport { FeeConflictError } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\nexport function assertRequest(args) {\n  const {\n    account: account_,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to\n  } = args;\n  const account = account_ ? parseAccount(account_) : undefined;\n  if (account && !isAddress(account.address)) throw new InvalidAddressError({\n    address: account.address\n  });\n  if (to && !isAddress(to)) throw new InvalidAddressError({\n    address: to\n  });\n  if (typeof gasPrice !== 'undefined' && (typeof maxFeePerGas !== 'undefined' || typeof maxPriorityFeePerGas !== 'undefined')) throw new FeeConflictError();\n  if (maxFeePerGas && maxFeePerGas > maxUint256) throw new FeeCapTooHighError({\n    maxFeePerGas\n  });\n  if (maxPriorityFeePerGas && maxFeePerGas && maxPriorityFeePerGas > maxFeePerGas) throw new TipAboveFeeCapError({\n    maxFeePerGas,\n    maxPriorityFeePerGas\n  });\n}\n//# sourceMappingURL=assertRequest.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}