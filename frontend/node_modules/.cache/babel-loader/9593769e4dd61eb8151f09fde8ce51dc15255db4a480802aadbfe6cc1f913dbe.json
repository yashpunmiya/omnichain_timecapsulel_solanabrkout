{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { state } from 'lit/decorators.js';\nimport { ConnectionController, CoreHelperUtil, EventsController } from '@reown/appkit-controllers';\nimport { customElement } from '@reown/appkit-ui';\nimport { W3mConnectingWidget } from '../../utils/w3m-connecting-widget/index.js';\nlet W3mConnectingWcWeb = class W3mConnectingWcWeb extends W3mConnectingWidget {\n  constructor() {\n    super();\n    this.isLoading = true;\n    if (!this.wallet) {\n      throw new Error('w3m-connecting-wc-web: No wallet provided');\n    }\n    this.onConnect = this.onConnectProxy.bind(this);\n    this.secondaryBtnLabel = 'Open';\n    this.secondaryLabel = 'Open and continue in a new browser tab';\n    this.secondaryBtnIcon = 'externalLink';\n    this.updateLoadingState();\n    this.unsubscribe.push(ConnectionController.subscribeKey('wcUri', () => {\n      this.updateLoadingState();\n    }));\n    EventsController.sendEvent({\n      type: 'track',\n      event: 'SELECT_WALLET',\n      properties: {\n        name: this.wallet.name,\n        platform: 'web'\n      }\n    });\n  }\n  updateLoadingState() {\n    this.isLoading = !this.uri;\n  }\n  onConnectProxy() {\n    if (this.wallet?.webapp_link && this.uri) {\n      try {\n        this.error = false;\n        const {\n          webapp_link,\n          name\n        } = this.wallet;\n        const {\n          redirect,\n          href\n        } = CoreHelperUtil.formatUniversalUrl(webapp_link, this.uri);\n        ConnectionController.setWcLinking({\n          name,\n          href\n        });\n        ConnectionController.setRecentWallet(this.wallet);\n        CoreHelperUtil.openHref(redirect, '_blank');\n      } catch {\n        this.error = true;\n      }\n    }\n  }\n};\n__decorate([state()], W3mConnectingWcWeb.prototype, \"isLoading\", void 0);\nW3mConnectingWcWeb = __decorate([customElement('w3m-connecting-wc-web')], W3mConnectingWcWeb);\nexport { W3mConnectingWcWeb };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}