{"ast":null,"code":"import { BaseError } from './base.js';\nexport class BlockNotFoundError extends BaseError {\n  constructor({\n    blockHash,\n    blockNumber\n  }) {\n    let identifier = 'Block';\n    if (blockHash) identifier = `Block at hash \"${blockHash}\"`;\n    if (blockNumber) identifier = `Block at number \"${blockNumber}\"`;\n    super(`${identifier} could not be found.`, {\n      name: 'BlockNotFoundError'\n    });\n  }\n}","map":{"version":3,"names":["BaseError","BlockNotFoundError","constructor","blockHash","blockNumber","identifier","name"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@reown\\appkit-controllers\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\errors\\block.ts"],"sourcesContent":["import type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlockNotFoundErrorType = BlockNotFoundError & {\n  name: 'BlockNotFoundError'\n}\nexport class BlockNotFoundError extends BaseError {\n  constructor({\n    blockHash,\n    blockNumber,\n  }: {\n    blockHash?: Hash | undefined\n    blockNumber?: bigint | undefined\n  }) {\n    let identifier = 'Block'\n    if (blockHash) identifier = `Block at hash \"${blockHash}\"`\n    if (blockNumber) identifier = `Block at number \"${blockNumber}\"`\n    super(`${identifier} could not be found.`, { name: 'BlockNotFoundError' })\n  }\n}\n"],"mappings":"AAEA,SAASA,SAAS,QAAQ,WAAW;AAKrC,OAAM,MAAOC,kBAAmB,SAAQD,SAAS;EAC/CE,YAAY;IACVC,SAAS;IACTC;EAAW,CAIZ;IACC,IAAIC,UAAU,GAAG,OAAO;IACxB,IAAIF,SAAS,EAAEE,UAAU,GAAG,kBAAkBF,SAAS,GAAG;IAC1D,IAAIC,WAAW,EAAEC,UAAU,GAAG,oBAAoBD,WAAW,GAAG;IAChE,KAAK,CAAC,GAAGC,UAAU,sBAAsB,EAAE;MAAEC,IAAI,EAAE;IAAoB,CAAE,CAAC;EAC5E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}