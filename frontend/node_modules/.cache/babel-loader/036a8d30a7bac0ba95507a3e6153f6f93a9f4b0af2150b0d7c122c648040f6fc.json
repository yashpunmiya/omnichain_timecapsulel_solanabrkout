{"ast":null,"code":"import { proxy, snapshot } from 'valtio/vanilla';\nimport { subscribeKey as subKey } from 'valtio/vanilla/utils';\nimport { ConstantsUtil } from '../utils/ConstantsUtil.js';\nimport { OptionsUtil } from '../utils/OptionsUtil.js';\n// -- State --------------------------------------------- //\nconst state = proxy({\n  features: ConstantsUtil.DEFAULT_FEATURES,\n  projectId: '',\n  sdkType: 'appkit',\n  sdkVersion: 'html-wagmi-undefined',\n  defaultAccountTypes: ConstantsUtil.DEFAULT_ACCOUNT_TYPES,\n  enableNetworkSwitch: true\n});\n// -- Controller ---------------------------------------- //\nexport const OptionsController = {\n  state,\n  subscribeKey(key, callback) {\n    return subKey(state, key, callback);\n  },\n  setOptions(options) {\n    Object.assign(state, options);\n  },\n  setFeatures(features) {\n    if (!features) {\n      return;\n    }\n    if (!state.features) {\n      state.features = ConstantsUtil.DEFAULT_FEATURES;\n    }\n    const newFeatures = {\n      ...state.features,\n      ...features\n    };\n    state.features = newFeatures;\n    if (state.features.socials) {\n      state.features.socials = OptionsUtil.filterSocialsByPlatform(state.features.socials);\n    }\n  },\n  setProjectId(projectId) {\n    state.projectId = projectId;\n  },\n  setCustomRpcUrls(customRpcUrls) {\n    state.customRpcUrls = customRpcUrls;\n  },\n  setAllWallets(allWallets) {\n    state.allWallets = allWallets;\n  },\n  setIncludeWalletIds(includeWalletIds) {\n    state.includeWalletIds = includeWalletIds;\n  },\n  setExcludeWalletIds(excludeWalletIds) {\n    state.excludeWalletIds = excludeWalletIds;\n  },\n  setFeaturedWalletIds(featuredWalletIds) {\n    state.featuredWalletIds = featuredWalletIds;\n  },\n  setTokens(tokens) {\n    state.tokens = tokens;\n  },\n  setTermsConditionsUrl(termsConditionsUrl) {\n    state.termsConditionsUrl = termsConditionsUrl;\n  },\n  setPrivacyPolicyUrl(privacyPolicyUrl) {\n    state.privacyPolicyUrl = privacyPolicyUrl;\n  },\n  setCustomWallets(customWallets) {\n    state.customWallets = customWallets;\n  },\n  setIsSiweEnabled(isSiweEnabled) {\n    state.isSiweEnabled = isSiweEnabled;\n  },\n  setIsUniversalProvider(isUniversalProvider) {\n    state.isUniversalProvider = isUniversalProvider;\n  },\n  setSdkVersion(sdkVersion) {\n    state.sdkVersion = sdkVersion;\n  },\n  setMetadata(metadata) {\n    state.metadata = metadata;\n  },\n  setDisableAppend(disableAppend) {\n    state.disableAppend = disableAppend;\n  },\n  setEIP6963Enabled(enableEIP6963) {\n    state.enableEIP6963 = enableEIP6963;\n  },\n  setDebug(debug) {\n    state.debug = debug;\n  },\n  setEnableWalletConnect(enableWalletConnect) {\n    state.enableWalletConnect = enableWalletConnect;\n  },\n  setEnableWalletGuide(enableWalletGuide) {\n    state.enableWalletGuide = enableWalletGuide;\n  },\n  setEnableAuthLogger(enableAuthLogger) {\n    state.enableAuthLogger = enableAuthLogger;\n  },\n  setEnableWallets(enableWallets) {\n    state.enableWallets = enableWallets;\n  },\n  setHasMultipleAddresses(hasMultipleAddresses) {\n    state.hasMultipleAddresses = hasMultipleAddresses;\n  },\n  setSIWX(siwx) {\n    state.siwx = siwx;\n  },\n  setConnectMethodsOrder(connectMethodsOrder) {\n    state.features = {\n      ...state.features,\n      connectMethodsOrder\n    };\n  },\n  setWalletFeaturesOrder(walletFeaturesOrder) {\n    state.features = {\n      ...state.features,\n      walletFeaturesOrder\n    };\n  },\n  setSocialsOrder(socialsOrder) {\n    state.features = {\n      ...state.features,\n      socials: socialsOrder\n    };\n  },\n  setCollapseWallets(collapseWallets) {\n    state.features = {\n      ...state.features,\n      collapseWallets\n    };\n  },\n  setEnableEmbedded(enableEmbedded) {\n    state.enableEmbedded = enableEmbedded;\n  },\n  setAllowUnsupportedChain(allowUnsupportedChain) {\n    state.allowUnsupportedChain = allowUnsupportedChain;\n  },\n  setManualWCControl(manualWCControl) {\n    state.manualWCControl = manualWCControl;\n  },\n  setEnableNetworkSwitch(enableNetworkSwitch) {\n    state.enableNetworkSwitch = enableNetworkSwitch;\n  },\n  setDefaultAccountTypes(defaultAccountType = {}) {\n    Object.entries(defaultAccountType).forEach(([namespace, accountType]) => {\n      if (accountType) {\n        // @ts-expect-error - Keys are validated by the param type\n        state.defaultAccountTypes[namespace] = accountType;\n      }\n    });\n  },\n  setUniversalProviderConfigOverride(universalProviderConfigOverride) {\n    state.universalProviderConfigOverride = universalProviderConfigOverride;\n  },\n  getUniversalProviderConfigOverride() {\n    return state.universalProviderConfigOverride;\n  },\n  getSnapshot() {\n    return snapshot(state);\n  }\n};","map":{"version":3,"names":["proxy","snapshot","subscribeKey","subKey","ConstantsUtil","OptionsUtil","state","features","DEFAULT_FEATURES","projectId","sdkType","sdkVersion","defaultAccountTypes","DEFAULT_ACCOUNT_TYPES","enableNetworkSwitch","OptionsController","key","callback","setOptions","options","Object","assign","setFeatures","newFeatures","socials","filterSocialsByPlatform","setProjectId","setCustomRpcUrls","customRpcUrls","setAllWallets","allWallets","setIncludeWalletIds","includeWalletIds","setExcludeWalletIds","excludeWalletIds","setFeaturedWalletIds","featuredWalletIds","setTokens","tokens","setTermsConditionsUrl","termsConditionsUrl","setPrivacyPolicyUrl","privacyPolicyUrl","setCustomWallets","customWallets","setIsSiweEnabled","isSiweEnabled","setIsUniversalProvider","isUniversalProvider","setSdkVersion","setMetadata","metadata","setDisableAppend","disableAppend","setEIP6963Enabled","enableEIP6963","setDebug","debug","setEnableWalletConnect","enableWalletConnect","setEnableWalletGuide","enableWalletGuide","setEnableAuthLogger","enableAuthLogger","setEnableWallets","enableWallets","setHasMultipleAddresses","hasMultipleAddresses","setSIWX","siwx","setConnectMethodsOrder","connectMethodsOrder","setWalletFeaturesOrder","walletFeaturesOrder","setSocialsOrder","socialsOrder","setCollapseWallets","collapseWallets","setEnableEmbedded","enableEmbedded","setAllowUnsupportedChain","allowUnsupportedChain","setManualWCControl","manualWCControl","setEnableNetworkSwitch","setDefaultAccountTypes","defaultAccountType","entries","forEach","namespace","accountType","setUniversalProviderConfigOverride","universalProviderConfigOverride","getUniversalProviderConfigOverride","getSnapshot"],"sources":["../../../../src/controllers/OptionsController.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}