{"ast":null,"code":"import { hashMessage } from './hashMessage.js';\nimport { recoverAddress } from './recoverAddress.js';\nexport async function recoverMessageAddress({\n  message,\n  signature\n}) {\n  return recoverAddress({\n    hash: hashMessage(message),\n    signature\n  });\n}","map":{"version":3,"names":["hashMessage","recoverAddress","recoverMessageAddress","message","signature","hash"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@reown\\appkit-controllers\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\utils\\signature\\recoverMessageAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type {\n  ByteArray,\n  Hex,\n  SignableMessage,\n  Signature,\n} from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type HashMessageErrorType, hashMessage } from './hashMessage.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from './recoverAddress.js'\n\nexport type RecoverMessageAddressParameters = {\n  message: SignableMessage\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverMessageAddressReturnType = Address\n\nexport type RecoverMessageAddressErrorType =\n  | HashMessageErrorType\n  | RecoverAddressErrorType\n  | ErrorType\n\nexport async function recoverMessageAddress({\n  message,\n  signature,\n}: RecoverMessageAddressParameters): Promise<RecoverMessageAddressReturnType> {\n  return recoverAddress({ hash: hashMessage(message), signature })\n}\n"],"mappings":"AAUA,SAAoCA,WAAW,QAAQ,kBAAkB;AACzE,SAEEC,cAAc,QACT,qBAAqB;AAc5B,OAAO,eAAeC,qBAAqBA,CAAC;EAC1CC,OAAO;EACPC;AAAS,CACuB;EAChC,OAAOH,cAAc,CAAC;IAAEI,IAAI,EAAEL,WAAW,CAACG,OAAO,CAAC;IAAEC;EAAS,CAAE,CAAC;AAClE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}