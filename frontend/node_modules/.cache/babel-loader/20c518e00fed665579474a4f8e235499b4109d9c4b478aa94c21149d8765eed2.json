{"ast":null,"code":"/**\n * Retrieves and returns an action from the client (if exists), and falls\n * back to the tree-shakable action.\n *\n * Useful for extracting overridden actions from a client (ie. if a consumer\n * wants to override the `sendTransaction` implementation).\n */\nexport function getAction(client, actionFn,\n// Some minifiers drop `Function.prototype.name`, or replace it with short letters,\n// meaning that `actionFn.name` will not always work. For that case, the consumer\n// needs to pass the name explicitly.\nname) {\n  const action_implicit = client[actionFn.name];\n  if (typeof action_implicit === 'function') return action_implicit;\n  const action_explicit = client[name];\n  if (typeof action_explicit === 'function') return action_explicit;\n  return params => actionFn(client, params);\n}\n//# sourceMappingURL=getAction.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}