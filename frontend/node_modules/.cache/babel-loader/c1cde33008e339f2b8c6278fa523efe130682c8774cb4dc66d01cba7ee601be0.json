{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Partial = Partial;\nconst type_1 = require(\"../create/type\");\nconst index_1 = require(\"../optional/index\");\nconst index_2 = require(\"../object/index\");\nconst index_3 = require(\"../intersect/index\");\nconst index_4 = require(\"../union/index\");\nconst index_5 = require(\"../discard/index\");\nconst index_6 = require(\"../symbols/index\");\nconst partial_from_mapped_result_1 = require(\"./partial-from-mapped-result\");\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nconst kind_1 = require(\"../guard/kind\");\n// prettier-ignore\nfunction FromRest(T) {\n  return T.map(L => PartialResolve(L));\n}\n// prettier-ignore\nfunction FromProperties(T) {\n  const Acc = {};\n  for (const K of globalThis.Object.getOwnPropertyNames(T)) Acc[K] = (0, index_1.Optional)(T[K]);\n  return Acc;\n}\n// prettier-ignore\nfunction FromObject(T) {\n  const options = (0, index_5.Discard)(T, [index_6.TransformKind, '$id', 'required', 'properties']);\n  const properties = FromProperties(T['properties']);\n  return (0, index_2.Object)(properties, options);\n}\n// ------------------------------------------------------------------\n// PartialResolve\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction PartialResolve(T) {\n  return (0, kind_1.IsIntersect)(T) ? (0, index_3.Intersect)(FromRest(T.allOf)) : (0, kind_1.IsUnion)(T) ? (0, index_4.Union)(FromRest(T.anyOf)) : (0, kind_1.IsObject)(T) ? FromObject(T) : (0, index_2.Object)({});\n}\n/** `[Json]` Constructs a type where all properties are optional */\nfunction Partial(T, options) {\n  if ((0, kind_1.IsMappedResult)(T)) {\n    return (0, partial_from_mapped_result_1.PartialFromMappedResult)(T, options);\n  } else {\n    // special: mapping types require overridable options\n    return (0, type_1.CreateType)({\n      ...PartialResolve(T),\n      ...options\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}