{"ast":null,"code":"import { erc6492MagicBytes } from '../../constants/bytes.js';\nimport { sliceHex } from '../data/slice.js';\n/** Whether or not the signature is an ERC-6492 formatted signature. */\nexport function isErc6492Signature(signature) {\n  return sliceHex(signature, -32) === erc6492MagicBytes;\n}","map":{"version":3,"names":["erc6492MagicBytes","sliceHex","isErc6492Signature","signature"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@reown\\appkit-controllers\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\utils\\signature\\isErc6492Signature.ts"],"sourcesContent":["import { erc6492MagicBytes } from '../../constants/bytes.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type SliceHexErrorType, sliceHex } from '../data/slice.js'\n\nexport type IsErc6492SignatureParameters = Hex\nexport type IsErc6492SignatureReturnType = boolean\nexport type IsErc6492SignatureErrorType = SliceHexErrorType | ErrorType\n\n/** Whether or not the signature is an ERC-6492 formatted signature. */\nexport function isErc6492Signature(\n  signature: IsErc6492SignatureParameters,\n): IsErc6492SignatureReturnType {\n  return sliceHex(signature, -32) === erc6492MagicBytes\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,0BAA0B;AAG5D,SAAiCC,QAAQ,QAAQ,kBAAkB;AAMnE;AACA,OAAM,SAAUC,kBAAkBA,CAChCC,SAAuC;EAEvC,OAAOF,QAAQ,CAACE,SAAS,EAAE,CAAC,EAAE,CAAC,KAAKH,iBAAiB;AACvD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}