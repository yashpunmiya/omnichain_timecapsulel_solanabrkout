{"ast":null,"code":"import { estimateGas } from './actions/estimateGas.js';\nexport const chainConfig = {\n  fees: {\n    estimateFeesPerGas,\n    async maxPriorityFeePerGas({\n      block,\n      client,\n      request\n    }) {\n      const response = await estimateFeesPerGas({\n        block,\n        client,\n        multiply: x => x,\n        request,\n        type: 'eip1559'\n      });\n      // Returning `null` will trigger the base `estimateMaxPriorityFeePerGas` to perform\n      // fallback mechanisms to estimate priority fee.\n      if (!response?.maxPriorityFeePerGas) return null;\n      return response.maxPriorityFeePerGas;\n    }\n  }\n};\n///////////////////////////////////////////////////////////////////////////\n// Internal\n///////////////////////////////////////////////////////////////////////////\nasync function estimateFeesPerGas({\n  client,\n  multiply,\n  request,\n  type\n}) {\n  try {\n    const response = await estimateGas(client, {\n      ...request,\n      account: request?.account\n    });\n    const {\n      priorityFeePerGas: maxPriorityFeePerGas\n    } = response;\n    const baseFeePerGas = multiply(BigInt(response.baseFeePerGas));\n    const maxFeePerGas = baseFeePerGas + maxPriorityFeePerGas;\n    if (type === 'legacy') return {\n      gasPrice: maxFeePerGas\n    };\n    return {\n      maxFeePerGas,\n      maxPriorityFeePerGas\n    };\n  } catch {\n    // Returning `null` will trigger the base `estimateFeesPerGas` to perform\n    // fallback mechanisms to estimate fees.\n    return null;\n  }\n}","map":{"version":3,"names":["estimateGas","chainConfig","fees","estimateFeesPerGas","maxPriorityFeePerGas","block","client","request","response","multiply","x","type","account","priorityFeePerGas","baseFeePerGas","BigInt","maxFeePerGas","gasPrice"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\viem\\linea\\chainConfig.ts"],"sourcesContent":["import type { ChainConfig, ChainEstimateFeesPerGasFn } from '../types/chain.js'\nimport { estimateGas } from './actions/estimateGas.js'\n\nexport const chainConfig = {\n  fees: {\n    estimateFeesPerGas,\n    async maxPriorityFeePerGas({ block, client, request }) {\n      const response = await estimateFeesPerGas({\n        block,\n        client,\n        multiply: (x) => x,\n        request,\n        type: 'eip1559',\n      })\n      // Returning `null` will trigger the base `estimateMaxPriorityFeePerGas` to perform\n      // fallback mechanisms to estimate priority fee.\n      if (!response?.maxPriorityFeePerGas) return null\n      return response.maxPriorityFeePerGas\n    },\n  },\n} as const satisfies ChainConfig\n\n///////////////////////////////////////////////////////////////////////////\n// Internal\n///////////////////////////////////////////////////////////////////////////\n\nasync function estimateFeesPerGas({\n  client,\n  multiply,\n  request,\n  type,\n}: Parameters<ChainEstimateFeesPerGasFn>[0]): ReturnType<ChainEstimateFeesPerGasFn> {\n  try {\n    const response = await estimateGas(client, {\n      ...request,\n      account: request?.account!,\n    })\n    const { priorityFeePerGas: maxPriorityFeePerGas } = response\n\n    const baseFeePerGas = multiply(BigInt(response.baseFeePerGas))\n    const maxFeePerGas = baseFeePerGas + maxPriorityFeePerGas\n\n    if (type === 'legacy') return { gasPrice: maxFeePerGas }\n    return {\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n    }\n  } catch {\n    // Returning `null` will trigger the base `estimateFeesPerGas` to perform\n    // fallback mechanisms to estimate fees.\n    return null\n  }\n}\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,WAAW,GAAG;EACzBC,IAAI,EAAE;IACJC,kBAAkB;IAClB,MAAMC,oBAAoBA,CAAC;MAAEC,KAAK;MAAEC,MAAM;MAAEC;IAAO,CAAE;MACnD,MAAMC,QAAQ,GAAG,MAAML,kBAAkB,CAAC;QACxCE,KAAK;QACLC,MAAM;QACNG,QAAQ,EAAGC,CAAC,IAAKA,CAAC;QAClBH,OAAO;QACPI,IAAI,EAAE;OACP,CAAC;MACF;MACA;MACA,IAAI,CAACH,QAAQ,EAAEJ,oBAAoB,EAAE,OAAO,IAAI;MAChD,OAAOI,QAAQ,CAACJ,oBAAoB;IACtC;;CAE4B;AAEhC;AACA;AACA;AAEA,eAAeD,kBAAkBA,CAAC;EAChCG,MAAM;EACNG,QAAQ;EACRF,OAAO;EACPI;AAAI,CACqC;EACzC,IAAI;IACF,MAAMH,QAAQ,GAAG,MAAMR,WAAW,CAACM,MAAM,EAAE;MACzC,GAAGC,OAAO;MACVK,OAAO,EAAEL,OAAO,EAAEK;KACnB,CAAC;IACF,MAAM;MAAEC,iBAAiB,EAAET;IAAoB,CAAE,GAAGI,QAAQ;IAE5D,MAAMM,aAAa,GAAGL,QAAQ,CAACM,MAAM,CAACP,QAAQ,CAACM,aAAa,CAAC,CAAC;IAC9D,MAAME,YAAY,GAAGF,aAAa,GAAGV,oBAAoB;IAEzD,IAAIO,IAAI,KAAK,QAAQ,EAAE,OAAO;MAAEM,QAAQ,EAAED;IAAY,CAAE;IACxD,OAAO;MACLA,YAAY;MACZZ;KACD;EACH,CAAC,CAAC,MAAM;IACN;IACA;IACA,OAAO,IAAI;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}