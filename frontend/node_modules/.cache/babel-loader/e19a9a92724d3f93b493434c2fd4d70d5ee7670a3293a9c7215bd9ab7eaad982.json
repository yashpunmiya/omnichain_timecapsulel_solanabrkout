{"ast":null,"code":"export class Emitter {\n  on(eventName, callback) {\n    if (!Emitter.eventListeners.has(eventName)) {\n      Emitter.eventListeners.set(eventName, new Set());\n    }\n    Emitter.eventListeners.get(eventName)?.add(callback);\n  }\n  off(eventName, callback) {\n    const listeners = Emitter.eventListeners.get(eventName);\n    if (listeners) {\n      listeners.delete(callback);\n    }\n  }\n  emit(eventName, data) {\n    const listeners = Emitter.eventListeners.get(eventName);\n    if (listeners) {\n      listeners.forEach(callback => callback(data));\n    }\n  }\n  clear(eventName) {\n    Emitter.eventListeners.delete(eventName);\n  }\n  clearAll() {\n    Emitter.eventListeners.clear();\n  }\n}\nEmitter.eventListeners = new Map();\n//# sourceMappingURL=EmitterUtil.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}