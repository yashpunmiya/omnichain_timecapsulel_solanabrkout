{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Log = void 0;\nclass Log {\n  prefix;\n  enabled;\n  css = '';\n  messages;\n  logWriter;\n  MAX_ENTRIES = 100;\n  constructor(prefix, enabled, logWriter) {\n    this.prefix = prefix;\n    this.enabled = enabled;\n    this.messages = [];\n    if (logWriter) {\n      this.logWriter = logWriter;\n    }\n  }\n  setColors(colors) {\n    this.css = typeof window !== 'undefined' && colors[this.prefix] ? colors[this.prefix] : '';\n  }\n  addMessage({\n    level,\n    prefix,\n    timestamp\n  }, ...args) {\n    const message = {\n      level,\n      prefix,\n      css: this.css,\n      message: args,\n      timestamp: timestamp || Date.now()\n    };\n    this.messages.push(message);\n    if (this.logWriter) {\n      try {\n        this.logWriter.add(message);\n      } catch (err) {\n        console.error('There was an error adding log message', err, message);\n      }\n    }\n    if (this.messages.length > this.MAX_ENTRIES) {\n      this.messages.shift();\n    }\n  }\n  setWriter(logWriter) {\n    this.logWriter = logWriter;\n  }\n  log(...args) {\n    this.addMessage({\n      level: 'log',\n      prefix: this.prefix\n    }, ...args);\n    if (this.enabled) {\n      console.log(`%c${this.prefix}`, this.css, ...args);\n    }\n  }\n  error(...args) {\n    this.addMessage({\n      level: 'error',\n      prefix: this.prefix\n    }, ...args);\n    if (this.enabled) {\n      console.error(`%c${this.prefix}`, this.css, ...args);\n    }\n  }\n  info(...args) {\n    this.addMessage({\n      level: 'info',\n      prefix: this.prefix\n    }, ...args);\n    if (this.enabled) {\n      console.info(`%c${this.prefix}`, this.css, ...args);\n    }\n  }\n  warn(...args) {\n    this.addMessage({\n      level: 'warn',\n      prefix: this.prefix\n    }, ...args);\n    if (this.enabled) {\n      console.warn(`%c${this.prefix}`, this.css, ...args);\n    }\n  }\n  debug(...args) {\n    this.addMessage({\n      level: 'debug',\n      prefix: this.prefix\n    }, ...args);\n    if (this.enabled) {\n      if (this.css) {\n        console.log(`%c${this.prefix}`, this.css, ...args);\n      } else {\n        console.log(this.prefix, ...args);\n      }\n    }\n  }\n  getLog() {\n    return this.messages;\n  }\n}\nexports.Log = Log;\n//# sourceMappingURL=logs.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}