{"ast":null,"code":"import { ConstantsUtil as CommonConstantsUtil } from '@reown/appkit-common';\nimport { ChainController } from '../controllers/ChainController.js';\nimport { checkNamespaceConnectorId } from './ConnectorControllerUtil.js';\n/**\n * Returns the array of chains to disconnect from the connector with the given namespace.\n * If no namespace is provided, it returns all chains.\n * @param namespace - The namespace of the connector to disconnect from.\n * @returns An array of chains to disconnect.\n */\nexport function getChainsToDisconnect(namespace) {\n  const namespaces = Array.from(ChainController.state.chains.keys());\n  let chains = [];\n  if (namespace) {\n    chains.push([namespace, ChainController.state.chains.get(namespace)]);\n    if (checkNamespaceConnectorId(namespace, CommonConstantsUtil.CONNECTOR_ID.WALLET_CONNECT)) {\n      namespaces.forEach(ns => {\n        if (ns !== namespace && checkNamespaceConnectorId(ns, CommonConstantsUtil.CONNECTOR_ID.WALLET_CONNECT)) {\n          chains.push([ns, ChainController.state.chains.get(ns)]);\n        }\n      });\n    } else if (checkNamespaceConnectorId(namespace, CommonConstantsUtil.CONNECTOR_ID.AUTH)) {\n      namespaces.forEach(ns => {\n        if (ns !== namespace && checkNamespaceConnectorId(ns, CommonConstantsUtil.CONNECTOR_ID.AUTH)) {\n          chains.push([ns, ChainController.state.chains.get(ns)]);\n        }\n      });\n    }\n  } else {\n    chains = Array.from(ChainController.state.chains.entries());\n  }\n  return chains;\n}\n//# sourceMappingURL=ChainControllerUtil.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}