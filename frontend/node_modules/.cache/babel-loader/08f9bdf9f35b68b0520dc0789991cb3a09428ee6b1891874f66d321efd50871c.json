{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOnionDomain = exports.getHost = exports.getOrigin = void 0;\nconst utils_1 = require(\"@trezor/utils\");\nconst getOrigin = url => {\n  if (typeof url !== 'string') return 'unknown';\n  if (url.indexOf('file://') === 0) return 'file://';\n  const [origin] = url.match(/^https?:\\/\\/[^/]+/) ?? [];\n  return origin ?? 'unknown';\n};\nexports.getOrigin = getOrigin;\nconst getHost = url => {\n  if (typeof url !== 'string') return;\n  const [,, uri] = url.match(/^(https?):\\/\\/([^:/]+)?/i) ?? [];\n  if (uri) {\n    const parts = uri.split('.');\n    if (parts[parts.length - 1] === 'localhost') return 'localhost';\n    return parts.length > 2 ? parts.slice(parts.length - 2, parts.length).join('.') : uri;\n  }\n};\nexports.getHost = getHost;\nconst getOnionDomain = (url, dict) => {\n  if (Array.isArray(url)) return url.map(u => (0, utils_1.urlToOnion)(u, dict) ?? u);\n  if (typeof url === 'string') return (0, utils_1.urlToOnion)(url, dict) ?? url;\n  return url;\n};\nexports.getOnionDomain = getOnionDomain;","map":{"version":3,"names":["Object","defineProperty","exports","value","getOnionDomain","getHost","getOrigin","utils_1","require","url","indexOf","origin","match","uri","parts","split","length","slice","join","dict","Array","isArray","map","u","urlToOnion"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@trezor/connect/lib/utils/urlUtils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOnionDomain = exports.getHost = exports.getOrigin = void 0;\nconst utils_1 = require(\"@trezor/utils\");\nconst getOrigin = (url) => {\n    if (typeof url !== 'string')\n        return 'unknown';\n    if (url.indexOf('file://') === 0)\n        return 'file://';\n    const [origin] = url.match(/^https?:\\/\\/[^/]+/) ?? [];\n    return origin ?? 'unknown';\n};\nexports.getOrigin = getOrigin;\nconst getHost = (url) => {\n    if (typeof url !== 'string')\n        return;\n    const [, , uri] = url.match(/^(https?):\\/\\/([^:/]+)?/i) ?? [];\n    if (uri) {\n        const parts = uri.split('.');\n        if (parts[parts.length - 1] === 'localhost')\n            return 'localhost';\n        return parts.length > 2\n            ?\n                parts.slice(parts.length - 2, parts.length).join('.')\n            : uri;\n    }\n};\nexports.getHost = getHost;\nconst getOnionDomain = (url, dict) => {\n    if (Array.isArray(url))\n        return url.map(u => (0, utils_1.urlToOnion)(u, dict) ?? u);\n    if (typeof url === 'string')\n        return (0, utils_1.urlToOnion)(url, dict) ?? url;\n    return url;\n};\nexports.getOnionDomain = getOnionDomain;\n//# sourceMappingURL=urlUtils.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAGF,OAAO,CAACG,OAAO,GAAGH,OAAO,CAACI,SAAS,GAAG,KAAK,CAAC;AACrE,MAAMC,OAAO,GAAGC,OAAO,CAAC,eAAe,CAAC;AACxC,MAAMF,SAAS,GAAIG,GAAG,IAAK;EACvB,IAAI,OAAOA,GAAG,KAAK,QAAQ,EACvB,OAAO,SAAS;EACpB,IAAIA,GAAG,CAACC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAC5B,OAAO,SAAS;EACpB,MAAM,CAACC,MAAM,CAAC,GAAGF,GAAG,CAACG,KAAK,CAAC,mBAAmB,CAAC,IAAI,EAAE;EACrD,OAAOD,MAAM,IAAI,SAAS;AAC9B,CAAC;AACDT,OAAO,CAACI,SAAS,GAAGA,SAAS;AAC7B,MAAMD,OAAO,GAAII,GAAG,IAAK;EACrB,IAAI,OAAOA,GAAG,KAAK,QAAQ,EACvB;EACJ,MAAM,IAAKI,GAAG,CAAC,GAAGJ,GAAG,CAACG,KAAK,CAAC,0BAA0B,CAAC,IAAI,EAAE;EAC7D,IAAIC,GAAG,EAAE;IACL,MAAMC,KAAK,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;IAC5B,IAAID,KAAK,CAACA,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC,KAAK,WAAW,EACvC,OAAO,WAAW;IACtB,OAAOF,KAAK,CAACE,MAAM,GAAG,CAAC,GAEfF,KAAK,CAACG,KAAK,CAACH,KAAK,CAACE,MAAM,GAAG,CAAC,EAAEF,KAAK,CAACE,MAAM,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,GACvDL,GAAG;EACb;AACJ,CAAC;AACDX,OAAO,CAACG,OAAO,GAAGA,OAAO;AACzB,MAAMD,cAAc,GAAGA,CAACK,GAAG,EAAEU,IAAI,KAAK;EAClC,IAAIC,KAAK,CAACC,OAAO,CAACZ,GAAG,CAAC,EAClB,OAAOA,GAAG,CAACa,GAAG,CAACC,CAAC,IAAI,CAAC,CAAC,EAAEhB,OAAO,CAACiB,UAAU,EAAED,CAAC,EAAEJ,IAAI,CAAC,IAAII,CAAC,CAAC;EAC9D,IAAI,OAAOd,GAAG,KAAK,QAAQ,EACvB,OAAO,CAAC,CAAC,EAAEF,OAAO,CAACiB,UAAU,EAAEf,GAAG,EAAEU,IAAI,CAAC,IAAIV,GAAG;EACpD,OAAOA,GAAG;AACd,CAAC;AACDP,OAAO,CAACE,cAAc,GAAGA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}