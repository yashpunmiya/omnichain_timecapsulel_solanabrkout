{"ast":null,"code":"import { proxy, snapshot, subscribe as sub } from 'valtio/vanilla';\nimport { getW3mThemeVariables } from '@reown/appkit-common';\nimport { ConnectorController } from './ConnectorController.js';\n// -- State --------------------------------------------- //\nconst state = proxy({\n  themeMode: 'dark',\n  themeVariables: {},\n  w3mThemeVariables: undefined\n});\n// -- Controller ---------------------------------------- //\nexport const ThemeController = {\n  state,\n  subscribe(callback) {\n    return sub(state, () => callback(state));\n  },\n  setThemeMode(themeMode) {\n    state.themeMode = themeMode;\n    try {\n      const authConnector = ConnectorController.getAuthConnector();\n      if (authConnector) {\n        const themeVariables = ThemeController.getSnapshot().themeVariables;\n        authConnector.provider.syncTheme({\n          themeMode,\n          themeVariables,\n          w3mThemeVariables: getW3mThemeVariables(themeVariables, themeMode)\n        });\n      }\n    } catch {\n      // eslint-disable-next-line no-console\n      console.info('Unable to sync theme to auth connector');\n    }\n  },\n  setThemeVariables(themeVariables) {\n    state.themeVariables = {\n      ...state.themeVariables,\n      ...themeVariables\n    };\n    try {\n      const authConnector = ConnectorController.getAuthConnector();\n      if (authConnector) {\n        const themeVariablesSnapshot = ThemeController.getSnapshot().themeVariables;\n        authConnector.provider.syncTheme({\n          themeVariables: themeVariablesSnapshot,\n          w3mThemeVariables: getW3mThemeVariables(state.themeVariables, state.themeMode)\n        });\n      }\n    } catch {\n      // eslint-disable-next-line no-console\n      console.info('Unable to sync theme to auth connector');\n    }\n  },\n  getSnapshot() {\n    return snapshot(state);\n  }\n};","map":{"version":3,"names":["proxy","snapshot","subscribe","sub","getW3mThemeVariables","ConnectorController","state","themeMode","themeVariables","w3mThemeVariables","undefined","ThemeController","callback","setThemeMode","authConnector","getAuthConnector","getSnapshot","provider","syncTheme","console","info","setThemeVariables","themeVariablesSnapshot"],"sources":["../../../../src/controllers/ThemeController.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,KAAK,EAAEC,QAAQ,EAAEC,SAAS,IAAIC,GAAG,QAAQ,gBAAgB;AAElE,SAASC,oBAAoB,QAAQ,sBAAsB;AAI3D,SAASC,mBAAmB,QAAQ,0BAA0B;AAS9D;AACA,MAAMC,KAAK,GAAGN,KAAK,CAAuB;EACxCO,SAAS,EAAE,MAAM;EACjBC,cAAc,EAAE,EAAE;EAClBC,iBAAiB,EAAEC;CACpB,CAAC;AAEF;AACA,OAAO,MAAMC,eAAe,GAAG;EAC7BL,KAAK;EAELJ,SAASA,CAACU,QAAkD;IAC1D,OAAOT,GAAG,CAACG,KAAK,EAAE,MAAMM,QAAQ,CAACN,KAAK,CAAC,CAAC;EAC1C,CAAC;EAEDO,YAAYA,CAACN,SAA4C;IACvDD,KAAK,CAACC,SAAS,GAAGA,SAAS;IAE3B,IAAI;MACF,MAAMO,aAAa,GAAGT,mBAAmB,CAACU,gBAAgB,EAAE;MAE5D,IAAID,aAAa,EAAE;QACjB,MAAMN,cAAc,GAAGG,eAAe,CAACK,WAAW,EAAE,CAACR,cAAc;QAEnEM,aAAa,CAACG,QAAQ,CAACC,SAAS,CAAC;UAC/BX,SAAS;UACTC,cAAc;UACdC,iBAAiB,EAAEL,oBAAoB,CAACI,cAAc,EAAED,SAAS;SAClE,CAAC;MACJ;IACF,CAAC,CAAC,MAAM;MACN;MACAY,OAAO,CAACC,IAAI,CAAC,wCAAwC,CAAC;IACxD;EACF,CAAC;EAEDC,iBAAiBA,CAACb,cAAsD;IACtEF,KAAK,CAACE,cAAc,GAAG;MAAE,GAAGF,KAAK,CAACE,cAAc;MAAE,GAAGA;IAAc,CAAE;IAErE,IAAI;MACF,MAAMM,aAAa,GAAGT,mBAAmB,CAACU,gBAAgB,EAAE;MAE5D,IAAID,aAAa,EAAE;QACjB,MAAMQ,sBAAsB,GAAGX,eAAe,CAACK,WAAW,EAAE,CAACR,cAAc;QAE3EM,aAAa,CAACG,QAAQ,CAACC,SAAS,CAAC;UAC/BV,cAAc,EAAEc,sBAAsB;UACtCb,iBAAiB,EAAEL,oBAAoB,CAACE,KAAK,CAACE,cAAc,EAAEF,KAAK,CAACC,SAAS;SAC9E,CAAC;MACJ;IACF,CAAC,CAAC,MAAM;MACN;MACAY,OAAO,CAACC,IAAI,CAAC,wCAAwC,CAAC;IACxD;EACF,CAAC;EAEDJ,WAAWA,CAAA;IACT,OAAOf,QAAQ,CAACK,KAAK,CAAC;EACxB;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}