{"ast":null,"code":"import { AccountController } from '../controllers/AccountController.js';\nimport { BlockchainApiController } from '../controllers/BlockchainApiController.js';\nimport { ChainController } from '../controllers/ChainController.js';\nimport { ConnectionController } from '../controllers/ConnectionController.js';\nimport { ERC7811Utils } from './ERC7811Util.js';\n// -- Controller ---------------------------------------- //\nexport const SendApiUtil = {\n  async getMyTokensWithBalance(forceUpdate) {\n    const address = AccountController.state.address;\n    const caipNetwork = ChainController.state.activeCaipNetwork;\n    if (!address || !caipNetwork) {\n      return [];\n    }\n    // Extract EIP-155 specific logic\n    if (caipNetwork.chainNamespace === 'eip155') {\n      const eip155Balances = await this.getEIP155Balances(address, caipNetwork);\n      if (eip155Balances) {\n        return this.filterLowQualityTokens(eip155Balances);\n      }\n    }\n    // Fallback to 1Inch API\n    const response = await BlockchainApiController.getBalance(address, caipNetwork.caipNetworkId, forceUpdate);\n    return this.filterLowQualityTokens(response.balances);\n  },\n  async getEIP155Balances(address, caipNetwork) {\n    try {\n      const chainIdHex = ERC7811Utils.getChainIdHexFromCAIP2ChainId(caipNetwork.caipNetworkId);\n      const walletCapabilities = await ConnectionController.getCapabilities(address);\n      if (!walletCapabilities?.[chainIdHex]?.['assetDiscovery']?.supported) {\n        return null;\n      }\n      const walletGetAssetsResponse = await ConnectionController.walletGetAssets({\n        account: address,\n        chainFilter: [chainIdHex]\n      });\n      if (!ERC7811Utils.isWalletGetAssetsResponse(walletGetAssetsResponse)) {\n        return null;\n      }\n      const assets = walletGetAssetsResponse[chainIdHex] || [];\n      return assets.map(asset => ERC7811Utils.createBalance(asset, caipNetwork.caipNetworkId));\n    } catch (error) {\n      return null;\n    }\n  },\n  /**\n   * The 1Inch API includes many low-quality tokens in the balance response,\n   * which appear inconsistently. This filter prevents them from being displayed.\n   */\n  filterLowQualityTokens(balances) {\n    return balances.filter(balance => balance.quantity.decimals !== '0');\n  },\n  mapBalancesToSwapTokens(balances) {\n    return balances?.map(token => ({\n      ...token,\n      address: token?.address ? token.address : ChainController.getActiveNetworkTokenAddress(),\n      decimals: parseInt(token.quantity.decimals, 10),\n      logoUri: token.iconUrl,\n      eip2612: false\n    })) || [];\n  }\n};","map":{"version":3,"names":["AccountController","BlockchainApiController","ChainController","ConnectionController","ERC7811Utils","SendApiUtil","getMyTokensWithBalance","forceUpdate","address","state","caipNetwork","activeCaipNetwork","chainNamespace","eip155Balances","getEIP155Balances","filterLowQualityTokens","response","getBalance","caipNetworkId","balances","chainIdHex","getChainIdHexFromCAIP2ChainId","walletCapabilities","getCapabilities","supported","walletGetAssetsResponse","walletGetAssets","account","chainFilter","isWalletGetAssetsResponse","assets","map","asset","createBalance","error","filter","balance","quantity","decimals","mapBalancesToSwapTokens","token","getActiveNetworkTokenAddress","parseInt","logoUri","iconUrl","eip2612"],"sources":["../../../../src/utils/SendApiUtil.ts"],"sourcesContent":[null],"mappings":"AAEA,SAASA,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,uBAAuB,QAAQ,2CAA2C;AACnF,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,oBAAoB,QAAQ,wCAAwC;AAC7E,SAASC,YAAY,QAAQ,kBAAkB;AAI/C;AACA,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,sBAAsBA,CAC1BC,WAAoB;IAEpB,MAAMC,OAAO,GAAGR,iBAAiB,CAACS,KAAK,CAACD,OAAO;IAC/C,MAAME,WAAW,GAAGR,eAAe,CAACO,KAAK,CAACE,iBAAiB;IAE3D,IAAI,CAACH,OAAO,IAAI,CAACE,WAAW,EAAE;MAC5B,OAAO,EAAE;IACX;IAEA;IACA,IAAIA,WAAW,CAACE,cAAc,KAAK,QAAQ,EAAE;MAC3C,MAAMC,cAAc,GAAG,MAAM,IAAI,CAACC,iBAAiB,CAACN,OAAO,EAAEE,WAAW,CAAC;MACzE,IAAIG,cAAc,EAAE;QAClB,OAAO,IAAI,CAACE,sBAAsB,CAACF,cAAc,CAAC;MACpD;IACF;IAEA;IACA,MAAMG,QAAQ,GAAG,MAAMf,uBAAuB,CAACgB,UAAU,CACvDT,OAAO,EACPE,WAAW,CAACQ,aAAa,EACzBX,WAAW,CACZ;IAED,OAAO,IAAI,CAACQ,sBAAsB,CAACC,QAAQ,CAACG,QAAQ,CAAC;EACvD,CAAC;EAED,MAAML,iBAAiBA,CAACN,OAAe,EAAEE,WAAwB;IAC/D,IAAI;MACF,MAAMU,UAAU,GAAGhB,YAAY,CAACiB,6BAA6B,CAACX,WAAW,CAACQ,aAAa,CAAC;MACxF,MAAMI,kBAAkB,GAAI,MAAMnB,oBAAoB,CAACoB,eAAe,CAACf,OAAO,CAG7E;MAED,IAAI,CAACc,kBAAkB,GAAGF,UAAU,CAAC,GAAG,gBAAgB,CAAC,EAAEI,SAAS,EAAE;QACpE,OAAO,IAAI;MACb;MAEA,MAAMC,uBAAuB,GAAG,MAAMtB,oBAAoB,CAACuB,eAAe,CAAC;QACzEC,OAAO,EAAEnB,OAAwB;QACjCoB,WAAW,EAAE,CAACR,UAAU;OACzB,CAAC;MAEF,IAAI,CAAChB,YAAY,CAACyB,yBAAyB,CAACJ,uBAAuB,CAAC,EAAE;QACpE,OAAO,IAAI;MACb;MAEA,MAAMK,MAAM,GAAGL,uBAAuB,CAACL,UAAU,CAAC,IAAI,EAAE;MAExD,OAAOU,MAAM,CAACC,GAAG,CAACC,KAAK,IAAI5B,YAAY,CAAC6B,aAAa,CAACD,KAAK,EAAEtB,WAAW,CAACQ,aAAa,CAAC,CAAC;IAC1F,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACd,OAAO,IAAI;IACb;EACF,CAAC;EAED;;;;EAIAnB,sBAAsBA,CAACI,QAAkD;IACvE,OAAOA,QAAQ,CAACgB,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,QAAQ,CAACC,QAAQ,KAAK,GAAG,CAAC;EACtE,CAAC;EAEDC,uBAAuBA,CAACpB,QAAkD;IACxE,OACEA,QAAQ,EAAEY,GAAG,CACXS,KAAK,KACF;MACC,GAAGA,KAAK;MACRhC,OAAO,EAAEgC,KAAK,EAAEhC,OAAO,GACnBgC,KAAK,CAAChC,OAAO,GACbN,eAAe,CAACuC,4BAA4B,EAAE;MAClDH,QAAQ,EAAEI,QAAQ,CAACF,KAAK,CAACH,QAAQ,CAACC,QAAQ,EAAE,EAAE,CAAC;MAC/CK,OAAO,EAAEH,KAAK,CAACI,OAAO;MACtBC,OAAO,EAAE;KACV,CAAyB,CAC7B,IAAI,EAAE;EAEX;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}