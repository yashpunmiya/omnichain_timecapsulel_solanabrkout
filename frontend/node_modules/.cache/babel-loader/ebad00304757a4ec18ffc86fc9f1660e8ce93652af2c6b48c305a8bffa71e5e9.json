{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TemplateLiteralPatternError = void 0;\nexports.TemplateLiteralPattern = TemplateLiteralPattern;\nconst index_1 = require(\"../patterns/index\");\nconst index_2 = require(\"../symbols/index\");\nconst index_3 = require(\"../error/index\");\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nconst kind_1 = require(\"../guard/kind\");\n// ------------------------------------------------------------------\n// TemplateLiteralPatternError\n// ------------------------------------------------------------------\nclass TemplateLiteralPatternError extends index_3.TypeBoxError {}\nexports.TemplateLiteralPatternError = TemplateLiteralPatternError;\n// ------------------------------------------------------------------\n// TemplateLiteralPattern\n// ------------------------------------------------------------------\nfunction Escape(value) {\n  return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n// prettier-ignore\nfunction Visit(schema, acc) {\n  return (0, kind_1.IsTemplateLiteral)(schema) ? schema.pattern.slice(1, schema.pattern.length - 1) : (0, kind_1.IsUnion)(schema) ? `(${schema.anyOf.map(schema => Visit(schema, acc)).join('|')})` : (0, kind_1.IsNumber)(schema) ? `${acc}${index_1.PatternNumber}` : (0, kind_1.IsInteger)(schema) ? `${acc}${index_1.PatternNumber}` : (0, kind_1.IsBigInt)(schema) ? `${acc}${index_1.PatternNumber}` : (0, kind_1.IsString)(schema) ? `${acc}${index_1.PatternString}` : (0, kind_1.IsLiteral)(schema) ? `${acc}${Escape(schema.const.toString())}` : (0, kind_1.IsBoolean)(schema) ? `${acc}${index_1.PatternBoolean}` : (() => {\n    throw new TemplateLiteralPatternError(`Unexpected Kind '${schema[index_2.Kind]}'`);\n  })();\n}\nfunction TemplateLiteralPattern(kinds) {\n  return `^${kinds.map(schema => Visit(schema, '')).join('')}\\$`;\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}