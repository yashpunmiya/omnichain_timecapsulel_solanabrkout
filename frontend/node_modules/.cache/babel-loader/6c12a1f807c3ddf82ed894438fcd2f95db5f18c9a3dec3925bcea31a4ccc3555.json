{"ast":null,"code":"import { decodeAbiParameters } from '../abi/decodeAbiParameters.js';\nimport { isErc6492Signature } from './isErc6492Signature.js';\n/**\n * @description Parses a hex-formatted ERC-6492 flavoured signature.\n * If the signature is not in ERC-6492 format, then the underlying (original) signature is returned.\n *\n * @param signature ERC-6492 signature in hex format.\n * @returns The parsed ERC-6492 signature.\n *\n * @example\n * parseSignature('0x000000000000000000000000cafebabecafebabecafebabecafebabecafebabe000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000004deadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041a461f509887bd19e312c0c58467ce8ff8e300d3c1a90b608a760c5b80318eaf15fe57c96f9175d6cd4daad4663763baa7e78836e067d0163e9a2ccf2ff753f5b1b000000000000000000000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492')\n * // { address: '0x...', data: '0x...', signature: '0x...' }\n */\nexport function parseErc6492Signature(signature) {\n  if (!isErc6492Signature(signature)) return {\n    signature\n  };\n  const [address, data, signature_] = decodeAbiParameters([{\n    type: 'address'\n  }, {\n    type: 'bytes'\n  }, {\n    type: 'bytes'\n  }], signature);\n  return {\n    address,\n    data,\n    signature: signature_\n  };\n}\n//# sourceMappingURL=parseErc6492Signature.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}