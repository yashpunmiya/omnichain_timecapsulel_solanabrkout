{"ast":null,"code":"import Big from 'big.js';\nexport const NumberUtil = {\n  bigNumber(value) {\n    if (!value) {\n      return new Big(0);\n    }\n    return new Big(value);\n  },\n  multiply(a, b) {\n    if (a === undefined || b === undefined) {\n      return new Big(0);\n    }\n    const aBigNumber = new Big(a);\n    const bBigNumber = new Big(b);\n    return aBigNumber.times(bBigNumber);\n  },\n  formatNumberToLocalString(value, decimals = 2) {\n    if (value === undefined) {\n      return '0.00';\n    }\n    if (typeof value === 'number') {\n      return value.toLocaleString('en-US', {\n        maximumFractionDigits: decimals,\n        minimumFractionDigits: decimals\n      });\n    }\n    return parseFloat(value).toLocaleString('en-US', {\n      maximumFractionDigits: decimals,\n      minimumFractionDigits: decimals\n    });\n  },\n  parseLocalStringToNumber(value) {\n    if (value === undefined) {\n      return 0;\n    }\n    return parseFloat(value.replace(/,/gu, ''));\n  }\n};\n//# sourceMappingURL=NumberUtil.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}