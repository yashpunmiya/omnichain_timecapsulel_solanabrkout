{"ast":null,"code":"import UniversalProvider from '@walletconnect/universal-provider';\nimport { ConstantsUtil as CommonConstantsUtil } from '@reown/appkit-common';\nimport { W3mFrameRpcConstants } from '@reown/appkit-wallet/utils';\nimport { AccountController } from '../controllers/AccountController.js';\nimport { ChainController } from '../controllers/ChainController.js';\nimport { ConnectionController } from '../controllers/ConnectionController.js';\nimport { ConnectorController } from '../controllers/ConnectorController.js';\nimport { EventsController } from '../controllers/EventsController.js';\nimport { ModalController } from '../controllers/ModalController.js';\nimport { OptionsController } from '../controllers/OptionsController.js';\nimport { RouterController } from '../controllers/RouterController.js';\nimport { SnackController } from '../controllers/SnackController.js';\nimport { CoreHelperUtil } from './CoreHelperUtil.js';\n/**\n * SIWXUtil holds the methods to interact with the SIWX plugin and must be called internally on AppKit.\n */\nexport const SIWXUtil = {\n  getSIWX() {\n    return OptionsController.state.siwx;\n  },\n  async initializeIfEnabled() {\n    const siwx = OptionsController.state.siwx;\n    const caipAddress = ChainController.getActiveCaipAddress();\n    if (!(siwx && caipAddress)) {\n      return;\n    }\n    const [namespace, chainId, address] = caipAddress.split(':');\n    if (!ChainController.checkIfSupportedNetwork(namespace)) {\n      return;\n    }\n    try {\n      const sessions = await siwx.getSessions(`${namespace}:${chainId}`, address);\n      if (sessions.length) {\n        return;\n      }\n      await ModalController.open({\n        view: 'SIWXSignMessage'\n      });\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error('SIWXUtil:initializeIfEnabled', error);\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SIWX_AUTH_ERROR',\n        properties: this.getSIWXEventProperties()\n      });\n      // eslint-disable-next-line no-console\n      await ConnectionController._getClient()?.disconnect().catch(console.error);\n      RouterController.reset('Connect');\n      SnackController.showError('A problem occurred while trying initialize authentication');\n    }\n  },\n  async requestSignMessage() {\n    const siwx = OptionsController.state.siwx;\n    const address = CoreHelperUtil.getPlainAddress(ChainController.getActiveCaipAddress());\n    const network = ChainController.getActiveCaipNetwork();\n    const client = ConnectionController._getClient();\n    if (!siwx) {\n      throw new Error('SIWX is not enabled');\n    }\n    if (!address) {\n      throw new Error('No ActiveCaipAddress found');\n    }\n    if (!network) {\n      throw new Error('No ActiveCaipNetwork or client found');\n    }\n    if (!client) {\n      throw new Error('No ConnectionController client found');\n    }\n    try {\n      const siwxMessage = await siwx.createMessage({\n        chainId: network.caipNetworkId,\n        accountAddress: address\n      });\n      const message = siwxMessage.toString();\n      const connectorId = ConnectorController.getConnectorId(network.chainNamespace);\n      if (connectorId === CommonConstantsUtil.CONNECTOR_ID.AUTH) {\n        RouterController.pushTransactionStack({\n          view: null,\n          goBack: false,\n          replace: true\n        });\n      }\n      const signature = await client.signMessage(message);\n      await siwx.addSession({\n        data: siwxMessage,\n        message,\n        signature: signature\n      });\n      ModalController.close();\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SIWX_AUTH_SUCCESS',\n        properties: this.getSIWXEventProperties()\n      });\n    } catch (error) {\n      const properties = this.getSIWXEventProperties();\n      if (!ModalController.state.open || RouterController.state.view === 'ApproveTransaction') {\n        await ModalController.open({\n          view: 'SIWXSignMessage'\n        });\n      }\n      if (properties.isSmartAccount) {\n        SnackController.showError('This application might not support Smart Accounts');\n      } else {\n        SnackController.showError('Signature declined');\n      }\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SIWX_AUTH_ERROR',\n        properties\n      });\n      // eslint-disable-next-line no-console\n      console.error('SWIXUtil:requestSignMessage', error);\n    }\n  },\n  async cancelSignMessage() {\n    try {\n      const siwx = this.getSIWX();\n      const isRequired = siwx?.getRequired?.();\n      if (isRequired) {\n        await ConnectionController.disconnect();\n      } else {\n        ModalController.close();\n      }\n      RouterController.reset('Connect');\n      EventsController.sendEvent({\n        event: 'CLICK_CANCEL_SIWX',\n        type: 'track',\n        properties: this.getSIWXEventProperties()\n      });\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error('SIWXUtil:cancelSignMessage', error);\n    }\n  },\n  async getSessions() {\n    const siwx = OptionsController.state.siwx;\n    const address = CoreHelperUtil.getPlainAddress(ChainController.getActiveCaipAddress());\n    const network = ChainController.getActiveCaipNetwork();\n    if (!(siwx && address && network)) {\n      return [];\n    }\n    return siwx.getSessions(network.caipNetworkId, address);\n  },\n  async isSIWXCloseDisabled() {\n    const siwx = this.getSIWX();\n    if (siwx) {\n      const isApproveSignScreen = RouterController.state.view === 'ApproveTransaction';\n      const isSiwxSignMessage = RouterController.state.view === 'SIWXSignMessage';\n      if (isApproveSignScreen || isSiwxSignMessage) {\n        return siwx.getRequired?.() && (await this.getSessions()).length === 0;\n      }\n    }\n    return false;\n  },\n  async universalProviderAuthenticate({\n    universalProvider,\n    chains,\n    methods\n  }) {\n    const siwx = SIWXUtil.getSIWX();\n    const namespaces = new Set(chains.map(chain => chain.split(':')[0]));\n    if (!siwx || namespaces.size !== 1 || !namespaces.has('eip155')) {\n      return false;\n    }\n    // Ignores chainId and account address to get other message data\n    const siwxMessage = await siwx.createMessage({\n      chainId: ChainController.getActiveCaipNetwork()?.caipNetworkId || '',\n      accountAddress: ''\n    });\n    const result = await universalProvider.authenticate({\n      nonce: siwxMessage.nonce,\n      domain: siwxMessage.domain,\n      uri: siwxMessage.uri,\n      exp: siwxMessage.expirationTime,\n      iat: siwxMessage.issuedAt,\n      nbf: siwxMessage.notBefore,\n      requestId: siwxMessage.requestId,\n      version: siwxMessage.version,\n      resources: siwxMessage.resources,\n      statement: siwxMessage.statement,\n      chainId: siwxMessage.chainId,\n      methods,\n      // The first chainId is what is used for universal provider to build the message\n      chains: [siwxMessage.chainId, ...chains.filter(chain => chain !== siwxMessage.chainId)]\n    });\n    SnackController.showLoading('Authenticating...', {\n      autoClose: false\n    });\n    AccountController.setConnectedWalletInfo({\n      ...result.session.peer.metadata,\n      name: result.session.peer.metadata.name,\n      icon: result.session.peer.metadata.icons?.[0],\n      type: 'WALLET_CONNECT'\n    }, Array.from(namespaces)[0]);\n    if (result?.auths?.length) {\n      const sessions = result.auths.map(cacao => {\n        const message = universalProvider.client.formatAuthMessage({\n          request: cacao.p,\n          iss: cacao.p.iss\n        });\n        return {\n          data: {\n            ...cacao.p,\n            accountAddress: cacao.p.iss.split(':').slice(-1).join(''),\n            chainId: cacao.p.iss.split(':').slice(2, 4).join(':'),\n            uri: cacao.p.aud,\n            version: cacao.p.version || siwxMessage.version,\n            expirationTime: cacao.p.exp,\n            issuedAt: cacao.p.iat,\n            notBefore: cacao.p.nbf\n          },\n          message,\n          signature: cacao.s.s,\n          cacao\n        };\n      });\n      try {\n        await siwx.setSessions(sessions);\n        EventsController.sendEvent({\n          type: 'track',\n          event: 'SIWX_AUTH_SUCCESS',\n          properties: SIWXUtil.getSIWXEventProperties()\n        });\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('SIWX:universalProviderAuth - failed to set sessions', error);\n        EventsController.sendEvent({\n          type: 'track',\n          event: 'SIWX_AUTH_ERROR',\n          properties: SIWXUtil.getSIWXEventProperties()\n        });\n        // eslint-disable-next-line no-console\n        await universalProvider.disconnect().catch(console.error);\n        throw error;\n      } finally {\n        SnackController.hide();\n      }\n    }\n    return true;\n  },\n  getSIWXEventProperties() {\n    return {\n      network: ChainController.state.activeCaipNetwork?.caipNetworkId || '',\n      isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT\n    };\n  },\n  async clearSessions() {\n    const siwx = this.getSIWX();\n    if (siwx) {\n      await siwx.setSessions([]);\n    }\n  }\n};","map":{"version":3,"names":["UniversalProvider","ConstantsUtil","CommonConstantsUtil","W3mFrameRpcConstants","AccountController","ChainController","ConnectionController","ConnectorController","EventsController","ModalController","OptionsController","RouterController","SnackController","CoreHelperUtil","SIWXUtil","getSIWX","state","siwx","initializeIfEnabled","caipAddress","getActiveCaipAddress","namespace","chainId","address","split","checkIfSupportedNetwork","sessions","getSessions","length","open","view","error","console","sendEvent","type","event","properties","getSIWXEventProperties","_getClient","disconnect","catch","reset","showError","requestSignMessage","getPlainAddress","network","getActiveCaipNetwork","client","Error","siwxMessage","createMessage","caipNetworkId","accountAddress","message","toString","connectorId","getConnectorId","chainNamespace","CONNECTOR_ID","AUTH","pushTransactionStack","goBack","replace","signature","signMessage","addSession","data","close","isSmartAccount","cancelSignMessage","isRequired","getRequired","isSIWXCloseDisabled","isApproveSignScreen","isSiwxSignMessage","universalProviderAuthenticate","universalProvider","chains","methods","namespaces","Set","map","chain","size","has","result","authenticate","nonce","domain","uri","exp","expirationTime","iat","issuedAt","nbf","notBefore","requestId","version","resources","statement","filter","showLoading","autoClose","setConnectedWalletInfo","session","peer","metadata","name","icon","icons","Array","from","auths","cacao","formatAuthMessage","request","p","iss","slice","join","aud","s","setSessions","hide","activeCaipNetwork","preferredAccountType","ACCOUNT_TYPES","SMART_ACCOUNT","clearSessions"],"sources":["../../../../src/utils/SIWXUtil.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}