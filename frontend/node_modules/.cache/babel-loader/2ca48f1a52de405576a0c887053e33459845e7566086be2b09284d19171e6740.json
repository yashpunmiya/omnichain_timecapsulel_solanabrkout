{"ast":null,"code":"import { getVersion } from './internal/errors.js';\n/**\n * Base error class inherited by all errors thrown by ox.\n *\n * @example\n * ```ts\n * import { Errors } from 'ox'\n * throw new Errors.BaseError('An error occurred')\n * ```\n */\nexport class BaseError extends Error {\n  constructor(shortMessage, options = {}) {\n    const details = (() => {\n      if (options.cause instanceof BaseError) {\n        if (options.cause.details) return options.cause.details;\n        if (options.cause.shortMessage) return options.cause.shortMessage;\n      }\n      if (options.cause?.message) return options.cause.message;\n      return options.details;\n    })();\n    const docsPath = (() => {\n      if (options.cause instanceof BaseError) return options.cause.docsPath || options.docsPath;\n      return options.docsPath;\n    })();\n    const docsBaseUrl = 'https://oxlib.sh';\n    const docs = `${docsBaseUrl}${docsPath ?? ''}`;\n    const message = [shortMessage || 'An error occurred.', ...(options.metaMessages ? ['', ...options.metaMessages] : []), ...(details || docsPath ? ['', details ? `Details: ${details}` : undefined, docsPath ? `See: ${docs}` : undefined] : [])].filter(x => typeof x === 'string').join('\\n');\n    super(message, options.cause ? {\n      cause: options.cause\n    } : undefined);\n    Object.defineProperty(this, \"details\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"docs\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"docsPath\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shortMessage\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"cause\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'BaseError'\n    });\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: `ox@${getVersion()}`\n    });\n    this.cause = options.cause;\n    this.details = details;\n    this.docs = docs;\n    this.docsPath = docsPath;\n    this.shortMessage = shortMessage;\n  }\n  walk(fn) {\n    return walk(this, fn);\n  }\n}\n/** @internal */\nfunction walk(err, fn) {\n  if (fn?.(err)) return err;\n  if (err && typeof err === 'object' && 'cause' in err && err.cause) return walk(err.cause, fn);\n  return fn ? null : err;\n}","map":{"version":3,"names":["getVersion","BaseError","Error","constructor","shortMessage","options","details","cause","message","docsPath","docsBaseUrl","docs","metaMessages","undefined","filter","x","join","Object","defineProperty","walk","fn","err"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@reown\\appkit-controllers\\node_modules\\ox\\core\\Errors.ts"],"sourcesContent":["import { getVersion } from './internal/errors.js'\n\nexport type GlobalErrorType<name extends string = 'Error'> = Error & {\n  name: name\n}\n\n/**\n * Base error class inherited by all errors thrown by ox.\n *\n * @example\n * ```ts\n * import { Errors } from 'ox'\n * throw new Errors.BaseError('An error occurred')\n * ```\n */\nexport class BaseError<\n  cause extends Error | undefined = undefined,\n> extends Error {\n  details: string\n  docs?: string | undefined\n  docsPath?: string | undefined\n  shortMessage: string\n\n  override cause: cause\n  override name = 'BaseError'\n\n  version = `ox@${getVersion()}`\n\n  constructor(shortMessage: string, options: BaseError.Options<cause> = {}) {\n    const details = (() => {\n      if (options.cause instanceof BaseError) {\n        if (options.cause.details) return options.cause.details\n        if (options.cause.shortMessage) return options.cause.shortMessage\n      }\n      if (options.cause?.message) return options.cause.message\n      return options.details!\n    })()\n    const docsPath = (() => {\n      if (options.cause instanceof BaseError)\n        return options.cause.docsPath || options.docsPath\n      return options.docsPath\n    })()\n\n    const docsBaseUrl = 'https://oxlib.sh'\n    const docs = `${docsBaseUrl}${docsPath ?? ''}`\n\n    const message = [\n      shortMessage || 'An error occurred.',\n      ...(options.metaMessages ? ['', ...options.metaMessages] : []),\n      ...(details || docsPath\n        ? [\n            '',\n            details ? `Details: ${details}` : undefined,\n            docsPath ? `See: ${docs}` : undefined,\n          ]\n        : []),\n    ]\n      .filter((x) => typeof x === 'string')\n      .join('\\n')\n\n    super(message, options.cause ? { cause: options.cause } : undefined)\n\n    this.cause = options.cause as any\n    this.details = details\n    this.docs = docs\n    this.docsPath = docsPath\n    this.shortMessage = shortMessage\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nexport declare namespace BaseError {\n  type Options<cause extends Error | undefined = Error | undefined> = {\n    cause?: cause | undefined\n    details?: string | undefined\n    docsPath?: string | undefined\n    metaMessages?: (string | undefined)[] | undefined\n  }\n}\n\n/** @internal */\nfunction walk(\n  err: unknown,\n  fn?: ((err: unknown) => boolean) | undefined,\n): unknown {\n  if (fn?.(err)) return err\n  if (err && typeof err === 'object' && 'cause' in err && err.cause)\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AAMjD;;;;;;;;;AASA,OAAM,MAAOC,SAEX,SAAQC,KAAK;EAWbC,YAAYC,YAAoB,EAAEC,OAAA,GAAoC,EAAE;IACtE,MAAMC,OAAO,GAAG,CAAC,MAAK;MACpB,IAAID,OAAO,CAACE,KAAK,YAAYN,SAAS,EAAE;QACtC,IAAII,OAAO,CAACE,KAAK,CAACD,OAAO,EAAE,OAAOD,OAAO,CAACE,KAAK,CAACD,OAAO;QACvD,IAAID,OAAO,CAACE,KAAK,CAACH,YAAY,EAAE,OAAOC,OAAO,CAACE,KAAK,CAACH,YAAY;MACnE;MACA,IAAIC,OAAO,CAACE,KAAK,EAAEC,OAAO,EAAE,OAAOH,OAAO,CAACE,KAAK,CAACC,OAAO;MACxD,OAAOH,OAAO,CAACC,OAAQ;IACzB,CAAC,EAAC,CAAE;IACJ,MAAMG,QAAQ,GAAG,CAAC,MAAK;MACrB,IAAIJ,OAAO,CAACE,KAAK,YAAYN,SAAS,EACpC,OAAOI,OAAO,CAACE,KAAK,CAACE,QAAQ,IAAIJ,OAAO,CAACI,QAAQ;MACnD,OAAOJ,OAAO,CAACI,QAAQ;IACzB,CAAC,EAAC,CAAE;IAEJ,MAAMC,WAAW,GAAG,kBAAkB;IACtC,MAAMC,IAAI,GAAG,GAAGD,WAAW,GAAGD,QAAQ,IAAI,EAAE,EAAE;IAE9C,MAAMD,OAAO,GAAG,CACdJ,YAAY,IAAI,oBAAoB,EACpC,IAAIC,OAAO,CAACO,YAAY,GAAG,CAAC,EAAE,EAAE,GAAGP,OAAO,CAACO,YAAY,CAAC,GAAG,EAAE,CAAC,EAC9D,IAAIN,OAAO,IAAIG,QAAQ,GACnB,CACE,EAAE,EACFH,OAAO,GAAG,YAAYA,OAAO,EAAE,GAAGO,SAAS,EAC3CJ,QAAQ,GAAG,QAAQE,IAAI,EAAE,GAAGE,SAAS,CACtC,GACD,EAAE,CAAC,CACR,CACEC,MAAM,CAAEC,CAAC,IAAK,OAAOA,CAAC,KAAK,QAAQ,CAAC,CACpCC,IAAI,CAAC,IAAI,CAAC;IAEb,KAAK,CAACR,OAAO,EAAEH,OAAO,CAACE,KAAK,GAAG;MAAEA,KAAK,EAAEF,OAAO,CAACE;IAAK,CAAE,GAAGM,SAAS,CAAC;IA1CtEI,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IAESD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;aAAO;;IAEhBD,MAAA,CAAAC,cAAA;;;;aAAU,MAAMlB,UAAU,EAAE;;IAoC1B,IAAI,CAACO,KAAK,GAAGF,OAAO,CAACE,KAAY;IACjC,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACK,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACL,YAAY,GAAGA,YAAY;EAClC;EAIAe,IAAIA,CAACC,EAAQ;IACX,OAAOD,IAAI,CAAC,IAAI,EAAEC,EAAE,CAAC;EACvB;;AAYF;AACA,SAASD,IAAIA,CACXE,GAAY,EACZD,EAA4C;EAE5C,IAAIA,EAAE,GAAGC,GAAG,CAAC,EAAE,OAAOA,GAAG;EACzB,IAAIA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAO,IAAIA,GAAG,IAAIA,GAAG,CAACd,KAAK,EAC/D,OAAOY,IAAI,CAACE,GAAG,CAACd,KAAK,EAAEa,EAAE,CAAC;EAC5B,OAAOA,EAAE,GAAG,IAAI,GAAGC,GAAG;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}