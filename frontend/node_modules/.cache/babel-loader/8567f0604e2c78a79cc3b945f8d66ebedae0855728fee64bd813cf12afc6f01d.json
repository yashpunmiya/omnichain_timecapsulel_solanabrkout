{"ast":null,"code":"import { DateUtil } from '@reown/appkit-common';\nimport { UiHelperUtil } from './UiHelperUtil.js';\nconst FLOAT_FIXED_VALUE = 3;\nconst plusTypes = ['receive', 'deposit', 'borrow', 'claim'];\nconst minusTypes = ['withdraw', 'repay', 'burn'];\nexport const TransactionUtil = {\n  getTransactionGroupTitle(year, month) {\n    const currentYear = DateUtil.getYear();\n    const monthName = DateUtil.getMonthNameByIndex(month);\n    const isCurrentYear = year === currentYear;\n    const groupTitle = isCurrentYear ? monthName : `${monthName} ${year}`;\n    return groupTitle;\n  },\n  getTransactionImages(transfers) {\n    const [transfer, secondTransfer] = transfers;\n    const isAllNFT = Boolean(transfer) && transfers?.every(item => Boolean(item.nft_info));\n    const haveMultipleTransfers = transfers?.length > 1;\n    const haveTwoTransfers = transfers?.length === 2;\n    if (haveTwoTransfers && !isAllNFT) {\n      return [this.getTransactionImage(transfer), this.getTransactionImage(secondTransfer)];\n    }\n    if (haveMultipleTransfers) {\n      return transfers.map(item => this.getTransactionImage(item));\n    }\n    return [this.getTransactionImage(transfer)];\n  },\n  getTransactionImage(transfer) {\n    return {\n      type: TransactionUtil.getTransactionTransferTokenType(transfer),\n      url: TransactionUtil.getTransactionImageURL(transfer)\n    };\n  },\n  getTransactionImageURL(transfer) {\n    let imageURL = undefined;\n    const isNFT = Boolean(transfer?.nft_info);\n    const isFungible = Boolean(transfer?.fungible_info);\n    if (transfer && isNFT) {\n      imageURL = transfer?.nft_info?.content?.preview?.url;\n    } else if (transfer && isFungible) {\n      imageURL = transfer?.fungible_info?.icon?.url;\n    }\n    return imageURL;\n  },\n  getTransactionTransferTokenType(transfer) {\n    if (transfer?.fungible_info) {\n      return 'FUNGIBLE';\n    } else if (transfer?.nft_info) {\n      return 'NFT';\n    }\n    return undefined;\n  },\n  getTransactionDescriptions(transaction) {\n    const type = transaction?.metadata?.operationType;\n    const transfers = transaction?.transfers;\n    const haveTransfer = transaction?.transfers?.length > 0;\n    const haveMultipleTransfers = transaction?.transfers?.length > 1;\n    const isFungible = haveTransfer && transfers?.every(transfer => Boolean(transfer?.fungible_info));\n    const [firstTransfer, secondTransfer] = transfers;\n    let firstDescription = this.getTransferDescription(firstTransfer);\n    let secondDescription = this.getTransferDescription(secondTransfer);\n    if (!haveTransfer) {\n      const isSendOrReceive = type === 'send' || type === 'receive';\n      if (isSendOrReceive && isFungible) {\n        firstDescription = UiHelperUtil.getTruncateString({\n          string: transaction?.metadata.sentFrom,\n          charsStart: 4,\n          charsEnd: 6,\n          truncate: 'middle'\n        });\n        secondDescription = UiHelperUtil.getTruncateString({\n          string: transaction?.metadata.sentTo,\n          charsStart: 4,\n          charsEnd: 6,\n          truncate: 'middle'\n        });\n        return [firstDescription, secondDescription];\n      }\n      return [transaction.metadata.status];\n    }\n    if (haveMultipleTransfers) {\n      return transfers.map(item => this.getTransferDescription(item));\n    }\n    let prefix = '';\n    if (plusTypes.includes(type)) {\n      prefix = '+';\n    } else if (minusTypes.includes(type)) {\n      prefix = '-';\n    }\n    firstDescription = prefix.concat(firstDescription);\n    return [firstDescription];\n  },\n  getTransferDescription(transfer) {\n    let description = '';\n    if (!transfer) {\n      return description;\n    }\n    if (transfer?.nft_info) {\n      description = transfer?.nft_info?.name || '-';\n    } else if (transfer?.fungible_info) {\n      description = this.getFungibleTransferDescription(transfer) || '-';\n    }\n    return description;\n  },\n  getFungibleTransferDescription(transfer) {\n    if (!transfer) {\n      return null;\n    }\n    const quantity = this.getQuantityFixedValue(transfer?.quantity.numeric);\n    const description = [quantity, transfer?.fungible_info?.symbol].join(' ').trim();\n    return description;\n  },\n  getQuantityFixedValue(value) {\n    if (!value) {\n      return null;\n    }\n    const parsedValue = parseFloat(value);\n    return parsedValue.toFixed(FLOAT_FIXED_VALUE);\n  }\n};","map":{"version":3,"names":["DateUtil","UiHelperUtil","FLOAT_FIXED_VALUE","plusTypes","minusTypes","TransactionUtil","getTransactionGroupTitle","year","month","currentYear","getYear","monthName","getMonthNameByIndex","isCurrentYear","groupTitle","getTransactionImages","transfers","transfer","secondTransfer","isAllNFT","Boolean","every","item","nft_info","haveMultipleTransfers","length","haveTwoTransfers","getTransactionImage","map","type","getTransactionTransferTokenType","url","getTransactionImageURL","imageURL","undefined","isNFT","isFungible","fungible_info","content","preview","icon","getTransactionDescriptions","transaction","metadata","operationType","haveTransfer","firstTransfer","firstDescription","getTransferDescription","secondDescription","isSendOrReceive","getTruncateString","string","sentFrom","charsStart","charsEnd","truncate","sentTo","status","prefix","includes","concat","description","name","getFungibleTransferDescription","quantity","getQuantityFixedValue","numeric","symbol","join","trim","value","parsedValue","parseFloat","toFixed"],"sources":["../../../../src/utils/TransactionUtil.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}