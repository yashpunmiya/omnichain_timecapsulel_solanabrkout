{"ast":null,"code":"import { useWalletMultiButton } from '@solana/wallet-adapter-base-ui';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { BaseWalletConnectionButton } from './BaseWalletConnectionButton.js';\nimport { useWalletModal } from './useWalletModal.js';\nexport function BaseWalletMultiButton({\n  children,\n  labels,\n  ...props\n}) {\n  const {\n    setVisible: setModalVisible\n  } = useWalletModal();\n  const {\n    buttonState,\n    onConnect,\n    onDisconnect,\n    publicKey,\n    walletIcon,\n    walletName\n  } = useWalletMultiButton({\n    onSelectWallet() {\n      setModalVisible(true);\n    }\n  });\n  const [copied, setCopied] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const ref = useRef(null);\n  useEffect(() => {\n    const listener = event => {\n      const node = ref.current;\n      // Do nothing if clicking dropdown or its descendants\n      if (!node || node.contains(event.target)) return;\n      setMenuOpen(false);\n    };\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, []);\n  const content = useMemo(() => {\n    if (children) {\n      return children;\n    } else if (publicKey) {\n      const base58 = publicKey.toBase58();\n      return base58.slice(0, 4) + '..' + base58.slice(-4);\n    } else if (buttonState === 'connecting' || buttonState === 'has-wallet') {\n      return labels[buttonState];\n    } else {\n      return labels['no-wallet'];\n    }\n  }, [buttonState, children, labels, publicKey]);\n  return React.createElement(\"div\", {\n    className: \"wallet-adapter-dropdown\"\n  }, React.createElement(BaseWalletConnectionButton, {\n    ...props,\n    \"aria-expanded\": menuOpen,\n    style: {\n      pointerEvents: menuOpen ? 'none' : 'auto',\n      ...props.style\n    },\n    onClick: () => {\n      switch (buttonState) {\n        case 'no-wallet':\n          setModalVisible(true);\n          break;\n        case 'has-wallet':\n          if (onConnect) {\n            onConnect();\n          }\n          break;\n        case 'connected':\n          setMenuOpen(true);\n          break;\n      }\n    },\n    walletIcon: walletIcon,\n    walletName: walletName\n  }, content), React.createElement(\"ul\", {\n    \"aria-label\": \"dropdown-list\",\n    className: `wallet-adapter-dropdown-list ${menuOpen && 'wallet-adapter-dropdown-list-active'}`,\n    ref: ref,\n    role: \"menu\"\n  }, publicKey ? React.createElement(\"li\", {\n    className: \"wallet-adapter-dropdown-list-item\",\n    onClick: async () => {\n      await navigator.clipboard.writeText(publicKey.toBase58());\n      setCopied(true);\n      setTimeout(() => setCopied(false), 400);\n    },\n    role: \"menuitem\"\n  }, copied ? labels['copied'] : labels['copy-address']) : null, React.createElement(\"li\", {\n    className: \"wallet-adapter-dropdown-list-item\",\n    onClick: () => {\n      setModalVisible(true);\n      setMenuOpen(false);\n    },\n    role: \"menuitem\"\n  }, labels['change-wallet']), onDisconnect ? React.createElement(\"li\", {\n    className: \"wallet-adapter-dropdown-list-item\",\n    onClick: () => {\n      onDisconnect();\n      setMenuOpen(false);\n    },\n    role: \"menuitem\"\n  }, labels['disconnect']) : null));\n}","map":{"version":3,"names":["useWalletMultiButton","React","useEffect","useMemo","useRef","useState","BaseWalletConnectionButton","useWalletModal","BaseWalletMultiButton","children","labels","props","setVisible","setModalVisible","buttonState","onConnect","onDisconnect","publicKey","walletIcon","walletName","onSelectWallet","copied","setCopied","menuOpen","setMenuOpen","ref","listener","event","node","current","contains","target","document","addEventListener","removeEventListener","content","base58","toBase58","slice","createElement","className","style","pointerEvents","onClick","role","navigator","clipboard","writeText","setTimeout"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@solana\\wallet-adapter-react-ui\\src\\BaseWalletMultiButton.tsx"],"sourcesContent":["import { useWalletMultiButton } from '@solana/wallet-adapter-base-ui';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { BaseWalletConnectionButton } from './BaseWalletConnectionButton.js';\nimport type { ButtonProps } from './Button.js';\nimport { useWalletModal } from './useWalletModal.js';\n\ntype Props = ButtonProps & {\n    labels: Omit<\n        { [TButtonState in ReturnType<typeof useWalletMultiButton>['buttonState']]: string },\n        'connected' | 'disconnecting'\n    > & {\n        'copy-address': string;\n        copied: string;\n        'change-wallet': string;\n        disconnect: string;\n    };\n};\n\nexport function BaseWalletMultiButton({ children, labels, ...props }: Props) {\n    const { setVisible: setModalVisible } = useWalletModal();\n    const { buttonState, onConnect, onDisconnect, publicKey, walletIcon, walletName } = useWalletMultiButton({\n        onSelectWallet() {\n            setModalVisible(true);\n        },\n    });\n    const [copied, setCopied] = useState(false);\n    const [menuOpen, setMenuOpen] = useState(false);\n    const ref = useRef<HTMLUListElement>(null);\n    useEffect(() => {\n        const listener = (event: MouseEvent | TouchEvent) => {\n            const node = ref.current;\n\n            // Do nothing if clicking dropdown or its descendants\n            if (!node || node.contains(event.target as Node)) return;\n\n            setMenuOpen(false);\n        };\n\n        document.addEventListener('mousedown', listener);\n        document.addEventListener('touchstart', listener);\n\n        return () => {\n            document.removeEventListener('mousedown', listener);\n            document.removeEventListener('touchstart', listener);\n        };\n    }, []);\n    const content = useMemo(() => {\n        if (children) {\n            return children;\n        } else if (publicKey) {\n            const base58 = publicKey.toBase58();\n            return base58.slice(0, 4) + '..' + base58.slice(-4);\n        } else if (buttonState === 'connecting' || buttonState === 'has-wallet') {\n            return labels[buttonState];\n        } else {\n            return labels['no-wallet'];\n        }\n    }, [buttonState, children, labels, publicKey]);\n    return (\n        <div className=\"wallet-adapter-dropdown\">\n            <BaseWalletConnectionButton\n                {...props}\n                aria-expanded={menuOpen}\n                style={{ pointerEvents: menuOpen ? 'none' : 'auto', ...props.style }}\n                onClick={() => {\n                    switch (buttonState) {\n                        case 'no-wallet':\n                            setModalVisible(true);\n                            break;\n                        case 'has-wallet':\n                            if (onConnect) {\n                                onConnect();\n                            }\n                            break;\n                        case 'connected':\n                            setMenuOpen(true);\n                            break;\n                    }\n                }}\n                walletIcon={walletIcon}\n                walletName={walletName}\n            >\n                {content}\n            </BaseWalletConnectionButton>\n            <ul\n                aria-label=\"dropdown-list\"\n                className={`wallet-adapter-dropdown-list ${menuOpen && 'wallet-adapter-dropdown-list-active'}`}\n                ref={ref}\n                role=\"menu\"\n            >\n                {publicKey ? (\n                    <li\n                        className=\"wallet-adapter-dropdown-list-item\"\n                        onClick={async () => {\n                            await navigator.clipboard.writeText(publicKey.toBase58());\n                            setCopied(true);\n                            setTimeout(() => setCopied(false), 400);\n                        }}\n                        role=\"menuitem\"\n                    >\n                        {copied ? labels['copied'] : labels['copy-address']}\n                    </li>\n                ) : null}\n                <li\n                    className=\"wallet-adapter-dropdown-list-item\"\n                    onClick={() => {\n                        setModalVisible(true);\n                        setMenuOpen(false);\n                    }}\n                    role=\"menuitem\"\n                >\n                    {labels['change-wallet']}\n                </li>\n                {onDisconnect ? (\n                    <li\n                        className=\"wallet-adapter-dropdown-list-item\"\n                        onClick={() => {\n                            onDisconnect();\n                            setMenuOpen(false);\n                        }}\n                        role=\"menuitem\"\n                    >\n                        {labels['disconnect']}\n                    </li>\n                ) : null}\n            </ul>\n        </div>\n    );\n}\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,gCAAgC;AACrE,OAAOC,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnE,SAASC,0BAA0B,QAAQ,iCAAiC;AAE5E,SAASC,cAAc,QAAQ,qBAAqB;AAcpD,OAAM,SAAUC,qBAAqBA,CAAC;EAAEC,QAAQ;EAAEC,MAAM;EAAE,GAAGC;AAAK,CAAS;EACvE,MAAM;IAAEC,UAAU,EAAEC;EAAe,CAAE,GAAGN,cAAc,EAAE;EACxD,MAAM;IAAEO,WAAW;IAAEC,SAAS;IAAEC,YAAY;IAAEC,SAAS;IAAEC,UAAU;IAAEC;EAAU,CAAE,GAAGnB,oBAAoB,CAAC;IACrGoB,cAAcA,CAAA;MACVP,eAAe,CAAC,IAAI,CAAC;IACzB;GACH,CAAC;EACF,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMoB,GAAG,GAAGrB,MAAM,CAAmB,IAAI,CAAC;EAC1CF,SAAS,CAAC,MAAK;IACX,MAAMwB,QAAQ,GAAIC,KAA8B,IAAI;MAChD,MAAMC,IAAI,GAAGH,GAAG,CAACI,OAAO;MAExB;MACA,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACE,QAAQ,CAACH,KAAK,CAACI,MAAc,CAAC,EAAE;MAElDP,WAAW,CAAC,KAAK,CAAC;IACtB,CAAC;IAEDQ,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEP,QAAQ,CAAC;IAChDM,QAAQ,CAACC,gBAAgB,CAAC,YAAY,EAAEP,QAAQ,CAAC;IAEjD,OAAO,MAAK;MACRM,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAER,QAAQ,CAAC;MACnDM,QAAQ,CAACE,mBAAmB,CAAC,YAAY,EAAER,QAAQ,CAAC;IACxD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACN,MAAMS,OAAO,GAAGhC,OAAO,CAAC,MAAK;IACzB,IAAIM,QAAQ,EAAE;MACV,OAAOA,QAAQ;IACnB,CAAC,MAAM,IAAIQ,SAAS,EAAE;MAClB,MAAMmB,MAAM,GAAGnB,SAAS,CAACoB,QAAQ,EAAE;MACnC,OAAOD,MAAM,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,GAAGF,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,MAAM,IAAIxB,WAAW,KAAK,YAAY,IAAIA,WAAW,KAAK,YAAY,EAAE;MACrE,OAAOJ,MAAM,CAACI,WAAW,CAAC;IAC9B,CAAC,MAAM;MACH,OAAOJ,MAAM,CAAC,WAAW,CAAC;IAC9B;EACJ,CAAC,EAAE,CAACI,WAAW,EAAEL,QAAQ,EAAEC,MAAM,EAAEO,SAAS,CAAC,CAAC;EAC9C,OACIhB,KAAA,CAAAsC,aAAA;IAAKC,SAAS,EAAC;EAAyB,GACpCvC,KAAA,CAAAsC,aAAA,CAACjC,0BAA0B;IAAA,GACnBK,KAAK;IAAA,iBACMY,QAAQ;IACvBkB,KAAK,EAAE;MAAEC,aAAa,EAAEnB,QAAQ,GAAG,MAAM,GAAG,MAAM;MAAE,GAAGZ,KAAK,CAAC8B;IAAK,CAAE;IACpEE,OAAO,EAAEA,CAAA,KAAK;MACV,QAAQ7B,WAAW;QACf,KAAK,WAAW;UACZD,eAAe,CAAC,IAAI,CAAC;UACrB;QACJ,KAAK,YAAY;UACb,IAAIE,SAAS,EAAE;YACXA,SAAS,EAAE;UACf;UACA;QACJ,KAAK,WAAW;UACZS,WAAW,CAAC,IAAI,CAAC;UACjB;MACR;IACJ,CAAC;IACDN,UAAU,EAAEA,UAAU;IACtBC,UAAU,EAAEA;EAAU,GAErBgB,OAAO,CACiB,EAC7BlC,KAAA,CAAAsC,aAAA;IAAA,cACe,eAAe;IAC1BC,SAAS,EAAE,gCAAgCjB,QAAQ,IAAI,qCAAqC,EAAE;IAC9FE,GAAG,EAAEA,GAAG;IACRmB,IAAI,EAAC;EAAM,GAEV3B,SAAS,GACNhB,KAAA,CAAAsC,aAAA;IACIC,SAAS,EAAC,mCAAmC;IAC7CG,OAAO,EAAE,MAAAA,CAAA,KAAW;MAChB,MAAME,SAAS,CAACC,SAAS,CAACC,SAAS,CAAC9B,SAAS,CAACoB,QAAQ,EAAE,CAAC;MACzDf,SAAS,CAAC,IAAI,CAAC;MACf0B,UAAU,CAAC,MAAM1B,SAAS,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;IAC3C,CAAC;IACDsB,IAAI,EAAC;EAAU,GAEdvB,MAAM,GAAGX,MAAM,CAAC,QAAQ,CAAC,GAAGA,MAAM,CAAC,cAAc,CAAC,CAClD,GACL,IAAI,EACRT,KAAA,CAAAsC,aAAA;IACIC,SAAS,EAAC,mCAAmC;IAC7CG,OAAO,EAAEA,CAAA,KAAK;MACV9B,eAAe,CAAC,IAAI,CAAC;MACrBW,WAAW,CAAC,KAAK,CAAC;IACtB,CAAC;IACDoB,IAAI,EAAC;EAAU,GAEdlC,MAAM,CAAC,eAAe,CAAC,CACvB,EACJM,YAAY,GACTf,KAAA,CAAAsC,aAAA;IACIC,SAAS,EAAC,mCAAmC;IAC7CG,OAAO,EAAEA,CAAA,KAAK;MACV3B,YAAY,EAAE;MACdQ,WAAW,CAAC,KAAK,CAAC;IACtB,CAAC;IACDoB,IAAI,EAAC;EAAU,GAEdlC,MAAM,CAAC,YAAY,CAAC,CACpB,GACL,IAAI,CACP,CACH;AAEd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}