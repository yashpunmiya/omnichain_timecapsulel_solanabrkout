{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.storage = void 0;\nconst utils_1 = require(\"@trezor/utils\");\nconst storageVersion = 2;\nconst storageName = `storage_v${storageVersion}`;\nconst getEmptyState = () => ({\n  origin: {}\n});\nlet memoryStorage = getEmptyState();\nconst getPermanentStorage = () => {\n  const ls = localStorage.getItem(storageName);\n  return ls ? JSON.parse(ls) : getEmptyState();\n};\nclass Storage extends utils_1.TypedEmitter {\n  save(getNewState, temporary = false) {\n    if (temporary || !global.window) {\n      memoryStorage = getNewState(memoryStorage);\n      return;\n    }\n    try {\n      const newState = getNewState(getPermanentStorage());\n      localStorage.setItem(storageName, JSON.stringify(newState));\n      this.emit('changed', newState);\n    } catch {\n      console.warn('long term storage not available');\n      memoryStorage = getNewState(memoryStorage);\n    }\n  }\n  saveForOrigin(getNewState, origin, temporary = false) {\n    this.save(state => ({\n      ...state,\n      origin: {\n        ...state.origin,\n        [origin]: getNewState(state.origin?.[origin] || {})\n      }\n    }), temporary);\n  }\n  load(temporary = false) {\n    if (temporary || !global?.window?.localStorage) {\n      return memoryStorage;\n    }\n    try {\n      return getPermanentStorage();\n    } catch {\n      console.warn('long term storage not available');\n      return memoryStorage;\n    }\n  }\n  loadForOrigin(origin, temporary = false) {\n    const state = this.load(temporary);\n    return state.origin?.[origin] || {};\n  }\n}\nconst storage = new Storage();\nexports.storage = storage;","map":{"version":3,"names":["Object","defineProperty","exports","value","storage","utils_1","require","storageVersion","storageName","getEmptyState","origin","memoryStorage","getPermanentStorage","ls","localStorage","getItem","JSON","parse","Storage","TypedEmitter","save","getNewState","temporary","global","window","newState","setItem","stringify","emit","console","warn","saveForOrigin","state","load","loadForOrigin"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@trezor/connect-common/lib/storage.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storage = void 0;\nconst utils_1 = require(\"@trezor/utils\");\nconst storageVersion = 2;\nconst storageName = `storage_v${storageVersion}`;\nconst getEmptyState = () => ({\n    origin: {},\n});\nlet memoryStorage = getEmptyState();\nconst getPermanentStorage = () => {\n    const ls = localStorage.getItem(storageName);\n    return ls ? JSON.parse(ls) : getEmptyState();\n};\nclass Storage extends utils_1.TypedEmitter {\n    save(getNewState, temporary = false) {\n        if (temporary || !global.window) {\n            memoryStorage = getNewState(memoryStorage);\n            return;\n        }\n        try {\n            const newState = getNewState(getPermanentStorage());\n            localStorage.setItem(storageName, JSON.stringify(newState));\n            this.emit('changed', newState);\n        }\n        catch {\n            console.warn('long term storage not available');\n            memoryStorage = getNewState(memoryStorage);\n        }\n    }\n    saveForOrigin(getNewState, origin, temporary = false) {\n        this.save(state => ({\n            ...state,\n            origin: {\n                ...state.origin,\n                [origin]: getNewState(state.origin?.[origin] || {}),\n            },\n        }), temporary);\n    }\n    load(temporary = false) {\n        if (temporary || !global?.window?.localStorage) {\n            return memoryStorage;\n        }\n        try {\n            return getPermanentStorage();\n        }\n        catch {\n            console.warn('long term storage not available');\n            return memoryStorage;\n        }\n    }\n    loadForOrigin(origin, temporary = false) {\n        const state = this.load(temporary);\n        return state.origin?.[origin] || {};\n    }\n}\nconst storage = new Storage();\nexports.storage = storage;\n//# sourceMappingURL=storage.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,MAAMC,OAAO,GAAGC,OAAO,CAAC,eAAe,CAAC;AACxC,MAAMC,cAAc,GAAG,CAAC;AACxB,MAAMC,WAAW,GAAG,YAAYD,cAAc,EAAE;AAChD,MAAME,aAAa,GAAGA,CAAA,MAAO;EACzBC,MAAM,EAAE,CAAC;AACb,CAAC,CAAC;AACF,IAAIC,aAAa,GAAGF,aAAa,CAAC,CAAC;AACnC,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;EAC9B,MAAMC,EAAE,GAAGC,YAAY,CAACC,OAAO,CAACP,WAAW,CAAC;EAC5C,OAAOK,EAAE,GAAGG,IAAI,CAACC,KAAK,CAACJ,EAAE,CAAC,GAAGJ,aAAa,CAAC,CAAC;AAChD,CAAC;AACD,MAAMS,OAAO,SAASb,OAAO,CAACc,YAAY,CAAC;EACvCC,IAAIA,CAACC,WAAW,EAAEC,SAAS,GAAG,KAAK,EAAE;IACjC,IAAIA,SAAS,IAAI,CAACC,MAAM,CAACC,MAAM,EAAE;MAC7Bb,aAAa,GAAGU,WAAW,CAACV,aAAa,CAAC;MAC1C;IACJ;IACA,IAAI;MACA,MAAMc,QAAQ,GAAGJ,WAAW,CAACT,mBAAmB,CAAC,CAAC,CAAC;MACnDE,YAAY,CAACY,OAAO,CAAClB,WAAW,EAAEQ,IAAI,CAACW,SAAS,CAACF,QAAQ,CAAC,CAAC;MAC3D,IAAI,CAACG,IAAI,CAAC,SAAS,EAAEH,QAAQ,CAAC;IAClC,CAAC,CACD,MAAM;MACFI,OAAO,CAACC,IAAI,CAAC,iCAAiC,CAAC;MAC/CnB,aAAa,GAAGU,WAAW,CAACV,aAAa,CAAC;IAC9C;EACJ;EACAoB,aAAaA,CAACV,WAAW,EAAEX,MAAM,EAAEY,SAAS,GAAG,KAAK,EAAE;IAClD,IAAI,CAACF,IAAI,CAACY,KAAK,KAAK;MAChB,GAAGA,KAAK;MACRtB,MAAM,EAAE;QACJ,GAAGsB,KAAK,CAACtB,MAAM;QACf,CAACA,MAAM,GAAGW,WAAW,CAACW,KAAK,CAACtB,MAAM,GAAGA,MAAM,CAAC,IAAI,CAAC,CAAC;MACtD;IACJ,CAAC,CAAC,EAAEY,SAAS,CAAC;EAClB;EACAW,IAAIA,CAACX,SAAS,GAAG,KAAK,EAAE;IACpB,IAAIA,SAAS,IAAI,CAACC,MAAM,EAAEC,MAAM,EAAEV,YAAY,EAAE;MAC5C,OAAOH,aAAa;IACxB;IACA,IAAI;MACA,OAAOC,mBAAmB,CAAC,CAAC;IAChC,CAAC,CACD,MAAM;MACFiB,OAAO,CAACC,IAAI,CAAC,iCAAiC,CAAC;MAC/C,OAAOnB,aAAa;IACxB;EACJ;EACAuB,aAAaA,CAACxB,MAAM,EAAEY,SAAS,GAAG,KAAK,EAAE;IACrC,MAAMU,KAAK,GAAG,IAAI,CAACC,IAAI,CAACX,SAAS,CAAC;IAClC,OAAOU,KAAK,CAACtB,MAAM,GAAGA,MAAM,CAAC,IAAI,CAAC,CAAC;EACvC;AACJ;AACA,MAAMN,OAAO,GAAG,IAAIc,OAAO,CAAC,CAAC;AAC7BhB,OAAO,CAACE,OAAO,GAAGA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}