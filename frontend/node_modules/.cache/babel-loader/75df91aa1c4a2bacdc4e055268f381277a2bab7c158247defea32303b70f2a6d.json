{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrezorConnect = exports.CoreInPopup = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = tslib_1.__importDefault(require(\"events\"));\nconst ERRORS = tslib_1.__importStar(require(\"@trezor/connect/lib/constants/errors\"));\nconst events_2 = require(\"@trezor/connect/lib/events\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst debug_1 = require(\"@trezor/connect/lib/utils/debug\");\nconst utils_1 = require(\"@trezor/utils\");\nconst connectSettings_1 = require(\"../connectSettings\");\nconst popup = tslib_1.__importStar(require(\"../popup\"));\nclass CoreInPopup {\n  eventEmitter = new events_1.default();\n  _settings;\n  logger;\n  popupManagerLogger;\n  _popupManager;\n  constructor() {\n    this._settings = (0, connectSettings_1.parseConnectSettings)();\n    this.logger = (0, debug_1.initLog)('@trezor/connect-web');\n    this.popupManagerLogger = (0, debug_1.initLog)('@trezor/connect-web/popupManager');\n  }\n  logWriterFactory(popupManager) {\n    return {\n      add: message => {\n        popupManager.channel.postMessage({\n          event: events_2.UI_EVENT,\n          type: events_2.IFRAME.LOG,\n          payload: message\n        }, {\n          usePromise: false,\n          useQueue: true\n        });\n      }\n    };\n  }\n  manifest(data) {\n    this._settings = (0, connectSettings_1.parseConnectSettings)({\n      ...this._settings,\n      manifest: data\n    });\n  }\n  dispose() {\n    this.eventEmitter.removeAllListeners();\n    this._settings = (0, connectSettings_1.parseConnectSettings)();\n    if (this._popupManager) {\n      this._popupManager.close();\n    }\n    return Promise.resolve(undefined);\n  }\n  cancel(error) {\n    if (this._popupManager) {\n      this._popupManager.emit(events_2.POPUP.CLOSED, error);\n    }\n  }\n  init(settings) {\n    const oldSettings = (0, connectSettings_1.parseConnectSettings)({\n      ...this._settings\n    });\n    const newSettings = (0, connectSettings_1.parseConnectSettings)({\n      ...this._settings,\n      ...settings\n    });\n    if (!newSettings.transports?.length) {\n      newSettings.transports = ['BridgeTransport', 'WebUsbTransport'];\n    }\n    newSettings.useCoreInPopup = true;\n    if (typeof window !== 'undefined' && window?.location?.origin) {\n      newSettings.origin = window.location.origin;\n    }\n    const equalSettings = JSON.stringify(oldSettings) === JSON.stringify(newSettings);\n    this._settings = newSettings;\n    if (!this._popupManager || !equalSettings) {\n      if (this._popupManager) this._popupManager.close();\n      this._popupManager = new popup.PopupManager(this._settings, {\n        logger: this.popupManagerLogger\n      });\n      this._popupManager.on(events_2.DEVICE_EVENT, event => {\n        this.eventEmitter.emit(events_2.DEVICE_EVENT, event);\n      });\n      (0, debug_1.setLogWriter)(() => this.logWriterFactory(this._popupManager));\n    }\n    this.logger.enabled = !!settings.debug;\n    if (!this._settings.manifest) {\n      throw ERRORS.TypedError('Init_ManifestMissing');\n    }\n    this.logger.debug('initiated');\n    return Promise.resolve();\n  }\n  setTransports() {\n    throw new Error('Unsupported right now');\n  }\n  async call(params) {\n    this.logger.debug('call', params);\n    if (!this._popupManager) {\n      return (0, events_2.createErrorMessage)(ERRORS.TypedError('Init_NotInitialized'));\n    }\n    if (this._settings.popup) {\n      await this._popupManager.request();\n    }\n    const popupClosed = (0, utils_1.createDeferred)();\n    const popupClosedHandler = () => {\n      this.logger.log('Popup closed during initialization');\n      popupClosed.reject(ERRORS.TypedError('Method_Interrupted'));\n    };\n    this._popupManager.once(events_2.POPUP.CLOSED, popupClosedHandler);\n    try {\n      this.logger.debug('call: popup initialing');\n      await Promise.race([popupClosed.promise, this.callInit()]);\n      this.logger.debug('call: popup initialized');\n      const response = await this._popupManager.channel.postMessage({\n        type: events_2.IFRAME.CALL,\n        payload: params\n      });\n      this.logger.debug('call: response: ', response);\n      if (response) {\n        if (this._popupManager && response.success) {\n          this._popupManager.clear();\n        }\n        return {\n          success: response.success,\n          payload: response.payload,\n          device: response.device\n        };\n      }\n      throw ERRORS.TypedError('Method_NoResponse');\n    } catch (error) {\n      this.logger.error('call: error', error);\n      this._popupManager.clear(false);\n      return (0, events_2.createErrorMessage)(error);\n    } finally {\n      this._popupManager.removeListener(events_2.POPUP.CLOSED, popupClosedHandler);\n    }\n  }\n  async callInit() {\n    if (!this._popupManager) {\n      throw ERRORS.TypedError('Init_NotInitialized');\n    }\n    await this._popupManager.channel.init();\n    if (this._settings.env === 'webextension') {\n      await this._popupManager.popupPromise?.promise;\n      this._popupManager.channel.postMessage({\n        type: events_2.POPUP.INIT,\n        payload: {\n          settings: this._settings,\n          useCore: true\n        }\n      });\n    }\n    await this._popupManager.handshakePromise?.promise;\n  }\n  uiResponse(response) {\n    const {\n      type,\n      payload\n    } = response;\n    this._popupManager?.channel?.postMessage({\n      event: events_2.UI_EVENT,\n      type,\n      payload\n    });\n  }\n  renderWebUSBButton() {}\n  requestLogin() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  disableWebUSB() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  requestWebUSBDevice() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n}\nexports.CoreInPopup = CoreInPopup;\nconst impl = new CoreInPopup();\nexports.TrezorConnect = (0, factory_1.factory)({\n  eventEmitter: impl.eventEmitter,\n  init: impl.init.bind(impl),\n  call: impl.call.bind(impl),\n  setTransports: impl.setTransports.bind(impl),\n  manifest: impl.manifest.bind(impl),\n  requestLogin: impl.requestLogin.bind(impl),\n  uiResponse: impl.uiResponse.bind(impl),\n  cancel: impl.cancel.bind(impl),\n  dispose: impl.dispose.bind(impl)\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","TrezorConnect","CoreInPopup","tslib_1","require","events_1","__importDefault","ERRORS","__importStar","events_2","factory_1","debug_1","utils_1","connectSettings_1","popup","eventEmitter","default","_settings","logger","popupManagerLogger","_popupManager","constructor","parseConnectSettings","initLog","logWriterFactory","popupManager","add","message","channel","postMessage","event","UI_EVENT","type","IFRAME","LOG","payload","usePromise","useQueue","manifest","data","dispose","removeAllListeners","close","Promise","resolve","undefined","cancel","error","emit","POPUP","CLOSED","init","settings","oldSettings","newSettings","transports","length","useCoreInPopup","window","location","origin","equalSettings","JSON","stringify","PopupManager","on","DEVICE_EVENT","setLogWriter","enabled","debug","TypedError","setTransports","Error","call","params","createErrorMessage","request","popupClosed","createDeferred","popupClosedHandler","log","reject","once","race","promise","callInit","response","CALL","success","clear","device","removeListener","env","popupPromise","INIT","useCore","handshakePromise","uiResponse","renderWebUSBButton","requestLogin","disableWebUSB","requestWebUSBDevice","impl","factory","bind"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@trezor/connect-web/lib/impl/core-in-popup.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrezorConnect = exports.CoreInPopup = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = tslib_1.__importDefault(require(\"events\"));\nconst ERRORS = tslib_1.__importStar(require(\"@trezor/connect/lib/constants/errors\"));\nconst events_2 = require(\"@trezor/connect/lib/events\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst debug_1 = require(\"@trezor/connect/lib/utils/debug\");\nconst utils_1 = require(\"@trezor/utils\");\nconst connectSettings_1 = require(\"../connectSettings\");\nconst popup = tslib_1.__importStar(require(\"../popup\"));\nclass CoreInPopup {\n    eventEmitter = new events_1.default();\n    _settings;\n    logger;\n    popupManagerLogger;\n    _popupManager;\n    constructor() {\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        this.logger = (0, debug_1.initLog)('@trezor/connect-web');\n        this.popupManagerLogger = (0, debug_1.initLog)('@trezor/connect-web/popupManager');\n    }\n    logWriterFactory(popupManager) {\n        return {\n            add: (message) => {\n                popupManager.channel.postMessage({\n                    event: events_2.UI_EVENT,\n                    type: events_2.IFRAME.LOG,\n                    payload: message,\n                }, { usePromise: false, useQueue: true });\n            },\n        };\n    }\n    manifest(data) {\n        this._settings = (0, connectSettings_1.parseConnectSettings)({\n            ...this._settings,\n            manifest: data,\n        });\n    }\n    dispose() {\n        this.eventEmitter.removeAllListeners();\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        if (this._popupManager) {\n            this._popupManager.close();\n        }\n        return Promise.resolve(undefined);\n    }\n    cancel(error) {\n        if (this._popupManager) {\n            this._popupManager.emit(events_2.POPUP.CLOSED, error);\n        }\n    }\n    init(settings) {\n        const oldSettings = (0, connectSettings_1.parseConnectSettings)({\n            ...this._settings,\n        });\n        const newSettings = (0, connectSettings_1.parseConnectSettings)({\n            ...this._settings,\n            ...settings,\n        });\n        if (!newSettings.transports?.length) {\n            newSettings.transports = ['BridgeTransport', 'WebUsbTransport'];\n        }\n        newSettings.useCoreInPopup = true;\n        if (typeof window !== 'undefined' && window?.location?.origin) {\n            newSettings.origin = window.location.origin;\n        }\n        const equalSettings = JSON.stringify(oldSettings) === JSON.stringify(newSettings);\n        this._settings = newSettings;\n        if (!this._popupManager || !equalSettings) {\n            if (this._popupManager)\n                this._popupManager.close();\n            this._popupManager = new popup.PopupManager(this._settings, {\n                logger: this.popupManagerLogger,\n            });\n            this._popupManager.on(events_2.DEVICE_EVENT, event => {\n                this.eventEmitter.emit(events_2.DEVICE_EVENT, event);\n            });\n            (0, debug_1.setLogWriter)(() => this.logWriterFactory(this._popupManager));\n        }\n        this.logger.enabled = !!settings.debug;\n        if (!this._settings.manifest) {\n            throw ERRORS.TypedError('Init_ManifestMissing');\n        }\n        this.logger.debug('initiated');\n        return Promise.resolve();\n    }\n    setTransports() {\n        throw new Error('Unsupported right now');\n    }\n    async call(params) {\n        this.logger.debug('call', params);\n        if (!this._popupManager) {\n            return (0, events_2.createErrorMessage)(ERRORS.TypedError('Init_NotInitialized'));\n        }\n        if (this._settings.popup) {\n            await this._popupManager.request();\n        }\n        const popupClosed = (0, utils_1.createDeferred)();\n        const popupClosedHandler = () => {\n            this.logger.log('Popup closed during initialization');\n            popupClosed.reject(ERRORS.TypedError('Method_Interrupted'));\n        };\n        this._popupManager.once(events_2.POPUP.CLOSED, popupClosedHandler);\n        try {\n            this.logger.debug('call: popup initialing');\n            await Promise.race([popupClosed.promise, this.callInit()]);\n            this.logger.debug('call: popup initialized');\n            const response = await this._popupManager.channel.postMessage({\n                type: events_2.IFRAME.CALL,\n                payload: params,\n            });\n            this.logger.debug('call: response: ', response);\n            if (response) {\n                if (this._popupManager && response.success) {\n                    this._popupManager.clear();\n                }\n                return {\n                    success: response.success,\n                    payload: response.payload,\n                    device: response.device,\n                };\n            }\n            throw ERRORS.TypedError('Method_NoResponse');\n        }\n        catch (error) {\n            this.logger.error('call: error', error);\n            this._popupManager.clear(false);\n            return (0, events_2.createErrorMessage)(error);\n        }\n        finally {\n            this._popupManager.removeListener(events_2.POPUP.CLOSED, popupClosedHandler);\n        }\n    }\n    async callInit() {\n        if (!this._popupManager) {\n            throw ERRORS.TypedError('Init_NotInitialized');\n        }\n        await this._popupManager.channel.init();\n        if (this._settings.env === 'webextension') {\n            await this._popupManager.popupPromise?.promise;\n            this._popupManager.channel.postMessage({\n                type: events_2.POPUP.INIT,\n                payload: {\n                    settings: this._settings,\n                    useCore: true,\n                },\n            });\n        }\n        await this._popupManager.handshakePromise?.promise;\n    }\n    uiResponse(response) {\n        const { type, payload } = response;\n        this._popupManager?.channel?.postMessage({ event: events_2.UI_EVENT, type, payload });\n    }\n    renderWebUSBButton() { }\n    requestLogin() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    disableWebUSB() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    requestWebUSBDevice() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n}\nexports.CoreInPopup = CoreInPopup;\nconst impl = new CoreInPopup();\nexports.TrezorConnect = (0, factory_1.factory)({\n    eventEmitter: impl.eventEmitter,\n    init: impl.init.bind(impl),\n    call: impl.call.bind(impl),\n    setTransports: impl.setTransports.bind(impl),\n    manifest: impl.manifest.bind(impl),\n    requestLogin: impl.requestLogin.bind(impl),\n    uiResponse: impl.uiResponse.bind(impl),\n    cancel: impl.cancel.bind(impl),\n    dispose: impl.dispose.bind(impl),\n});\n//# sourceMappingURL=core-in-popup.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAGF,OAAO,CAACG,WAAW,GAAG,KAAK,CAAC;AACpD,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAO,CAAC;AAChC,MAAMC,QAAQ,GAAGF,OAAO,CAACG,eAAe,CAACF,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC3D,MAAMG,MAAM,GAAGJ,OAAO,CAACK,YAAY,CAACJ,OAAO,CAAC,sCAAsC,CAAC,CAAC;AACpF,MAAMK,QAAQ,GAAGL,OAAO,CAAC,4BAA4B,CAAC;AACtD,MAAMM,SAAS,GAAGN,OAAO,CAAC,6BAA6B,CAAC;AACxD,MAAMO,OAAO,GAAGP,OAAO,CAAC,iCAAiC,CAAC;AAC1D,MAAMQ,OAAO,GAAGR,OAAO,CAAC,eAAe,CAAC;AACxC,MAAMS,iBAAiB,GAAGT,OAAO,CAAC,oBAAoB,CAAC;AACvD,MAAMU,KAAK,GAAGX,OAAO,CAACK,YAAY,CAACJ,OAAO,CAAC,UAAU,CAAC,CAAC;AACvD,MAAMF,WAAW,CAAC;EACda,YAAY,GAAG,IAAIV,QAAQ,CAACW,OAAO,CAAC,CAAC;EACrCC,SAAS;EACTC,MAAM;EACNC,kBAAkB;EAClBC,aAAa;EACbC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACJ,SAAS,GAAG,CAAC,CAAC,EAAEJ,iBAAiB,CAACS,oBAAoB,EAAE,CAAC;IAC9D,IAAI,CAACJ,MAAM,GAAG,CAAC,CAAC,EAAEP,OAAO,CAACY,OAAO,EAAE,qBAAqB,CAAC;IACzD,IAAI,CAACJ,kBAAkB,GAAG,CAAC,CAAC,EAAER,OAAO,CAACY,OAAO,EAAE,kCAAkC,CAAC;EACtF;EACAC,gBAAgBA,CAACC,YAAY,EAAE;IAC3B,OAAO;MACHC,GAAG,EAAGC,OAAO,IAAK;QACdF,YAAY,CAACG,OAAO,CAACC,WAAW,CAAC;UAC7BC,KAAK,EAAErB,QAAQ,CAACsB,QAAQ;UACxBC,IAAI,EAAEvB,QAAQ,CAACwB,MAAM,CAACC,GAAG;UACzBC,OAAO,EAAER;QACb,CAAC,EAAE;UAAES,UAAU,EAAE,KAAK;UAAEC,QAAQ,EAAE;QAAK,CAAC,CAAC;MAC7C;IACJ,CAAC;EACL;EACAC,QAAQA,CAACC,IAAI,EAAE;IACX,IAAI,CAACtB,SAAS,GAAG,CAAC,CAAC,EAAEJ,iBAAiB,CAACS,oBAAoB,EAAE;MACzD,GAAG,IAAI,CAACL,SAAS;MACjBqB,QAAQ,EAAEC;IACd,CAAC,CAAC;EACN;EACAC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACzB,YAAY,CAAC0B,kBAAkB,CAAC,CAAC;IACtC,IAAI,CAACxB,SAAS,GAAG,CAAC,CAAC,EAAEJ,iBAAiB,CAACS,oBAAoB,EAAE,CAAC;IAC9D,IAAI,IAAI,CAACF,aAAa,EAAE;MACpB,IAAI,CAACA,aAAa,CAACsB,KAAK,CAAC,CAAC;IAC9B;IACA,OAAOC,OAAO,CAACC,OAAO,CAACC,SAAS,CAAC;EACrC;EACAC,MAAMA,CAACC,KAAK,EAAE;IACV,IAAI,IAAI,CAAC3B,aAAa,EAAE;MACpB,IAAI,CAACA,aAAa,CAAC4B,IAAI,CAACvC,QAAQ,CAACwC,KAAK,CAACC,MAAM,EAAEH,KAAK,CAAC;IACzD;EACJ;EACAI,IAAIA,CAACC,QAAQ,EAAE;IACX,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAExC,iBAAiB,CAACS,oBAAoB,EAAE;MAC5D,GAAG,IAAI,CAACL;IACZ,CAAC,CAAC;IACF,MAAMqC,WAAW,GAAG,CAAC,CAAC,EAAEzC,iBAAiB,CAACS,oBAAoB,EAAE;MAC5D,GAAG,IAAI,CAACL,SAAS;MACjB,GAAGmC;IACP,CAAC,CAAC;IACF,IAAI,CAACE,WAAW,CAACC,UAAU,EAAEC,MAAM,EAAE;MACjCF,WAAW,CAACC,UAAU,GAAG,CAAC,iBAAiB,EAAE,iBAAiB,CAAC;IACnE;IACAD,WAAW,CAACG,cAAc,GAAG,IAAI;IACjC,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAE;MAC3DN,WAAW,CAACM,MAAM,GAAGF,MAAM,CAACC,QAAQ,CAACC,MAAM;IAC/C;IACA,MAAMC,aAAa,GAAGC,IAAI,CAACC,SAAS,CAACV,WAAW,CAAC,KAAKS,IAAI,CAACC,SAAS,CAACT,WAAW,CAAC;IACjF,IAAI,CAACrC,SAAS,GAAGqC,WAAW;IAC5B,IAAI,CAAC,IAAI,CAAClC,aAAa,IAAI,CAACyC,aAAa,EAAE;MACvC,IAAI,IAAI,CAACzC,aAAa,EAClB,IAAI,CAACA,aAAa,CAACsB,KAAK,CAAC,CAAC;MAC9B,IAAI,CAACtB,aAAa,GAAG,IAAIN,KAAK,CAACkD,YAAY,CAAC,IAAI,CAAC/C,SAAS,EAAE;QACxDC,MAAM,EAAE,IAAI,CAACC;MACjB,CAAC,CAAC;MACF,IAAI,CAACC,aAAa,CAAC6C,EAAE,CAACxD,QAAQ,CAACyD,YAAY,EAAEpC,KAAK,IAAI;QAClD,IAAI,CAACf,YAAY,CAACiC,IAAI,CAACvC,QAAQ,CAACyD,YAAY,EAAEpC,KAAK,CAAC;MACxD,CAAC,CAAC;MACF,CAAC,CAAC,EAAEnB,OAAO,CAACwD,YAAY,EAAE,MAAM,IAAI,CAAC3C,gBAAgB,CAAC,IAAI,CAACJ,aAAa,CAAC,CAAC;IAC9E;IACA,IAAI,CAACF,MAAM,CAACkD,OAAO,GAAG,CAAC,CAAChB,QAAQ,CAACiB,KAAK;IACtC,IAAI,CAAC,IAAI,CAACpD,SAAS,CAACqB,QAAQ,EAAE;MAC1B,MAAM/B,MAAM,CAAC+D,UAAU,CAAC,sBAAsB,CAAC;IACnD;IACA,IAAI,CAACpD,MAAM,CAACmD,KAAK,CAAC,WAAW,CAAC;IAC9B,OAAO1B,OAAO,CAACC,OAAO,CAAC,CAAC;EAC5B;EACA2B,aAAaA,CAAA,EAAG;IACZ,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC5C;EACA,MAAMC,IAAIA,CAACC,MAAM,EAAE;IACf,IAAI,CAACxD,MAAM,CAACmD,KAAK,CAAC,MAAM,EAAEK,MAAM,CAAC;IACjC,IAAI,CAAC,IAAI,CAACtD,aAAa,EAAE;MACrB,OAAO,CAAC,CAAC,EAAEX,QAAQ,CAACkE,kBAAkB,EAAEpE,MAAM,CAAC+D,UAAU,CAAC,qBAAqB,CAAC,CAAC;IACrF;IACA,IAAI,IAAI,CAACrD,SAAS,CAACH,KAAK,EAAE;MACtB,MAAM,IAAI,CAACM,aAAa,CAACwD,OAAO,CAAC,CAAC;IACtC;IACA,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAEjE,OAAO,CAACkE,cAAc,EAAE,CAAC;IACjD,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;MAC7B,IAAI,CAAC7D,MAAM,CAAC8D,GAAG,CAAC,oCAAoC,CAAC;MACrDH,WAAW,CAACI,MAAM,CAAC1E,MAAM,CAAC+D,UAAU,CAAC,oBAAoB,CAAC,CAAC;IAC/D,CAAC;IACD,IAAI,CAAClD,aAAa,CAAC8D,IAAI,CAACzE,QAAQ,CAACwC,KAAK,CAACC,MAAM,EAAE6B,kBAAkB,CAAC;IAClE,IAAI;MACA,IAAI,CAAC7D,MAAM,CAACmD,KAAK,CAAC,wBAAwB,CAAC;MAC3C,MAAM1B,OAAO,CAACwC,IAAI,CAAC,CAACN,WAAW,CAACO,OAAO,EAAE,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC1D,IAAI,CAACnE,MAAM,CAACmD,KAAK,CAAC,yBAAyB,CAAC;MAC5C,MAAMiB,QAAQ,GAAG,MAAM,IAAI,CAAClE,aAAa,CAACQ,OAAO,CAACC,WAAW,CAAC;QAC1DG,IAAI,EAAEvB,QAAQ,CAACwB,MAAM,CAACsD,IAAI;QAC1BpD,OAAO,EAAEuC;MACb,CAAC,CAAC;MACF,IAAI,CAACxD,MAAM,CAACmD,KAAK,CAAC,kBAAkB,EAAEiB,QAAQ,CAAC;MAC/C,IAAIA,QAAQ,EAAE;QACV,IAAI,IAAI,CAAClE,aAAa,IAAIkE,QAAQ,CAACE,OAAO,EAAE;UACxC,IAAI,CAACpE,aAAa,CAACqE,KAAK,CAAC,CAAC;QAC9B;QACA,OAAO;UACHD,OAAO,EAAEF,QAAQ,CAACE,OAAO;UACzBrD,OAAO,EAAEmD,QAAQ,CAACnD,OAAO;UACzBuD,MAAM,EAAEJ,QAAQ,CAACI;QACrB,CAAC;MACL;MACA,MAAMnF,MAAM,CAAC+D,UAAU,CAAC,mBAAmB,CAAC;IAChD,CAAC,CACD,OAAOvB,KAAK,EAAE;MACV,IAAI,CAAC7B,MAAM,CAAC6B,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACvC,IAAI,CAAC3B,aAAa,CAACqE,KAAK,CAAC,KAAK,CAAC;MAC/B,OAAO,CAAC,CAAC,EAAEhF,QAAQ,CAACkE,kBAAkB,EAAE5B,KAAK,CAAC;IAClD,CAAC,SACO;MACJ,IAAI,CAAC3B,aAAa,CAACuE,cAAc,CAAClF,QAAQ,CAACwC,KAAK,CAACC,MAAM,EAAE6B,kBAAkB,CAAC;IAChF;EACJ;EACA,MAAMM,QAAQA,CAAA,EAAG;IACb,IAAI,CAAC,IAAI,CAACjE,aAAa,EAAE;MACrB,MAAMb,MAAM,CAAC+D,UAAU,CAAC,qBAAqB,CAAC;IAClD;IACA,MAAM,IAAI,CAAClD,aAAa,CAACQ,OAAO,CAACuB,IAAI,CAAC,CAAC;IACvC,IAAI,IAAI,CAAClC,SAAS,CAAC2E,GAAG,KAAK,cAAc,EAAE;MACvC,MAAM,IAAI,CAACxE,aAAa,CAACyE,YAAY,EAAET,OAAO;MAC9C,IAAI,CAAChE,aAAa,CAACQ,OAAO,CAACC,WAAW,CAAC;QACnCG,IAAI,EAAEvB,QAAQ,CAACwC,KAAK,CAAC6C,IAAI;QACzB3D,OAAO,EAAE;UACLiB,QAAQ,EAAE,IAAI,CAACnC,SAAS;UACxB8E,OAAO,EAAE;QACb;MACJ,CAAC,CAAC;IACN;IACA,MAAM,IAAI,CAAC3E,aAAa,CAAC4E,gBAAgB,EAAEZ,OAAO;EACtD;EACAa,UAAUA,CAACX,QAAQ,EAAE;IACjB,MAAM;MAAEtD,IAAI;MAAEG;IAAQ,CAAC,GAAGmD,QAAQ;IAClC,IAAI,CAAClE,aAAa,EAAEQ,OAAO,EAAEC,WAAW,CAAC;MAAEC,KAAK,EAAErB,QAAQ,CAACsB,QAAQ;MAAEC,IAAI;MAAEG;IAAQ,CAAC,CAAC;EACzF;EACA+D,kBAAkBA,CAAA,EAAG,CAAE;EACvBC,YAAYA,CAAA,EAAG;IACX,MAAM5F,MAAM,CAAC+D,UAAU,CAAC,uBAAuB,CAAC;EACpD;EACA8B,aAAaA,CAAA,EAAG;IACZ,MAAM7F,MAAM,CAAC+D,UAAU,CAAC,uBAAuB,CAAC;EACpD;EACA+B,mBAAmBA,CAAA,EAAG;IAClB,MAAM9F,MAAM,CAAC+D,UAAU,CAAC,uBAAuB,CAAC;EACpD;AACJ;AACAvE,OAAO,CAACG,WAAW,GAAGA,WAAW;AACjC,MAAMoG,IAAI,GAAG,IAAIpG,WAAW,CAAC,CAAC;AAC9BH,OAAO,CAACE,aAAa,GAAG,CAAC,CAAC,EAAES,SAAS,CAAC6F,OAAO,EAAE;EAC3CxF,YAAY,EAAEuF,IAAI,CAACvF,YAAY;EAC/BoC,IAAI,EAAEmD,IAAI,CAACnD,IAAI,CAACqD,IAAI,CAACF,IAAI,CAAC;EAC1B7B,IAAI,EAAE6B,IAAI,CAAC7B,IAAI,CAAC+B,IAAI,CAACF,IAAI,CAAC;EAC1B/B,aAAa,EAAE+B,IAAI,CAAC/B,aAAa,CAACiC,IAAI,CAACF,IAAI,CAAC;EAC5ChE,QAAQ,EAAEgE,IAAI,CAAChE,QAAQ,CAACkE,IAAI,CAACF,IAAI,CAAC;EAClCH,YAAY,EAAEG,IAAI,CAACH,YAAY,CAACK,IAAI,CAACF,IAAI,CAAC;EAC1CL,UAAU,EAAEK,IAAI,CAACL,UAAU,CAACO,IAAI,CAACF,IAAI,CAAC;EACtCxD,MAAM,EAAEwD,IAAI,CAACxD,MAAM,CAAC0D,IAAI,CAACF,IAAI,CAAC;EAC9B9D,OAAO,EAAE8D,IAAI,CAAC9D,OAAO,CAACgE,IAAI,CAACF,IAAI;AACnC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}