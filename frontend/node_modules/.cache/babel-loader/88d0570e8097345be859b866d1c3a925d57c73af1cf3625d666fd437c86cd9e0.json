{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRandomInt = void 0;\nconst crypto_1 = require(\"crypto\");\nconst getRandomInt = (min, max) => {\n  if (!Number.isSafeInteger(min)) {\n    throw new RangeError(`The \"min\" argument must be a safe integer. Received type ${typeof min} (${min})`);\n  }\n  if (!Number.isSafeInteger(max)) {\n    throw new RangeError(`The \"max\" argument must be a safe integer. Received type ${typeof max} (${max})`);\n  }\n  if (min >= max) {\n    throw new RangeError(`The value of \"max\" is out of range. It must be greater than the value of \"min\" (${min}). Received ${max}`);\n  }\n  const MAX_RANGE_32_BITS = 0xffffffff + 1;\n  const range = max - min;\n  if (range > MAX_RANGE_32_BITS) {\n    throw new RangeError(`This function only provide 32 bits of entropy, therefore range cannot be more then 2^32.`);\n  }\n  const getRandomValues = typeof window !== 'undefined' ? array => window.crypto.getRandomValues(array) : array => (0, crypto_1.getRandomValues)(array);\n  const array = new Uint32Array(1);\n  const maxRange = MAX_RANGE_32_BITS - MAX_RANGE_32_BITS % range;\n  let randomValue;\n  do {\n    getRandomValues(array);\n    randomValue = array[0];\n  } while (randomValue >= maxRange);\n  return min + randomValue % range;\n};\nexports.getRandomInt = getRandomInt;","map":{"version":3,"names":["Object","defineProperty","exports","value","getRandomInt","crypto_1","require","min","max","Number","isSafeInteger","RangeError","MAX_RANGE_32_BITS","range","getRandomValues","window","array","crypto","Uint32Array","maxRange","randomValue"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@trezor/utils/lib/getRandomInt.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRandomInt = void 0;\nconst crypto_1 = require(\"crypto\");\nconst getRandomInt = (min, max) => {\n    if (!Number.isSafeInteger(min)) {\n        throw new RangeError(`The \"min\" argument must be a safe integer. Received type ${typeof min} (${min})`);\n    }\n    if (!Number.isSafeInteger(max)) {\n        throw new RangeError(`The \"max\" argument must be a safe integer. Received type ${typeof max} (${max})`);\n    }\n    if (min >= max) {\n        throw new RangeError(`The value of \"max\" is out of range. It must be greater than the value of \"min\" (${min}). Received ${max}`);\n    }\n    const MAX_RANGE_32_BITS = 0xffffffff + 1;\n    const range = max - min;\n    if (range > MAX_RANGE_32_BITS) {\n        throw new RangeError(`This function only provide 32 bits of entropy, therefore range cannot be more then 2^32.`);\n    }\n    const getRandomValues = typeof window !== 'undefined'\n        ? (array) => window.crypto.getRandomValues(array)\n        : (array) => (0, crypto_1.getRandomValues)(array);\n    const array = new Uint32Array(1);\n    const maxRange = MAX_RANGE_32_BITS - (MAX_RANGE_32_BITS % range);\n    let randomValue;\n    do {\n        getRandomValues(array);\n        randomValue = array[0];\n    } while (randomValue >= maxRange);\n    return min + (randomValue % range);\n};\nexports.getRandomInt = getRandomInt;\n//# sourceMappingURL=getRandomInt.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAClC,MAAMF,YAAY,GAAGA,CAACG,GAAG,EAAEC,GAAG,KAAK;EAC/B,IAAI,CAACC,MAAM,CAACC,aAAa,CAACH,GAAG,CAAC,EAAE;IAC5B,MAAM,IAAII,UAAU,CAAC,4DAA4D,OAAOJ,GAAG,KAAKA,GAAG,GAAG,CAAC;EAC3G;EACA,IAAI,CAACE,MAAM,CAACC,aAAa,CAACF,GAAG,CAAC,EAAE;IAC5B,MAAM,IAAIG,UAAU,CAAC,4DAA4D,OAAOH,GAAG,KAAKA,GAAG,GAAG,CAAC;EAC3G;EACA,IAAID,GAAG,IAAIC,GAAG,EAAE;IACZ,MAAM,IAAIG,UAAU,CAAC,mFAAmFJ,GAAG,eAAeC,GAAG,EAAE,CAAC;EACpI;EACA,MAAMI,iBAAiB,GAAG,UAAU,GAAG,CAAC;EACxC,MAAMC,KAAK,GAAGL,GAAG,GAAGD,GAAG;EACvB,IAAIM,KAAK,GAAGD,iBAAiB,EAAE;IAC3B,MAAM,IAAID,UAAU,CAAC,0FAA0F,CAAC;EACpH;EACA,MAAMG,eAAe,GAAG,OAAOC,MAAM,KAAK,WAAW,GAC9CC,KAAK,IAAKD,MAAM,CAACE,MAAM,CAACH,eAAe,CAACE,KAAK,CAAC,GAC9CA,KAAK,IAAK,CAAC,CAAC,EAAEX,QAAQ,CAACS,eAAe,EAAEE,KAAK,CAAC;EACrD,MAAMA,KAAK,GAAG,IAAIE,WAAW,CAAC,CAAC,CAAC;EAChC,MAAMC,QAAQ,GAAGP,iBAAiB,GAAIA,iBAAiB,GAAGC,KAAM;EAChE,IAAIO,WAAW;EACf,GAAG;IACCN,eAAe,CAACE,KAAK,CAAC;IACtBI,WAAW,GAAGJ,KAAK,CAAC,CAAC,CAAC;EAC1B,CAAC,QAAQI,WAAW,IAAID,QAAQ;EAChC,OAAOZ,GAAG,GAAIa,WAAW,GAAGP,KAAM;AACtC,CAAC;AACDX,OAAO,CAACE,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}