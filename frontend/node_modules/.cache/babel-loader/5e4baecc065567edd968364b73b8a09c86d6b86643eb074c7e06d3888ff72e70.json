{"ast":null,"code":"import { BaseError } from '../../errors.js';\nexport class InvalidParenthesisError extends BaseError {\n  constructor({\n    current,\n    depth\n  }) {\n    super('Unbalanced parentheses.', {\n      metaMessages: [`\"${current.trim()}\" has too many ${depth > 0 ? 'opening' : 'closing'} parentheses.`],\n      details: `Depth \"${depth}\"`\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidParenthesisError'\n    });\n  }\n}","map":{"version":3,"names":["BaseError","InvalidParenthesisError","constructor","current","depth","metaMessages","trim","details","Object","defineProperty"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\abitype\\src\\human-readable\\errors\\splitParameters.ts"],"sourcesContent":["import { BaseError } from '../../errors.js'\n\nexport class InvalidParenthesisError extends BaseError {\n  override name = 'InvalidParenthesisError'\n\n  constructor({ current, depth }: { current: string; depth: number }) {\n    super('Unbalanced parentheses.', {\n      metaMessages: [\n        `\"${current.trim()}\" has too many ${\n          depth > 0 ? 'opening' : 'closing'\n        } parentheses.`,\n      ],\n      details: `Depth \"${depth}\"`,\n    })\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAE3C,OAAM,MAAOC,uBAAwB,SAAQD,SAAS;EAGpDE,YAAY;IAAEC,OAAO;IAAEC;EAAK,CAAsC;IAChE,KAAK,CAAC,yBAAyB,EAAE;MAC/BC,YAAY,EAAE,CACZ,IAAIF,OAAO,CAACG,IAAI,EAAE,kBAChBF,KAAK,GAAG,CAAC,GAAG,SAAS,GAAG,SAC1B,eAAe,CAChB;MACDG,OAAO,EAAE,UAAUH,KAAK;KACzB,CAAC;IAVKI,MAAA,CAAAC,cAAA;;;;aAAO;;EAWhB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}