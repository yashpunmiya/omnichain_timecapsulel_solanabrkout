{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { AssetUtil, ConnectionController, ConnectorController, CoreHelperUtil, StorageUtil } from '@reown/appkit-controllers';\nimport { customElement } from '@reown/appkit-ui';\nimport '@reown/appkit-ui/wui-flex';\nimport '@reown/appkit-ui/wui-list-wallet';\nlet W3mConnectRecentWidget = class W3mConnectRecentWidget extends LitElement {\n  constructor() {\n    super();\n    this.unsubscribe = [];\n    this.tabIdx = undefined;\n    this.connectors = ConnectorController.state.connectors;\n    this.loading = false;\n    this.unsubscribe.push(ConnectorController.subscribeKey('connectors', val => this.connectors = val));\n    if (CoreHelperUtil.isTelegram() && CoreHelperUtil.isIos()) {\n      this.loading = !ConnectionController.state.wcUri;\n      this.unsubscribe.push(ConnectionController.subscribeKey('wcUri', val => this.loading = !val));\n    }\n  }\n  render() {\n    const recentWallets = StorageUtil.getRecentWallets();\n    const filteredRecentWallets = recentWallets.filter(wallet => !this.connectors.some(connector => connector.id === wallet.id || connector.name === wallet.name));\n    if (!filteredRecentWallets.length) {\n      this.style.cssText = `display: none`;\n      return null;\n    }\n    return html`\n      <wui-flex flexDirection=\"column\" gap=\"xs\">\n        ${filteredRecentWallets.map(wallet => html`\n            <wui-list-wallet\n              imageSrc=${ifDefined(AssetUtil.getWalletImage(wallet))}\n              name=${wallet.name ?? 'Unknown'}\n              @click=${() => this.onConnectWallet(wallet)}\n              tagLabel=\"recent\"\n              tagVariant=\"shade\"\n              tabIdx=${ifDefined(this.tabIdx)}\n              ?loading=${this.loading}\n            >\n            </wui-list-wallet>\n          `)}\n      </wui-flex>\n    `;\n  }\n  onConnectWallet(wallet) {\n    if (this.loading) {\n      return;\n    }\n    ConnectorController.selectWalletConnector(wallet);\n  }\n};\n__decorate([property()], W3mConnectRecentWidget.prototype, \"tabIdx\", void 0);\n__decorate([state()], W3mConnectRecentWidget.prototype, \"connectors\", void 0);\n__decorate([state()], W3mConnectRecentWidget.prototype, \"loading\", void 0);\nW3mConnectRecentWidget = __decorate([customElement('w3m-connect-recent-widget')], W3mConnectRecentWidget);\nexport { W3mConnectRecentWidget };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}