{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Composite = Composite;\nconst index_1 = require(\"../intersect/index\");\nconst index_2 = require(\"../indexed/index\");\nconst index_3 = require(\"../keyof/index\");\nconst index_4 = require(\"../object/index\");\nconst index_5 = require(\"../sets/index\");\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nconst kind_1 = require(\"../guard/kind\");\n// prettier-ignore\nfunction CompositeKeys(T) {\n  const Acc = [];\n  for (const L of T) Acc.push(...(0, index_3.KeyOfPropertyKeys)(L));\n  return (0, index_5.SetDistinct)(Acc);\n}\n// prettier-ignore\nfunction FilterNever(T) {\n  return T.filter(L => !(0, kind_1.IsNever)(L));\n}\n// prettier-ignore\nfunction CompositeProperty(T, K) {\n  const Acc = [];\n  for (const L of T) Acc.push(...(0, index_2.IndexFromPropertyKeys)(L, [K]));\n  return FilterNever(Acc);\n}\n// prettier-ignore\nfunction CompositeProperties(T, K) {\n  const Acc = {};\n  for (const L of K) {\n    Acc[L] = (0, index_1.IntersectEvaluated)(CompositeProperty(T, L));\n  }\n  return Acc;\n}\n// prettier-ignore\nfunction Composite(T, options) {\n  const K = CompositeKeys(T);\n  const P = CompositeProperties(T, K);\n  const R = (0, index_4.Object)(P, options);\n  return R;\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}