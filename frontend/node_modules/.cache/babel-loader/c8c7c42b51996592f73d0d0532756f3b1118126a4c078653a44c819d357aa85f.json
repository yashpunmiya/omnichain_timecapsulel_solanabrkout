{"ast":null,"code":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/* replacement start */\nconst {\n  Buffer\n} = require('buffer');\n\n/* replacement end */\n\nconst {\n  ObjectDefineProperty,\n  ObjectKeys,\n  ReflectApply\n} = require('./ours/primordials');\nconst {\n  promisify: {\n    custom: customPromisify\n  }\n} = require('./ours/util');\nconst {\n  streamReturningOperators,\n  promiseReturningOperators\n} = require('./internal/streams/operators');\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\n  }\n} = require('./ours/errors');\nconst compose = require('./internal/streams/compose');\nconst {\n  setDefaultHighWaterMark,\n  getDefaultHighWaterMark\n} = require('./internal/streams/state');\nconst {\n  pipeline\n} = require('./internal/streams/pipeline');\nconst {\n  destroyer\n} = require('./internal/streams/destroy');\nconst eos = require('./internal/streams/end-of-stream');\nconst internalBuffer = {};\nconst promises = require('./stream/promises');\nconst utils = require('./internal/streams/utils');\nconst Stream = module.exports = require('./internal/streams/legacy').Stream;\nStream.isDestroyed = utils.isDestroyed;\nStream.isDisturbed = utils.isDisturbed;\nStream.isErrored = utils.isErrored;\nStream.isReadable = utils.isReadable;\nStream.isWritable = utils.isWritable;\nStream.Readable = require('./internal/streams/readable');\nfor (const key of ObjectKeys(streamReturningOperators)) {\n  const op = streamReturningOperators[key];\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    return Stream.Readable.from(ReflectApply(op, this, args));\n  }\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  });\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  });\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  });\n}\nfor (const key of ObjectKeys(promiseReturningOperators)) {\n  const op = promiseReturningOperators[key];\n  function fn(...args) {\n    if (new.target) {\n      throw ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    return ReflectApply(op, this, args);\n  }\n  ObjectDefineProperty(fn, 'name', {\n    __proto__: null,\n    value: op.name\n  });\n  ObjectDefineProperty(fn, 'length', {\n    __proto__: null,\n    value: op.length\n  });\n  ObjectDefineProperty(Stream.Readable.prototype, key, {\n    __proto__: null,\n    value: fn,\n    enumerable: false,\n    configurable: true,\n    writable: true\n  });\n}\nStream.Writable = require('./internal/streams/writable');\nStream.Duplex = require('./internal/streams/duplex');\nStream.Transform = require('./internal/streams/transform');\nStream.PassThrough = require('./internal/streams/passthrough');\nStream.pipeline = pipeline;\nconst {\n  addAbortSignal\n} = require('./internal/streams/add-abort-signal');\nStream.addAbortSignal = addAbortSignal;\nStream.finished = eos;\nStream.destroy = destroyer;\nStream.compose = compose;\nStream.setDefaultHighWaterMark = setDefaultHighWaterMark;\nStream.getDefaultHighWaterMark = getDefaultHighWaterMark;\nObjectDefineProperty(Stream, 'promises', {\n  __proto__: null,\n  configurable: true,\n  enumerable: true,\n  get() {\n    return promises;\n  }\n});\nObjectDefineProperty(pipeline, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n  get() {\n    return promises.pipeline;\n  }\n});\nObjectDefineProperty(eos, customPromisify, {\n  __proto__: null,\n  enumerable: true,\n  get() {\n    return promises.finished;\n  }\n});\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\nStream._isUint8Array = function isUint8Array(value) {\n  return value instanceof Uint8Array;\n};\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}