{"ast":null,"code":"import { proxy, ref, subscribe as sub } from 'valtio/vanilla';\nimport { subscribeKey as subKey } from 'valtio/vanilla/utils';\nimport { NumberUtil } from '@reown/appkit-common';\nimport { ContractUtil } from '@reown/appkit-common';\nimport { W3mFrameRpcConstants } from '@reown/appkit-wallet/utils';\nimport { ConstantsUtil } from '../utils/ConstantsUtil.js';\nimport { CoreHelperUtil } from '../utils/CoreHelperUtil.js';\nimport { SendApiUtil } from '../utils/SendApiUtil.js';\nimport { AccountController } from './AccountController.js';\nimport { ChainController } from './ChainController.js';\nimport { ConnectionController } from './ConnectionController.js';\nimport { EventsController } from './EventsController.js';\nimport { RouterController } from './RouterController.js';\nimport { SnackController } from './SnackController.js';\n// -- State --------------------------------------------- //\nconst state = proxy({\n  tokenBalances: [],\n  loading: false\n});\n// -- Controller ---------------------------------------- //\nexport const SendController = {\n  state,\n  subscribe(callback) {\n    return sub(state, () => callback(state));\n  },\n  subscribeKey(key, callback) {\n    return subKey(state, key, callback);\n  },\n  setToken(token) {\n    if (token) {\n      state.token = ref(token);\n    }\n  },\n  setTokenAmount(sendTokenAmount) {\n    state.sendTokenAmount = sendTokenAmount;\n  },\n  setReceiverAddress(receiverAddress) {\n    state.receiverAddress = receiverAddress;\n  },\n  setReceiverProfileImageUrl(receiverProfileImageUrl) {\n    state.receiverProfileImageUrl = receiverProfileImageUrl;\n  },\n  setReceiverProfileName(receiverProfileName) {\n    state.receiverProfileName = receiverProfileName;\n  },\n  setGasPrice(gasPrice) {\n    state.gasPrice = gasPrice;\n  },\n  setGasPriceInUsd(gasPriceInUSD) {\n    state.gasPriceInUSD = gasPriceInUSD;\n  },\n  setNetworkBalanceInUsd(networkBalanceInUSD) {\n    state.networkBalanceInUSD = networkBalanceInUSD;\n  },\n  setLoading(loading) {\n    state.loading = loading;\n  },\n  sendToken() {\n    switch (ChainController.state.activeCaipNetwork?.chainNamespace) {\n      case 'eip155':\n        this.sendEvmToken();\n        return;\n      case 'solana':\n        this.sendSolanaToken();\n        return;\n      default:\n        throw new Error('Unsupported chain');\n    }\n  },\n  sendEvmToken() {\n    if (this.state.token?.address && this.state.sendTokenAmount && this.state.receiverAddress) {\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SEND_INITIATED',\n        properties: {\n          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT,\n          token: this.state.token.address,\n          amount: this.state.sendTokenAmount,\n          network: ChainController.state.activeCaipNetwork?.caipNetworkId || ''\n        }\n      });\n      this.sendERC20Token({\n        receiverAddress: this.state.receiverAddress,\n        tokenAddress: this.state.token.address,\n        sendTokenAmount: this.state.sendTokenAmount,\n        decimals: this.state.token.quantity.decimals\n      });\n    } else if (this.state.receiverAddress && this.state.sendTokenAmount && this.state.gasPrice && this.state.token?.quantity.decimals) {\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SEND_INITIATED',\n        properties: {\n          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT,\n          token: this.state.token?.symbol,\n          amount: this.state.sendTokenAmount,\n          network: ChainController.state.activeCaipNetwork?.caipNetworkId || ''\n        }\n      });\n      this.sendNativeToken({\n        receiverAddress: this.state.receiverAddress,\n        sendTokenAmount: this.state.sendTokenAmount,\n        gasPrice: this.state.gasPrice,\n        decimals: this.state.token.quantity.decimals\n      });\n    }\n  },\n  async fetchTokenBalance(onError) {\n    state.loading = true;\n    const chainId = ChainController.state.activeCaipNetwork?.caipNetworkId;\n    const chain = ChainController.state.activeCaipNetwork?.chainNamespace;\n    const caipAddress = ChainController.state.activeCaipAddress;\n    const address = caipAddress ? CoreHelperUtil.getPlainAddress(caipAddress) : undefined;\n    if (state.lastRetry && !CoreHelperUtil.isAllowedRetry(state.lastRetry, 30 * ConstantsUtil.ONE_SEC_MS)) {\n      state.loading = false;\n      return [];\n    }\n    try {\n      if (address && chainId && chain) {\n        const balances = await SendApiUtil.getMyTokensWithBalance();\n        state.tokenBalances = balances;\n        state.lastRetry = undefined;\n        return balances;\n      }\n    } catch (error) {\n      state.lastRetry = Date.now();\n      onError?.(error);\n      SnackController.showError('Token Balance Unavailable');\n    } finally {\n      state.loading = false;\n    }\n    return [];\n  },\n  fetchNetworkBalance() {\n    if (state.tokenBalances.length === 0) {\n      return;\n    }\n    const networkTokenBalances = SendApiUtil.mapBalancesToSwapTokens(state.tokenBalances);\n    if (!networkTokenBalances) {\n      return;\n    }\n    const networkToken = networkTokenBalances.find(token => token.address === ChainController.getActiveNetworkTokenAddress());\n    if (!networkToken) {\n      return;\n    }\n    state.networkBalanceInUSD = networkToken ? NumberUtil.multiply(networkToken.quantity.numeric, networkToken.price).toString() : '0';\n  },\n  isInsufficientNetworkTokenForGas(networkBalanceInUSD, gasPriceInUSD) {\n    const gasPrice = gasPriceInUSD || '0';\n    if (NumberUtil.bigNumber(networkBalanceInUSD).eq(0)) {\n      return true;\n    }\n    return NumberUtil.bigNumber(NumberUtil.bigNumber(gasPrice)).gt(networkBalanceInUSD);\n  },\n  hasInsufficientGasFunds() {\n    let isInsufficientNetworkTokenForGas = true;\n    if (AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT) {\n      // Smart Accounts may pay gas in any ERC20 token\n      isInsufficientNetworkTokenForGas = false;\n    } else if (state.networkBalanceInUSD) {\n      isInsufficientNetworkTokenForGas = this.isInsufficientNetworkTokenForGas(state.networkBalanceInUSD, state.gasPriceInUSD);\n    }\n    return isInsufficientNetworkTokenForGas;\n  },\n  async sendNativeToken(params) {\n    RouterController.pushTransactionStack({\n      view: 'Account',\n      goBack: false\n    });\n    const to = params.receiverAddress;\n    const address = AccountController.state.address;\n    const value = ConnectionController.parseUnits(params.sendTokenAmount.toString(), Number(params.decimals));\n    const data = '0x';\n    try {\n      await ConnectionController.sendTransaction({\n        chainNamespace: 'eip155',\n        to,\n        address,\n        data,\n        value: value ?? BigInt(0),\n        gasPrice: params.gasPrice\n      });\n      SnackController.showSuccess('Transaction started');\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SEND_SUCCESS',\n        properties: {\n          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT,\n          token: this.state.token?.symbol || '',\n          amount: params.sendTokenAmount,\n          network: ChainController.state.activeCaipNetwork?.caipNetworkId || ''\n        }\n      });\n      this.resetSend();\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error('SendController:sendERC20Token - failed to send native token', error);\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SEND_ERROR',\n        properties: {\n          message: errorMessage,\n          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT,\n          token: this.state.token?.symbol || '',\n          amount: params.sendTokenAmount,\n          network: ChainController.state.activeCaipNetwork?.caipNetworkId || ''\n        }\n      });\n      SnackController.showError('Something went wrong');\n    }\n  },\n  async sendERC20Token(params) {\n    RouterController.pushTransactionStack({\n      view: 'Account',\n      goBack: false\n    });\n    const amount = ConnectionController.parseUnits(params.sendTokenAmount.toString(), Number(params.decimals));\n    try {\n      if (AccountController.state.address && params.sendTokenAmount && params.receiverAddress && params.tokenAddress) {\n        const tokenAddress = CoreHelperUtil.getPlainAddress(params.tokenAddress);\n        await ConnectionController.writeContract({\n          fromAddress: AccountController.state.address,\n          tokenAddress,\n          args: [params.receiverAddress, amount ?? BigInt(0)],\n          method: 'transfer',\n          abi: ContractUtil.getERC20Abi(tokenAddress),\n          chainNamespace: 'eip155'\n        });\n        SnackController.showSuccess('Transaction started');\n        this.resetSend();\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error('SendController:sendERC20Token - failed to send erc20 token', error);\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error';\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'SEND_ERROR',\n        properties: {\n          message: errorMessage,\n          isSmartAccount: AccountController.state.preferredAccountType === W3mFrameRpcConstants.ACCOUNT_TYPES.SMART_ACCOUNT,\n          token: this.state.token?.symbol || '',\n          amount: params.sendTokenAmount,\n          network: ChainController.state.activeCaipNetwork?.caipNetworkId || ''\n        }\n      });\n      SnackController.showError('Something went wrong');\n    }\n  },\n  sendSolanaToken() {\n    if (!this.state.sendTokenAmount || !this.state.receiverAddress) {\n      SnackController.showError('Please enter a valid amount and receiver address');\n      return;\n    }\n    RouterController.pushTransactionStack({\n      view: 'Account',\n      goBack: false\n    });\n    ConnectionController.sendTransaction({\n      chainNamespace: 'solana',\n      to: this.state.receiverAddress,\n      value: this.state.sendTokenAmount\n    }).then(() => {\n      this.resetSend();\n      AccountController.fetchTokenBalance();\n    }).catch(error => {\n      SnackController.showError('Failed to send transaction. Please try again.');\n      // eslint-disable-next-line no-console\n      console.error('SendController:sendToken - failed to send solana transaction', error);\n    });\n  },\n  resetSend() {\n    state.token = undefined;\n    state.sendTokenAmount = undefined;\n    state.receiverAddress = undefined;\n    state.receiverProfileImageUrl = undefined;\n    state.receiverProfileName = undefined;\n    state.loading = false;\n    state.tokenBalances = [];\n  }\n};","map":{"version":3,"names":["proxy","ref","subscribe","sub","subscribeKey","subKey","NumberUtil","ContractUtil","W3mFrameRpcConstants","ConstantsUtil","CoreHelperUtil","SendApiUtil","AccountController","ChainController","ConnectionController","EventsController","RouterController","SnackController","state","tokenBalances","loading","SendController","callback","key","setToken","token","setTokenAmount","sendTokenAmount","setReceiverAddress","receiverAddress","setReceiverProfileImageUrl","receiverProfileImageUrl","setReceiverProfileName","receiverProfileName","setGasPrice","gasPrice","setGasPriceInUsd","gasPriceInUSD","setNetworkBalanceInUsd","networkBalanceInUSD","setLoading","sendToken","activeCaipNetwork","chainNamespace","sendEvmToken","sendSolanaToken","Error","address","sendEvent","type","event","properties","isSmartAccount","preferredAccountType","ACCOUNT_TYPES","SMART_ACCOUNT","amount","network","caipNetworkId","sendERC20Token","tokenAddress","decimals","quantity","symbol","sendNativeToken","fetchTokenBalance","onError","chainId","chain","caipAddress","activeCaipAddress","getPlainAddress","undefined","lastRetry","isAllowedRetry","ONE_SEC_MS","balances","getMyTokensWithBalance","error","Date","now","showError","fetchNetworkBalance","length","networkTokenBalances","mapBalancesToSwapTokens","networkToken","find","getActiveNetworkTokenAddress","multiply","numeric","price","toString","isInsufficientNetworkTokenForGas","bigNumber","eq","gt","hasInsufficientGasFunds","params","pushTransactionStack","view","goBack","to","value","parseUnits","Number","data","sendTransaction","BigInt","showSuccess","resetSend","console","errorMessage","message","writeContract","fromAddress","args","method","abi","getERC20Abi","then","catch"],"sources":["../../../../src/controllers/SendController.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}