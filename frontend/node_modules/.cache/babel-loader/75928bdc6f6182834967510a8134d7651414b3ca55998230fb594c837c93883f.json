{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSystemInfo = exports.getInstallerPackage = void 0;\nconst env_utils_1 = require(\"@trezor/env-utils\");\nconst getInstallerPackage = () => {\n  const agent = (0, env_utils_1.getUserAgent)();\n  switch ((0, env_utils_1.getOsFamily)()) {\n    case 'MacOS':\n      return 'mac';\n    case 'Windows':\n      {\n        const arch = agent.match(/(Win64|WOW64)/) ? '64' : '32';\n        return `win${arch}`;\n      }\n    case 'Linux':\n      {\n        const isRpm = agent.match(/CentOS|Fedora|Mandriva|Mageia|Red Hat|Scientific|SUSE/) ? 'rpm' : 'deb';\n        const is64x = agent.match(/Linux i[3456]86/) ? '32' : '64';\n        return `${isRpm}${is64x}`;\n      }\n    default:\n  }\n};\nexports.getInstallerPackage = getInstallerPackage;\nconst getSystemInfo = supportedBrowsers => {\n  const browserName = (0, env_utils_1.getBrowserName)();\n  const browserVersion = (0, env_utils_1.getBrowserVersion)();\n  const supportedBrowser = browserName ? supportedBrowsers[browserName.toLowerCase()] : undefined;\n  const outdatedBrowser = supportedBrowser ? supportedBrowser.version > parseInt(browserVersion, 10) : false;\n  const mobile = (0, env_utils_1.getDeviceType)() === 'mobile';\n  const supportedMobile = mobile ? 'usb' in navigator : true;\n  const supported = !!(supportedBrowser && !outdatedBrowser && supportedMobile);\n  return {\n    os: {\n      family: (0, env_utils_1.getOsFamily)(),\n      mobile\n    },\n    browser: {\n      supported,\n      outdated: outdatedBrowser\n    }\n  };\n};\nexports.getSystemInfo = getSystemInfo;","map":{"version":3,"names":["Object","defineProperty","exports","value","getSystemInfo","getInstallerPackage","env_utils_1","require","agent","getUserAgent","getOsFamily","arch","match","isRpm","is64x","supportedBrowsers","browserName","getBrowserName","browserVersion","getBrowserVersion","supportedBrowser","toLowerCase","undefined","outdatedBrowser","version","parseInt","mobile","getDeviceType","supportedMobile","navigator","supported","os","family","browser","outdated"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@trezor/connect-common/lib/systemInfo.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSystemInfo = exports.getInstallerPackage = void 0;\nconst env_utils_1 = require(\"@trezor/env-utils\");\nconst getInstallerPackage = () => {\n    const agent = (0, env_utils_1.getUserAgent)();\n    switch ((0, env_utils_1.getOsFamily)()) {\n        case 'MacOS':\n            return 'mac';\n        case 'Windows': {\n            const arch = agent.match(/(Win64|WOW64)/) ? '64' : '32';\n            return `win${arch}`;\n        }\n        case 'Linux': {\n            const isRpm = agent.match(/CentOS|Fedora|Mandriva|Mageia|Red Hat|Scientific|SUSE/)\n                ? 'rpm'\n                : 'deb';\n            const is64x = agent.match(/Linux i[3456]86/) ? '32' : '64';\n            return `${isRpm}${is64x}`;\n        }\n        default:\n    }\n};\nexports.getInstallerPackage = getInstallerPackage;\nconst getSystemInfo = (supportedBrowsers) => {\n    const browserName = (0, env_utils_1.getBrowserName)();\n    const browserVersion = (0, env_utils_1.getBrowserVersion)();\n    const supportedBrowser = browserName ? supportedBrowsers[browserName.toLowerCase()] : undefined;\n    const outdatedBrowser = supportedBrowser\n        ? supportedBrowser.version > parseInt(browserVersion, 10)\n        : false;\n    const mobile = (0, env_utils_1.getDeviceType)() === 'mobile';\n    const supportedMobile = mobile ? 'usb' in navigator : true;\n    const supported = !!(supportedBrowser && !outdatedBrowser && supportedMobile);\n    return {\n        os: {\n            family: (0, env_utils_1.getOsFamily)(),\n            mobile,\n        },\n        browser: {\n            supported,\n            outdated: outdatedBrowser,\n        },\n    };\n};\nexports.getSystemInfo = getSystemInfo;\n//# sourceMappingURL=systemInfo.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAGF,OAAO,CAACG,mBAAmB,GAAG,KAAK,CAAC;AAC5D,MAAMC,WAAW,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAChD,MAAMF,mBAAmB,GAAGA,CAAA,KAAM;EAC9B,MAAMG,KAAK,GAAG,CAAC,CAAC,EAAEF,WAAW,CAACG,YAAY,EAAE,CAAC;EAC7C,QAAQ,CAAC,CAAC,EAAEH,WAAW,CAACI,WAAW,EAAE,CAAC;IAClC,KAAK,OAAO;MACR,OAAO,KAAK;IAChB,KAAK,SAAS;MAAE;QACZ,MAAMC,IAAI,GAAGH,KAAK,CAACI,KAAK,CAAC,eAAe,CAAC,GAAG,IAAI,GAAG,IAAI;QACvD,OAAO,MAAMD,IAAI,EAAE;MACvB;IACA,KAAK,OAAO;MAAE;QACV,MAAME,KAAK,GAAGL,KAAK,CAACI,KAAK,CAAC,uDAAuD,CAAC,GAC5E,KAAK,GACL,KAAK;QACX,MAAME,KAAK,GAAGN,KAAK,CAACI,KAAK,CAAC,iBAAiB,CAAC,GAAG,IAAI,GAAG,IAAI;QAC1D,OAAO,GAAGC,KAAK,GAAGC,KAAK,EAAE;MAC7B;IACA;EACJ;AACJ,CAAC;AACDZ,OAAO,CAACG,mBAAmB,GAAGA,mBAAmB;AACjD,MAAMD,aAAa,GAAIW,iBAAiB,IAAK;EACzC,MAAMC,WAAW,GAAG,CAAC,CAAC,EAAEV,WAAW,CAACW,cAAc,EAAE,CAAC;EACrD,MAAMC,cAAc,GAAG,CAAC,CAAC,EAAEZ,WAAW,CAACa,iBAAiB,EAAE,CAAC;EAC3D,MAAMC,gBAAgB,GAAGJ,WAAW,GAAGD,iBAAiB,CAACC,WAAW,CAACK,WAAW,CAAC,CAAC,CAAC,GAAGC,SAAS;EAC/F,MAAMC,eAAe,GAAGH,gBAAgB,GAClCA,gBAAgB,CAACI,OAAO,GAAGC,QAAQ,CAACP,cAAc,EAAE,EAAE,CAAC,GACvD,KAAK;EACX,MAAMQ,MAAM,GAAG,CAAC,CAAC,EAAEpB,WAAW,CAACqB,aAAa,EAAE,CAAC,KAAK,QAAQ;EAC5D,MAAMC,eAAe,GAAGF,MAAM,GAAG,KAAK,IAAIG,SAAS,GAAG,IAAI;EAC1D,MAAMC,SAAS,GAAG,CAAC,EAAEV,gBAAgB,IAAI,CAACG,eAAe,IAAIK,eAAe,CAAC;EAC7E,OAAO;IACHG,EAAE,EAAE;MACAC,MAAM,EAAE,CAAC,CAAC,EAAE1B,WAAW,CAACI,WAAW,EAAE,CAAC;MACtCgB;IACJ,CAAC;IACDO,OAAO,EAAE;MACLH,SAAS;MACTI,QAAQ,EAAEX;IACd;EACJ,CAAC;AACL,CAAC;AACDrB,OAAO,CAACE,aAAa,GAAGA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}