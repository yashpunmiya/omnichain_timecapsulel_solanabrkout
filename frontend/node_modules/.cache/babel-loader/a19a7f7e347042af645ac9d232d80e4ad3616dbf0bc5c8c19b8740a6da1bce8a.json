{"ast":null,"code":"import { proxy, ref } from 'valtio/vanilla';\nimport { ConstantsUtil } from '../utils/ConstantsUtil.js';\nimport { CoreHelperUtil } from '../utils/CoreHelperUtil.js';\nimport { BlockchainApiController } from './BlockchainApiController.js';\nimport { ChainController } from './ChainController.js';\nimport { SnackController } from './SnackController.js';\n// -- State --------------------------------------------- //\nconst state = proxy({\n  currentTab: 0,\n  tokenBalance: [],\n  smartAccountDeployed: false,\n  addressLabels: new Map(),\n  allAccounts: []\n});\n// -- Controller ---------------------------------------- //\nexport const AccountController = {\n  state,\n  replaceState(newState) {\n    if (!newState) {\n      return;\n    }\n    Object.assign(state, ref(newState));\n  },\n  subscribe(callback) {\n    return ChainController.subscribeChainProp('accountState', accountState => {\n      if (accountState) {\n        return callback(accountState);\n      }\n      return undefined;\n    });\n  },\n  subscribeKey(property, callback, chain) {\n    let prev = undefined;\n    return ChainController.subscribeChainProp('accountState', accountState => {\n      if (accountState) {\n        const nextValue = accountState[property];\n        if (prev !== nextValue) {\n          prev = nextValue;\n          callback(nextValue);\n        }\n      }\n    }, chain);\n  },\n  setStatus(status, chain) {\n    ChainController.setAccountProp('status', status, chain);\n  },\n  getCaipAddress(chain) {\n    return ChainController.getAccountProp('caipAddress', chain);\n  },\n  setCaipAddress(caipAddress, chain) {\n    const newAddress = caipAddress ? CoreHelperUtil.getPlainAddress(caipAddress) : undefined;\n    if (chain === ChainController.state.activeChain) {\n      ChainController.state.activeCaipAddress = caipAddress;\n    }\n    ChainController.setAccountProp('caipAddress', caipAddress, chain);\n    ChainController.setAccountProp('address', newAddress, chain);\n  },\n  setBalance(balance, balanceSymbol, chain) {\n    ChainController.setAccountProp('balance', balance, chain);\n    ChainController.setAccountProp('balanceSymbol', balanceSymbol, chain);\n  },\n  setProfileName(profileName, chain) {\n    ChainController.setAccountProp('profileName', profileName, chain);\n  },\n  setProfileImage(profileImage, chain) {\n    ChainController.setAccountProp('profileImage', profileImage, chain);\n  },\n  setUser(user, chain) {\n    ChainController.setAccountProp('user', user, chain);\n  },\n  setAddressExplorerUrl(explorerUrl, chain) {\n    ChainController.setAccountProp('addressExplorerUrl', explorerUrl, chain);\n  },\n  setSmartAccountDeployed(isDeployed, chain) {\n    ChainController.setAccountProp('smartAccountDeployed', isDeployed, chain);\n  },\n  setCurrentTab(currentTab) {\n    ChainController.setAccountProp('currentTab', currentTab, ChainController.state.activeChain);\n  },\n  setTokenBalance(tokenBalance, chain) {\n    if (tokenBalance) {\n      ChainController.setAccountProp('tokenBalance', tokenBalance, chain);\n    }\n  },\n  setShouldUpdateToAddress(address, chain) {\n    ChainController.setAccountProp('shouldUpdateToAddress', address, chain);\n  },\n  setAllAccounts(accounts, namespace) {\n    ChainController.setAccountProp('allAccounts', accounts, namespace);\n  },\n  addAddressLabel(address, label, chain) {\n    const map = ChainController.getAccountProp('addressLabels', chain) || new Map();\n    map.set(address, label);\n    ChainController.setAccountProp('addressLabels', map, chain);\n  },\n  removeAddressLabel(address, chain) {\n    const map = ChainController.getAccountProp('addressLabels', chain) || new Map();\n    map.delete(address);\n    ChainController.setAccountProp('addressLabels', map, chain);\n  },\n  setConnectedWalletInfo(connectedWalletInfo, chain) {\n    ChainController.setAccountProp('connectedWalletInfo', connectedWalletInfo, chain, false);\n  },\n  setPreferredAccountType(preferredAccountType, chain) {\n    ChainController.setAccountProp('preferredAccountType', preferredAccountType, chain);\n  },\n  setSocialProvider(socialProvider, chain) {\n    if (socialProvider) {\n      ChainController.setAccountProp('socialProvider', socialProvider, chain);\n    }\n  },\n  setSocialWindow(socialWindow, chain) {\n    ChainController.setAccountProp('socialWindow', socialWindow ? ref(socialWindow) : undefined, chain);\n  },\n  setFarcasterUrl(farcasterUrl, chain) {\n    ChainController.setAccountProp('farcasterUrl', farcasterUrl, chain);\n  },\n  async fetchTokenBalance(onError) {\n    state.balanceLoading = true;\n    const chainId = ChainController.state.activeCaipNetwork?.caipNetworkId;\n    const chain = ChainController.state.activeCaipNetwork?.chainNamespace;\n    const caipAddress = ChainController.state.activeCaipAddress;\n    const address = caipAddress ? CoreHelperUtil.getPlainAddress(caipAddress) : undefined;\n    if (state.lastRetry && !CoreHelperUtil.isAllowedRetry(state.lastRetry, 30 * ConstantsUtil.ONE_SEC_MS)) {\n      state.balanceLoading = false;\n      return [];\n    }\n    try {\n      if (address && chainId && chain) {\n        const response = await BlockchainApiController.getBalance(address, chainId);\n        /*\n         * The 1Inch API includes many low-quality tokens in the balance response,\n         * which appear inconsistently. This filter prevents them from being displayed.\n         */\n        const filteredBalances = response.balances.filter(balance => balance.quantity.decimals !== '0');\n        this.setTokenBalance(filteredBalances, chain);\n        state.lastRetry = undefined;\n        state.balanceLoading = false;\n        return filteredBalances;\n      }\n    } catch (error) {\n      state.lastRetry = Date.now();\n      onError?.(error);\n      SnackController.showError('Token Balance Unavailable');\n    } finally {\n      state.balanceLoading = false;\n    }\n    return [];\n  },\n  resetAccount(chain) {\n    ChainController.resetAccount(chain);\n  }\n};","map":{"version":3,"names":["proxy","ref","ConstantsUtil","CoreHelperUtil","BlockchainApiController","ChainController","SnackController","state","currentTab","tokenBalance","smartAccountDeployed","addressLabels","Map","allAccounts","AccountController","replaceState","newState","Object","assign","subscribe","callback","subscribeChainProp","accountState","undefined","subscribeKey","property","chain","prev","nextValue","setStatus","status","setAccountProp","getCaipAddress","getAccountProp","setCaipAddress","caipAddress","newAddress","getPlainAddress","activeChain","activeCaipAddress","setBalance","balance","balanceSymbol","setProfileName","profileName","setProfileImage","profileImage","setUser","user","setAddressExplorerUrl","explorerUrl","setSmartAccountDeployed","isDeployed","setCurrentTab","setTokenBalance","setShouldUpdateToAddress","address","setAllAccounts","accounts","namespace","addAddressLabel","label","map","set","removeAddressLabel","delete","setConnectedWalletInfo","connectedWalletInfo","setPreferredAccountType","preferredAccountType","setSocialProvider","socialProvider","setSocialWindow","socialWindow","setFarcasterUrl","farcasterUrl","fetchTokenBalance","onError","balanceLoading","chainId","activeCaipNetwork","caipNetworkId","chainNamespace","lastRetry","isAllowedRetry","ONE_SEC_MS","response","getBalance","filteredBalances","balances","filter","quantity","decimals","error","Date","now","showError","resetAccount"],"sources":["../../../../src/controllers/AccountController.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}