{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nexport function isSnapSupported(provider) {\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      yield provider.request({\n        method: 'wallet_getSnaps'\n      });\n      return true;\n    } catch (error) {\n      return false;\n    }\n  });\n}\nexport function detectProvider() {\n  return __awaiter(this, void 0, void 0, function* () {\n    try {\n      const provider = window.ethereum;\n      if (!provider) {\n        return null;\n      }\n      if (provider.providers && Array.isArray(provider.providers)) {\n        const providers = provider.providers;\n        for (const provider of providers) {\n          if (yield isSnapSupported(provider)) {\n            return provider;\n          }\n        }\n      }\n      if (provider.detected && Array.isArray(provider.detected)) {\n        const providers = provider.detected;\n        for (const provider of providers) {\n          if (yield isSnapSupported(provider)) {\n            return provider;\n          }\n        }\n      }\n      if (yield isSnapSupported(provider)) {\n        return provider;\n      }\n      return null;\n    } catch (error) {\n      console.error(error);\n      return null;\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}