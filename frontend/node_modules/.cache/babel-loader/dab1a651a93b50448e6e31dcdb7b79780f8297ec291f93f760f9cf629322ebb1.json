{"ast":null,"code":"import { numberToHex } from '../../utils/encoding/toHex.js';\n/**\n * Adds an EVM chain to the wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/addChain\n * - JSON-RPC Methods: [`eth_addEthereumChain`](https://eips.ethereum.org/EIPS/eip-3085)\n *\n * @param client - Client to use\n * @param parameters - {@link AddChainParameters}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { optimism } from 'viem/chains'\n * import { addChain } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   transport: custom(window.ethereum),\n * })\n * await addChain(client, { chain: optimism })\n */\nexport async function addChain(client, {\n  chain\n}) {\n  const {\n    id,\n    name,\n    nativeCurrency,\n    rpcUrls,\n    blockExplorers\n  } = chain;\n  await client.request({\n    method: 'wallet_addEthereumChain',\n    params: [{\n      chainId: numberToHex(id),\n      chainName: name,\n      nativeCurrency,\n      rpcUrls: rpcUrls.default.http,\n      blockExplorerUrls: blockExplorers ? Object.values(blockExplorers).map(({\n        url\n      }) => url) : undefined\n    }]\n  }, {\n    dedupe: true,\n    retryCount: 0\n  });\n}\n//# sourceMappingURL=addChain.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}