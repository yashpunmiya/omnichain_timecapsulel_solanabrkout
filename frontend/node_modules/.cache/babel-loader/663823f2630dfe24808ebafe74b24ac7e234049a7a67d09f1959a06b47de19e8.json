{"ast":null,"code":"/**\n * Internal assertion helpers.\n * @module\n */\n/** Asserts something is positive integer. */\nfunction anumber(n) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a) {\n  return a instanceof Uint8Array || ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array';\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b, ...lengths) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length)) throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nfunction ahash(h) {\n  if (typeof h !== 'function' || typeof h.create !== 'function') throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out, instance) {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\nexport { anumber, abytes, ahash, aexists, aoutput };","map":{"version":3,"names":["anumber","n","Number","isSafeInteger","Error","isBytes","a","Uint8Array","ArrayBuffer","isView","constructor","name","abytes","b","lengths","length","includes","ahash","h","create","outputLen","blockLen","aexists","instance","checkFinished","destroyed","finished","aoutput","out","min"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@reown\\appkit\\node_modules\\@noble\\hashes\\src\\_assert.ts"],"sourcesContent":["/**\n * Internal assertion helpers.\n * @module\n */\n\n/** Asserts something is positive integer. */\nfunction anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is Uint8Array. */\nfunction abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Hash interface. */\nexport type Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** Asserts something is hash */\nfunction ahash(h: Hash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\nexport { anumber, abytes, ahash, aexists, aoutput };\n"],"mappings":"AAAA;;;;AAKA;AACA,SAASA,OAAOA,CAACC,CAAS;EACxB,IAAI,CAACC,MAAM,CAACC,aAAa,CAACF,CAAC,CAAC,IAAIA,CAAC,GAAG,CAAC,EAAE,MAAM,IAAIG,KAAK,CAAC,iCAAiC,GAAGH,CAAC,CAAC;AAC/F;AAEA;AACA,SAASI,OAAOA,CAACC,CAAU;EACzB,OAAOA,CAAC,YAAYC,UAAU,IAAKC,WAAW,CAACC,MAAM,CAACH,CAAC,CAAC,IAAIA,CAAC,CAACI,WAAW,CAACC,IAAI,KAAK,YAAa;AAClG;AAEA;AACA,SAASC,MAAMA,CAACC,CAAyB,EAAE,GAAGC,OAAiB;EAC7D,IAAI,CAACT,OAAO,CAACQ,CAAC,CAAC,EAAE,MAAM,IAAIT,KAAK,CAAC,qBAAqB,CAAC;EACvD,IAAIU,OAAO,CAACC,MAAM,GAAG,CAAC,IAAI,CAACD,OAAO,CAACE,QAAQ,CAACH,CAAC,CAACE,MAAM,CAAC,EACnD,MAAM,IAAIX,KAAK,CAAC,gCAAgC,GAAGU,OAAO,GAAG,eAAe,GAAGD,CAAC,CAACE,MAAM,CAAC;AAC5F;AAUA;AACA,SAASE,KAAKA,CAACC,CAAO;EACpB,IAAI,OAAOA,CAAC,KAAK,UAAU,IAAI,OAAOA,CAAC,CAACC,MAAM,KAAK,UAAU,EAC3D,MAAM,IAAIf,KAAK,CAAC,iDAAiD,CAAC;EACpEJ,OAAO,CAACkB,CAAC,CAACE,SAAS,CAAC;EACpBpB,OAAO,CAACkB,CAAC,CAACG,QAAQ,CAAC;AACrB;AAEA;AACA,SAASC,OAAOA,CAACC,QAAa,EAAEC,aAAa,GAAG,IAAI;EAClD,IAAID,QAAQ,CAACE,SAAS,EAAE,MAAM,IAAIrB,KAAK,CAAC,kCAAkC,CAAC;EAC3E,IAAIoB,aAAa,IAAID,QAAQ,CAACG,QAAQ,EAAE,MAAM,IAAItB,KAAK,CAAC,uCAAuC,CAAC;AAClG;AAEA;AACA,SAASuB,OAAOA,CAACC,GAAQ,EAAEL,QAAa;EACtCX,MAAM,CAACgB,GAAG,CAAC;EACX,MAAMC,GAAG,GAAGN,QAAQ,CAACH,SAAS;EAC9B,IAAIQ,GAAG,CAACb,MAAM,GAAGc,GAAG,EAAE;IACpB,MAAM,IAAIzB,KAAK,CAAC,wDAAwD,GAAGyB,GAAG,CAAC;EACjF;AACF;AAEA,SAAS7B,OAAO,EAAEY,MAAM,EAAEK,KAAK,EAAEK,OAAO,EAAEK,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}