{"ast":null,"code":"import { stringify } from '../utils/stringify.js';\nimport { BaseError } from './base.js';\nexport class InvalidDomainError extends BaseError {\n  constructor({\n    domain\n  }) {\n    super(`Invalid domain \"${stringify(domain)}\".`, {\n      metaMessages: ['Must be a valid EIP-712 domain.']\n    });\n  }\n}\nexport class InvalidPrimaryTypeError extends BaseError {\n  constructor({\n    primaryType,\n    types\n  }) {\n    super(`Invalid primary type \\`${primaryType}\\` must be one of \\`${JSON.stringify(Object.keys(types))}\\`.`, {\n      docsPath: '/api/glossary/Errors#typeddatainvalidprimarytypeerror',\n      metaMessages: ['Check that the primary type is a key in `types`.']\n    });\n  }\n}\nexport class InvalidStructTypeError extends BaseError {\n  constructor({\n    type\n  }) {\n    super(`Struct type \"${type}\" is invalid.`, {\n      metaMessages: ['Struct type must not be a Solidity type.'],\n      name: 'InvalidStructTypeError'\n    });\n  }\n}\n//# sourceMappingURL=typedData.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}