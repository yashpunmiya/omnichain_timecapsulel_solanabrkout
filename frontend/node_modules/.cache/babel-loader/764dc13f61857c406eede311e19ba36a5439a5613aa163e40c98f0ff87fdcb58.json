{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst events_1 = require(\"events\");\nconst client_1 = require(\"./client\");\nclass WSWrapper extends events_1.EventEmitter {\n  _ws;\n  static CONNECTING = 0;\n  static OPEN = 1;\n  static CLOSING = 2;\n  static CLOSED = 3;\n  constructor(url, _protocols, _websocketOptions) {\n    super();\n    this._ws = new WebSocket(url);\n    this._ws.onclose = () => {\n      this.emit('close');\n    };\n    this._ws.onopen = () => {\n      this.emit('open');\n    };\n    this._ws.onerror = _event => {\n      this.emit('error', new client_1.WebsocketError(`WsWrapper error. Ready state: ${this.readyState}`));\n    };\n    this._ws.onmessage = message => {\n      this.emit('message', message.data);\n    };\n  }\n  close() {\n    if (this.readyState === WSWrapper.OPEN) {\n      this._ws.close();\n    }\n  }\n  send(message) {\n    if (this.readyState !== WSWrapper.OPEN) {\n      throw new client_1.WebsocketError(`Connection is not open. state: ${this.readyState}`);\n    }\n    this._ws.send(message);\n  }\n  get readyState() {\n    return this._ws.readyState;\n  }\n}\nexports.default = WSWrapper;\n//# sourceMappingURL=ws-browser.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}