{"ast":null,"code":"import { formatAbiItem } from 'abitype';\nimport { normalizeSignature } from './normalizeSignature.js';\n/**\n * Returns the signature for a given function or event definition.\n *\n * @example\n * const signature = toSignature('function ownerOf(uint256 tokenId)')\n * // 'ownerOf(uint256)'\n *\n * @example\n * const signature_3 = toSignature({\n *   name: 'ownerOf',\n *   type: 'function',\n *   inputs: [{ name: 'tokenId', type: 'uint256' }],\n *   outputs: [],\n *   stateMutability: 'view',\n * })\n * // 'ownerOf(uint256)'\n */\nexport const toSignature = def => {\n  const def_ = (() => {\n    if (typeof def === 'string') return def;\n    return formatAbiItem(def);\n  })();\n  return normalizeSignature(def_);\n};","map":{"version":3,"names":["formatAbiItem","normalizeSignature","toSignature","def","def_"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\viem\\utils\\hash\\toSignature.ts"],"sourcesContent":["import { type AbiEvent, type AbiFunction, formatAbiItem } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type NormalizeSignatureErrorType,\n  normalizeSignature,\n} from './normalizeSignature.js'\n\nexport type ToSignatureErrorType = NormalizeSignatureErrorType | ErrorType\n\n/**\n * Returns the signature for a given function or event definition.\n *\n * @example\n * const signature = toSignature('function ownerOf(uint256 tokenId)')\n * // 'ownerOf(uint256)'\n *\n * @example\n * const signature_3 = toSignature({\n *   name: 'ownerOf',\n *   type: 'function',\n *   inputs: [{ name: 'tokenId', type: 'uint256' }],\n *   outputs: [],\n *   stateMutability: 'view',\n * })\n * // 'ownerOf(uint256)'\n */\nexport const toSignature = (def: string | AbiFunction | AbiEvent) => {\n  const def_ = (() => {\n    if (typeof def === 'string') return def\n    return formatAbiItem(def)\n  })()\n  return normalizeSignature(def_)\n}\n"],"mappings":"AAAA,SAA0CA,aAAa,QAAQ,SAAS;AAGxE,SAEEC,kBAAkB,QACb,yBAAyB;AAIhC;;;;;;;;;;;;;;;;;AAiBA,OAAO,MAAMC,WAAW,GAAIC,GAAoC,IAAI;EAClE,MAAMC,IAAI,GAAG,CAAC,MAAK;IACjB,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE,OAAOA,GAAG;IACvC,OAAOH,aAAa,CAACG,GAAG,CAAC;EAC3B,CAAC,EAAC,CAAE;EACJ,OAAOF,kBAAkB,CAACG,IAAI,CAAC;AACjC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}