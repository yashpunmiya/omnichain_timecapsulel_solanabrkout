{"ast":null,"code":"import { proxy } from 'valtio/vanilla';\nimport { subscribeKey as subKey } from 'valtio/vanilla/utils';\nimport { AssetUtil } from '../utils/AssetUtil.js';\nimport { CoreHelperUtil } from '../utils/CoreHelperUtil.js';\nimport { FetchUtil } from '../utils/FetchUtil.js';\nimport { StorageUtil } from '../utils/StorageUtil.js';\nimport { AssetController } from './AssetController.js';\nimport { ChainController } from './ChainController.js';\nimport { ConnectorController } from './ConnectorController.js';\nimport { EventsController } from './EventsController.js';\nimport { OptionsController } from './OptionsController.js';\n// -- Helpers ------------------------------------------- //\nconst baseUrl = CoreHelperUtil.getApiUrl();\nexport const api = new FetchUtil({\n  baseUrl,\n  clientId: null\n});\nconst entries = '40';\nconst recommendedEntries = '4';\nconst imageCountToFetch = 20;\n// -- State --------------------------------------------- //\nconst state = proxy({\n  promises: {},\n  page: 1,\n  count: 0,\n  featured: [],\n  allFeatured: [],\n  recommended: [],\n  allRecommended: [],\n  wallets: [],\n  search: [],\n  isAnalyticsEnabled: false,\n  excludedWallets: [],\n  isFetchingRecommendedWallets: false\n});\n// -- Controller ---------------------------------------- //\nexport const ApiController = {\n  state,\n  subscribeKey(key, callback) {\n    return subKey(state, key, callback);\n  },\n  _getSdkProperties() {\n    const {\n      projectId,\n      sdkType,\n      sdkVersion\n    } = OptionsController.state;\n    return {\n      projectId,\n      st: sdkType || 'appkit',\n      sv: sdkVersion || 'html-wagmi-4.2.2'\n    };\n  },\n  _filterOutExtensions(wallets) {\n    if (OptionsController.state.isUniversalProvider) {\n      return wallets.filter(w => Boolean(w.mobile_link || w.desktop_link || w.webapp_link));\n    }\n    return wallets;\n  },\n  async _fetchWalletImage(imageId) {\n    const imageUrl = `${api.baseUrl}/getWalletImage/${imageId}`;\n    const blob = await api.getBlob({\n      path: imageUrl,\n      params: ApiController._getSdkProperties()\n    });\n    AssetController.setWalletImage(imageId, URL.createObjectURL(blob));\n  },\n  async _fetchNetworkImage(imageId) {\n    const imageUrl = `${api.baseUrl}/public/getAssetImage/${imageId}`;\n    const blob = await api.getBlob({\n      path: imageUrl,\n      params: ApiController._getSdkProperties()\n    });\n    AssetController.setNetworkImage(imageId, URL.createObjectURL(blob));\n  },\n  async _fetchConnectorImage(imageId) {\n    const imageUrl = `${api.baseUrl}/public/getAssetImage/${imageId}`;\n    const blob = await api.getBlob({\n      path: imageUrl,\n      params: ApiController._getSdkProperties()\n    });\n    AssetController.setConnectorImage(imageId, URL.createObjectURL(blob));\n  },\n  async _fetchCurrencyImage(countryCode) {\n    const imageUrl = `${api.baseUrl}/public/getCurrencyImage/${countryCode}`;\n    const blob = await api.getBlob({\n      path: imageUrl,\n      params: ApiController._getSdkProperties()\n    });\n    AssetController.setCurrencyImage(countryCode, URL.createObjectURL(blob));\n  },\n  async _fetchTokenImage(symbol) {\n    const imageUrl = `${api.baseUrl}/public/getTokenImage/${symbol}`;\n    const blob = await api.getBlob({\n      path: imageUrl,\n      params: ApiController._getSdkProperties()\n    });\n    AssetController.setTokenImage(symbol, URL.createObjectURL(blob));\n  },\n  async fetchNetworkImages() {\n    const requestedCaipNetworks = ChainController.getAllRequestedCaipNetworks();\n    const ids = requestedCaipNetworks?.map(({\n      assets\n    }) => assets?.imageId).filter(Boolean).filter(imageId => !AssetUtil.getNetworkImageById(imageId));\n    if (ids) {\n      await Promise.allSettled(ids.map(id => ApiController._fetchNetworkImage(id)));\n    }\n  },\n  async fetchConnectorImages() {\n    const {\n      connectors\n    } = ConnectorController.state;\n    const ids = connectors.map(({\n      imageId\n    }) => imageId).filter(Boolean);\n    await Promise.allSettled(ids.map(id => ApiController._fetchConnectorImage(id)));\n  },\n  async fetchCurrencyImages(currencies = []) {\n    await Promise.allSettled(currencies.map(currency => ApiController._fetchCurrencyImage(currency)));\n  },\n  async fetchTokenImages(tokens = []) {\n    await Promise.allSettled(tokens.map(token => ApiController._fetchTokenImage(token)));\n  },\n  async fetchFeaturedWallets() {\n    const {\n      featuredWalletIds\n    } = OptionsController.state;\n    if (featuredWalletIds?.length) {\n      const {\n        data\n      } = await api.get({\n        path: '/getWallets',\n        params: {\n          ...ApiController._getSdkProperties(),\n          page: '1',\n          entries: featuredWalletIds?.length ? String(featuredWalletIds.length) : recommendedEntries,\n          include: featuredWalletIds?.join(',')\n        }\n      });\n      data.sort((a, b) => featuredWalletIds.indexOf(a.id) - featuredWalletIds.indexOf(b.id));\n      const images = data.map(d => d.image_id).filter(Boolean);\n      await Promise.allSettled(images.map(id => ApiController._fetchWalletImage(id)));\n      state.featured = data;\n      state.allFeatured = data;\n    }\n  },\n  async fetchRecommendedWallets() {\n    try {\n      state.isFetchingRecommendedWallets = true;\n      const {\n        includeWalletIds,\n        excludeWalletIds,\n        featuredWalletIds\n      } = OptionsController.state;\n      const exclude = [...(excludeWalletIds ?? []), ...(featuredWalletIds ?? [])].filter(Boolean);\n      const caipNetworkIds = ChainController.getRequestedCaipNetworkIds().join(',');\n      const {\n        data,\n        count\n      } = await api.get({\n        path: '/getWallets',\n        params: {\n          ...ApiController._getSdkProperties(),\n          page: '1',\n          chains: caipNetworkIds,\n          entries: recommendedEntries,\n          include: includeWalletIds?.join(','),\n          exclude: exclude?.join(',')\n        }\n      });\n      const recent = StorageUtil.getRecentWallets();\n      const recommendedImages = data.map(d => d.image_id).filter(Boolean);\n      const recentImages = recent.map(r => r.image_id).filter(Boolean);\n      await Promise.allSettled([...recommendedImages, ...recentImages].map(id => ApiController._fetchWalletImage(id)));\n      state.recommended = data;\n      state.allRecommended = data;\n      state.count = count ?? 0;\n    } catch {\n      // Catch silently\n    } finally {\n      state.isFetchingRecommendedWallets = false;\n    }\n  },\n  async fetchWallets({\n    page\n  }) {\n    const {\n      includeWalletIds,\n      excludeWalletIds,\n      featuredWalletIds\n    } = OptionsController.state;\n    const caipNetworkIds = ChainController.getRequestedCaipNetworkIds().join(',');\n    const exclude = [...state.recommended.map(({\n      id\n    }) => id), ...(excludeWalletIds ?? []), ...(featuredWalletIds ?? [])].filter(Boolean);\n    const {\n      data,\n      count\n    } = await api.get({\n      path: '/getWallets',\n      params: {\n        ...ApiController._getSdkProperties(),\n        page: String(page),\n        entries,\n        chains: caipNetworkIds,\n        include: includeWalletIds?.join(','),\n        exclude: exclude.join(',')\n      }\n    });\n    const images = data.slice(0, imageCountToFetch).map(w => w.image_id).filter(Boolean);\n    await Promise.allSettled(images.map(id => ApiController._fetchWalletImage(id)));\n    state.wallets = CoreHelperUtil.uniqueBy([...state.wallets, ...ApiController._filterOutExtensions(data)], 'id');\n    state.count = count > state.count ? count : state.count;\n    state.page = page;\n  },\n  async initializeExcludedWallets({\n    ids\n  }) {\n    const caipNetworkIds = ChainController.getRequestedCaipNetworkIds().join(',');\n    const {\n      data\n    } = await api.get({\n      path: '/getWallets',\n      params: {\n        ...ApiController._getSdkProperties(),\n        page: '1',\n        entries: String(ids.length),\n        chains: caipNetworkIds,\n        include: ids?.join(',')\n      }\n    });\n    if (data) {\n      data.forEach(wallet => {\n        if (wallet?.rdns) {\n          state.excludedWallets.push({\n            rdns: wallet.rdns,\n            name: wallet.name\n          });\n        }\n      });\n    }\n  },\n  async searchWallet({\n    search,\n    badge\n  }) {\n    const {\n      includeWalletIds,\n      excludeWalletIds\n    } = OptionsController.state;\n    state.search = [];\n    const caipNetworkIds = ChainController.getRequestedCaipNetworkIds().join(',');\n    const {\n      data\n    } = await api.get({\n      path: '/getWallets',\n      params: {\n        ...ApiController._getSdkProperties(),\n        page: '1',\n        entries: '100',\n        search: search?.trim(),\n        badge_type: badge,\n        chains: caipNetworkIds,\n        include: includeWalletIds?.join(','),\n        exclude: excludeWalletIds?.join(',')\n      }\n    });\n    EventsController.sendEvent({\n      type: 'track',\n      event: 'SEARCH_WALLET',\n      properties: {\n        badge: badge ?? '',\n        search: search ?? ''\n      }\n    });\n    const images = data.map(w => w.image_id).filter(Boolean);\n    await Promise.allSettled([...images.map(id => ApiController._fetchWalletImage(id)), CoreHelperUtil.wait(300)]);\n    state.search = ApiController._filterOutExtensions(data);\n  },\n  initPromise(key, fetchFn) {\n    const existingPromise = state.promises[key];\n    if (existingPromise) {\n      return existingPromise;\n    }\n    return state.promises[key] = fetchFn();\n  },\n  prefetch({\n    fetchConnectorImages = true,\n    fetchFeaturedWallets = true,\n    fetchRecommendedWallets = true,\n    fetchNetworkImages = true\n  } = {}) {\n    const promises = [fetchConnectorImages && ApiController.initPromise('connectorImages', ApiController.fetchConnectorImages), fetchFeaturedWallets && ApiController.initPromise('featuredWallets', ApiController.fetchFeaturedWallets), fetchRecommendedWallets && ApiController.initPromise('recommendedWallets', ApiController.fetchRecommendedWallets), fetchNetworkImages && ApiController.initPromise('networkImages', ApiController.fetchNetworkImages)].filter(Boolean);\n    return Promise.allSettled(promises);\n  },\n  prefetchAnalyticsConfig() {\n    if (OptionsController.state.features?.analytics) {\n      ApiController.fetchAnalyticsConfig();\n    }\n  },\n  async fetchAnalyticsConfig() {\n    try {\n      const {\n        isAnalyticsEnabled\n      } = await api.get({\n        path: '/getAnalyticsConfig',\n        params: ApiController._getSdkProperties()\n      });\n      OptionsController.setFeatures({\n        analytics: isAnalyticsEnabled\n      });\n    } catch (error) {\n      OptionsController.setFeatures({\n        analytics: false\n      });\n    }\n  },\n  setFilterByNamespace(namespace) {\n    if (!namespace) {\n      state.featured = state.allFeatured;\n      state.recommended = state.allRecommended;\n      return;\n    }\n    const caipNetworkIds = ChainController.getRequestedCaipNetworkIds().join(',');\n    state.featured = state.allFeatured.filter(wallet => wallet.chains?.some(chain => caipNetworkIds.includes(chain)));\n    state.recommended = state.allRecommended.filter(wallet => wallet.chains?.some(chain => caipNetworkIds.includes(chain)));\n  }\n};","map":{"version":3,"names":["proxy","subscribeKey","subKey","AssetUtil","CoreHelperUtil","FetchUtil","StorageUtil","AssetController","ChainController","ConnectorController","EventsController","OptionsController","baseUrl","getApiUrl","api","clientId","entries","recommendedEntries","imageCountToFetch","state","promises","page","count","featured","allFeatured","recommended","allRecommended","wallets","search","isAnalyticsEnabled","excludedWallets","isFetchingRecommendedWallets","ApiController","key","callback","_getSdkProperties","projectId","sdkType","sdkVersion","st","sv","_filterOutExtensions","isUniversalProvider","filter","w","Boolean","mobile_link","desktop_link","webapp_link","_fetchWalletImage","imageId","imageUrl","blob","getBlob","path","params","setWalletImage","URL","createObjectURL","_fetchNetworkImage","setNetworkImage","_fetchConnectorImage","setConnectorImage","_fetchCurrencyImage","countryCode","setCurrencyImage","_fetchTokenImage","symbol","setTokenImage","fetchNetworkImages","requestedCaipNetworks","getAllRequestedCaipNetworks","ids","map","assets","getNetworkImageById","Promise","allSettled","id","fetchConnectorImages","connectors","fetchCurrencyImages","currencies","currency","fetchTokenImages","tokens","token","fetchFeaturedWallets","featuredWalletIds","length","data","get","String","include","join","sort","a","b","indexOf","images","d","image_id","fetchRecommendedWallets","includeWalletIds","excludeWalletIds","exclude","caipNetworkIds","getRequestedCaipNetworkIds","chains","recent","getRecentWallets","recommendedImages","recentImages","r","fetchWallets","slice","uniqueBy","initializeExcludedWallets","forEach","wallet","rdns","push","name","searchWallet","badge","trim","badge_type","sendEvent","type","event","properties","wait","initPromise","fetchFn","existingPromise","prefetch","prefetchAnalyticsConfig","features","analytics","fetchAnalyticsConfig","setFeatures","error","setFilterByNamespace","namespace","some","chain","includes"],"sources":["../../../../src/controllers/ApiController.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}