{"ast":null,"code":"import { stringify } from '../utils/stringify.js';\nimport { BaseError } from './base.js';\nexport class InvalidDomainError extends BaseError {\n  constructor({\n    domain\n  }) {\n    super(`Invalid domain \"${stringify(domain)}\".`, {\n      metaMessages: ['Must be a valid EIP-712 domain.']\n    });\n  }\n}\nexport class InvalidPrimaryTypeError extends BaseError {\n  constructor({\n    primaryType,\n    types\n  }) {\n    super(`Invalid primary type \\`${primaryType}\\` must be one of \\`${JSON.stringify(Object.keys(types))}\\`.`, {\n      docsPath: '/api/glossary/Errors#typeddatainvalidprimarytypeerror',\n      metaMessages: ['Check that the primary type is a key in `types`.']\n    });\n  }\n}\nexport class InvalidStructTypeError extends BaseError {\n  constructor({\n    type\n  }) {\n    super(`Struct type \"${type}\" is invalid.`, {\n      metaMessages: ['Struct type must not be a Solidity type.'],\n      name: 'InvalidStructTypeError'\n    });\n  }\n}","map":{"version":3,"names":["stringify","BaseError","InvalidDomainError","constructor","domain","metaMessages","InvalidPrimaryTypeError","primaryType","types","JSON","Object","keys","docsPath","InvalidStructTypeError","type","name"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@reown\\appkit\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\errors\\typedData.ts"],"sourcesContent":["import type { TypedData } from 'abitype'\n\nimport { stringify } from '../utils/stringify.js'\nimport { BaseError } from './base.js'\n\nexport type InvalidDomainErrorType = InvalidDomainError & {\n  name: 'InvalidDomainError'\n}\nexport class InvalidDomainError extends BaseError {\n  constructor({ domain }: { domain: unknown }) {\n    super(`Invalid domain \"${stringify(domain)}\".`, {\n      metaMessages: ['Must be a valid EIP-712 domain.'],\n    })\n  }\n}\n\nexport type InvalidPrimaryTypeErrorType = InvalidPrimaryTypeError & {\n  name: 'InvalidPrimaryTypeError'\n}\nexport class InvalidPrimaryTypeError extends BaseError {\n  constructor({\n    primaryType,\n    types,\n  }: { primaryType: string; types: TypedData | Record<string, unknown> }) {\n    super(\n      `Invalid primary type \\`${primaryType}\\` must be one of \\`${JSON.stringify(Object.keys(types))}\\`.`,\n      {\n        docsPath: '/api/glossary/Errors#typeddatainvalidprimarytypeerror',\n        metaMessages: ['Check that the primary type is a key in `types`.'],\n      },\n    )\n  }\n}\n\nexport type InvalidStructTypeErrorType = InvalidStructTypeError & {\n  name: 'InvalidStructTypeError'\n}\nexport class InvalidStructTypeError extends BaseError {\n  constructor({ type }: { type: string }) {\n    super(`Struct type \"${type}\" is invalid.`, {\n      metaMessages: ['Struct type must not be a Solidity type.'],\n      name: 'InvalidStructTypeError',\n    })\n  }\n}\n"],"mappings":"AAEA,SAASA,SAAS,QAAQ,uBAAuB;AACjD,SAASC,SAAS,QAAQ,WAAW;AAKrC,OAAM,MAAOC,kBAAmB,SAAQD,SAAS;EAC/CE,YAAY;IAAEC;EAAM,CAAuB;IACzC,KAAK,CAAC,mBAAmBJ,SAAS,CAACI,MAAM,CAAC,IAAI,EAAE;MAC9CC,YAAY,EAAE,CAAC,iCAAiC;KACjD,CAAC;EACJ;;AAMF,OAAM,MAAOC,uBAAwB,SAAQL,SAAS;EACpDE,YAAY;IACVI,WAAW;IACXC;EAAK,CAC+D;IACpE,KAAK,CACH,0BAA0BD,WAAW,uBAAuBE,IAAI,CAACT,SAAS,CAACU,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAAC,KAAK,EACnG;MACEI,QAAQ,EAAE,uDAAuD;MACjEP,YAAY,EAAE,CAAC,kDAAkD;KAClE,CACF;EACH;;AAMF,OAAM,MAAOQ,sBAAuB,SAAQZ,SAAS;EACnDE,YAAY;IAAEW;EAAI,CAAoB;IACpC,KAAK,CAAC,gBAAgBA,IAAI,eAAe,EAAE;MACzCT,YAAY,EAAE,CAAC,0CAA0C,CAAC;MAC1DU,IAAI,EAAE;KACP,CAAC;EACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}