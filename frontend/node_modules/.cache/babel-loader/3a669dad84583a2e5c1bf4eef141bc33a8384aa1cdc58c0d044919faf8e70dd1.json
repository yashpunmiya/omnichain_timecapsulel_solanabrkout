{"ast":null,"code":"import { allocUnsafe } from './alloc.js';\nexport function xor(a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length');\n  }\n  const result = allocUnsafe(a.length);\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n  return result;\n}","map":{"version":3,"names":["allocUnsafe","xor","a","b","length","Error","result","i"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/uint8arrays/esm/src/xor.js"],"sourcesContent":["import { allocUnsafe } from './alloc.js';\nexport function xor(a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length');\n  }\n  const result = allocUnsafe(a.length);\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n  return result;\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,YAAY;AACxC,OAAO,SAASC,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACxB,IAAID,CAAC,CAACE,MAAM,KAAKD,CAAC,CAACC,MAAM,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;EACvD;EACA,MAAMC,MAAM,GAAGN,WAAW,CAACE,CAAC,CAACE,MAAM,CAAC;EACpC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,CAAC,CAACE,MAAM,EAAEG,CAAC,EAAE,EAAE;IACjCD,MAAM,CAACC,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC,GAAGJ,CAAC,CAACI,CAAC,CAAC;EACzB;EACA,OAAOD,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}