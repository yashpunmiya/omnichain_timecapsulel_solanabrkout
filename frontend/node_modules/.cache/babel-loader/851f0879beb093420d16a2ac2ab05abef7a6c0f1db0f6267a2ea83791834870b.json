{"ast":null,"code":"import { EventEmitter as a } from \"events\";\nimport { FIVE_SECONDS as o, toMiliseconds as l } from \"@walletconnect/time\";\nimport { IEvents as v } from \"@walletconnect/events\";\nclass n extends v {\n  constructor(e) {\n    super();\n  }\n}\nconst s = o,\n  r = {\n    pulse: \"heartbeat_pulse\"\n  };\nclass i extends n {\n  constructor(e) {\n    super(e), this.events = new a(), this.interval = s, this.interval = e?.interval || s;\n  }\n  static async init(e) {\n    const t = new i(e);\n    return await t.init(), t;\n  }\n  async init() {\n    await this.initialize();\n  }\n  stop() {\n    clearInterval(this.intervalRef);\n  }\n  on(e, t) {\n    this.events.on(e, t);\n  }\n  once(e, t) {\n    this.events.once(e, t);\n  }\n  off(e, t) {\n    this.events.off(e, t);\n  }\n  removeListener(e, t) {\n    this.events.removeListener(e, t);\n  }\n  async initialize() {\n    this.intervalRef = setInterval(() => this.pulse(), l(this.interval));\n  }\n  pulse() {\n    this.events.emit(r.pulse);\n  }\n}\nexport { r as HEARTBEAT_EVENTS, s as HEARTBEAT_INTERVAL, i as HeartBeat, n as IHeartBeat };\n//# sourceMappingURL=index.es.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}