{"ast":null,"code":"import { InvalidAddressError } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { InvalidChainIdError } from '../../errors/chain.js';\nimport { isAddress } from '../../utils/address/isAddress.js';\nimport { InvalidEip712TransactionError } from '../errors/transaction.js';\nimport { isEIP712Transaction } from './isEip712Transaction.js';\nexport function assertEip712Transaction(transaction) {\n  const {\n    chainId,\n    to,\n    from,\n    paymaster,\n    paymasterInput\n  } = transaction;\n  if (!isEIP712Transaction(transaction)) throw new InvalidEip712TransactionError();\n  if (!chainId || chainId <= 0) throw new InvalidChainIdError({\n    chainId\n  });\n  if (to && !isAddress(to)) throw new InvalidAddressError({\n    address: to\n  });\n  if (from && !isAddress(from)) throw new InvalidAddressError({\n    address: from\n  });\n  if (paymaster && !isAddress(paymaster)) throw new InvalidAddressError({\n    address: paymaster\n  });\n  if (paymaster && !paymasterInput) {\n    throw new BaseError('`paymasterInput` must be provided when `paymaster` is defined');\n  }\n  if (!paymaster && paymasterInput) {\n    throw new BaseError('`paymaster` must be provided when `paymasterInput` is defined');\n  }\n}\n//# sourceMappingURL=assertEip712Transaction.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}