{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { AssetUtil, ConnectionController, ConnectorController, CoreHelperUtil, OptionsController, RouterController, StorageUtil } from '@reown/appkit-controllers';\nimport { customElement } from '@reown/appkit-ui';\nimport '@reown/appkit-ui/wui-flex';\nimport '@reown/appkit-ui/wui-list-wallet';\nimport { WalletUtil } from '../../utils/WalletUtil.js';\nlet W3mConnectRecommendedWidget = class W3mConnectRecommendedWidget extends LitElement {\n  constructor() {\n    super();\n    this.unsubscribe = [];\n    this.tabIdx = undefined;\n    this.wallets = [];\n    this.loading = false;\n    if (CoreHelperUtil.isTelegram() && CoreHelperUtil.isIos()) {\n      this.loading = !ConnectionController.state.wcUri;\n      this.unsubscribe.push(ConnectionController.subscribeKey('wcUri', val => this.loading = !val));\n    }\n  }\n  render() {\n    const {\n      connectors\n    } = ConnectorController.state;\n    const {\n      customWallets,\n      featuredWalletIds\n    } = OptionsController.state;\n    const recentWallets = StorageUtil.getRecentWallets();\n    const wcConnector = connectors.find(c => c.id === 'walletConnect');\n    const injectedConnectors = connectors.filter(c => c.type === 'INJECTED' || c.type === 'ANNOUNCED' || c.type === 'MULTI_CHAIN');\n    const injectedWallets = injectedConnectors.filter(i => i.name !== 'Browser Wallet');\n    if (!wcConnector) {\n      return null;\n    }\n    if (featuredWalletIds || customWallets || !this.wallets.length) {\n      this.style.cssText = `display: none`;\n      return null;\n    }\n    const overrideLength = injectedWallets.length + recentWallets.length;\n    const maxRecommended = Math.max(0, 2 - overrideLength);\n    const wallets = WalletUtil.filterOutDuplicateWallets(this.wallets).slice(0, maxRecommended);\n    if (!wallets.length) {\n      this.style.cssText = `display: none`;\n      return null;\n    }\n    return html`\n      <wui-flex flexDirection=\"column\" gap=\"xs\">\n        ${wallets.map(wallet => html`\n            <wui-list-wallet\n              imageSrc=${ifDefined(AssetUtil.getWalletImage(wallet))}\n              name=${wallet?.name ?? 'Unknown'}\n              @click=${() => this.onConnectWallet(wallet)}\n              tabIdx=${ifDefined(this.tabIdx)}\n              ?loading=${this.loading}\n            >\n            </wui-list-wallet>\n          `)}\n      </wui-flex>\n    `;\n  }\n  onConnectWallet(wallet) {\n    if (this.loading) {\n      return;\n    }\n    const connector = ConnectorController.getConnector(wallet.id, wallet.rdns);\n    if (connector) {\n      RouterController.push('ConnectingExternal', {\n        connector\n      });\n    } else {\n      RouterController.push('ConnectingWalletConnect', {\n        wallet\n      });\n    }\n  }\n};\n__decorate([property()], W3mConnectRecommendedWidget.prototype, \"tabIdx\", void 0);\n__decorate([property()], W3mConnectRecommendedWidget.prototype, \"wallets\", void 0);\n__decorate([state()], W3mConnectRecommendedWidget.prototype, \"loading\", void 0);\nW3mConnectRecommendedWidget = __decorate([customElement('w3m-connect-recommended-widget')], W3mConnectRecommendedWidget);\nexport { W3mConnectRecommendedWidget };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}