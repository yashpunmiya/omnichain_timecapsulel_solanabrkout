{"ast":null,"code":"import { useEffect, useRef, useState } from 'react';\nexport function useLocalStorage(key, defaultState) {\n  const state = useState(() => {\n    try {\n      const value = localStorage.getItem(key);\n      if (value) return JSON.parse(value);\n    } catch (error) {\n      if (typeof window !== 'undefined') {\n        console.error(error);\n      }\n    }\n    return defaultState;\n  });\n  const value = state[0];\n  const isFirstRenderRef = useRef(true);\n  useEffect(() => {\n    if (isFirstRenderRef.current) {\n      isFirstRenderRef.current = false;\n      return;\n    }\n    try {\n      if (value === null) {\n        localStorage.removeItem(key);\n      } else {\n        localStorage.setItem(key, JSON.stringify(value));\n      }\n    } catch (error) {\n      if (typeof window !== 'undefined') {\n        console.error(error);\n      }\n    }\n  }, [value, key]);\n  return state;\n}\n//# sourceMappingURL=useLocalStorage.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}