{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QRHardwareCall = exports.QRHardwareCallVersion = exports.QRHardwareCallType = void 0;\nconst RegistryType_1 = require(\"../RegistryType\");\nconst RegistryItem_1 = require(\"../RegistryItem\");\nconst lib_1 = require(\"../lib\");\nconst KeyDerivation_1 = require(\"./KeyDerivation\");\nvar Keys;\n(function (Keys) {\n  Keys[Keys[\"type\"] = 1] = \"type\";\n  Keys[Keys[\"params\"] = 2] = \"params\";\n  Keys[Keys[\"origin\"] = 3] = \"origin\";\n  Keys[Keys[\"version\"] = 4] = \"version\";\n})(Keys || (Keys = {}));\nvar QRHardwareCallType;\n(function (QRHardwareCallType) {\n  QRHardwareCallType[QRHardwareCallType[\"KeyDerivation\"] = 0] = \"KeyDerivation\";\n})(QRHardwareCallType = exports.QRHardwareCallType || (exports.QRHardwareCallType = {}));\nvar QRHardwareCallVersion;\n(function (QRHardwareCallVersion) {\n  QRHardwareCallVersion[QRHardwareCallVersion[\"V0\"] = 0] = \"V0\";\n  QRHardwareCallVersion[QRHardwareCallVersion[\"V1\"] = 1] = \"V1\";\n})(QRHardwareCallVersion = exports.QRHardwareCallVersion || (exports.QRHardwareCallVersion = {}));\nclass QRHardwareCall extends RegistryItem_1.RegistryItem {\n  constructor(type, params, origin, version) {\n    super();\n    this.type = type;\n    this.params = params;\n    this.origin = origin;\n    this.version = version;\n    this.getRegistryType = () => RegistryType_1.RegistryTypes.QR_HARDWARE_CALL;\n    this.getType = () => this.type;\n    this.getParams = () => this.params;\n    this.getOrigin = () => this.origin;\n    this.getVersion = () => this.version;\n    this.toDataItem = () => {\n      const map = {};\n      map[Keys.type] = this.type;\n      const param = this.params.toDataItem();\n      param.setTag(this.params.getRegistryType().getTag());\n      map[Keys.params] = param;\n      if (this.origin) {\n        map[Keys.origin] = this.origin;\n      }\n      if (this.version) {\n        map[Keys.version] = this.version;\n      }\n      return new lib_1.DataItem(map);\n    };\n  }\n}\nexports.QRHardwareCall = QRHardwareCall;\nQRHardwareCall.fromDataItem = dataItem => {\n  const map = dataItem.getData();\n  const type = map[Keys.type] || QRHardwareCallType.KeyDerivation;\n  let params;\n  switch (type) {\n    case QRHardwareCallType.KeyDerivation:\n      params = KeyDerivation_1.KeyDerivation.fromDataItem(map[Keys.params]);\n  }\n  const origin = map[Keys.origin];\n  const version = map[Keys.version];\n  return new QRHardwareCall(type, params, origin, version);\n};\nQRHardwareCall.fromCBOR = _cborPayload => {\n  const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);\n  return QRHardwareCall.fromDataItem(dataItem);\n};\n//# sourceMappingURL=QRHardwareCall.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}