{"ast":null,"code":"export function isLegacyTransactionInstance(transaction) {\n  return transaction.version === undefined;\n}\nexport function serializeTransaction(transaction) {\n  return isLegacyTransactionInstance(transaction) ? transaction.serialize({\n    verifySignatures: false,\n    requireAllSignatures: false\n  }) : transaction.serialize();\n}\nexport function serializeTransactionMessage(transaction) {\n  return isLegacyTransactionInstance(transaction) ? transaction.serializeMessage() : transaction.message.serialize();\n}\nexport function addSignature(transaction, publicKey, signature) {\n  if (isLegacyTransactionInstance(transaction)) {\n    transaction.addSignature(publicKey, Buffer.from(signature));\n  } else {\n    const signerPubkeys = transaction.message.staticAccountKeys.slice(0, transaction.message.header.numRequiredSignatures);\n    const signerIndex = signerPubkeys.findIndex(pubkey => pubkey.equals(publicKey));\n    if (signerIndex >= 0) {\n      transaction.signatures[signerIndex] = signature;\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}