{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ConnectionController, ConnectorController, EventsController, ModalController } from '@reown/appkit-controllers';\nimport { customElement } from '@reown/appkit-ui';\nimport { W3mConnectingWidget } from '../../utils/w3m-connecting-widget/index.js';\nlet W3mConnectingWcBrowser = class W3mConnectingWcBrowser extends W3mConnectingWidget {\n  constructor() {\n    super();\n    if (!this.wallet) {\n      throw new Error('w3m-connecting-wc-browser: No wallet provided');\n    }\n    this.onConnect = this.onConnectProxy.bind(this);\n    this.onAutoConnect = this.onConnectProxy.bind(this);\n    EventsController.sendEvent({\n      type: 'track',\n      event: 'SELECT_WALLET',\n      properties: {\n        name: this.wallet.name,\n        platform: 'browser'\n      }\n    });\n  }\n  async onConnectProxy() {\n    try {\n      this.error = false;\n      const {\n        connectors\n      } = ConnectorController.state;\n      const connector = connectors.find(c => c.type === 'ANNOUNCED' && c.info?.rdns === this.wallet?.rdns || c.type === 'INJECTED' || c.name === this.wallet?.name);\n      if (connector) {\n        await ConnectionController.connectExternal(connector, connector.chain);\n      } else {\n        throw new Error('w3m-connecting-wc-browser: No connector found');\n      }\n      ModalController.close();\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'CONNECT_SUCCESS',\n        properties: {\n          method: 'browser',\n          name: this.wallet?.name || 'Unknown'\n        }\n      });\n    } catch (error) {\n      EventsController.sendEvent({\n        type: 'track',\n        event: 'CONNECT_ERROR',\n        properties: {\n          message: error?.message ?? 'Unknown'\n        }\n      });\n      this.error = true;\n    }\n  }\n};\nW3mConnectingWcBrowser = __decorate([customElement('w3m-connecting-wc-browser')], W3mConnectingWcBrowser);\nexport { W3mConnectingWcBrowser };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}