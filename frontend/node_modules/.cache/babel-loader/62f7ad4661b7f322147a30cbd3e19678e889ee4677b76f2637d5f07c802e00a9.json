{"ast":null,"code":"import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nimport { formatLog } from './log.js';\nimport { transactionType } from './transaction.js';\nexport const receiptStatuses = {\n  '0x0': 'reverted',\n  '0x1': 'success'\n};\nexport function formatTransactionReceipt(transactionReceipt) {\n  const receipt = {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber ? BigInt(transactionReceipt.blockNumber) : null,\n    contractAddress: transactionReceipt.contractAddress ? transactionReceipt.contractAddress : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed ? BigInt(transactionReceipt.cumulativeGasUsed) : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice ? BigInt(transactionReceipt.effectiveGasPrice) : null,\n    gasUsed: transactionReceipt.gasUsed ? BigInt(transactionReceipt.gasUsed) : null,\n    logs: transactionReceipt.logs ? transactionReceipt.logs.map(log => formatLog(log)) : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex ? hexToNumber(transactionReceipt.transactionIndex) : null,\n    status: transactionReceipt.status ? receiptStatuses[transactionReceipt.status] : null,\n    type: transactionReceipt.type ? transactionType[transactionReceipt.type] || transactionReceipt.type : null\n  };\n  if (transactionReceipt.blobGasPrice) receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);\n  if (transactionReceipt.blobGasUsed) receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);\n  return receipt;\n}\nexport const defineTransactionReceipt = /*#__PURE__*/defineFormatter('transactionReceipt', formatTransactionReceipt);","map":{"version":3,"names":["hexToNumber","defineFormatter","formatLog","transactionType","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","blockNumber","BigInt","contractAddress","cumulativeGasUsed","effectiveGasPrice","gasUsed","logs","map","log","to","transactionIndex","status","type","blobGasPrice","blobGasUsed","defineTransactionReceipt"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@reown\\appkit-controllers\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\utils\\formatters\\transactionReceipt.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { TransactionReceipt } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { formatLog } from './log.js'\nimport { transactionType } from './transaction.js'\n\nexport type FormattedTransactionReceipt<\n  chain extends Chain | undefined = undefined,\n> = ExtractChainFormatterReturnType<\n  chain,\n  'transactionReceipt',\n  TransactionReceipt\n>\n\nexport const receiptStatuses = {\n  '0x0': 'reverted',\n  '0x1': 'success',\n} as const\n\nexport type FormatTransactionReceiptErrorType = ErrorType\n\nexport function formatTransactionReceipt(\n  transactionReceipt: ExactPartial<RpcTransactionReceipt>,\n) {\n  const receipt = {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber\n      ? BigInt(transactionReceipt.blockNumber)\n      : null,\n    contractAddress: transactionReceipt.contractAddress\n      ? transactionReceipt.contractAddress\n      : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n      ? BigInt(transactionReceipt.cumulativeGasUsed)\n      : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice\n      ? BigInt(transactionReceipt.effectiveGasPrice)\n      : null,\n    gasUsed: transactionReceipt.gasUsed\n      ? BigInt(transactionReceipt.gasUsed)\n      : null,\n    logs: transactionReceipt.logs\n      ? transactionReceipt.logs.map((log) => formatLog(log))\n      : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex\n      ? hexToNumber(transactionReceipt.transactionIndex)\n      : null,\n    status: transactionReceipt.status\n      ? receiptStatuses[transactionReceipt.status]\n      : null,\n    type: transactionReceipt.type\n      ? transactionType[\n          transactionReceipt.type as keyof typeof transactionType\n        ] || transactionReceipt.type\n      : null,\n  } as TransactionReceipt\n\n  if (transactionReceipt.blobGasPrice)\n    receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice)\n  if (transactionReceipt.blobGasUsed)\n    receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed)\n\n  return receipt\n}\n\nexport type DefineTransactionReceiptErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter(\n  'transactionReceipt',\n  formatTransactionReceipt,\n)\n"],"mappings":"AAQA,SAASA,WAAW,QAAQ,wBAAwB;AAEpD,SAAwCC,eAAe,QAAQ,gBAAgB;AAC/E,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,eAAe,QAAQ,kBAAkB;AAUlD,OAAO,MAAMC,eAAe,GAAG;EAC7B,KAAK,EAAE,UAAU;EACjB,KAAK,EAAE;CACC;AAIV,OAAM,SAAUC,wBAAwBA,CACtCC,kBAAuD;EAEvD,MAAMC,OAAO,GAAG;IACd,GAAGD,kBAAkB;IACrBE,WAAW,EAAEF,kBAAkB,CAACE,WAAW,GACvCC,MAAM,CAACH,kBAAkB,CAACE,WAAW,CAAC,GACtC,IAAI;IACRE,eAAe,EAAEJ,kBAAkB,CAACI,eAAe,GAC/CJ,kBAAkB,CAACI,eAAe,GAClC,IAAI;IACRC,iBAAiB,EAAEL,kBAAkB,CAACK,iBAAiB,GACnDF,MAAM,CAACH,kBAAkB,CAACK,iBAAiB,CAAC,GAC5C,IAAI;IACRC,iBAAiB,EAAEN,kBAAkB,CAACM,iBAAiB,GACnDH,MAAM,CAACH,kBAAkB,CAACM,iBAAiB,CAAC,GAC5C,IAAI;IACRC,OAAO,EAAEP,kBAAkB,CAACO,OAAO,GAC/BJ,MAAM,CAACH,kBAAkB,CAACO,OAAO,CAAC,GAClC,IAAI;IACRC,IAAI,EAAER,kBAAkB,CAACQ,IAAI,GACzBR,kBAAkB,CAACQ,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAKd,SAAS,CAACc,GAAG,CAAC,CAAC,GACpD,IAAI;IACRC,EAAE,EAAEX,kBAAkB,CAACW,EAAE,GAAGX,kBAAkB,CAACW,EAAE,GAAG,IAAI;IACxDC,gBAAgB,EAAEZ,kBAAkB,CAACY,gBAAgB,GACjDlB,WAAW,CAACM,kBAAkB,CAACY,gBAAgB,CAAC,GAChD,IAAI;IACRC,MAAM,EAAEb,kBAAkB,CAACa,MAAM,GAC7Bf,eAAe,CAACE,kBAAkB,CAACa,MAAM,CAAC,GAC1C,IAAI;IACRC,IAAI,EAAEd,kBAAkB,CAACc,IAAI,GACzBjB,eAAe,CACbG,kBAAkB,CAACc,IAAoC,CACxD,IAAId,kBAAkB,CAACc,IAAI,GAC5B;GACiB;EAEvB,IAAId,kBAAkB,CAACe,YAAY,EACjCd,OAAO,CAACc,YAAY,GAAGZ,MAAM,CAACH,kBAAkB,CAACe,YAAY,CAAC;EAChE,IAAIf,kBAAkB,CAACgB,WAAW,EAChCf,OAAO,CAACe,WAAW,GAAGb,MAAM,CAACH,kBAAkB,CAACgB,WAAW,CAAC;EAE9D,OAAOf,OAAO;AAChB;AAMA,OAAO,MAAMgB,wBAAwB,GAAG,aAActB,eAAe,CACnE,oBAAoB,EACpBI,wBAAwB,CACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}