{"ast":null,"code":"import { hexToBigInt } from '../utils/encoding/fromHex.js';\nimport { defineBlock } from '../utils/formatters/block.js';\nimport { defineTransaction, formatTransaction } from '../utils/formatters/transaction.js';\nimport { defineTransactionRequest } from '../utils/formatters/transactionRequest.js';\nimport { isCIP64 } from './utils.js';\nexport const formatters = {\n  block: /*#__PURE__*/defineBlock({\n    format(args) {\n      const transactions = args.transactions?.map(transaction => {\n        if (typeof transaction === 'string') return transaction;\n        const formatted = formatTransaction(transaction);\n        return {\n          ...formatted,\n          ...(transaction.gatewayFee ? {\n            gatewayFee: hexToBigInt(transaction.gatewayFee),\n            gatewayFeeRecipient: transaction.gatewayFeeRecipient\n          } : {}),\n          feeCurrency: transaction.feeCurrency\n        };\n      });\n      return {\n        transactions\n      };\n    }\n  }),\n  transaction: /*#__PURE__*/defineTransaction({\n    format(args) {\n      if (args.type === '0x7e') return {\n        isSystemTx: args.isSystemTx,\n        mint: args.mint ? hexToBigInt(args.mint) : undefined,\n        sourceHash: args.sourceHash,\n        type: 'deposit'\n      };\n      const transaction = {\n        feeCurrency: args.feeCurrency\n      };\n      if (args.type === '0x7b') transaction.type = 'cip64';else {\n        if (args.type === '0x7c') transaction.type = 'cip42';\n        transaction.gatewayFee = args.gatewayFee ? hexToBigInt(args.gatewayFee) : null;\n        transaction.gatewayFeeRecipient = args.gatewayFeeRecipient;\n      }\n      return transaction;\n    }\n  }),\n  transactionRequest: /*#__PURE__*/defineTransactionRequest({\n    format(args) {\n      const request = {};\n      if (args.feeCurrency) request.feeCurrency = args.feeCurrency;\n      if (isCIP64(args)) request.type = '0x7b';\n      return request;\n    }\n  })\n};\n//# sourceMappingURL=formatters.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}