{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TxRequestDetailsType = exports.RequestType = exports.EnumEnum_RequestType = exports.Enum_RequestType = exports.SignTx = exports.CoinJoinRequest = exports.VerifyMessage = exports.MessageSignature = exports.SignMessage = exports.OwnershipId = exports.GetOwnershipId = exports.Address = exports.GetAddress = exports.PublicKey = exports.GetPublicKey = exports.MultisigRedeemScriptType = exports.HDNodePathType = exports.HDNodeType = exports.EnumMultisigPubkeysOrder = exports.MultisigPubkeysOrder = exports.EnumAmountUnit = exports.AmountUnit = exports.EnumDecredStakingSpendType = exports.DecredStakingSpendType = exports.OutputScriptType = exports.EnumEnum_OutputScriptType = exports.Enum_OutputScriptType = exports.InputScriptType = exports.EnumEnum_InputScriptType = exports.Enum_InputScriptType = exports.BinanceSignedTx = exports.BinanceCancelMsg = exports.BinanceOrderMsg = exports.EnumBinanceTimeInForce = exports.BinanceTimeInForce = exports.EnumBinanceOrderSide = exports.BinanceOrderSide = exports.EnumBinanceOrderType = exports.BinanceOrderType = exports.BinanceTransferMsg = exports.BinanceInputOutput = exports.BinanceCoin = exports.BinanceTxRequest = exports.BinanceSignTx = exports.BinancePublicKey = exports.BinanceGetPublicKey = exports.BinanceAddress = exports.BinanceGetAddress = exports.EnumDeviceModelInternal = exports.DeviceModelInternal = void 0;\nexports.CardanoDRepType = exports.EnumCardanoCertificateType = exports.CardanoCertificateType = exports.EnumCardanoTxOutputSerializationFormat = exports.CardanoTxOutputSerializationFormat = exports.EnumCardanoNativeScriptHashDisplayFormat = exports.CardanoNativeScriptHashDisplayFormat = exports.EnumCardanoNativeScriptType = exports.CardanoNativeScriptType = exports.EnumCardanoAddressType = exports.CardanoAddressType = exports.EnumCardanoDerivationType = exports.CardanoDerivationType = exports.ProdTestT1 = exports.FirmwareUpload = exports.FirmwareRequest = exports.FirmwareErase = exports.AuthorizeCoinJoin = exports.OwnershipProof = exports.GetOwnershipProof = exports.TxAckPrevExtraData = exports.TxAckPrevExtraDataWrapper = exports.TxAckPrevOutput = exports.TxAckPrevOutputWrapper = exports.TxAckPrevInput = exports.TxAckPrevInputWrapper = exports.TxAckPrevMeta = exports.TxAckOutput = exports.TxAckOutputWrapper = exports.TxAckInput = exports.TxAckInputWrapper = exports.TxAck = exports.TxAckResponse = exports.TxAckPaymentRequest = exports.PaymentRequestMemo = exports.CoinPurchaseMemo = exports.RefundMemo = exports.TextMemo = exports.PrevOutput = exports.PrevInput = exports.PrevTx = exports.TxOutput = exports.TxOutputType = exports.ChangeOutputScriptType = exports.TxOutputBinType = exports.TxInput = exports.TxInputType = exports.InternalInputScriptType = exports.TxRequest = exports.TxRequestSerializedType = void 0;\nexports.FailureType = exports.Success = exports.CardanoSignTxFinished = exports.CardanoTxBodyHash = exports.CardanoTxHostAck = exports.CardanoTxWitnessResponse = exports.CardanoTxWitnessRequest = exports.CardanoTxAuxiliaryDataSupplement = exports.CardanoTxItemAck = exports.CardanoTxReferenceInput = exports.CardanoTxRequiredSigner = exports.CardanoTxCollateralInput = exports.CardanoTxMint = exports.CardanoTxAuxiliaryData = exports.CardanoCVoteRegistrationParametersType = exports.CardanoCVoteRegistrationDelegation = exports.CardanoTxWithdrawal = exports.CardanoTxCertificate = exports.CardanoDRep = exports.CardanoPoolParametersType = exports.CardanoPoolMetadataType = exports.CardanoPoolRelayParameters = exports.CardanoPoolOwner = exports.CardanoTxReferenceScriptChunk = exports.CardanoTxInlineDatumChunk = exports.CardanoToken = exports.CardanoAssetGroup = exports.CardanoTxOutput = exports.CardanoTxInput = exports.CardanoSignTxInit = exports.CardanoPublicKey = exports.CardanoGetPublicKey = exports.CardanoAddress = exports.CardanoGetAddress = exports.CardanoAddressParametersType = exports.CardanoNativeScriptHash = exports.CardanoGetNativeScriptHash = exports.CardanoNativeScript = exports.CardanoBlockchainPointerType = exports.EnumCardanoTxWitnessType = exports.CardanoTxWitnessType = exports.EnumCardanoTxSigningMode = exports.CardanoTxSigningMode = exports.EnumCardanoCVoteRegistrationFormat = exports.CardanoCVoteRegistrationFormat = exports.EnumCardanoTxAuxiliaryDataSupplementType = exports.CardanoTxAuxiliaryDataSupplementType = exports.EnumCardanoPoolRelayType = exports.CardanoPoolRelayType = exports.EnumCardanoDRepType = void 0;\nexports.EosActionSellRam = exports.EosActionBuyRamBytes = exports.EosActionBuyRam = exports.EosActionRefund = exports.EosActionUndelegate = exports.EosActionDelegate = exports.EosActionTransfer = exports.EosActionCommon = exports.EosAuthorization = exports.EosAuthorizationWait = exports.EosAuthorizationAccount = exports.EosAuthorizationKey = exports.EosPermissionLevel = exports.EosAsset = exports.EosTxActionRequest = exports.EosSignTx = exports.EosTxHeader = exports.EosPublicKey = exports.EosGetPublicKey = exports.DebugLinkOptigaSetSecMax = exports.DebugLinkResetDebugEvents = exports.EnumDebugWaitType = exports.DebugWaitType = exports.EnumDebugPhysicalButton = exports.DebugPhysicalButton = exports.EnumDebugButton = exports.DebugButton = exports.ECDHSessionKey = exports.GetECDHSessionKey = exports.SignedIdentity = exports.SignIdentity = exports.IdentityType = exports.CipheredKeyValue = exports.CipherKeyValue = exports.Deprecated_PassphraseStateAck = exports.Deprecated_PassphraseStateRequest = exports.PassphraseAck = exports.PassphraseRequest = exports.PinMatrixAck = exports.PinMatrixRequest = exports.PinMatrixRequestType = exports.EnumEnum_PinMatrixRequestType = exports.Enum_PinMatrixRequestType = exports.ButtonAck = exports.ButtonRequest = exports.ButtonRequestType = exports.EnumEnum_ButtonRequestType = exports.Enum_ButtonRequestType = exports.Failure = exports.EnumFailureType = void 0;\nexports.Initialize = exports.HomescreenFormat = exports.EnumEnum_HomescreenFormat = exports.Enum_HomescreenFormat = exports.DisplayRotation = exports.EnumEnum_DisplayRotation = exports.Enum_DisplayRotation = exports.SafetyCheckLevel = exports.EnumEnum_SafetyCheckLevel = exports.Enum_SafetyCheckLevel = exports.BackupType = exports.EnumEnum_BackupType = exports.Enum_BackupType = exports.EthereumTypedDataSignature = exports.EthereumSignTypedHash = exports.EthereumVerifyMessage = exports.EthereumMessageSignature = exports.EthereumSignMessage = exports.EthereumTxAck = exports.EthereumTxRequest = exports.EthereumSignTxEIP1559 = exports.EthereumAccessList = exports.EthereumSignTx = exports.EthereumAddress = exports.EthereumGetAddress = exports.EthereumPublicKey = exports.EthereumGetPublicKey = exports.EthereumTypedDataValueAck = exports.EthereumTypedDataValueRequest = exports.EthereumTypedDataStructAck = exports.EthereumStructMember = exports.EthereumFieldType = exports.EnumEthereumDataType = exports.EthereumDataType = exports.EthereumTypedDataStructRequest = exports.EthereumSignTypedData = exports.EthereumDefinitions = exports.EthereumTokenInfo = exports.EthereumNetworkInfo = exports.EnumEthereumDefinitionType = exports.EthereumDefinitionType = exports.EosSignedTx = exports.EosTxActionAck = exports.EosActionUnknown = exports.EosActionNewAccount = exports.EosActionUnlinkAuth = exports.EosActionLinkAuth = exports.EosActionDeleteAuth = exports.EosActionUpdateAuth = exports.EosActionVoteProducer = void 0;\nexports.WordRequestType = exports.EnumEnum_WordRequestType = exports.Enum_WordRequestType = exports.EntropyCheckContinue = exports.EntropyCheckReady = exports.EntropyAck = exports.EntropyRequest = exports.BackupDevice = exports.Slip39Group = exports.ResetDevice = exports.LoadDevice = exports.WipeDevice = exports.AuthenticityProof = exports.AuthenticateDevice = exports.FirmwareHash = exports.GetFirmwareHash = exports.Entropy = exports.GetEntropy = exports.Cancel = exports.Ping = exports.SdProtect = exports.EnumSdProtectOperationType = exports.SdProtectOperationType = exports.ChangeWipeCode = exports.ChangePin = exports.ApplyFlags = exports.TranslationDataAck = exports.TranslationDataRequest = exports.ChangeLanguage = exports.ApplySettings = exports.EndSession = exports.SetBusy = exports.LockDevice = exports.Features = exports.RecoveryDevice = exports.RecoveryType = exports.EnumEnum_RecoveryType = exports.Enum_RecoveryType = exports.EnumRecoveryDeviceInputMethod = exports.RecoveryDeviceInputMethod = exports.Capability = exports.EnumEnum_Capability = exports.Enum_Capability = exports.RecoveryStatus = exports.EnumEnum_RecoveryStatus = exports.Enum_RecoveryStatus = exports.BackupAvailability = exports.EnumEnum_BackupAvailability = exports.Enum_BackupAvailability = exports.GetFeatures = void 0;\nexports.SolanaGetAddress = exports.SolanaPublicKey = exports.SolanaGetPublicKey = exports.RippleSignedTx = exports.RippleSignTx = exports.RipplePayment = exports.RippleAddress = exports.RippleGetAddress = exports.NEMDecryptedMessage = exports.NEMDecryptMessage = exports.NEMSignedTx = exports.NEMSignTx = exports.NEMImportanceTransfer = exports.EnumNEMImportanceTransferMode = exports.NEMImportanceTransferMode = exports.NEMAggregateModification = exports.NEMCosignatoryModification = exports.EnumNEMModificationType = exports.NEMModificationType = exports.NEMMosaicSupplyChange = exports.EnumNEMSupplyChangeType = exports.NEMSupplyChangeType = exports.NEMMosaicCreation = exports.NEMMosaicDefinition = exports.EnumNEMMosaicLevy = exports.NEMMosaicLevy = exports.NEMProvisionNamespace = exports.NEMTransfer = exports.NEMMosaic = exports.NEMTransactionCommon = exports.NEMAddress = exports.NEMGetAddress = exports.SetBrightness = exports.UnlockBootloader = exports.ShowDeviceTutorial = exports.UnlockedPathRequest = exports.UnlockPath = exports.Nonce = exports.GetNonce = exports.RebootToBootloader = exports.EnumBootCommand = exports.BootCommand = exports.CancelAuthorization = exports.PreauthorizedRequest = exports.DoPreauthorized = exports.NextU2FCounter = exports.GetNextU2FCounter = exports.SetU2FCounter = exports.WordAck = exports.WordRequest = void 0;\nexports.TezosSignedTx = exports.TezosSignTx = exports.TezosBallotOp = exports.EnumTezosBallotType = exports.TezosBallotType = exports.TezosProposalOp = exports.TezosDelegationOp = exports.TezosOriginationOp = exports.TezosTransactionOp = exports.TezosParametersManager = exports.TezosManagerTransfer = exports.TezosRevealOp = exports.TezosContractID = exports.EnumTezosContractType = exports.TezosContractType = exports.TezosPublicKey = exports.TezosGetPublicKey = exports.TezosAddress = exports.TezosGetAddress = exports.StellarSignedTx = exports.StellarClaimClaimableBalanceOp = exports.StellarBumpSequenceOp = exports.StellarManageDataOp = exports.StellarAccountMergeOp = exports.StellarAllowTrustOp = exports.StellarChangeTrustOp = exports.StellarSetOptionsOp = exports.EnumStellarSignerType = exports.StellarSignerType = exports.StellarCreatePassiveSellOfferOp = exports.StellarManageBuyOfferOp = exports.StellarManageSellOfferOp = exports.StellarPathPaymentStrictSendOp = exports.StellarPathPaymentStrictReceiveOp = exports.StellarCreateAccountOp = exports.StellarPaymentOp = exports.StellarTxOpRequest = exports.StellarSignTx = exports.EnumStellarMemoType = exports.StellarMemoType = exports.StellarAddress = exports.StellarGetAddress = exports.StellarAsset = exports.EnumStellarAssetType = exports.StellarAssetType = exports.SolanaTxSignature = exports.SolanaSignTx = exports.SolanaTxAdditionalInfo = exports.SolanaTxTokenAccountInfo = exports.SolanaAddress = void 0;\nexports.MessageType = void 0;\nconst schema_utils_1 = require(\"@trezor/schema-utils\");\nvar DeviceModelInternal;\n(function (DeviceModelInternal) {\n  DeviceModelInternal[\"T1B1\"] = \"T1B1\";\n  DeviceModelInternal[\"T2T1\"] = \"T2T1\";\n  DeviceModelInternal[\"T2B1\"] = \"T2B1\";\n  DeviceModelInternal[\"T3B1\"] = \"T3B1\";\n  DeviceModelInternal[\"T3T1\"] = \"T3T1\";\n  DeviceModelInternal[\"T3W1\"] = \"T3W1\";\n  DeviceModelInternal[\"UNKNOWN\"] = \"UNKNOWN\";\n})(DeviceModelInternal || (exports.DeviceModelInternal = DeviceModelInternal = {}));\nexports.EnumDeviceModelInternal = schema_utils_1.Type.Enum(DeviceModelInternal);\nexports.BinanceGetAddress = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'BinanceGetAddress'\n});\nexports.BinanceAddress = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String()\n}, {\n  $id: 'BinanceAddress'\n});\nexports.BinanceGetPublicKey = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'BinanceGetPublicKey'\n});\nexports.BinancePublicKey = schema_utils_1.Type.Object({\n  public_key: schema_utils_1.Type.String()\n}, {\n  $id: 'BinancePublicKey'\n});\nexports.BinanceSignTx = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  msg_count: schema_utils_1.Type.Number(),\n  account_number: schema_utils_1.Type.Number(),\n  chain_id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  memo: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  sequence: schema_utils_1.Type.Number(),\n  source: schema_utils_1.Type.Number(),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'BinanceSignTx'\n});\nexports.BinanceTxRequest = schema_utils_1.Type.Object({}, {\n  $id: 'BinanceTxRequest'\n});\nexports.BinanceCoin = schema_utils_1.Type.Object({\n  amount: schema_utils_1.Type.Uint(),\n  denom: schema_utils_1.Type.String()\n}, {\n  $id: 'BinanceCoin'\n});\nexports.BinanceInputOutput = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String(),\n  coins: schema_utils_1.Type.Array(exports.BinanceCoin)\n}, {\n  $id: 'BinanceInputOutput'\n});\nexports.BinanceTransferMsg = schema_utils_1.Type.Object({\n  inputs: schema_utils_1.Type.Array(exports.BinanceInputOutput),\n  outputs: schema_utils_1.Type.Array(exports.BinanceInputOutput),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'BinanceTransferMsg'\n});\nvar BinanceOrderType;\n(function (BinanceOrderType) {\n  BinanceOrderType[BinanceOrderType[\"OT_UNKNOWN\"] = 0] = \"OT_UNKNOWN\";\n  BinanceOrderType[BinanceOrderType[\"MARKET\"] = 1] = \"MARKET\";\n  BinanceOrderType[BinanceOrderType[\"LIMIT\"] = 2] = \"LIMIT\";\n  BinanceOrderType[BinanceOrderType[\"OT_RESERVED\"] = 3] = \"OT_RESERVED\";\n})(BinanceOrderType || (exports.BinanceOrderType = BinanceOrderType = {}));\nexports.EnumBinanceOrderType = schema_utils_1.Type.Enum(BinanceOrderType);\nvar BinanceOrderSide;\n(function (BinanceOrderSide) {\n  BinanceOrderSide[BinanceOrderSide[\"SIDE_UNKNOWN\"] = 0] = \"SIDE_UNKNOWN\";\n  BinanceOrderSide[BinanceOrderSide[\"BUY\"] = 1] = \"BUY\";\n  BinanceOrderSide[BinanceOrderSide[\"SELL\"] = 2] = \"SELL\";\n})(BinanceOrderSide || (exports.BinanceOrderSide = BinanceOrderSide = {}));\nexports.EnumBinanceOrderSide = schema_utils_1.Type.Enum(BinanceOrderSide);\nvar BinanceTimeInForce;\n(function (BinanceTimeInForce) {\n  BinanceTimeInForce[BinanceTimeInForce[\"TIF_UNKNOWN\"] = 0] = \"TIF_UNKNOWN\";\n  BinanceTimeInForce[BinanceTimeInForce[\"GTE\"] = 1] = \"GTE\";\n  BinanceTimeInForce[BinanceTimeInForce[\"TIF_RESERVED\"] = 2] = \"TIF_RESERVED\";\n  BinanceTimeInForce[BinanceTimeInForce[\"IOC\"] = 3] = \"IOC\";\n})(BinanceTimeInForce || (exports.BinanceTimeInForce = BinanceTimeInForce = {}));\nexports.EnumBinanceTimeInForce = schema_utils_1.Type.Enum(BinanceTimeInForce);\nexports.BinanceOrderMsg = schema_utils_1.Type.Object({\n  id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  ordertype: exports.EnumBinanceOrderType,\n  price: schema_utils_1.Type.Number(),\n  quantity: schema_utils_1.Type.Number(),\n  sender: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  side: exports.EnumBinanceOrderSide,\n  symbol: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  timeinforce: exports.EnumBinanceTimeInForce\n}, {\n  $id: 'BinanceOrderMsg'\n});\nexports.BinanceCancelMsg = schema_utils_1.Type.Object({\n  refid: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  sender: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  symbol: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'BinanceCancelMsg'\n});\nexports.BinanceSignedTx = schema_utils_1.Type.Object({\n  signature: schema_utils_1.Type.String(),\n  public_key: schema_utils_1.Type.String()\n}, {\n  $id: 'BinanceSignedTx'\n});\nvar Enum_InputScriptType;\n(function (Enum_InputScriptType) {\n  Enum_InputScriptType[Enum_InputScriptType[\"SPENDADDRESS\"] = 0] = \"SPENDADDRESS\";\n  Enum_InputScriptType[Enum_InputScriptType[\"SPENDMULTISIG\"] = 1] = \"SPENDMULTISIG\";\n  Enum_InputScriptType[Enum_InputScriptType[\"EXTERNAL\"] = 2] = \"EXTERNAL\";\n  Enum_InputScriptType[Enum_InputScriptType[\"SPENDWITNESS\"] = 3] = \"SPENDWITNESS\";\n  Enum_InputScriptType[Enum_InputScriptType[\"SPENDP2SHWITNESS\"] = 4] = \"SPENDP2SHWITNESS\";\n  Enum_InputScriptType[Enum_InputScriptType[\"SPENDTAPROOT\"] = 5] = \"SPENDTAPROOT\";\n})(Enum_InputScriptType || (exports.Enum_InputScriptType = Enum_InputScriptType = {}));\nexports.EnumEnum_InputScriptType = schema_utils_1.Type.Enum(Enum_InputScriptType);\nexports.InputScriptType = schema_utils_1.Type.KeyOfEnum(Enum_InputScriptType, {\n  $id: 'InputScriptType'\n});\nvar Enum_OutputScriptType;\n(function (Enum_OutputScriptType) {\n  Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOADDRESS\"] = 0] = \"PAYTOADDRESS\";\n  Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOSCRIPTHASH\"] = 1] = \"PAYTOSCRIPTHASH\";\n  Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOMULTISIG\"] = 2] = \"PAYTOMULTISIG\";\n  Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOOPRETURN\"] = 3] = \"PAYTOOPRETURN\";\n  Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOWITNESS\"] = 4] = \"PAYTOWITNESS\";\n  Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOP2SHWITNESS\"] = 5] = \"PAYTOP2SHWITNESS\";\n  Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOTAPROOT\"] = 6] = \"PAYTOTAPROOT\";\n})(Enum_OutputScriptType || (exports.Enum_OutputScriptType = Enum_OutputScriptType = {}));\nexports.EnumEnum_OutputScriptType = schema_utils_1.Type.Enum(Enum_OutputScriptType);\nexports.OutputScriptType = schema_utils_1.Type.KeyOfEnum(Enum_OutputScriptType, {\n  $id: 'OutputScriptType'\n});\nvar DecredStakingSpendType;\n(function (DecredStakingSpendType) {\n  DecredStakingSpendType[DecredStakingSpendType[\"SSGen\"] = 0] = \"SSGen\";\n  DecredStakingSpendType[DecredStakingSpendType[\"SSRTX\"] = 1] = \"SSRTX\";\n})(DecredStakingSpendType || (exports.DecredStakingSpendType = DecredStakingSpendType = {}));\nexports.EnumDecredStakingSpendType = schema_utils_1.Type.Enum(DecredStakingSpendType);\nvar AmountUnit;\n(function (AmountUnit) {\n  AmountUnit[AmountUnit[\"BITCOIN\"] = 0] = \"BITCOIN\";\n  AmountUnit[AmountUnit[\"MILLIBITCOIN\"] = 1] = \"MILLIBITCOIN\";\n  AmountUnit[AmountUnit[\"MICROBITCOIN\"] = 2] = \"MICROBITCOIN\";\n  AmountUnit[AmountUnit[\"SATOSHI\"] = 3] = \"SATOSHI\";\n})(AmountUnit || (exports.AmountUnit = AmountUnit = {}));\nexports.EnumAmountUnit = schema_utils_1.Type.Enum(AmountUnit);\nvar MultisigPubkeysOrder;\n(function (MultisigPubkeysOrder) {\n  MultisigPubkeysOrder[MultisigPubkeysOrder[\"PRESERVED\"] = 0] = \"PRESERVED\";\n  MultisigPubkeysOrder[MultisigPubkeysOrder[\"LEXICOGRAPHIC\"] = 1] = \"LEXICOGRAPHIC\";\n})(MultisigPubkeysOrder || (exports.MultisigPubkeysOrder = MultisigPubkeysOrder = {}));\nexports.EnumMultisigPubkeysOrder = schema_utils_1.Type.Enum(MultisigPubkeysOrder);\nexports.HDNodeType = schema_utils_1.Type.Object({\n  depth: schema_utils_1.Type.Number(),\n  fingerprint: schema_utils_1.Type.Number(),\n  child_num: schema_utils_1.Type.Number(),\n  chain_code: schema_utils_1.Type.String(),\n  private_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  public_key: schema_utils_1.Type.String()\n}, {\n  $id: 'HDNodeType'\n});\nexports.HDNodePathType = schema_utils_1.Type.Object({\n  node: schema_utils_1.Type.Union([exports.HDNodeType, schema_utils_1.Type.String()]),\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number())\n}, {\n  $id: 'HDNodePathType'\n});\nexports.MultisigRedeemScriptType = schema_utils_1.Type.Object({\n  pubkeys: schema_utils_1.Type.Array(exports.HDNodePathType),\n  signatures: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n  m: schema_utils_1.Type.Number(),\n  nodes: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.HDNodeType)),\n  address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n  pubkeys_order: schema_utils_1.Type.Optional(exports.EnumMultisigPubkeysOrder)\n}, {\n  $id: 'MultisigRedeemScriptType'\n});\nexports.GetPublicKey = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n  ignore_xpub_magic: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'GetPublicKey'\n});\nexports.PublicKey = schema_utils_1.Type.Object({\n  node: exports.HDNodeType,\n  xpub: schema_utils_1.Type.String(),\n  root_fingerprint: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  descriptor: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'PublicKey'\n});\nexports.GetAddress = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n  script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n  ignore_xpub_magic: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'GetAddress'\n});\nexports.Address = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String(),\n  mac: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'Address'\n});\nexports.GetOwnershipId = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n  script_type: schema_utils_1.Type.Optional(exports.InputScriptType)\n}, {\n  $id: 'GetOwnershipId'\n});\nexports.OwnershipId = schema_utils_1.Type.Object({\n  ownership_id: schema_utils_1.Type.String()\n}, {\n  $id: 'OwnershipId'\n});\nexports.SignMessage = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  message: schema_utils_1.Type.String(),\n  coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n  no_script_type: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'SignMessage'\n});\nexports.MessageSignature = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String(),\n  signature: schema_utils_1.Type.String()\n}, {\n  $id: 'MessageSignature'\n});\nexports.VerifyMessage = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String(),\n  signature: schema_utils_1.Type.String(),\n  message: schema_utils_1.Type.String(),\n  coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'VerifyMessage'\n});\nexports.CoinJoinRequest = schema_utils_1.Type.Object({\n  fee_rate: schema_utils_1.Type.Number(),\n  no_fee_threshold: schema_utils_1.Type.Number(),\n  min_registrable_amount: schema_utils_1.Type.Number(),\n  mask_public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  signature: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'CoinJoinRequest'\n});\nexports.SignTx = schema_utils_1.Type.Object({\n  outputs_count: schema_utils_1.Type.Number(),\n  inputs_count: schema_utils_1.Type.Number(),\n  coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  lock_time: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  overwintered: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  amount_unit: schema_utils_1.Type.Optional(exports.EnumAmountUnit),\n  decred_staking_ticket: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  serialize: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  coinjoin_request: schema_utils_1.Type.Optional(exports.CoinJoinRequest),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'SignTx'\n});\nvar Enum_RequestType;\n(function (Enum_RequestType) {\n  Enum_RequestType[Enum_RequestType[\"TXINPUT\"] = 0] = \"TXINPUT\";\n  Enum_RequestType[Enum_RequestType[\"TXOUTPUT\"] = 1] = \"TXOUTPUT\";\n  Enum_RequestType[Enum_RequestType[\"TXMETA\"] = 2] = \"TXMETA\";\n  Enum_RequestType[Enum_RequestType[\"TXFINISHED\"] = 3] = \"TXFINISHED\";\n  Enum_RequestType[Enum_RequestType[\"TXEXTRADATA\"] = 4] = \"TXEXTRADATA\";\n  Enum_RequestType[Enum_RequestType[\"TXORIGINPUT\"] = 5] = \"TXORIGINPUT\";\n  Enum_RequestType[Enum_RequestType[\"TXORIGOUTPUT\"] = 6] = \"TXORIGOUTPUT\";\n  Enum_RequestType[Enum_RequestType[\"TXPAYMENTREQ\"] = 7] = \"TXPAYMENTREQ\";\n})(Enum_RequestType || (exports.Enum_RequestType = Enum_RequestType = {}));\nexports.EnumEnum_RequestType = schema_utils_1.Type.Enum(Enum_RequestType);\nexports.RequestType = schema_utils_1.Type.KeyOfEnum(Enum_RequestType, {\n  $id: 'RequestType'\n});\nexports.TxRequestDetailsType = schema_utils_1.Type.Object({\n  request_index: schema_utils_1.Type.Number(),\n  tx_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  extra_data_offset: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'TxRequestDetailsType'\n});\nexports.TxRequestSerializedType = schema_utils_1.Type.Object({\n  signature_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  signature: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  serialized_tx: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'TxRequestSerializedType'\n});\nexports.TxRequest = schema_utils_1.Type.Object({\n  request_type: exports.RequestType,\n  details: exports.TxRequestDetailsType,\n  serialized: schema_utils_1.Type.Optional(exports.TxRequestSerializedType)\n}, {\n  $id: 'TxRequest'\n});\nexports.InternalInputScriptType = schema_utils_1.Type.Exclude(exports.InputScriptType, schema_utils_1.Type.Literal('EXTERNAL'), {\n  $id: 'InternalInputScriptType'\n});\nconst CommonTxInputType = schema_utils_1.Type.Object({\n  prev_hash: schema_utils_1.Type.String(),\n  prev_index: schema_utils_1.Type.Number(),\n  amount: schema_utils_1.Type.Uint(),\n  sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n  decred_tree: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  decred_staking_spend: schema_utils_1.Type.Optional(exports.EnumDecredStakingSpendType),\n  script_pubkey: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  coinjoin_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  script_sig: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  witness: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  ownership_proof: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  commitment_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'CommonTxInputType'\n});\nexports.TxInputType = schema_utils_1.Type.Union([schema_utils_1.Type.Intersect([CommonTxInputType, schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  script_type: schema_utils_1.Type.Optional(exports.InternalInputScriptType)\n})]), schema_utils_1.Type.Intersect([CommonTxInputType, schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n  script_type: schema_utils_1.Type.Literal('EXTERNAL'),\n  script_pubkey: schema_utils_1.Type.String()\n})])], {\n  $id: 'TxInputType'\n});\nexports.TxInput = (0, schema_utils_1.CloneType)(exports.TxInputType, {\n  $id: 'TxInput'\n});\nexports.TxOutputBinType = schema_utils_1.Type.Object({\n  amount: schema_utils_1.Type.Uint(),\n  script_pubkey: schema_utils_1.Type.String(),\n  decred_script_version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'TxOutputBinType'\n});\nexports.ChangeOutputScriptType = schema_utils_1.Type.Exclude(exports.OutputScriptType, schema_utils_1.Type.Literal('PAYTOOPRETURN'), {\n  $id: 'ChangeOutputScriptType'\n});\nexports.TxOutputType = schema_utils_1.Type.Union([schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String(),\n  address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n  script_type: schema_utils_1.Type.Literal('PAYTOADDRESS'),\n  amount: schema_utils_1.Type.Uint(),\n  multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n  orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}), schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  script_type: schema_utils_1.Type.Optional(exports.ChangeOutputScriptType),\n  amount: schema_utils_1.Type.Uint(),\n  multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n  orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}), schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String(),\n  address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n  script_type: schema_utils_1.Type.Optional(exports.ChangeOutputScriptType),\n  amount: schema_utils_1.Type.Uint(),\n  multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n  orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}), schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n  address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n  amount: schema_utils_1.Type.Union([schema_utils_1.Type.Literal('0'), schema_utils_1.Type.Literal(0)]),\n  op_return_data: schema_utils_1.Type.String(),\n  script_type: schema_utils_1.Type.Literal('PAYTOOPRETURN'),\n  orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n})], {\n  $id: 'TxOutputType'\n});\nexports.TxOutput = (0, schema_utils_1.CloneType)(exports.TxOutputType, {\n  $id: 'TxOutput'\n});\nexports.PrevTx = schema_utils_1.Type.Object({\n  version: schema_utils_1.Type.Number(),\n  lock_time: schema_utils_1.Type.Number(),\n  inputs_count: schema_utils_1.Type.Number(),\n  outputs_count: schema_utils_1.Type.Number(),\n  extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'PrevTx'\n});\nexports.PrevInput = schema_utils_1.Type.Object({\n  prev_hash: schema_utils_1.Type.String(),\n  prev_index: schema_utils_1.Type.Number(),\n  script_sig: schema_utils_1.Type.String(),\n  sequence: schema_utils_1.Type.Number(),\n  decred_tree: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'PrevInput'\n});\nexports.PrevOutput = schema_utils_1.Type.Object({\n  amount: schema_utils_1.Type.Uint(),\n  script_pubkey: schema_utils_1.Type.String(),\n  decred_script_version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'PrevOutput'\n});\nexports.TextMemo = schema_utils_1.Type.Object({\n  text: schema_utils_1.Type.String()\n}, {\n  $id: 'TextMemo'\n});\nexports.RefundMemo = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String(),\n  mac: schema_utils_1.Type.String()\n}, {\n  $id: 'RefundMemo'\n});\nexports.CoinPurchaseMemo = schema_utils_1.Type.Object({\n  coin_type: schema_utils_1.Type.Number(),\n  amount: schema_utils_1.Type.Uint(),\n  address: schema_utils_1.Type.String(),\n  mac: schema_utils_1.Type.String()\n}, {\n  $id: 'CoinPurchaseMemo'\n});\nexports.PaymentRequestMemo = schema_utils_1.Type.Object({\n  text_memo: schema_utils_1.Type.Optional(exports.TextMemo),\n  refund_memo: schema_utils_1.Type.Optional(exports.RefundMemo),\n  coin_purchase_memo: schema_utils_1.Type.Optional(exports.CoinPurchaseMemo)\n}, {\n  $id: 'PaymentRequestMemo'\n});\nexports.TxAckPaymentRequest = schema_utils_1.Type.Object({\n  nonce: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  recipient_name: schema_utils_1.Type.String(),\n  memos: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.PaymentRequestMemo)),\n  amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n  signature: schema_utils_1.Type.String()\n}, {\n  $id: 'TxAckPaymentRequest'\n});\nexports.TxAckResponse = schema_utils_1.Type.Union([schema_utils_1.Type.Object({\n  inputs: schema_utils_1.Type.Array(schema_utils_1.Type.Union([exports.TxInputType, exports.PrevInput]))\n}), schema_utils_1.Type.Object({\n  bin_outputs: schema_utils_1.Type.Array(exports.TxOutputBinType)\n}), schema_utils_1.Type.Object({\n  outputs: schema_utils_1.Type.Array(exports.TxOutputType)\n}), schema_utils_1.Type.Object({\n  extra_data: schema_utils_1.Type.String()\n}), schema_utils_1.Type.Object({\n  version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  lock_time: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  inputs_cnt: schema_utils_1.Type.Number(),\n  outputs_cnt: schema_utils_1.Type.Number(),\n  extra_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n})], {\n  $id: 'TxAckResponse'\n});\nexports.TxAck = schema_utils_1.Type.Object({\n  tx: exports.TxAckResponse\n}, {\n  $id: 'TxAck'\n});\nexports.TxAckInputWrapper = schema_utils_1.Type.Object({\n  input: exports.TxInput\n}, {\n  $id: 'TxAckInputWrapper'\n});\nexports.TxAckInput = schema_utils_1.Type.Object({\n  tx: exports.TxAckInputWrapper\n}, {\n  $id: 'TxAckInput'\n});\nexports.TxAckOutputWrapper = schema_utils_1.Type.Object({\n  output: exports.TxOutput\n}, {\n  $id: 'TxAckOutputWrapper'\n});\nexports.TxAckOutput = schema_utils_1.Type.Object({\n  tx: exports.TxAckOutputWrapper\n}, {\n  $id: 'TxAckOutput'\n});\nexports.TxAckPrevMeta = schema_utils_1.Type.Object({\n  tx: exports.PrevTx\n}, {\n  $id: 'TxAckPrevMeta'\n});\nexports.TxAckPrevInputWrapper = schema_utils_1.Type.Object({\n  input: exports.PrevInput\n}, {\n  $id: 'TxAckPrevInputWrapper'\n});\nexports.TxAckPrevInput = schema_utils_1.Type.Object({\n  tx: exports.TxAckPrevInputWrapper\n}, {\n  $id: 'TxAckPrevInput'\n});\nexports.TxAckPrevOutputWrapper = schema_utils_1.Type.Object({\n  output: exports.PrevOutput\n}, {\n  $id: 'TxAckPrevOutputWrapper'\n});\nexports.TxAckPrevOutput = schema_utils_1.Type.Object({\n  tx: exports.TxAckPrevOutputWrapper\n}, {\n  $id: 'TxAckPrevOutput'\n});\nexports.TxAckPrevExtraDataWrapper = schema_utils_1.Type.Object({\n  extra_data_chunk: schema_utils_1.Type.String()\n}, {\n  $id: 'TxAckPrevExtraDataWrapper'\n});\nexports.TxAckPrevExtraData = schema_utils_1.Type.Object({\n  tx: exports.TxAckPrevExtraDataWrapper\n}, {\n  $id: 'TxAckPrevExtraData'\n});\nexports.GetOwnershipProof = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n  multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n  user_confirmation: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  ownership_ids: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.String())),\n  commitment_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'GetOwnershipProof'\n});\nexports.OwnershipProof = schema_utils_1.Type.Object({\n  ownership_proof: schema_utils_1.Type.String(),\n  signature: schema_utils_1.Type.String()\n}, {\n  $id: 'OwnershipProof'\n});\nexports.AuthorizeCoinJoin = schema_utils_1.Type.Object({\n  coordinator: schema_utils_1.Type.String(),\n  max_rounds: schema_utils_1.Type.Number(),\n  max_coordinator_fee_rate: schema_utils_1.Type.Number(),\n  max_fee_per_kvbyte: schema_utils_1.Type.Number(),\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n  amount_unit: schema_utils_1.Type.Optional(exports.EnumAmountUnit)\n}, {\n  $id: 'AuthorizeCoinJoin'\n});\nexports.FirmwareErase = schema_utils_1.Type.Object({\n  length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'FirmwareErase'\n});\nexports.FirmwareRequest = schema_utils_1.Type.Object({\n  offset: schema_utils_1.Type.Number(),\n  length: schema_utils_1.Type.Number()\n}, {\n  $id: 'FirmwareRequest'\n});\nexports.FirmwareUpload = schema_utils_1.Type.Object({\n  payload: schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.ArrayBuffer()]),\n  hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'FirmwareUpload'\n});\nexports.ProdTestT1 = schema_utils_1.Type.Object({\n  payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'ProdTestT1'\n});\nvar CardanoDerivationType;\n(function (CardanoDerivationType) {\n  CardanoDerivationType[CardanoDerivationType[\"LEDGER\"] = 0] = \"LEDGER\";\n  CardanoDerivationType[CardanoDerivationType[\"ICARUS\"] = 1] = \"ICARUS\";\n  CardanoDerivationType[CardanoDerivationType[\"ICARUS_TREZOR\"] = 2] = \"ICARUS_TREZOR\";\n})(CardanoDerivationType || (exports.CardanoDerivationType = CardanoDerivationType = {}));\nexports.EnumCardanoDerivationType = schema_utils_1.Type.Enum(CardanoDerivationType);\nvar CardanoAddressType;\n(function (CardanoAddressType) {\n  CardanoAddressType[CardanoAddressType[\"BASE\"] = 0] = \"BASE\";\n  CardanoAddressType[CardanoAddressType[\"BASE_SCRIPT_KEY\"] = 1] = \"BASE_SCRIPT_KEY\";\n  CardanoAddressType[CardanoAddressType[\"BASE_KEY_SCRIPT\"] = 2] = \"BASE_KEY_SCRIPT\";\n  CardanoAddressType[CardanoAddressType[\"BASE_SCRIPT_SCRIPT\"] = 3] = \"BASE_SCRIPT_SCRIPT\";\n  CardanoAddressType[CardanoAddressType[\"POINTER\"] = 4] = \"POINTER\";\n  CardanoAddressType[CardanoAddressType[\"POINTER_SCRIPT\"] = 5] = \"POINTER_SCRIPT\";\n  CardanoAddressType[CardanoAddressType[\"ENTERPRISE\"] = 6] = \"ENTERPRISE\";\n  CardanoAddressType[CardanoAddressType[\"ENTERPRISE_SCRIPT\"] = 7] = \"ENTERPRISE_SCRIPT\";\n  CardanoAddressType[CardanoAddressType[\"BYRON\"] = 8] = \"BYRON\";\n  CardanoAddressType[CardanoAddressType[\"REWARD\"] = 14] = \"REWARD\";\n  CardanoAddressType[CardanoAddressType[\"REWARD_SCRIPT\"] = 15] = \"REWARD_SCRIPT\";\n})(CardanoAddressType || (exports.CardanoAddressType = CardanoAddressType = {}));\nexports.EnumCardanoAddressType = schema_utils_1.Type.Enum(CardanoAddressType);\nvar CardanoNativeScriptType;\n(function (CardanoNativeScriptType) {\n  CardanoNativeScriptType[CardanoNativeScriptType[\"PUB_KEY\"] = 0] = \"PUB_KEY\";\n  CardanoNativeScriptType[CardanoNativeScriptType[\"ALL\"] = 1] = \"ALL\";\n  CardanoNativeScriptType[CardanoNativeScriptType[\"ANY\"] = 2] = \"ANY\";\n  CardanoNativeScriptType[CardanoNativeScriptType[\"N_OF_K\"] = 3] = \"N_OF_K\";\n  CardanoNativeScriptType[CardanoNativeScriptType[\"INVALID_BEFORE\"] = 4] = \"INVALID_BEFORE\";\n  CardanoNativeScriptType[CardanoNativeScriptType[\"INVALID_HEREAFTER\"] = 5] = \"INVALID_HEREAFTER\";\n})(CardanoNativeScriptType || (exports.CardanoNativeScriptType = CardanoNativeScriptType = {}));\nexports.EnumCardanoNativeScriptType = schema_utils_1.Type.Enum(CardanoNativeScriptType);\nvar CardanoNativeScriptHashDisplayFormat;\n(function (CardanoNativeScriptHashDisplayFormat) {\n  CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"HIDE\"] = 0] = \"HIDE\";\n  CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"BECH32\"] = 1] = \"BECH32\";\n  CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"POLICY_ID\"] = 2] = \"POLICY_ID\";\n})(CardanoNativeScriptHashDisplayFormat || (exports.CardanoNativeScriptHashDisplayFormat = CardanoNativeScriptHashDisplayFormat = {}));\nexports.EnumCardanoNativeScriptHashDisplayFormat = schema_utils_1.Type.Enum(CardanoNativeScriptHashDisplayFormat);\nvar CardanoTxOutputSerializationFormat;\n(function (CardanoTxOutputSerializationFormat) {\n  CardanoTxOutputSerializationFormat[CardanoTxOutputSerializationFormat[\"ARRAY_LEGACY\"] = 0] = \"ARRAY_LEGACY\";\n  CardanoTxOutputSerializationFormat[CardanoTxOutputSerializationFormat[\"MAP_BABBAGE\"] = 1] = \"MAP_BABBAGE\";\n})(CardanoTxOutputSerializationFormat || (exports.CardanoTxOutputSerializationFormat = CardanoTxOutputSerializationFormat = {}));\nexports.EnumCardanoTxOutputSerializationFormat = schema_utils_1.Type.Enum(CardanoTxOutputSerializationFormat);\nvar CardanoCertificateType;\n(function (CardanoCertificateType) {\n  CardanoCertificateType[CardanoCertificateType[\"STAKE_REGISTRATION\"] = 0] = \"STAKE_REGISTRATION\";\n  CardanoCertificateType[CardanoCertificateType[\"STAKE_DEREGISTRATION\"] = 1] = \"STAKE_DEREGISTRATION\";\n  CardanoCertificateType[CardanoCertificateType[\"STAKE_DELEGATION\"] = 2] = \"STAKE_DELEGATION\";\n  CardanoCertificateType[CardanoCertificateType[\"STAKE_POOL_REGISTRATION\"] = 3] = \"STAKE_POOL_REGISTRATION\";\n  CardanoCertificateType[CardanoCertificateType[\"STAKE_REGISTRATION_CONWAY\"] = 7] = \"STAKE_REGISTRATION_CONWAY\";\n  CardanoCertificateType[CardanoCertificateType[\"STAKE_DEREGISTRATION_CONWAY\"] = 8] = \"STAKE_DEREGISTRATION_CONWAY\";\n  CardanoCertificateType[CardanoCertificateType[\"VOTE_DELEGATION\"] = 9] = \"VOTE_DELEGATION\";\n})(CardanoCertificateType || (exports.CardanoCertificateType = CardanoCertificateType = {}));\nexports.EnumCardanoCertificateType = schema_utils_1.Type.Enum(CardanoCertificateType);\nvar CardanoDRepType;\n(function (CardanoDRepType) {\n  CardanoDRepType[CardanoDRepType[\"KEY_HASH\"] = 0] = \"KEY_HASH\";\n  CardanoDRepType[CardanoDRepType[\"SCRIPT_HASH\"] = 1] = \"SCRIPT_HASH\";\n  CardanoDRepType[CardanoDRepType[\"ABSTAIN\"] = 2] = \"ABSTAIN\";\n  CardanoDRepType[CardanoDRepType[\"NO_CONFIDENCE\"] = 3] = \"NO_CONFIDENCE\";\n})(CardanoDRepType || (exports.CardanoDRepType = CardanoDRepType = {}));\nexports.EnumCardanoDRepType = schema_utils_1.Type.Enum(CardanoDRepType);\nvar CardanoPoolRelayType;\n(function (CardanoPoolRelayType) {\n  CardanoPoolRelayType[CardanoPoolRelayType[\"SINGLE_HOST_IP\"] = 0] = \"SINGLE_HOST_IP\";\n  CardanoPoolRelayType[CardanoPoolRelayType[\"SINGLE_HOST_NAME\"] = 1] = \"SINGLE_HOST_NAME\";\n  CardanoPoolRelayType[CardanoPoolRelayType[\"MULTIPLE_HOST_NAME\"] = 2] = \"MULTIPLE_HOST_NAME\";\n})(CardanoPoolRelayType || (exports.CardanoPoolRelayType = CardanoPoolRelayType = {}));\nexports.EnumCardanoPoolRelayType = schema_utils_1.Type.Enum(CardanoPoolRelayType);\nvar CardanoTxAuxiliaryDataSupplementType;\n(function (CardanoTxAuxiliaryDataSupplementType) {\n  CardanoTxAuxiliaryDataSupplementType[CardanoTxAuxiliaryDataSupplementType[\"NONE\"] = 0] = \"NONE\";\n  CardanoTxAuxiliaryDataSupplementType[CardanoTxAuxiliaryDataSupplementType[\"CVOTE_REGISTRATION_SIGNATURE\"] = 1] = \"CVOTE_REGISTRATION_SIGNATURE\";\n})(CardanoTxAuxiliaryDataSupplementType || (exports.CardanoTxAuxiliaryDataSupplementType = CardanoTxAuxiliaryDataSupplementType = {}));\nexports.EnumCardanoTxAuxiliaryDataSupplementType = schema_utils_1.Type.Enum(CardanoTxAuxiliaryDataSupplementType);\nvar CardanoCVoteRegistrationFormat;\n(function (CardanoCVoteRegistrationFormat) {\n  CardanoCVoteRegistrationFormat[CardanoCVoteRegistrationFormat[\"CIP15\"] = 0] = \"CIP15\";\n  CardanoCVoteRegistrationFormat[CardanoCVoteRegistrationFormat[\"CIP36\"] = 1] = \"CIP36\";\n})(CardanoCVoteRegistrationFormat || (exports.CardanoCVoteRegistrationFormat = CardanoCVoteRegistrationFormat = {}));\nexports.EnumCardanoCVoteRegistrationFormat = schema_utils_1.Type.Enum(CardanoCVoteRegistrationFormat);\nvar CardanoTxSigningMode;\n(function (CardanoTxSigningMode) {\n  CardanoTxSigningMode[CardanoTxSigningMode[\"ORDINARY_TRANSACTION\"] = 0] = \"ORDINARY_TRANSACTION\";\n  CardanoTxSigningMode[CardanoTxSigningMode[\"POOL_REGISTRATION_AS_OWNER\"] = 1] = \"POOL_REGISTRATION_AS_OWNER\";\n  CardanoTxSigningMode[CardanoTxSigningMode[\"MULTISIG_TRANSACTION\"] = 2] = \"MULTISIG_TRANSACTION\";\n  CardanoTxSigningMode[CardanoTxSigningMode[\"PLUTUS_TRANSACTION\"] = 3] = \"PLUTUS_TRANSACTION\";\n})(CardanoTxSigningMode || (exports.CardanoTxSigningMode = CardanoTxSigningMode = {}));\nexports.EnumCardanoTxSigningMode = schema_utils_1.Type.Enum(CardanoTxSigningMode);\nvar CardanoTxWitnessType;\n(function (CardanoTxWitnessType) {\n  CardanoTxWitnessType[CardanoTxWitnessType[\"BYRON_WITNESS\"] = 0] = \"BYRON_WITNESS\";\n  CardanoTxWitnessType[CardanoTxWitnessType[\"SHELLEY_WITNESS\"] = 1] = \"SHELLEY_WITNESS\";\n})(CardanoTxWitnessType || (exports.CardanoTxWitnessType = CardanoTxWitnessType = {}));\nexports.EnumCardanoTxWitnessType = schema_utils_1.Type.Enum(CardanoTxWitnessType);\nexports.CardanoBlockchainPointerType = schema_utils_1.Type.Object({\n  block_index: schema_utils_1.Type.Number(),\n  tx_index: schema_utils_1.Type.Number(),\n  certificate_index: schema_utils_1.Type.Number()\n}, {\n  $id: 'CardanoBlockchainPointerType'\n});\nexports.CardanoNativeScript = schema_utils_1.Type.Recursive(This => schema_utils_1.Type.Object({\n  type: exports.EnumCardanoNativeScriptType,\n  scripts: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(This)),\n  key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n  required_signatures_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  invalid_before: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n  invalid_hereafter: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint())\n}), {\n  $id: 'CardanoNativeScript'\n});\nexports.CardanoGetNativeScriptHash = schema_utils_1.Type.Object({\n  script: exports.CardanoNativeScript,\n  display_format: exports.EnumCardanoNativeScriptHashDisplayFormat,\n  derivation_type: exports.EnumCardanoDerivationType\n}, {\n  $id: 'CardanoGetNativeScriptHash'\n});\nexports.CardanoNativeScriptHash = schema_utils_1.Type.Object({\n  script_hash: schema_utils_1.Type.String()\n}, {\n  $id: 'CardanoNativeScriptHash'\n});\nexports.CardanoAddressParametersType = schema_utils_1.Type.Object({\n  address_type: exports.EnumCardanoAddressType,\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  address_n_staking: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  staking_key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  certificate_pointer: schema_utils_1.Type.Optional(exports.CardanoBlockchainPointerType),\n  script_payment_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  script_staking_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'CardanoAddressParametersType'\n});\nexports.CardanoGetAddress = schema_utils_1.Type.Object({\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  protocol_magic: schema_utils_1.Type.Number(),\n  network_id: schema_utils_1.Type.Number(),\n  address_parameters: exports.CardanoAddressParametersType,\n  derivation_type: exports.EnumCardanoDerivationType,\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'CardanoGetAddress'\n});\nexports.CardanoAddress = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String()\n}, {\n  $id: 'CardanoAddress'\n});\nexports.CardanoGetPublicKey = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  derivation_type: exports.EnumCardanoDerivationType\n}, {\n  $id: 'CardanoGetPublicKey'\n});\nexports.CardanoPublicKey = schema_utils_1.Type.Object({\n  xpub: schema_utils_1.Type.String(),\n  node: exports.HDNodeType\n}, {\n  $id: 'CardanoPublicKey'\n});\nexports.CardanoSignTxInit = schema_utils_1.Type.Object({\n  signing_mode: exports.EnumCardanoTxSigningMode,\n  protocol_magic: schema_utils_1.Type.Number(),\n  network_id: schema_utils_1.Type.Number(),\n  inputs_count: schema_utils_1.Type.Number(),\n  outputs_count: schema_utils_1.Type.Number(),\n  fee: schema_utils_1.Type.Uint(),\n  ttl: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n  certificates_count: schema_utils_1.Type.Number(),\n  withdrawals_count: schema_utils_1.Type.Number(),\n  has_auxiliary_data: schema_utils_1.Type.Boolean(),\n  validity_interval_start: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n  witness_requests_count: schema_utils_1.Type.Number(),\n  minting_asset_groups_count: schema_utils_1.Type.Number(),\n  derivation_type: exports.EnumCardanoDerivationType,\n  include_network_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  script_data_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  collateral_inputs_count: schema_utils_1.Type.Number(),\n  required_signers_count: schema_utils_1.Type.Number(),\n  has_collateral_return: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  total_collateral: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n  reference_inputs_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  tag_cbor_sets: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'CardanoSignTxInit'\n});\nexports.CardanoTxInput = schema_utils_1.Type.Object({\n  prev_hash: schema_utils_1.Type.String(),\n  prev_index: schema_utils_1.Type.Number()\n}, {\n  $id: 'CardanoTxInput'\n});\nexports.CardanoTxOutput = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  address_parameters: schema_utils_1.Type.Optional(exports.CardanoAddressParametersType),\n  amount: schema_utils_1.Type.Uint(),\n  asset_groups_count: schema_utils_1.Type.Number(),\n  datum_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  format: schema_utils_1.Type.Optional(exports.EnumCardanoTxOutputSerializationFormat),\n  inline_datum_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  reference_script_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'CardanoTxOutput'\n});\nexports.CardanoAssetGroup = schema_utils_1.Type.Object({\n  policy_id: schema_utils_1.Type.String(),\n  tokens_count: schema_utils_1.Type.Number()\n}, {\n  $id: 'CardanoAssetGroup'\n});\nexports.CardanoToken = schema_utils_1.Type.Object({\n  asset_name_bytes: schema_utils_1.Type.String(),\n  amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n  mint_amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint({\n    allowNegative: true\n  }))\n}, {\n  $id: 'CardanoToken'\n});\nexports.CardanoTxInlineDatumChunk = schema_utils_1.Type.Object({\n  data: schema_utils_1.Type.String()\n}, {\n  $id: 'CardanoTxInlineDatumChunk'\n});\nexports.CardanoTxReferenceScriptChunk = schema_utils_1.Type.Object({\n  data: schema_utils_1.Type.String()\n}, {\n  $id: 'CardanoTxReferenceScriptChunk'\n});\nexports.CardanoPoolOwner = schema_utils_1.Type.Object({\n  staking_key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n  staking_key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'CardanoPoolOwner'\n});\nexports.CardanoPoolRelayParameters = schema_utils_1.Type.Object({\n  type: exports.EnumCardanoPoolRelayType,\n  ipv4_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  ipv6_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  host_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  port: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'CardanoPoolRelayParameters'\n});\nexports.CardanoPoolMetadataType = schema_utils_1.Type.Object({\n  url: schema_utils_1.Type.String(),\n  hash: schema_utils_1.Type.String()\n}, {\n  $id: 'CardanoPoolMetadataType'\n});\nexports.CardanoPoolParametersType = schema_utils_1.Type.Object({\n  pool_id: schema_utils_1.Type.String(),\n  vrf_key_hash: schema_utils_1.Type.String(),\n  pledge: schema_utils_1.Type.Uint(),\n  cost: schema_utils_1.Type.Uint(),\n  margin_numerator: schema_utils_1.Type.Uint(),\n  margin_denominator: schema_utils_1.Type.Uint(),\n  reward_account: schema_utils_1.Type.String(),\n  metadata: schema_utils_1.Type.Optional(exports.CardanoPoolMetadataType),\n  owners_count: schema_utils_1.Type.Number(),\n  relays_count: schema_utils_1.Type.Number()\n}, {\n  $id: 'CardanoPoolParametersType'\n});\nexports.CardanoDRep = schema_utils_1.Type.Object({\n  type: exports.EnumCardanoDRepType,\n  key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  script_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'CardanoDRep'\n});\nexports.CardanoTxCertificate = schema_utils_1.Type.Object({\n  type: exports.EnumCardanoCertificateType,\n  path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n  pool: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  pool_parameters: schema_utils_1.Type.Optional(exports.CardanoPoolParametersType),\n  script_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  deposit: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n  drep: schema_utils_1.Type.Optional(exports.CardanoDRep)\n}, {\n  $id: 'CardanoTxCertificate'\n});\nexports.CardanoTxWithdrawal = schema_utils_1.Type.Object({\n  path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n  amount: schema_utils_1.Type.Uint(),\n  script_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'CardanoTxWithdrawal'\n});\nexports.CardanoCVoteRegistrationDelegation = schema_utils_1.Type.Object({\n  vote_public_key: schema_utils_1.Type.String(),\n  weight: schema_utils_1.Type.Uint()\n}, {\n  $id: 'CardanoCVoteRegistrationDelegation'\n});\nexports.CardanoCVoteRegistrationParametersType = schema_utils_1.Type.Object({\n  vote_public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  staking_path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  payment_address_parameters: schema_utils_1.Type.Optional(exports.CardanoAddressParametersType),\n  nonce: schema_utils_1.Type.Uint(),\n  format: schema_utils_1.Type.Optional(exports.EnumCardanoCVoteRegistrationFormat),\n  delegations: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoCVoteRegistrationDelegation)),\n  voting_purpose: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n  payment_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'CardanoCVoteRegistrationParametersType'\n});\nexports.CardanoTxAuxiliaryData = schema_utils_1.Type.Object({\n  cvote_registration_parameters: schema_utils_1.Type.Optional(exports.CardanoCVoteRegistrationParametersType),\n  hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'CardanoTxAuxiliaryData'\n});\nexports.CardanoTxMint = schema_utils_1.Type.Object({\n  asset_groups_count: schema_utils_1.Type.Number()\n}, {\n  $id: 'CardanoTxMint'\n});\nexports.CardanoTxCollateralInput = schema_utils_1.Type.Object({\n  prev_hash: schema_utils_1.Type.String(),\n  prev_index: schema_utils_1.Type.Number()\n}, {\n  $id: 'CardanoTxCollateralInput'\n});\nexports.CardanoTxRequiredSigner = schema_utils_1.Type.Object({\n  key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number()))\n}, {\n  $id: 'CardanoTxRequiredSigner'\n});\nexports.CardanoTxReferenceInput = schema_utils_1.Type.Object({\n  prev_hash: schema_utils_1.Type.String(),\n  prev_index: schema_utils_1.Type.Number()\n}, {\n  $id: 'CardanoTxReferenceInput'\n});\nexports.CardanoTxItemAck = schema_utils_1.Type.Object({}, {\n  $id: 'CardanoTxItemAck'\n});\nexports.CardanoTxAuxiliaryDataSupplement = schema_utils_1.Type.Object({\n  type: exports.EnumCardanoTxAuxiliaryDataSupplementType,\n  auxiliary_data_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  cvote_registration_signature: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'CardanoTxAuxiliaryDataSupplement'\n});\nexports.CardanoTxWitnessRequest = schema_utils_1.Type.Object({\n  path: schema_utils_1.Type.Array(schema_utils_1.Type.Number())\n}, {\n  $id: 'CardanoTxWitnessRequest'\n});\nexports.CardanoTxWitnessResponse = schema_utils_1.Type.Object({\n  type: exports.EnumCardanoTxWitnessType,\n  pub_key: schema_utils_1.Type.String(),\n  signature: schema_utils_1.Type.String(),\n  chain_code: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'CardanoTxWitnessResponse'\n});\nexports.CardanoTxHostAck = schema_utils_1.Type.Object({}, {\n  $id: 'CardanoTxHostAck'\n});\nexports.CardanoTxBodyHash = schema_utils_1.Type.Object({\n  tx_hash: schema_utils_1.Type.String()\n}, {\n  $id: 'CardanoTxBodyHash'\n});\nexports.CardanoSignTxFinished = schema_utils_1.Type.Object({}, {\n  $id: 'CardanoSignTxFinished'\n});\nexports.Success = schema_utils_1.Type.Object({\n  message: schema_utils_1.Type.String()\n}, {\n  $id: 'Success'\n});\nvar FailureType;\n(function (FailureType) {\n  FailureType[FailureType[\"Failure_UnexpectedMessage\"] = 1] = \"Failure_UnexpectedMessage\";\n  FailureType[FailureType[\"Failure_ButtonExpected\"] = 2] = \"Failure_ButtonExpected\";\n  FailureType[FailureType[\"Failure_DataError\"] = 3] = \"Failure_DataError\";\n  FailureType[FailureType[\"Failure_ActionCancelled\"] = 4] = \"Failure_ActionCancelled\";\n  FailureType[FailureType[\"Failure_PinExpected\"] = 5] = \"Failure_PinExpected\";\n  FailureType[FailureType[\"Failure_PinCancelled\"] = 6] = \"Failure_PinCancelled\";\n  FailureType[FailureType[\"Failure_PinInvalid\"] = 7] = \"Failure_PinInvalid\";\n  FailureType[FailureType[\"Failure_InvalidSignature\"] = 8] = \"Failure_InvalidSignature\";\n  FailureType[FailureType[\"Failure_ProcessError\"] = 9] = \"Failure_ProcessError\";\n  FailureType[FailureType[\"Failure_NotEnoughFunds\"] = 10] = \"Failure_NotEnoughFunds\";\n  FailureType[FailureType[\"Failure_NotInitialized\"] = 11] = \"Failure_NotInitialized\";\n  FailureType[FailureType[\"Failure_PinMismatch\"] = 12] = \"Failure_PinMismatch\";\n  FailureType[FailureType[\"Failure_WipeCodeMismatch\"] = 13] = \"Failure_WipeCodeMismatch\";\n  FailureType[FailureType[\"Failure_InvalidSession\"] = 14] = \"Failure_InvalidSession\";\n  FailureType[FailureType[\"Failure_FirmwareError\"] = 99] = \"Failure_FirmwareError\";\n})(FailureType || (exports.FailureType = FailureType = {}));\nexports.EnumFailureType = schema_utils_1.Type.Enum(FailureType);\nexports.Failure = schema_utils_1.Type.Object({\n  code: schema_utils_1.Type.Optional(exports.EnumFailureType),\n  message: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'Failure'\n});\nvar Enum_ButtonRequestType;\n(function (Enum_ButtonRequestType) {\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Other\"] = 1] = \"ButtonRequest_Other\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_FeeOverThreshold\"] = 2] = \"ButtonRequest_FeeOverThreshold\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ConfirmOutput\"] = 3] = \"ButtonRequest_ConfirmOutput\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ResetDevice\"] = 4] = \"ButtonRequest_ResetDevice\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ConfirmWord\"] = 5] = \"ButtonRequest_ConfirmWord\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_WipeDevice\"] = 6] = \"ButtonRequest_WipeDevice\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ProtectCall\"] = 7] = \"ButtonRequest_ProtectCall\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_SignTx\"] = 8] = \"ButtonRequest_SignTx\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_FirmwareCheck\"] = 9] = \"ButtonRequest_FirmwareCheck\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Address\"] = 10] = \"ButtonRequest_Address\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PublicKey\"] = 11] = \"ButtonRequest_PublicKey\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_MnemonicWordCount\"] = 12] = \"ButtonRequest_MnemonicWordCount\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_MnemonicInput\"] = 13] = \"ButtonRequest_MnemonicInput\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"_Deprecated_ButtonRequest_PassphraseType\"] = 14] = \"_Deprecated_ButtonRequest_PassphraseType\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_UnknownDerivationPath\"] = 15] = \"ButtonRequest_UnknownDerivationPath\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_RecoveryHomepage\"] = 16] = \"ButtonRequest_RecoveryHomepage\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Success\"] = 17] = \"ButtonRequest_Success\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Warning\"] = 18] = \"ButtonRequest_Warning\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PassphraseEntry\"] = 19] = \"ButtonRequest_PassphraseEntry\";\n  Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PinEntry\"] = 20] = \"ButtonRequest_PinEntry\";\n})(Enum_ButtonRequestType || (exports.Enum_ButtonRequestType = Enum_ButtonRequestType = {}));\nexports.EnumEnum_ButtonRequestType = schema_utils_1.Type.Enum(Enum_ButtonRequestType);\nexports.ButtonRequestType = schema_utils_1.Type.KeyOfEnum(Enum_ButtonRequestType, {\n  $id: 'ButtonRequestType'\n});\nexports.ButtonRequest = schema_utils_1.Type.Object({\n  code: schema_utils_1.Type.Optional(exports.ButtonRequestType),\n  pages: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  name: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'ButtonRequest'\n});\nexports.ButtonAck = schema_utils_1.Type.Object({}, {\n  $id: 'ButtonAck'\n});\nvar Enum_PinMatrixRequestType;\n(function (Enum_PinMatrixRequestType) {\n  Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_Current\"] = 1] = \"PinMatrixRequestType_Current\";\n  Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_NewFirst\"] = 2] = \"PinMatrixRequestType_NewFirst\";\n  Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_NewSecond\"] = 3] = \"PinMatrixRequestType_NewSecond\";\n  Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_WipeCodeFirst\"] = 4] = \"PinMatrixRequestType_WipeCodeFirst\";\n  Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_WipeCodeSecond\"] = 5] = \"PinMatrixRequestType_WipeCodeSecond\";\n})(Enum_PinMatrixRequestType || (exports.Enum_PinMatrixRequestType = Enum_PinMatrixRequestType = {}));\nexports.EnumEnum_PinMatrixRequestType = schema_utils_1.Type.Enum(Enum_PinMatrixRequestType);\nexports.PinMatrixRequestType = schema_utils_1.Type.KeyOfEnum(Enum_PinMatrixRequestType, {\n  $id: 'PinMatrixRequestType'\n});\nexports.PinMatrixRequest = schema_utils_1.Type.Object({\n  type: schema_utils_1.Type.Optional(exports.PinMatrixRequestType)\n}, {\n  $id: 'PinMatrixRequest'\n});\nexports.PinMatrixAck = schema_utils_1.Type.Object({\n  pin: schema_utils_1.Type.String()\n}, {\n  $id: 'PinMatrixAck'\n});\nexports.PassphraseRequest = schema_utils_1.Type.Object({\n  _on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'PassphraseRequest'\n});\nexports.PassphraseAck = schema_utils_1.Type.Object({\n  passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  _state: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'PassphraseAck'\n});\nexports.Deprecated_PassphraseStateRequest = schema_utils_1.Type.Object({\n  state: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'Deprecated_PassphraseStateRequest'\n});\nexports.Deprecated_PassphraseStateAck = schema_utils_1.Type.Object({}, {\n  $id: 'Deprecated_PassphraseStateAck'\n});\nexports.CipherKeyValue = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  key: schema_utils_1.Type.String(),\n  value: schema_utils_1.Type.String(),\n  encrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  ask_on_encrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  ask_on_decrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  iv: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'CipherKeyValue'\n});\nexports.CipheredKeyValue = schema_utils_1.Type.Object({\n  value: schema_utils_1.Type.String()\n}, {\n  $id: 'CipheredKeyValue'\n});\nexports.IdentityType = schema_utils_1.Type.Object({\n  proto: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  user: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  host: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  port: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  path: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'IdentityType'\n});\nexports.SignIdentity = schema_utils_1.Type.Object({\n  identity: exports.IdentityType,\n  challenge_hidden: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  challenge_visual: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'SignIdentity'\n});\nexports.SignedIdentity = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String(),\n  public_key: schema_utils_1.Type.String(),\n  signature: schema_utils_1.Type.String()\n}, {\n  $id: 'SignedIdentity'\n});\nexports.GetECDHSessionKey = schema_utils_1.Type.Object({\n  identity: exports.IdentityType,\n  peer_public_key: schema_utils_1.Type.String(),\n  ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'GetECDHSessionKey'\n});\nexports.ECDHSessionKey = schema_utils_1.Type.Object({\n  session_key: schema_utils_1.Type.String(),\n  public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'ECDHSessionKey'\n});\nvar DebugButton;\n(function (DebugButton) {\n  DebugButton[DebugButton[\"NO\"] = 0] = \"NO\";\n  DebugButton[DebugButton[\"YES\"] = 1] = \"YES\";\n  DebugButton[DebugButton[\"INFO\"] = 2] = \"INFO\";\n})(DebugButton || (exports.DebugButton = DebugButton = {}));\nexports.EnumDebugButton = schema_utils_1.Type.Enum(DebugButton);\nvar DebugPhysicalButton;\n(function (DebugPhysicalButton) {\n  DebugPhysicalButton[DebugPhysicalButton[\"LEFT_BTN\"] = 0] = \"LEFT_BTN\";\n  DebugPhysicalButton[DebugPhysicalButton[\"MIDDLE_BTN\"] = 1] = \"MIDDLE_BTN\";\n  DebugPhysicalButton[DebugPhysicalButton[\"RIGHT_BTN\"] = 2] = \"RIGHT_BTN\";\n})(DebugPhysicalButton || (exports.DebugPhysicalButton = DebugPhysicalButton = {}));\nexports.EnumDebugPhysicalButton = schema_utils_1.Type.Enum(DebugPhysicalButton);\nvar DebugWaitType;\n(function (DebugWaitType) {\n  DebugWaitType[DebugWaitType[\"IMMEDIATE\"] = 0] = \"IMMEDIATE\";\n  DebugWaitType[DebugWaitType[\"NEXT_LAYOUT\"] = 1] = \"NEXT_LAYOUT\";\n  DebugWaitType[DebugWaitType[\"CURRENT_LAYOUT\"] = 2] = \"CURRENT_LAYOUT\";\n})(DebugWaitType || (exports.DebugWaitType = DebugWaitType = {}));\nexports.EnumDebugWaitType = schema_utils_1.Type.Enum(DebugWaitType);\nexports.DebugLinkResetDebugEvents = schema_utils_1.Type.Object({}, {\n  $id: 'DebugLinkResetDebugEvents'\n});\nexports.DebugLinkOptigaSetSecMax = schema_utils_1.Type.Object({}, {\n  $id: 'DebugLinkOptigaSetSecMax'\n});\nexports.EosGetPublicKey = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'EosGetPublicKey'\n});\nexports.EosPublicKey = schema_utils_1.Type.Object({\n  wif_public_key: schema_utils_1.Type.String(),\n  raw_public_key: schema_utils_1.Type.String()\n}, {\n  $id: 'EosPublicKey'\n});\nexports.EosTxHeader = schema_utils_1.Type.Object({\n  expiration: schema_utils_1.Type.Number(),\n  ref_block_num: schema_utils_1.Type.Number(),\n  ref_block_prefix: schema_utils_1.Type.Number(),\n  max_net_usage_words: schema_utils_1.Type.Number(),\n  max_cpu_usage_ms: schema_utils_1.Type.Number(),\n  delay_sec: schema_utils_1.Type.Number()\n}, {\n  $id: 'EosTxHeader'\n});\nexports.EosSignTx = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  chain_id: schema_utils_1.Type.String(),\n  header: exports.EosTxHeader,\n  num_actions: schema_utils_1.Type.Number(),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'EosSignTx'\n});\nexports.EosTxActionRequest = schema_utils_1.Type.Object({\n  data_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'EosTxActionRequest'\n});\nexports.EosAsset = schema_utils_1.Type.Object({\n  amount: schema_utils_1.Type.Uint(),\n  symbol: schema_utils_1.Type.String()\n}, {\n  $id: 'EosAsset'\n});\nexports.EosPermissionLevel = schema_utils_1.Type.Object({\n  actor: schema_utils_1.Type.String(),\n  permission: schema_utils_1.Type.String()\n}, {\n  $id: 'EosPermissionLevel'\n});\nexports.EosAuthorizationKey = schema_utils_1.Type.Object({\n  type: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  key: schema_utils_1.Type.String(),\n  address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n  weight: schema_utils_1.Type.Number()\n}, {\n  $id: 'EosAuthorizationKey'\n});\nexports.EosAuthorizationAccount = schema_utils_1.Type.Object({\n  account: exports.EosPermissionLevel,\n  weight: schema_utils_1.Type.Number()\n}, {\n  $id: 'EosAuthorizationAccount'\n});\nexports.EosAuthorizationWait = schema_utils_1.Type.Object({\n  wait_sec: schema_utils_1.Type.Number(),\n  weight: schema_utils_1.Type.Number()\n}, {\n  $id: 'EosAuthorizationWait'\n});\nexports.EosAuthorization = schema_utils_1.Type.Object({\n  threshold: schema_utils_1.Type.Number(),\n  keys: schema_utils_1.Type.Array(exports.EosAuthorizationKey),\n  accounts: schema_utils_1.Type.Array(exports.EosAuthorizationAccount),\n  waits: schema_utils_1.Type.Array(exports.EosAuthorizationWait)\n}, {\n  $id: 'EosAuthorization'\n});\nexports.EosActionCommon = schema_utils_1.Type.Object({\n  account: schema_utils_1.Type.String(),\n  name: schema_utils_1.Type.String(),\n  authorization: schema_utils_1.Type.Array(exports.EosPermissionLevel)\n}, {\n  $id: 'EosActionCommon'\n});\nexports.EosActionTransfer = schema_utils_1.Type.Object({\n  sender: schema_utils_1.Type.String(),\n  receiver: schema_utils_1.Type.String(),\n  quantity: exports.EosAsset,\n  memo: schema_utils_1.Type.String()\n}, {\n  $id: 'EosActionTransfer'\n});\nexports.EosActionDelegate = schema_utils_1.Type.Object({\n  sender: schema_utils_1.Type.String(),\n  receiver: schema_utils_1.Type.String(),\n  net_quantity: exports.EosAsset,\n  cpu_quantity: exports.EosAsset,\n  transfer: schema_utils_1.Type.Boolean()\n}, {\n  $id: 'EosActionDelegate'\n});\nexports.EosActionUndelegate = schema_utils_1.Type.Object({\n  sender: schema_utils_1.Type.String(),\n  receiver: schema_utils_1.Type.String(),\n  net_quantity: exports.EosAsset,\n  cpu_quantity: exports.EosAsset\n}, {\n  $id: 'EosActionUndelegate'\n});\nexports.EosActionRefund = schema_utils_1.Type.Object({\n  owner: schema_utils_1.Type.String()\n}, {\n  $id: 'EosActionRefund'\n});\nexports.EosActionBuyRam = schema_utils_1.Type.Object({\n  payer: schema_utils_1.Type.String(),\n  receiver: schema_utils_1.Type.String(),\n  quantity: exports.EosAsset\n}, {\n  $id: 'EosActionBuyRam'\n});\nexports.EosActionBuyRamBytes = schema_utils_1.Type.Object({\n  payer: schema_utils_1.Type.String(),\n  receiver: schema_utils_1.Type.String(),\n  bytes: schema_utils_1.Type.Number()\n}, {\n  $id: 'EosActionBuyRamBytes'\n});\nexports.EosActionSellRam = schema_utils_1.Type.Object({\n  account: schema_utils_1.Type.String(),\n  bytes: schema_utils_1.Type.Number()\n}, {\n  $id: 'EosActionSellRam'\n});\nexports.EosActionVoteProducer = schema_utils_1.Type.Object({\n  voter: schema_utils_1.Type.String(),\n  proxy: schema_utils_1.Type.String(),\n  producers: schema_utils_1.Type.Array(schema_utils_1.Type.String())\n}, {\n  $id: 'EosActionVoteProducer'\n});\nexports.EosActionUpdateAuth = schema_utils_1.Type.Object({\n  account: schema_utils_1.Type.String(),\n  permission: schema_utils_1.Type.String(),\n  parent: schema_utils_1.Type.String(),\n  auth: exports.EosAuthorization\n}, {\n  $id: 'EosActionUpdateAuth'\n});\nexports.EosActionDeleteAuth = schema_utils_1.Type.Object({\n  account: schema_utils_1.Type.String(),\n  permission: schema_utils_1.Type.String()\n}, {\n  $id: 'EosActionDeleteAuth'\n});\nexports.EosActionLinkAuth = schema_utils_1.Type.Object({\n  account: schema_utils_1.Type.String(),\n  code: schema_utils_1.Type.String(),\n  type: schema_utils_1.Type.String(),\n  requirement: schema_utils_1.Type.String()\n}, {\n  $id: 'EosActionLinkAuth'\n});\nexports.EosActionUnlinkAuth = schema_utils_1.Type.Object({\n  account: schema_utils_1.Type.String(),\n  code: schema_utils_1.Type.String(),\n  type: schema_utils_1.Type.String()\n}, {\n  $id: 'EosActionUnlinkAuth'\n});\nexports.EosActionNewAccount = schema_utils_1.Type.Object({\n  creator: schema_utils_1.Type.String(),\n  name: schema_utils_1.Type.String(),\n  owner: exports.EosAuthorization,\n  active: exports.EosAuthorization\n}, {\n  $id: 'EosActionNewAccount'\n});\nexports.EosActionUnknown = schema_utils_1.Type.Object({\n  data_size: schema_utils_1.Type.Number(),\n  data_chunk: schema_utils_1.Type.String()\n}, {\n  $id: 'EosActionUnknown'\n});\nexports.EosTxActionAck = schema_utils_1.Type.Object({\n  common: exports.EosActionCommon,\n  transfer: schema_utils_1.Type.Optional(exports.EosActionTransfer),\n  delegate: schema_utils_1.Type.Optional(exports.EosActionDelegate),\n  undelegate: schema_utils_1.Type.Optional(exports.EosActionUndelegate),\n  refund: schema_utils_1.Type.Optional(exports.EosActionRefund),\n  buy_ram: schema_utils_1.Type.Optional(exports.EosActionBuyRam),\n  buy_ram_bytes: schema_utils_1.Type.Optional(exports.EosActionBuyRamBytes),\n  sell_ram: schema_utils_1.Type.Optional(exports.EosActionSellRam),\n  vote_producer: schema_utils_1.Type.Optional(exports.EosActionVoteProducer),\n  update_auth: schema_utils_1.Type.Optional(exports.EosActionUpdateAuth),\n  delete_auth: schema_utils_1.Type.Optional(exports.EosActionDeleteAuth),\n  link_auth: schema_utils_1.Type.Optional(exports.EosActionLinkAuth),\n  unlink_auth: schema_utils_1.Type.Optional(exports.EosActionUnlinkAuth),\n  new_account: schema_utils_1.Type.Optional(exports.EosActionNewAccount),\n  unknown: schema_utils_1.Type.Optional(exports.EosActionUnknown)\n}, {\n  $id: 'EosTxActionAck'\n});\nexports.EosSignedTx = schema_utils_1.Type.Object({\n  signature: schema_utils_1.Type.String()\n}, {\n  $id: 'EosSignedTx'\n});\nvar EthereumDefinitionType;\n(function (EthereumDefinitionType) {\n  EthereumDefinitionType[EthereumDefinitionType[\"NETWORK\"] = 0] = \"NETWORK\";\n  EthereumDefinitionType[EthereumDefinitionType[\"TOKEN\"] = 1] = \"TOKEN\";\n})(EthereumDefinitionType || (exports.EthereumDefinitionType = EthereumDefinitionType = {}));\nexports.EnumEthereumDefinitionType = schema_utils_1.Type.Enum(EthereumDefinitionType);\nexports.EthereumNetworkInfo = schema_utils_1.Type.Object({\n  chain_id: schema_utils_1.Type.Number(),\n  symbol: schema_utils_1.Type.String(),\n  slip44: schema_utils_1.Type.Number(),\n  name: schema_utils_1.Type.String()\n}, {\n  $id: 'EthereumNetworkInfo'\n});\nexports.EthereumTokenInfo = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String(),\n  chain_id: schema_utils_1.Type.Number(),\n  symbol: schema_utils_1.Type.String(),\n  decimals: schema_utils_1.Type.Number(),\n  name: schema_utils_1.Type.String()\n}, {\n  $id: 'EthereumTokenInfo'\n});\nexports.EthereumDefinitions = schema_utils_1.Type.Object({\n  encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n  encoded_token: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer())\n}, {\n  $id: 'EthereumDefinitions'\n});\nexports.EthereumSignTypedData = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  primary_type: schema_utils_1.Type.String(),\n  metamask_v4_compat: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions)\n}, {\n  $id: 'EthereumSignTypedData'\n});\nexports.EthereumTypedDataStructRequest = schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.String()\n}, {\n  $id: 'EthereumTypedDataStructRequest'\n});\nvar EthereumDataType;\n(function (EthereumDataType) {\n  EthereumDataType[EthereumDataType[\"UINT\"] = 1] = \"UINT\";\n  EthereumDataType[EthereumDataType[\"INT\"] = 2] = \"INT\";\n  EthereumDataType[EthereumDataType[\"BYTES\"] = 3] = \"BYTES\";\n  EthereumDataType[EthereumDataType[\"STRING\"] = 4] = \"STRING\";\n  EthereumDataType[EthereumDataType[\"BOOL\"] = 5] = \"BOOL\";\n  EthereumDataType[EthereumDataType[\"ADDRESS\"] = 6] = \"ADDRESS\";\n  EthereumDataType[EthereumDataType[\"ARRAY\"] = 7] = \"ARRAY\";\n  EthereumDataType[EthereumDataType[\"STRUCT\"] = 8] = \"STRUCT\";\n})(EthereumDataType || (exports.EthereumDataType = EthereumDataType = {}));\nexports.EnumEthereumDataType = schema_utils_1.Type.Enum(EthereumDataType);\nexports.EthereumFieldType = schema_utils_1.Type.Recursive(This => schema_utils_1.Type.Object({\n  data_type: exports.EnumEthereumDataType,\n  size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  entry_type: schema_utils_1.Type.Optional(This),\n  struct_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}), {\n  $id: 'EthereumFieldType'\n});\nexports.EthereumStructMember = schema_utils_1.Type.Object({\n  type: exports.EthereumFieldType,\n  name: schema_utils_1.Type.String()\n}, {\n  $id: 'EthereumStructMember'\n});\nexports.EthereumTypedDataStructAck = schema_utils_1.Type.Object({\n  members: schema_utils_1.Type.Array(exports.EthereumStructMember)\n}, {\n  $id: 'EthereumTypedDataStructAck'\n});\nexports.EthereumTypedDataValueRequest = schema_utils_1.Type.Object({\n  member_path: schema_utils_1.Type.Array(schema_utils_1.Type.Number())\n}, {\n  $id: 'EthereumTypedDataValueRequest'\n});\nexports.EthereumTypedDataValueAck = schema_utils_1.Type.Object({\n  value: schema_utils_1.Type.String()\n}, {\n  $id: 'EthereumTypedDataValueAck'\n});\nexports.EthereumGetPublicKey = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'EthereumGetPublicKey'\n});\nexports.EthereumPublicKey = schema_utils_1.Type.Object({\n  node: exports.HDNodeType,\n  xpub: schema_utils_1.Type.String()\n}, {\n  $id: 'EthereumPublicKey'\n});\nexports.EthereumGetAddress = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'EthereumGetAddress'\n});\nexports.EthereumAddress = schema_utils_1.Type.Object({\n  _old_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  address: schema_utils_1.Type.String()\n}, {\n  $id: 'EthereumAddress'\n});\nexports.EthereumSignTx = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  nonce: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  gas_price: schema_utils_1.Type.String(),\n  gas_limit: schema_utils_1.Type.String(),\n  to: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  value: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  data_initial_chunk: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  data_length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  chain_id: schema_utils_1.Type.Number(),\n  tx_type: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'EthereumSignTx'\n});\nexports.EthereumAccessList = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String(),\n  storage_keys: schema_utils_1.Type.Array(schema_utils_1.Type.String())\n}, {\n  $id: 'EthereumAccessList'\n});\nexports.EthereumSignTxEIP1559 = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  nonce: schema_utils_1.Type.String(),\n  max_gas_fee: schema_utils_1.Type.String(),\n  max_priority_fee: schema_utils_1.Type.String(),\n  gas_limit: schema_utils_1.Type.String(),\n  to: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  value: schema_utils_1.Type.String(),\n  data_initial_chunk: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  data_length: schema_utils_1.Type.Number(),\n  chain_id: schema_utils_1.Type.Number(),\n  access_list: schema_utils_1.Type.Array(exports.EthereumAccessList),\n  definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'EthereumSignTxEIP1559'\n});\nexports.EthereumTxRequest = schema_utils_1.Type.Object({\n  data_length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  signature_v: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  signature_r: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  signature_s: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'EthereumTxRequest'\n});\nexports.EthereumTxAck = schema_utils_1.Type.Object({\n  data_chunk: schema_utils_1.Type.String()\n}, {\n  $id: 'EthereumTxAck'\n});\nexports.EthereumSignMessage = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  message: schema_utils_1.Type.String(),\n  encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'EthereumSignMessage'\n});\nexports.EthereumMessageSignature = schema_utils_1.Type.Object({\n  signature: schema_utils_1.Type.String(),\n  address: schema_utils_1.Type.String()\n}, {\n  $id: 'EthereumMessageSignature'\n});\nexports.EthereumVerifyMessage = schema_utils_1.Type.Object({\n  signature: schema_utils_1.Type.String(),\n  message: schema_utils_1.Type.String(),\n  address: schema_utils_1.Type.String(),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'EthereumVerifyMessage'\n});\nexports.EthereumSignTypedHash = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  domain_separator_hash: schema_utils_1.Type.String(),\n  message_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer())\n}, {\n  $id: 'EthereumSignTypedHash'\n});\nexports.EthereumTypedDataSignature = schema_utils_1.Type.Object({\n  signature: schema_utils_1.Type.String(),\n  address: schema_utils_1.Type.String()\n}, {\n  $id: 'EthereumTypedDataSignature'\n});\nvar Enum_BackupType;\n(function (Enum_BackupType) {\n  Enum_BackupType[Enum_BackupType[\"Bip39\"] = 0] = \"Bip39\";\n  Enum_BackupType[Enum_BackupType[\"Slip39_Basic\"] = 1] = \"Slip39_Basic\";\n  Enum_BackupType[Enum_BackupType[\"Slip39_Advanced\"] = 2] = \"Slip39_Advanced\";\n  Enum_BackupType[Enum_BackupType[\"Slip39_Single_Extendable\"] = 3] = \"Slip39_Single_Extendable\";\n  Enum_BackupType[Enum_BackupType[\"Slip39_Basic_Extendable\"] = 4] = \"Slip39_Basic_Extendable\";\n  Enum_BackupType[Enum_BackupType[\"Slip39_Advanced_Extendable\"] = 5] = \"Slip39_Advanced_Extendable\";\n})(Enum_BackupType || (exports.Enum_BackupType = Enum_BackupType = {}));\nexports.EnumEnum_BackupType = schema_utils_1.Type.Enum(Enum_BackupType);\nexports.BackupType = schema_utils_1.Type.KeyOfEnum(Enum_BackupType, {\n  $id: 'BackupType'\n});\nvar Enum_SafetyCheckLevel;\n(function (Enum_SafetyCheckLevel) {\n  Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"Strict\"] = 0] = \"Strict\";\n  Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"PromptAlways\"] = 1] = \"PromptAlways\";\n  Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"PromptTemporarily\"] = 2] = \"PromptTemporarily\";\n})(Enum_SafetyCheckLevel || (exports.Enum_SafetyCheckLevel = Enum_SafetyCheckLevel = {}));\nexports.EnumEnum_SafetyCheckLevel = schema_utils_1.Type.Enum(Enum_SafetyCheckLevel);\nexports.SafetyCheckLevel = schema_utils_1.Type.KeyOfEnum(Enum_SafetyCheckLevel, {\n  $id: 'SafetyCheckLevel'\n});\nvar Enum_DisplayRotation;\n(function (Enum_DisplayRotation) {\n  Enum_DisplayRotation[Enum_DisplayRotation[\"North\"] = 0] = \"North\";\n  Enum_DisplayRotation[Enum_DisplayRotation[\"East\"] = 90] = \"East\";\n  Enum_DisplayRotation[Enum_DisplayRotation[\"South\"] = 180] = \"South\";\n  Enum_DisplayRotation[Enum_DisplayRotation[\"West\"] = 270] = \"West\";\n})(Enum_DisplayRotation || (exports.Enum_DisplayRotation = Enum_DisplayRotation = {}));\nexports.EnumEnum_DisplayRotation = schema_utils_1.Type.Enum(Enum_DisplayRotation);\nexports.DisplayRotation = schema_utils_1.Type.KeyOfEnum(Enum_DisplayRotation, {\n  $id: 'DisplayRotation'\n});\nvar Enum_HomescreenFormat;\n(function (Enum_HomescreenFormat) {\n  Enum_HomescreenFormat[Enum_HomescreenFormat[\"Toif\"] = 1] = \"Toif\";\n  Enum_HomescreenFormat[Enum_HomescreenFormat[\"Jpeg\"] = 2] = \"Jpeg\";\n  Enum_HomescreenFormat[Enum_HomescreenFormat[\"ToiG\"] = 3] = \"ToiG\";\n})(Enum_HomescreenFormat || (exports.Enum_HomescreenFormat = Enum_HomescreenFormat = {}));\nexports.EnumEnum_HomescreenFormat = schema_utils_1.Type.Enum(Enum_HomescreenFormat);\nexports.HomescreenFormat = schema_utils_1.Type.KeyOfEnum(Enum_HomescreenFormat, {\n  $id: 'HomescreenFormat'\n});\nexports.Initialize = schema_utils_1.Type.Object({\n  session_id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  _skip_passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  derive_cardano: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'Initialize'\n});\nexports.GetFeatures = schema_utils_1.Type.Object({}, {\n  $id: 'GetFeatures'\n});\nvar Enum_BackupAvailability;\n(function (Enum_BackupAvailability) {\n  Enum_BackupAvailability[Enum_BackupAvailability[\"NotAvailable\"] = 0] = \"NotAvailable\";\n  Enum_BackupAvailability[Enum_BackupAvailability[\"Required\"] = 1] = \"Required\";\n  Enum_BackupAvailability[Enum_BackupAvailability[\"Available\"] = 2] = \"Available\";\n})(Enum_BackupAvailability || (exports.Enum_BackupAvailability = Enum_BackupAvailability = {}));\nexports.EnumEnum_BackupAvailability = schema_utils_1.Type.Enum(Enum_BackupAvailability);\nexports.BackupAvailability = schema_utils_1.Type.KeyOfEnum(Enum_BackupAvailability, {\n  $id: 'BackupAvailability'\n});\nvar Enum_RecoveryStatus;\n(function (Enum_RecoveryStatus) {\n  Enum_RecoveryStatus[Enum_RecoveryStatus[\"Nothing\"] = 0] = \"Nothing\";\n  Enum_RecoveryStatus[Enum_RecoveryStatus[\"Recovery\"] = 1] = \"Recovery\";\n  Enum_RecoveryStatus[Enum_RecoveryStatus[\"Backup\"] = 2] = \"Backup\";\n})(Enum_RecoveryStatus || (exports.Enum_RecoveryStatus = Enum_RecoveryStatus = {}));\nexports.EnumEnum_RecoveryStatus = schema_utils_1.Type.Enum(Enum_RecoveryStatus);\nexports.RecoveryStatus = schema_utils_1.Type.KeyOfEnum(Enum_RecoveryStatus, {\n  $id: 'RecoveryStatus'\n});\nvar Enum_Capability;\n(function (Enum_Capability) {\n  Enum_Capability[Enum_Capability[\"Capability_Bitcoin\"] = 1] = \"Capability_Bitcoin\";\n  Enum_Capability[Enum_Capability[\"Capability_Bitcoin_like\"] = 2] = \"Capability_Bitcoin_like\";\n  Enum_Capability[Enum_Capability[\"Capability_Binance\"] = 3] = \"Capability_Binance\";\n  Enum_Capability[Enum_Capability[\"Capability_Cardano\"] = 4] = \"Capability_Cardano\";\n  Enum_Capability[Enum_Capability[\"Capability_Crypto\"] = 5] = \"Capability_Crypto\";\n  Enum_Capability[Enum_Capability[\"Capability_EOS\"] = 6] = \"Capability_EOS\";\n  Enum_Capability[Enum_Capability[\"Capability_Ethereum\"] = 7] = \"Capability_Ethereum\";\n  Enum_Capability[Enum_Capability[\"Capability_Lisk\"] = 8] = \"Capability_Lisk\";\n  Enum_Capability[Enum_Capability[\"Capability_Monero\"] = 9] = \"Capability_Monero\";\n  Enum_Capability[Enum_Capability[\"Capability_NEM\"] = 10] = \"Capability_NEM\";\n  Enum_Capability[Enum_Capability[\"Capability_Ripple\"] = 11] = \"Capability_Ripple\";\n  Enum_Capability[Enum_Capability[\"Capability_Stellar\"] = 12] = \"Capability_Stellar\";\n  Enum_Capability[Enum_Capability[\"Capability_Tezos\"] = 13] = \"Capability_Tezos\";\n  Enum_Capability[Enum_Capability[\"Capability_U2F\"] = 14] = \"Capability_U2F\";\n  Enum_Capability[Enum_Capability[\"Capability_Shamir\"] = 15] = \"Capability_Shamir\";\n  Enum_Capability[Enum_Capability[\"Capability_ShamirGroups\"] = 16] = \"Capability_ShamirGroups\";\n  Enum_Capability[Enum_Capability[\"Capability_PassphraseEntry\"] = 17] = \"Capability_PassphraseEntry\";\n  Enum_Capability[Enum_Capability[\"Capability_Solana\"] = 18] = \"Capability_Solana\";\n  Enum_Capability[Enum_Capability[\"Capability_Translations\"] = 19] = \"Capability_Translations\";\n  Enum_Capability[Enum_Capability[\"Capability_Brightness\"] = 20] = \"Capability_Brightness\";\n  Enum_Capability[Enum_Capability[\"Capability_Haptic\"] = 21] = \"Capability_Haptic\";\n})(Enum_Capability || (exports.Enum_Capability = Enum_Capability = {}));\nexports.EnumEnum_Capability = schema_utils_1.Type.Enum(Enum_Capability);\nexports.Capability = schema_utils_1.Type.KeyOfEnum(Enum_Capability, {\n  $id: 'Capability'\n});\nvar RecoveryDeviceInputMethod;\n(function (RecoveryDeviceInputMethod) {\n  RecoveryDeviceInputMethod[RecoveryDeviceInputMethod[\"ScrambledWords\"] = 0] = \"ScrambledWords\";\n  RecoveryDeviceInputMethod[RecoveryDeviceInputMethod[\"Matrix\"] = 1] = \"Matrix\";\n})(RecoveryDeviceInputMethod || (exports.RecoveryDeviceInputMethod = RecoveryDeviceInputMethod = {}));\nexports.EnumRecoveryDeviceInputMethod = schema_utils_1.Type.Enum(RecoveryDeviceInputMethod);\nvar Enum_RecoveryType;\n(function (Enum_RecoveryType) {\n  Enum_RecoveryType[Enum_RecoveryType[\"NormalRecovery\"] = 0] = \"NormalRecovery\";\n  Enum_RecoveryType[Enum_RecoveryType[\"DryRun\"] = 1] = \"DryRun\";\n  Enum_RecoveryType[Enum_RecoveryType[\"UnlockRepeatedBackup\"] = 2] = \"UnlockRepeatedBackup\";\n})(Enum_RecoveryType || (exports.Enum_RecoveryType = Enum_RecoveryType = {}));\nexports.EnumEnum_RecoveryType = schema_utils_1.Type.Enum(Enum_RecoveryType);\nexports.RecoveryType = schema_utils_1.Type.KeyOfEnum(Enum_RecoveryType, {\n  $id: 'RecoveryType'\n});\nexports.RecoveryDevice = schema_utils_1.Type.Object({\n  word_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  passphrase_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  pin_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  enforce_wordlist: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  input_method: schema_utils_1.Type.Optional(exports.EnumRecoveryDeviceInputMethod),\n  u2f_counter: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  type: schema_utils_1.Type.Optional(exports.RecoveryType)\n}, {\n  $id: 'RecoveryDevice'\n});\nexports.Features = schema_utils_1.Type.Object({\n  vendor: schema_utils_1.Type.String(),\n  major_version: schema_utils_1.Type.Number(),\n  minor_version: schema_utils_1.Type.Number(),\n  patch_version: schema_utils_1.Type.Number(),\n  bootloader_mode: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n  device_id: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n  pin_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n  passphrase_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n  language: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n  label: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n  initialized: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n  revision: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n  bootloader_hash: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n  imported: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n  unlocked: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n  _passphrase_cached: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  firmware_present: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n  backup_availability: schema_utils_1.Type.Union([exports.BackupAvailability, schema_utils_1.Type.Null()]),\n  flags: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n  model: schema_utils_1.Type.String(),\n  fw_major: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n  fw_minor: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n  fw_patch: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n  fw_vendor: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n  unfinished_backup: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n  no_backup: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n  recovery_status: schema_utils_1.Type.Union([exports.RecoveryStatus, schema_utils_1.Type.Null()]),\n  capabilities: schema_utils_1.Type.Array(exports.Capability),\n  backup_type: schema_utils_1.Type.Union([exports.BackupType, schema_utils_1.Type.Null()]),\n  sd_card_present: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n  sd_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n  wipe_code_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n  session_id: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n  passphrase_always_on_device: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n  safety_checks: schema_utils_1.Type.Union([exports.SafetyCheckLevel, schema_utils_1.Type.Null()]),\n  auto_lock_delay_ms: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n  display_rotation: schema_utils_1.Type.Union([exports.DisplayRotation, schema_utils_1.Type.Null()]),\n  experimental_features: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n  busy: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  homescreen_format: schema_utils_1.Type.Optional(exports.HomescreenFormat),\n  hide_passphrase_from_host: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  internal_model: exports.EnumDeviceModelInternal,\n  unit_color: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  unit_btconly: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  homescreen_width: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  homescreen_height: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  bootloader_locked: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  language_version_matches: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  unit_packaging: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  haptic_feedback: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  recovery_type: schema_utils_1.Type.Optional(exports.RecoveryType),\n  optiga_sec: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'Features'\n});\nexports.LockDevice = schema_utils_1.Type.Object({}, {\n  $id: 'LockDevice'\n});\nexports.SetBusy = schema_utils_1.Type.Object({\n  expiry_ms: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'SetBusy'\n});\nexports.EndSession = schema_utils_1.Type.Object({}, {\n  $id: 'EndSession'\n});\nexports.ApplySettings = schema_utils_1.Type.Object({\n  language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  use_passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  homescreen: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  _passphrase_source: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  auto_lock_delay_ms: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  display_rotation: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([exports.DisplayRotation, exports.EnumEnum_DisplayRotation])),\n  passphrase_always_on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  safety_checks: schema_utils_1.Type.Optional(exports.SafetyCheckLevel),\n  experimental_features: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  hide_passphrase_from_host: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  haptic_feedback: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'ApplySettings'\n});\nexports.ChangeLanguage = schema_utils_1.Type.Object({\n  data_length: schema_utils_1.Type.Number(),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'ChangeLanguage'\n});\nexports.TranslationDataRequest = schema_utils_1.Type.Object({\n  data_length: schema_utils_1.Type.Number(),\n  data_offset: schema_utils_1.Type.Number()\n}, {\n  $id: 'TranslationDataRequest'\n});\nexports.TranslationDataAck = schema_utils_1.Type.Object({\n  data_chunk: schema_utils_1.Type.String()\n}, {\n  $id: 'TranslationDataAck'\n});\nexports.ApplyFlags = schema_utils_1.Type.Object({\n  flags: schema_utils_1.Type.Number()\n}, {\n  $id: 'ApplyFlags'\n});\nexports.ChangePin = schema_utils_1.Type.Object({\n  remove: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'ChangePin'\n});\nexports.ChangeWipeCode = schema_utils_1.Type.Object({\n  remove: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'ChangeWipeCode'\n});\nvar SdProtectOperationType;\n(function (SdProtectOperationType) {\n  SdProtectOperationType[SdProtectOperationType[\"DISABLE\"] = 0] = \"DISABLE\";\n  SdProtectOperationType[SdProtectOperationType[\"ENABLE\"] = 1] = \"ENABLE\";\n  SdProtectOperationType[SdProtectOperationType[\"REFRESH\"] = 2] = \"REFRESH\";\n})(SdProtectOperationType || (exports.SdProtectOperationType = SdProtectOperationType = {}));\nexports.EnumSdProtectOperationType = schema_utils_1.Type.Enum(SdProtectOperationType);\nexports.SdProtect = schema_utils_1.Type.Object({\n  operation: exports.EnumSdProtectOperationType\n}, {\n  $id: 'SdProtect'\n});\nexports.Ping = schema_utils_1.Type.Object({\n  message: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  button_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'Ping'\n});\nexports.Cancel = schema_utils_1.Type.Object({}, {\n  $id: 'Cancel'\n});\nexports.GetEntropy = schema_utils_1.Type.Object({\n  size: schema_utils_1.Type.Number()\n}, {\n  $id: 'GetEntropy'\n});\nexports.Entropy = schema_utils_1.Type.Object({\n  entropy: schema_utils_1.Type.String()\n}, {\n  $id: 'Entropy'\n});\nexports.GetFirmwareHash = schema_utils_1.Type.Object({\n  challenge: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'GetFirmwareHash'\n});\nexports.FirmwareHash = schema_utils_1.Type.Object({\n  hash: schema_utils_1.Type.String()\n}, {\n  $id: 'FirmwareHash'\n});\nexports.AuthenticateDevice = schema_utils_1.Type.Object({\n  challenge: schema_utils_1.Type.String()\n}, {\n  $id: 'AuthenticateDevice'\n});\nexports.AuthenticityProof = schema_utils_1.Type.Object({\n  certificates: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n  signature: schema_utils_1.Type.String()\n}, {\n  $id: 'AuthenticityProof'\n});\nexports.WipeDevice = schema_utils_1.Type.Object({}, {\n  $id: 'WipeDevice'\n});\nexports.LoadDevice = schema_utils_1.Type.Object({\n  mnemonics: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n  pin: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  passphrase_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  skip_checksum: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  u2f_counter: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  needs_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  no_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'LoadDevice'\n});\nexports.ResetDevice = schema_utils_1.Type.Object({\n  strength: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  passphrase_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  pin_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  u2f_counter: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  skip_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  no_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  backup_type: schema_utils_1.Type.Optional(exports.EnumEnum_BackupType),\n  entropy_check: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'ResetDevice'\n});\nexports.Slip39Group = schema_utils_1.Type.Object({\n  member_threshold: schema_utils_1.Type.Number(),\n  member_count: schema_utils_1.Type.Number()\n}, {\n  $id: 'Slip39Group'\n});\nexports.BackupDevice = schema_utils_1.Type.Object({\n  group_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  groups: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.Slip39Group))\n}, {\n  $id: 'BackupDevice'\n});\nexports.EntropyRequest = schema_utils_1.Type.Object({\n  entropy_commitment: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  prev_entropy: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'EntropyRequest'\n});\nexports.EntropyAck = schema_utils_1.Type.Object({\n  entropy: schema_utils_1.Type.String()\n}, {\n  $id: 'EntropyAck'\n});\nexports.EntropyCheckReady = schema_utils_1.Type.Object({}, {\n  $id: 'EntropyCheckReady'\n});\nexports.EntropyCheckContinue = schema_utils_1.Type.Object({\n  finish: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'EntropyCheckContinue'\n});\nvar Enum_WordRequestType;\n(function (Enum_WordRequestType) {\n  Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Plain\"] = 0] = \"WordRequestType_Plain\";\n  Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Matrix9\"] = 1] = \"WordRequestType_Matrix9\";\n  Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Matrix6\"] = 2] = \"WordRequestType_Matrix6\";\n})(Enum_WordRequestType || (exports.Enum_WordRequestType = Enum_WordRequestType = {}));\nexports.EnumEnum_WordRequestType = schema_utils_1.Type.Enum(Enum_WordRequestType);\nexports.WordRequestType = schema_utils_1.Type.KeyOfEnum(Enum_WordRequestType, {\n  $id: 'WordRequestType'\n});\nexports.WordRequest = schema_utils_1.Type.Object({\n  type: exports.WordRequestType\n}, {\n  $id: 'WordRequest'\n});\nexports.WordAck = schema_utils_1.Type.Object({\n  word: schema_utils_1.Type.String()\n}, {\n  $id: 'WordAck'\n});\nexports.SetU2FCounter = schema_utils_1.Type.Object({\n  u2f_counter: schema_utils_1.Type.Number()\n}, {\n  $id: 'SetU2FCounter'\n});\nexports.GetNextU2FCounter = schema_utils_1.Type.Object({}, {\n  $id: 'GetNextU2FCounter'\n});\nexports.NextU2FCounter = schema_utils_1.Type.Object({\n  u2f_counter: schema_utils_1.Type.Number()\n}, {\n  $id: 'NextU2FCounter'\n});\nexports.DoPreauthorized = schema_utils_1.Type.Object({}, {\n  $id: 'DoPreauthorized'\n});\nexports.PreauthorizedRequest = schema_utils_1.Type.Object({}, {\n  $id: 'PreauthorizedRequest'\n});\nexports.CancelAuthorization = schema_utils_1.Type.Object({}, {\n  $id: 'CancelAuthorization'\n});\nvar BootCommand;\n(function (BootCommand) {\n  BootCommand[BootCommand[\"STOP_AND_WAIT\"] = 0] = \"STOP_AND_WAIT\";\n  BootCommand[BootCommand[\"INSTALL_UPGRADE\"] = 1] = \"INSTALL_UPGRADE\";\n})(BootCommand || (exports.BootCommand = BootCommand = {}));\nexports.EnumBootCommand = schema_utils_1.Type.Enum(BootCommand);\nexports.RebootToBootloader = schema_utils_1.Type.Object({\n  boot_command: schema_utils_1.Type.Optional(exports.EnumBootCommand),\n  firmware_header: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  language_data_length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'RebootToBootloader'\n});\nexports.GetNonce = schema_utils_1.Type.Object({}, {\n  $id: 'GetNonce'\n});\nexports.Nonce = schema_utils_1.Type.Object({\n  nonce: schema_utils_1.Type.String()\n}, {\n  $id: 'Nonce'\n});\nexports.UnlockPath = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  mac: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'UnlockPath'\n});\nexports.UnlockedPathRequest = schema_utils_1.Type.Object({\n  mac: schema_utils_1.Type.String()\n}, {\n  $id: 'UnlockedPathRequest'\n});\nexports.ShowDeviceTutorial = schema_utils_1.Type.Object({}, {\n  $id: 'ShowDeviceTutorial'\n});\nexports.UnlockBootloader = schema_utils_1.Type.Object({}, {\n  $id: 'UnlockBootloader'\n});\nexports.SetBrightness = schema_utils_1.Type.Object({\n  value: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'SetBrightness'\n});\nexports.NEMGetAddress = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'NEMGetAddress'\n});\nexports.NEMAddress = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String()\n}, {\n  $id: 'NEMAddress'\n});\nexports.NEMTransactionCommon = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n  network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  timestamp: schema_utils_1.Type.Number(),\n  fee: schema_utils_1.Type.Uint(),\n  deadline: schema_utils_1.Type.Number(),\n  signer: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'NEMTransactionCommon'\n});\nexports.NEMMosaic = schema_utils_1.Type.Object({\n  namespace: schema_utils_1.Type.String(),\n  mosaic: schema_utils_1.Type.String(),\n  quantity: schema_utils_1.Type.Number()\n}, {\n  $id: 'NEMMosaic'\n});\nexports.NEMTransfer = schema_utils_1.Type.Object({\n  recipient: schema_utils_1.Type.String(),\n  amount: schema_utils_1.Type.Uint(),\n  payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  mosaics: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.NEMMosaic))\n}, {\n  $id: 'NEMTransfer'\n});\nexports.NEMProvisionNamespace = schema_utils_1.Type.Object({\n  namespace: schema_utils_1.Type.String(),\n  parent: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  sink: schema_utils_1.Type.String(),\n  fee: schema_utils_1.Type.Uint()\n}, {\n  $id: 'NEMProvisionNamespace'\n});\nvar NEMMosaicLevy;\n(function (NEMMosaicLevy) {\n  NEMMosaicLevy[NEMMosaicLevy[\"MosaicLevy_Absolute\"] = 1] = \"MosaicLevy_Absolute\";\n  NEMMosaicLevy[NEMMosaicLevy[\"MosaicLevy_Percentile\"] = 2] = \"MosaicLevy_Percentile\";\n})(NEMMosaicLevy || (exports.NEMMosaicLevy = NEMMosaicLevy = {}));\nexports.EnumNEMMosaicLevy = schema_utils_1.Type.Enum(NEMMosaicLevy);\nexports.NEMMosaicDefinition = schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  ticker: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  namespace: schema_utils_1.Type.String(),\n  mosaic: schema_utils_1.Type.String(),\n  divisibility: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  levy: schema_utils_1.Type.Optional(exports.EnumNEMMosaicLevy),\n  fee: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n  levy_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  levy_namespace: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  levy_mosaic: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  supply: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  mutable_supply: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  transferable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  description: schema_utils_1.Type.String(),\n  networks: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number()))\n}, {\n  $id: 'NEMMosaicDefinition'\n});\nexports.NEMMosaicCreation = schema_utils_1.Type.Object({\n  definition: exports.NEMMosaicDefinition,\n  sink: schema_utils_1.Type.String(),\n  fee: schema_utils_1.Type.Uint()\n}, {\n  $id: 'NEMMosaicCreation'\n});\nvar NEMSupplyChangeType;\n(function (NEMSupplyChangeType) {\n  NEMSupplyChangeType[NEMSupplyChangeType[\"SupplyChange_Increase\"] = 1] = \"SupplyChange_Increase\";\n  NEMSupplyChangeType[NEMSupplyChangeType[\"SupplyChange_Decrease\"] = 2] = \"SupplyChange_Decrease\";\n})(NEMSupplyChangeType || (exports.NEMSupplyChangeType = NEMSupplyChangeType = {}));\nexports.EnumNEMSupplyChangeType = schema_utils_1.Type.Enum(NEMSupplyChangeType);\nexports.NEMMosaicSupplyChange = schema_utils_1.Type.Object({\n  namespace: schema_utils_1.Type.String(),\n  mosaic: schema_utils_1.Type.String(),\n  type: exports.EnumNEMSupplyChangeType,\n  delta: schema_utils_1.Type.Number()\n}, {\n  $id: 'NEMMosaicSupplyChange'\n});\nvar NEMModificationType;\n(function (NEMModificationType) {\n  NEMModificationType[NEMModificationType[\"CosignatoryModification_Add\"] = 1] = \"CosignatoryModification_Add\";\n  NEMModificationType[NEMModificationType[\"CosignatoryModification_Delete\"] = 2] = \"CosignatoryModification_Delete\";\n})(NEMModificationType || (exports.NEMModificationType = NEMModificationType = {}));\nexports.EnumNEMModificationType = schema_utils_1.Type.Enum(NEMModificationType);\nexports.NEMCosignatoryModification = schema_utils_1.Type.Object({\n  type: exports.EnumNEMModificationType,\n  public_key: schema_utils_1.Type.String()\n}, {\n  $id: 'NEMCosignatoryModification'\n});\nexports.NEMAggregateModification = schema_utils_1.Type.Object({\n  modifications: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.NEMCosignatoryModification)),\n  relative_change: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'NEMAggregateModification'\n});\nvar NEMImportanceTransferMode;\n(function (NEMImportanceTransferMode) {\n  NEMImportanceTransferMode[NEMImportanceTransferMode[\"ImportanceTransfer_Activate\"] = 1] = \"ImportanceTransfer_Activate\";\n  NEMImportanceTransferMode[NEMImportanceTransferMode[\"ImportanceTransfer_Deactivate\"] = 2] = \"ImportanceTransfer_Deactivate\";\n})(NEMImportanceTransferMode || (exports.NEMImportanceTransferMode = NEMImportanceTransferMode = {}));\nexports.EnumNEMImportanceTransferMode = schema_utils_1.Type.Enum(NEMImportanceTransferMode);\nexports.NEMImportanceTransfer = schema_utils_1.Type.Object({\n  mode: exports.EnumNEMImportanceTransferMode,\n  public_key: schema_utils_1.Type.String()\n}, {\n  $id: 'NEMImportanceTransfer'\n});\nexports.NEMSignTx = schema_utils_1.Type.Object({\n  transaction: exports.NEMTransactionCommon,\n  multisig: schema_utils_1.Type.Optional(exports.NEMTransactionCommon),\n  transfer: schema_utils_1.Type.Optional(exports.NEMTransfer),\n  cosigning: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  provision_namespace: schema_utils_1.Type.Optional(exports.NEMProvisionNamespace),\n  mosaic_creation: schema_utils_1.Type.Optional(exports.NEMMosaicCreation),\n  supply_change: schema_utils_1.Type.Optional(exports.NEMMosaicSupplyChange),\n  aggregate_modification: schema_utils_1.Type.Optional(exports.NEMAggregateModification),\n  importance_transfer: schema_utils_1.Type.Optional(exports.NEMImportanceTransfer),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'NEMSignTx'\n});\nexports.NEMSignedTx = schema_utils_1.Type.Object({\n  data: schema_utils_1.Type.String(),\n  signature: schema_utils_1.Type.String()\n}, {\n  $id: 'NEMSignedTx'\n});\nexports.NEMDecryptMessage = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'NEMDecryptMessage'\n});\nexports.NEMDecryptedMessage = schema_utils_1.Type.Object({\n  payload: schema_utils_1.Type.String()\n}, {\n  $id: 'NEMDecryptedMessage'\n});\nexports.RippleGetAddress = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'RippleGetAddress'\n});\nexports.RippleAddress = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String()\n}, {\n  $id: 'RippleAddress'\n});\nexports.RipplePayment = schema_utils_1.Type.Object({\n  amount: schema_utils_1.Type.Uint(),\n  destination: schema_utils_1.Type.String(),\n  destination_tag: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'RipplePayment'\n});\nexports.RippleSignTx = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  fee: schema_utils_1.Type.Uint(),\n  flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  sequence: schema_utils_1.Type.Number(),\n  last_ledger_sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  payment: exports.RipplePayment,\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'RippleSignTx'\n});\nexports.RippleSignedTx = schema_utils_1.Type.Object({\n  signature: schema_utils_1.Type.String(),\n  serialized_tx: schema_utils_1.Type.String()\n}, {\n  $id: 'RippleSignedTx'\n});\nexports.SolanaGetPublicKey = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'SolanaGetPublicKey'\n});\nexports.SolanaPublicKey = schema_utils_1.Type.Object({\n  public_key: schema_utils_1.Type.String()\n}, {\n  $id: 'SolanaPublicKey'\n});\nexports.SolanaGetAddress = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'SolanaGetAddress'\n});\nexports.SolanaAddress = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String()\n}, {\n  $id: 'SolanaAddress'\n});\nexports.SolanaTxTokenAccountInfo = schema_utils_1.Type.Object({\n  base_address: schema_utils_1.Type.String(),\n  token_program: schema_utils_1.Type.String(),\n  token_mint: schema_utils_1.Type.String(),\n  token_account: schema_utils_1.Type.String()\n}, {\n  $id: 'SolanaTxTokenAccountInfo'\n});\nexports.SolanaTxAdditionalInfo = schema_utils_1.Type.Object({\n  token_accounts_infos: schema_utils_1.Type.Array(exports.SolanaTxTokenAccountInfo)\n}, {\n  $id: 'SolanaTxAdditionalInfo'\n});\nexports.SolanaSignTx = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  serialized_tx: schema_utils_1.Type.String(),\n  additional_info: schema_utils_1.Type.Optional(exports.SolanaTxAdditionalInfo)\n}, {\n  $id: 'SolanaSignTx'\n});\nexports.SolanaTxSignature = schema_utils_1.Type.Object({\n  signature: schema_utils_1.Type.String()\n}, {\n  $id: 'SolanaTxSignature'\n});\nvar StellarAssetType;\n(function (StellarAssetType) {\n  StellarAssetType[StellarAssetType[\"NATIVE\"] = 0] = \"NATIVE\";\n  StellarAssetType[StellarAssetType[\"ALPHANUM4\"] = 1] = \"ALPHANUM4\";\n  StellarAssetType[StellarAssetType[\"ALPHANUM12\"] = 2] = \"ALPHANUM12\";\n})(StellarAssetType || (exports.StellarAssetType = StellarAssetType = {}));\nexports.EnumStellarAssetType = schema_utils_1.Type.Enum(StellarAssetType);\nexports.StellarAsset = schema_utils_1.Type.Object({\n  type: schema_utils_1.Type.Union([schema_utils_1.Type.Literal(0), schema_utils_1.Type.Literal(1), schema_utils_1.Type.Literal(2), schema_utils_1.Type.Literal('NATIVE'), schema_utils_1.Type.Literal('ALPHANUM4'), schema_utils_1.Type.Literal('ALPHANUM12')]),\n  code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  issuer: schema_utils_1.Type.Optional(schema_utils_1.Type.String())\n}, {\n  $id: 'StellarAsset'\n});\nexports.StellarGetAddress = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'StellarGetAddress'\n});\nexports.StellarAddress = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String()\n}, {\n  $id: 'StellarAddress'\n});\nvar StellarMemoType;\n(function (StellarMemoType) {\n  StellarMemoType[StellarMemoType[\"NONE\"] = 0] = \"NONE\";\n  StellarMemoType[StellarMemoType[\"TEXT\"] = 1] = \"TEXT\";\n  StellarMemoType[StellarMemoType[\"ID\"] = 2] = \"ID\";\n  StellarMemoType[StellarMemoType[\"HASH\"] = 3] = \"HASH\";\n  StellarMemoType[StellarMemoType[\"RETURN\"] = 4] = \"RETURN\";\n})(StellarMemoType || (exports.StellarMemoType = StellarMemoType = {}));\nexports.EnumStellarMemoType = schema_utils_1.Type.Enum(StellarMemoType);\nexports.StellarSignTx = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  network_passphrase: schema_utils_1.Type.String(),\n  source_account: schema_utils_1.Type.String(),\n  fee: schema_utils_1.Type.Uint(),\n  sequence_number: schema_utils_1.Type.Uint(),\n  timebounds_start: schema_utils_1.Type.Number(),\n  timebounds_end: schema_utils_1.Type.Number(),\n  memo_type: exports.EnumStellarMemoType,\n  memo_text: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  memo_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n  memo_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()])),\n  num_operations: schema_utils_1.Type.Number()\n}, {\n  $id: 'StellarSignTx'\n});\nexports.StellarTxOpRequest = schema_utils_1.Type.Object({}, {\n  $id: 'StellarTxOpRequest'\n});\nexports.StellarPaymentOp = schema_utils_1.Type.Object({\n  source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  destination_account: schema_utils_1.Type.String(),\n  asset: exports.StellarAsset,\n  amount: schema_utils_1.Type.Uint()\n}, {\n  $id: 'StellarPaymentOp'\n});\nexports.StellarCreateAccountOp = schema_utils_1.Type.Object({\n  source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  new_account: schema_utils_1.Type.String(),\n  starting_balance: schema_utils_1.Type.Uint()\n}, {\n  $id: 'StellarCreateAccountOp'\n});\nexports.StellarPathPaymentStrictReceiveOp = schema_utils_1.Type.Object({\n  source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  send_asset: exports.StellarAsset,\n  send_max: schema_utils_1.Type.Uint(),\n  destination_account: schema_utils_1.Type.String(),\n  destination_asset: exports.StellarAsset,\n  destination_amount: schema_utils_1.Type.Uint(),\n  paths: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.StellarAsset))\n}, {\n  $id: 'StellarPathPaymentStrictReceiveOp'\n});\nexports.StellarPathPaymentStrictSendOp = schema_utils_1.Type.Object({\n  source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  send_asset: exports.StellarAsset,\n  send_amount: schema_utils_1.Type.Uint(),\n  destination_account: schema_utils_1.Type.String(),\n  destination_asset: exports.StellarAsset,\n  destination_min: schema_utils_1.Type.Uint(),\n  paths: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.StellarAsset))\n}, {\n  $id: 'StellarPathPaymentStrictSendOp'\n});\nexports.StellarManageSellOfferOp = schema_utils_1.Type.Object({\n  source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  selling_asset: exports.StellarAsset,\n  buying_asset: exports.StellarAsset,\n  amount: schema_utils_1.Type.Uint(),\n  price_n: schema_utils_1.Type.Number(),\n  price_d: schema_utils_1.Type.Number(),\n  offer_id: schema_utils_1.Type.Uint()\n}, {\n  $id: 'StellarManageSellOfferOp'\n});\nexports.StellarManageBuyOfferOp = schema_utils_1.Type.Object({\n  source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  selling_asset: exports.StellarAsset,\n  buying_asset: exports.StellarAsset,\n  amount: schema_utils_1.Type.Uint(),\n  price_n: schema_utils_1.Type.Number(),\n  price_d: schema_utils_1.Type.Number(),\n  offer_id: schema_utils_1.Type.Uint()\n}, {\n  $id: 'StellarManageBuyOfferOp'\n});\nexports.StellarCreatePassiveSellOfferOp = schema_utils_1.Type.Object({\n  source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  selling_asset: exports.StellarAsset,\n  buying_asset: exports.StellarAsset,\n  amount: schema_utils_1.Type.Uint(),\n  price_n: schema_utils_1.Type.Number(),\n  price_d: schema_utils_1.Type.Number()\n}, {\n  $id: 'StellarCreatePassiveSellOfferOp'\n});\nvar StellarSignerType;\n(function (StellarSignerType) {\n  StellarSignerType[StellarSignerType[\"ACCOUNT\"] = 0] = \"ACCOUNT\";\n  StellarSignerType[StellarSignerType[\"PRE_AUTH\"] = 1] = \"PRE_AUTH\";\n  StellarSignerType[StellarSignerType[\"HASH\"] = 2] = \"HASH\";\n})(StellarSignerType || (exports.StellarSignerType = StellarSignerType = {}));\nexports.EnumStellarSignerType = schema_utils_1.Type.Enum(StellarSignerType);\nexports.StellarSetOptionsOp = schema_utils_1.Type.Object({\n  source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  inflation_destination_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  clear_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  set_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  master_weight: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n  low_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n  medium_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n  high_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n  home_domain: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  signer_type: schema_utils_1.Type.Optional(exports.EnumStellarSignerType),\n  signer_key: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()])),\n  signer_weight: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n}, {\n  $id: 'StellarSetOptionsOp'\n});\nexports.StellarChangeTrustOp = schema_utils_1.Type.Object({\n  source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  asset: exports.StellarAsset,\n  limit: schema_utils_1.Type.Uint()\n}, {\n  $id: 'StellarChangeTrustOp'\n});\nexports.StellarAllowTrustOp = schema_utils_1.Type.Object({\n  source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  trusted_account: schema_utils_1.Type.String(),\n  asset_type: exports.EnumStellarAssetType,\n  asset_code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  is_authorized: schema_utils_1.Type.Boolean()\n}, {\n  $id: 'StellarAllowTrustOp'\n});\nexports.StellarAccountMergeOp = schema_utils_1.Type.Object({\n  source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  destination_account: schema_utils_1.Type.String()\n}, {\n  $id: 'StellarAccountMergeOp'\n});\nexports.StellarManageDataOp = schema_utils_1.Type.Object({\n  source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  key: schema_utils_1.Type.String(),\n  value: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()]))\n}, {\n  $id: 'StellarManageDataOp'\n});\nexports.StellarBumpSequenceOp = schema_utils_1.Type.Object({\n  source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  bump_to: schema_utils_1.Type.Uint()\n}, {\n  $id: 'StellarBumpSequenceOp'\n});\nexports.StellarClaimClaimableBalanceOp = schema_utils_1.Type.Object({\n  source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  balance_id: schema_utils_1.Type.String()\n}, {\n  $id: 'StellarClaimClaimableBalanceOp'\n});\nexports.StellarSignedTx = schema_utils_1.Type.Object({\n  public_key: schema_utils_1.Type.String(),\n  signature: schema_utils_1.Type.String()\n}, {\n  $id: 'StellarSignedTx'\n});\nexports.TezosGetAddress = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'TezosGetAddress'\n});\nexports.TezosAddress = schema_utils_1.Type.Object({\n  address: schema_utils_1.Type.String()\n}, {\n  $id: 'TezosAddress'\n});\nexports.TezosGetPublicKey = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'TezosGetPublicKey'\n});\nexports.TezosPublicKey = schema_utils_1.Type.Object({\n  public_key: schema_utils_1.Type.String()\n}, {\n  $id: 'TezosPublicKey'\n});\nvar TezosContractType;\n(function (TezosContractType) {\n  TezosContractType[TezosContractType[\"Implicit\"] = 0] = \"Implicit\";\n  TezosContractType[TezosContractType[\"Originated\"] = 1] = \"Originated\";\n})(TezosContractType || (exports.TezosContractType = TezosContractType = {}));\nexports.EnumTezosContractType = schema_utils_1.Type.Enum(TezosContractType);\nexports.TezosContractID = schema_utils_1.Type.Object({\n  tag: schema_utils_1.Type.Number(),\n  hash: schema_utils_1.Type.Uint8Array()\n}, {\n  $id: 'TezosContractID'\n});\nexports.TezosRevealOp = schema_utils_1.Type.Object({\n  source: schema_utils_1.Type.Uint8Array(),\n  fee: schema_utils_1.Type.Uint(),\n  counter: schema_utils_1.Type.Number(),\n  gas_limit: schema_utils_1.Type.Number(),\n  storage_limit: schema_utils_1.Type.Number(),\n  public_key: schema_utils_1.Type.Uint8Array()\n}, {\n  $id: 'TezosRevealOp'\n});\nexports.TezosManagerTransfer = schema_utils_1.Type.Object({\n  destination: exports.TezosContractID,\n  amount: schema_utils_1.Type.Uint()\n}, {\n  $id: 'TezosManagerTransfer'\n});\nexports.TezosParametersManager = schema_utils_1.Type.Object({\n  set_delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint8Array()),\n  cancel_delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  transfer: schema_utils_1.Type.Optional(exports.TezosManagerTransfer)\n}, {\n  $id: 'TezosParametersManager'\n});\nexports.TezosTransactionOp = schema_utils_1.Type.Object({\n  source: schema_utils_1.Type.Uint8Array(),\n  fee: schema_utils_1.Type.Uint(),\n  counter: schema_utils_1.Type.Number(),\n  gas_limit: schema_utils_1.Type.Number(),\n  storage_limit: schema_utils_1.Type.Number(),\n  amount: schema_utils_1.Type.Uint(),\n  destination: exports.TezosContractID,\n  parameters: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n  parameters_manager: schema_utils_1.Type.Optional(exports.TezosParametersManager)\n}, {\n  $id: 'TezosTransactionOp'\n});\nexports.TezosOriginationOp = schema_utils_1.Type.Object({\n  source: schema_utils_1.Type.Uint8Array(),\n  fee: schema_utils_1.Type.Uint(),\n  counter: schema_utils_1.Type.Number(),\n  gas_limit: schema_utils_1.Type.Number(),\n  storage_limit: schema_utils_1.Type.Number(),\n  manager_pubkey: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  balance: schema_utils_1.Type.Number(),\n  spendable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  delegatable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint8Array()),\n  script: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Array(schema_utils_1.Type.Number())])\n}, {\n  $id: 'TezosOriginationOp'\n});\nexports.TezosDelegationOp = schema_utils_1.Type.Object({\n  source: schema_utils_1.Type.Uint8Array(),\n  fee: schema_utils_1.Type.Uint(),\n  counter: schema_utils_1.Type.Number(),\n  gas_limit: schema_utils_1.Type.Number(),\n  storage_limit: schema_utils_1.Type.Number(),\n  delegate: schema_utils_1.Type.Uint8Array()\n}, {\n  $id: 'TezosDelegationOp'\n});\nexports.TezosProposalOp = schema_utils_1.Type.Object({\n  source: schema_utils_1.Type.String(),\n  period: schema_utils_1.Type.Number(),\n  proposals: schema_utils_1.Type.Array(schema_utils_1.Type.String())\n}, {\n  $id: 'TezosProposalOp'\n});\nvar TezosBallotType;\n(function (TezosBallotType) {\n  TezosBallotType[TezosBallotType[\"Yay\"] = 0] = \"Yay\";\n  TezosBallotType[TezosBallotType[\"Nay\"] = 1] = \"Nay\";\n  TezosBallotType[TezosBallotType[\"Pass\"] = 2] = \"Pass\";\n})(TezosBallotType || (exports.TezosBallotType = TezosBallotType = {}));\nexports.EnumTezosBallotType = schema_utils_1.Type.Enum(TezosBallotType);\nexports.TezosBallotOp = schema_utils_1.Type.Object({\n  source: schema_utils_1.Type.String(),\n  period: schema_utils_1.Type.Number(),\n  proposal: schema_utils_1.Type.String(),\n  ballot: exports.EnumTezosBallotType\n}, {\n  $id: 'TezosBallotOp'\n});\nexports.TezosSignTx = schema_utils_1.Type.Object({\n  address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  branch: schema_utils_1.Type.Uint8Array(),\n  reveal: schema_utils_1.Type.Optional(exports.TezosRevealOp),\n  transaction: schema_utils_1.Type.Optional(exports.TezosTransactionOp),\n  origination: schema_utils_1.Type.Optional(exports.TezosOriginationOp),\n  delegation: schema_utils_1.Type.Optional(exports.TezosDelegationOp),\n  proposal: schema_utils_1.Type.Optional(exports.TezosProposalOp),\n  ballot: schema_utils_1.Type.Optional(exports.TezosBallotOp),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n}, {\n  $id: 'TezosSignTx'\n});\nexports.TezosSignedTx = schema_utils_1.Type.Object({\n  signature: schema_utils_1.Type.String(),\n  sig_op_contents: schema_utils_1.Type.String(),\n  operation_hash: schema_utils_1.Type.String()\n}, {\n  $id: 'TezosSignedTx'\n});\nexports.MessageType = schema_utils_1.Type.Object({\n  BinanceGetAddress: exports.BinanceGetAddress,\n  BinanceAddress: exports.BinanceAddress,\n  BinanceGetPublicKey: exports.BinanceGetPublicKey,\n  BinancePublicKey: exports.BinancePublicKey,\n  BinanceSignTx: exports.BinanceSignTx,\n  BinanceTxRequest: exports.BinanceTxRequest,\n  BinanceCoin: exports.BinanceCoin,\n  BinanceInputOutput: exports.BinanceInputOutput,\n  BinanceTransferMsg: exports.BinanceTransferMsg,\n  BinanceOrderMsg: exports.BinanceOrderMsg,\n  BinanceCancelMsg: exports.BinanceCancelMsg,\n  BinanceSignedTx: exports.BinanceSignedTx,\n  HDNodeType: exports.HDNodeType,\n  HDNodePathType: exports.HDNodePathType,\n  MultisigRedeemScriptType: exports.MultisigRedeemScriptType,\n  GetPublicKey: exports.GetPublicKey,\n  PublicKey: exports.PublicKey,\n  GetAddress: exports.GetAddress,\n  Address: exports.Address,\n  GetOwnershipId: exports.GetOwnershipId,\n  OwnershipId: exports.OwnershipId,\n  SignMessage: exports.SignMessage,\n  MessageSignature: exports.MessageSignature,\n  VerifyMessage: exports.VerifyMessage,\n  CoinJoinRequest: exports.CoinJoinRequest,\n  SignTx: exports.SignTx,\n  TxRequestDetailsType: exports.TxRequestDetailsType,\n  TxRequestSerializedType: exports.TxRequestSerializedType,\n  TxRequest: exports.TxRequest,\n  TxInputType: exports.TxInputType,\n  TxOutputBinType: exports.TxOutputBinType,\n  TxOutputType: exports.TxOutputType,\n  PrevTx: exports.PrevTx,\n  PrevInput: exports.PrevInput,\n  PrevOutput: exports.PrevOutput,\n  TextMemo: exports.TextMemo,\n  RefundMemo: exports.RefundMemo,\n  CoinPurchaseMemo: exports.CoinPurchaseMemo,\n  PaymentRequestMemo: exports.PaymentRequestMemo,\n  TxAckPaymentRequest: exports.TxAckPaymentRequest,\n  TxAck: exports.TxAck,\n  TxAckInputWrapper: exports.TxAckInputWrapper,\n  TxAckInput: exports.TxAckInput,\n  TxAckOutputWrapper: exports.TxAckOutputWrapper,\n  TxAckOutput: exports.TxAckOutput,\n  TxAckPrevMeta: exports.TxAckPrevMeta,\n  TxAckPrevInputWrapper: exports.TxAckPrevInputWrapper,\n  TxAckPrevInput: exports.TxAckPrevInput,\n  TxAckPrevOutputWrapper: exports.TxAckPrevOutputWrapper,\n  TxAckPrevOutput: exports.TxAckPrevOutput,\n  TxAckPrevExtraDataWrapper: exports.TxAckPrevExtraDataWrapper,\n  TxAckPrevExtraData: exports.TxAckPrevExtraData,\n  GetOwnershipProof: exports.GetOwnershipProof,\n  OwnershipProof: exports.OwnershipProof,\n  AuthorizeCoinJoin: exports.AuthorizeCoinJoin,\n  FirmwareErase: exports.FirmwareErase,\n  FirmwareRequest: exports.FirmwareRequest,\n  FirmwareUpload: exports.FirmwareUpload,\n  ProdTestT1: exports.ProdTestT1,\n  CardanoBlockchainPointerType: exports.CardanoBlockchainPointerType,\n  CardanoNativeScript: exports.CardanoNativeScript,\n  CardanoGetNativeScriptHash: exports.CardanoGetNativeScriptHash,\n  CardanoNativeScriptHash: exports.CardanoNativeScriptHash,\n  CardanoAddressParametersType: exports.CardanoAddressParametersType,\n  CardanoGetAddress: exports.CardanoGetAddress,\n  CardanoAddress: exports.CardanoAddress,\n  CardanoGetPublicKey: exports.CardanoGetPublicKey,\n  CardanoPublicKey: exports.CardanoPublicKey,\n  CardanoSignTxInit: exports.CardanoSignTxInit,\n  CardanoTxInput: exports.CardanoTxInput,\n  CardanoTxOutput: exports.CardanoTxOutput,\n  CardanoAssetGroup: exports.CardanoAssetGroup,\n  CardanoToken: exports.CardanoToken,\n  CardanoTxInlineDatumChunk: exports.CardanoTxInlineDatumChunk,\n  CardanoTxReferenceScriptChunk: exports.CardanoTxReferenceScriptChunk,\n  CardanoPoolOwner: exports.CardanoPoolOwner,\n  CardanoPoolRelayParameters: exports.CardanoPoolRelayParameters,\n  CardanoPoolMetadataType: exports.CardanoPoolMetadataType,\n  CardanoPoolParametersType: exports.CardanoPoolParametersType,\n  CardanoDRep: exports.CardanoDRep,\n  CardanoTxCertificate: exports.CardanoTxCertificate,\n  CardanoTxWithdrawal: exports.CardanoTxWithdrawal,\n  CardanoCVoteRegistrationDelegation: exports.CardanoCVoteRegistrationDelegation,\n  CardanoCVoteRegistrationParametersType: exports.CardanoCVoteRegistrationParametersType,\n  CardanoTxAuxiliaryData: exports.CardanoTxAuxiliaryData,\n  CardanoTxMint: exports.CardanoTxMint,\n  CardanoTxCollateralInput: exports.CardanoTxCollateralInput,\n  CardanoTxRequiredSigner: exports.CardanoTxRequiredSigner,\n  CardanoTxReferenceInput: exports.CardanoTxReferenceInput,\n  CardanoTxItemAck: exports.CardanoTxItemAck,\n  CardanoTxAuxiliaryDataSupplement: exports.CardanoTxAuxiliaryDataSupplement,\n  CardanoTxWitnessRequest: exports.CardanoTxWitnessRequest,\n  CardanoTxWitnessResponse: exports.CardanoTxWitnessResponse,\n  CardanoTxHostAck: exports.CardanoTxHostAck,\n  CardanoTxBodyHash: exports.CardanoTxBodyHash,\n  CardanoSignTxFinished: exports.CardanoSignTxFinished,\n  Success: exports.Success,\n  Failure: exports.Failure,\n  ButtonRequest: exports.ButtonRequest,\n  ButtonAck: exports.ButtonAck,\n  PinMatrixRequest: exports.PinMatrixRequest,\n  PinMatrixAck: exports.PinMatrixAck,\n  PassphraseRequest: exports.PassphraseRequest,\n  PassphraseAck: exports.PassphraseAck,\n  Deprecated_PassphraseStateRequest: exports.Deprecated_PassphraseStateRequest,\n  Deprecated_PassphraseStateAck: exports.Deprecated_PassphraseStateAck,\n  CipherKeyValue: exports.CipherKeyValue,\n  CipheredKeyValue: exports.CipheredKeyValue,\n  IdentityType: exports.IdentityType,\n  SignIdentity: exports.SignIdentity,\n  SignedIdentity: exports.SignedIdentity,\n  GetECDHSessionKey: exports.GetECDHSessionKey,\n  ECDHSessionKey: exports.ECDHSessionKey,\n  DebugLinkResetDebugEvents: exports.DebugLinkResetDebugEvents,\n  DebugLinkOptigaSetSecMax: exports.DebugLinkOptigaSetSecMax,\n  EosGetPublicKey: exports.EosGetPublicKey,\n  EosPublicKey: exports.EosPublicKey,\n  EosTxHeader: exports.EosTxHeader,\n  EosSignTx: exports.EosSignTx,\n  EosTxActionRequest: exports.EosTxActionRequest,\n  EosAsset: exports.EosAsset,\n  EosPermissionLevel: exports.EosPermissionLevel,\n  EosAuthorizationKey: exports.EosAuthorizationKey,\n  EosAuthorizationAccount: exports.EosAuthorizationAccount,\n  EosAuthorizationWait: exports.EosAuthorizationWait,\n  EosAuthorization: exports.EosAuthorization,\n  EosActionCommon: exports.EosActionCommon,\n  EosActionTransfer: exports.EosActionTransfer,\n  EosActionDelegate: exports.EosActionDelegate,\n  EosActionUndelegate: exports.EosActionUndelegate,\n  EosActionRefund: exports.EosActionRefund,\n  EosActionBuyRam: exports.EosActionBuyRam,\n  EosActionBuyRamBytes: exports.EosActionBuyRamBytes,\n  EosActionSellRam: exports.EosActionSellRam,\n  EosActionVoteProducer: exports.EosActionVoteProducer,\n  EosActionUpdateAuth: exports.EosActionUpdateAuth,\n  EosActionDeleteAuth: exports.EosActionDeleteAuth,\n  EosActionLinkAuth: exports.EosActionLinkAuth,\n  EosActionUnlinkAuth: exports.EosActionUnlinkAuth,\n  EosActionNewAccount: exports.EosActionNewAccount,\n  EosActionUnknown: exports.EosActionUnknown,\n  EosTxActionAck: exports.EosTxActionAck,\n  EosSignedTx: exports.EosSignedTx,\n  EthereumNetworkInfo: exports.EthereumNetworkInfo,\n  EthereumTokenInfo: exports.EthereumTokenInfo,\n  EthereumDefinitions: exports.EthereumDefinitions,\n  EthereumSignTypedData: exports.EthereumSignTypedData,\n  EthereumTypedDataStructRequest: exports.EthereumTypedDataStructRequest,\n  EthereumFieldType: exports.EthereumFieldType,\n  EthereumStructMember: exports.EthereumStructMember,\n  EthereumTypedDataStructAck: exports.EthereumTypedDataStructAck,\n  EthereumTypedDataValueRequest: exports.EthereumTypedDataValueRequest,\n  EthereumTypedDataValueAck: exports.EthereumTypedDataValueAck,\n  EthereumGetPublicKey: exports.EthereumGetPublicKey,\n  EthereumPublicKey: exports.EthereumPublicKey,\n  EthereumGetAddress: exports.EthereumGetAddress,\n  EthereumAddress: exports.EthereumAddress,\n  EthereumSignTx: exports.EthereumSignTx,\n  EthereumAccessList: exports.EthereumAccessList,\n  EthereumSignTxEIP1559: exports.EthereumSignTxEIP1559,\n  EthereumTxRequest: exports.EthereumTxRequest,\n  EthereumTxAck: exports.EthereumTxAck,\n  EthereumSignMessage: exports.EthereumSignMessage,\n  EthereumMessageSignature: exports.EthereumMessageSignature,\n  EthereumVerifyMessage: exports.EthereumVerifyMessage,\n  EthereumSignTypedHash: exports.EthereumSignTypedHash,\n  EthereumTypedDataSignature: exports.EthereumTypedDataSignature,\n  Initialize: exports.Initialize,\n  GetFeatures: exports.GetFeatures,\n  RecoveryDevice: exports.RecoveryDevice,\n  Features: exports.Features,\n  LockDevice: exports.LockDevice,\n  SetBusy: exports.SetBusy,\n  EndSession: exports.EndSession,\n  ApplySettings: exports.ApplySettings,\n  ChangeLanguage: exports.ChangeLanguage,\n  TranslationDataRequest: exports.TranslationDataRequest,\n  TranslationDataAck: exports.TranslationDataAck,\n  ApplyFlags: exports.ApplyFlags,\n  ChangePin: exports.ChangePin,\n  ChangeWipeCode: exports.ChangeWipeCode,\n  SdProtect: exports.SdProtect,\n  Ping: exports.Ping,\n  Cancel: exports.Cancel,\n  GetEntropy: exports.GetEntropy,\n  Entropy: exports.Entropy,\n  GetFirmwareHash: exports.GetFirmwareHash,\n  FirmwareHash: exports.FirmwareHash,\n  AuthenticateDevice: exports.AuthenticateDevice,\n  AuthenticityProof: exports.AuthenticityProof,\n  WipeDevice: exports.WipeDevice,\n  LoadDevice: exports.LoadDevice,\n  ResetDevice: exports.ResetDevice,\n  Slip39Group: exports.Slip39Group,\n  BackupDevice: exports.BackupDevice,\n  EntropyRequest: exports.EntropyRequest,\n  EntropyAck: exports.EntropyAck,\n  EntropyCheckReady: exports.EntropyCheckReady,\n  EntropyCheckContinue: exports.EntropyCheckContinue,\n  WordRequest: exports.WordRequest,\n  WordAck: exports.WordAck,\n  SetU2FCounter: exports.SetU2FCounter,\n  GetNextU2FCounter: exports.GetNextU2FCounter,\n  NextU2FCounter: exports.NextU2FCounter,\n  DoPreauthorized: exports.DoPreauthorized,\n  PreauthorizedRequest: exports.PreauthorizedRequest,\n  CancelAuthorization: exports.CancelAuthorization,\n  RebootToBootloader: exports.RebootToBootloader,\n  GetNonce: exports.GetNonce,\n  Nonce: exports.Nonce,\n  UnlockPath: exports.UnlockPath,\n  UnlockedPathRequest: exports.UnlockedPathRequest,\n  ShowDeviceTutorial: exports.ShowDeviceTutorial,\n  UnlockBootloader: exports.UnlockBootloader,\n  SetBrightness: exports.SetBrightness,\n  NEMGetAddress: exports.NEMGetAddress,\n  NEMAddress: exports.NEMAddress,\n  NEMTransactionCommon: exports.NEMTransactionCommon,\n  NEMMosaic: exports.NEMMosaic,\n  NEMTransfer: exports.NEMTransfer,\n  NEMProvisionNamespace: exports.NEMProvisionNamespace,\n  NEMMosaicDefinition: exports.NEMMosaicDefinition,\n  NEMMosaicCreation: exports.NEMMosaicCreation,\n  NEMMosaicSupplyChange: exports.NEMMosaicSupplyChange,\n  NEMCosignatoryModification: exports.NEMCosignatoryModification,\n  NEMAggregateModification: exports.NEMAggregateModification,\n  NEMImportanceTransfer: exports.NEMImportanceTransfer,\n  NEMSignTx: exports.NEMSignTx,\n  NEMSignedTx: exports.NEMSignedTx,\n  NEMDecryptMessage: exports.NEMDecryptMessage,\n  NEMDecryptedMessage: exports.NEMDecryptedMessage,\n  RippleGetAddress: exports.RippleGetAddress,\n  RippleAddress: exports.RippleAddress,\n  RipplePayment: exports.RipplePayment,\n  RippleSignTx: exports.RippleSignTx,\n  RippleSignedTx: exports.RippleSignedTx,\n  SolanaGetPublicKey: exports.SolanaGetPublicKey,\n  SolanaPublicKey: exports.SolanaPublicKey,\n  SolanaGetAddress: exports.SolanaGetAddress,\n  SolanaAddress: exports.SolanaAddress,\n  SolanaTxTokenAccountInfo: exports.SolanaTxTokenAccountInfo,\n  SolanaTxAdditionalInfo: exports.SolanaTxAdditionalInfo,\n  SolanaSignTx: exports.SolanaSignTx,\n  SolanaTxSignature: exports.SolanaTxSignature,\n  StellarAsset: exports.StellarAsset,\n  StellarGetAddress: exports.StellarGetAddress,\n  StellarAddress: exports.StellarAddress,\n  StellarSignTx: exports.StellarSignTx,\n  StellarTxOpRequest: exports.StellarTxOpRequest,\n  StellarPaymentOp: exports.StellarPaymentOp,\n  StellarCreateAccountOp: exports.StellarCreateAccountOp,\n  StellarPathPaymentStrictReceiveOp: exports.StellarPathPaymentStrictReceiveOp,\n  StellarPathPaymentStrictSendOp: exports.StellarPathPaymentStrictSendOp,\n  StellarManageSellOfferOp: exports.StellarManageSellOfferOp,\n  StellarManageBuyOfferOp: exports.StellarManageBuyOfferOp,\n  StellarCreatePassiveSellOfferOp: exports.StellarCreatePassiveSellOfferOp,\n  StellarSetOptionsOp: exports.StellarSetOptionsOp,\n  StellarChangeTrustOp: exports.StellarChangeTrustOp,\n  StellarAllowTrustOp: exports.StellarAllowTrustOp,\n  StellarAccountMergeOp: exports.StellarAccountMergeOp,\n  StellarManageDataOp: exports.StellarManageDataOp,\n  StellarBumpSequenceOp: exports.StellarBumpSequenceOp,\n  StellarClaimClaimableBalanceOp: exports.StellarClaimClaimableBalanceOp,\n  StellarSignedTx: exports.StellarSignedTx,\n  TezosGetAddress: exports.TezosGetAddress,\n  TezosAddress: exports.TezosAddress,\n  TezosGetPublicKey: exports.TezosGetPublicKey,\n  TezosPublicKey: exports.TezosPublicKey,\n  TezosContractID: exports.TezosContractID,\n  TezosRevealOp: exports.TezosRevealOp,\n  TezosManagerTransfer: exports.TezosManagerTransfer,\n  TezosParametersManager: exports.TezosParametersManager,\n  TezosTransactionOp: exports.TezosTransactionOp,\n  TezosOriginationOp: exports.TezosOriginationOp,\n  TezosDelegationOp: exports.TezosDelegationOp,\n  TezosProposalOp: exports.TezosProposalOp,\n  TezosBallotOp: exports.TezosBallotOp,\n  TezosSignTx: exports.TezosSignTx,\n  TezosSignedTx: exports.TezosSignedTx\n}, {\n  $id: 'MessageType'\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","TxRequestDetailsType","RequestType","EnumEnum_RequestType","Enum_RequestType","SignTx","CoinJoinRequest","VerifyMessage","MessageSignature","SignMessage","OwnershipId","GetOwnershipId","Address","GetAddress","PublicKey","GetPublicKey","MultisigRedeemScriptType","HDNodePathType","HDNodeType","EnumMultisigPubkeysOrder","MultisigPubkeysOrder","EnumAmountUnit","AmountUnit","EnumDecredStakingSpendType","DecredStakingSpendType","OutputScriptType","EnumEnum_OutputScriptType","Enum_OutputScriptType","InputScriptType","EnumEnum_InputScriptType","Enum_InputScriptType","BinanceSignedTx","BinanceCancelMsg","BinanceOrderMsg","EnumBinanceTimeInForce","BinanceTimeInForce","EnumBinanceOrderSide","BinanceOrderSide","EnumBinanceOrderType","BinanceOrderType","BinanceTransferMsg","BinanceInputOutput","BinanceCoin","BinanceTxRequest","BinanceSignTx","BinancePublicKey","BinanceGetPublicKey","BinanceAddress","BinanceGetAddress","EnumDeviceModelInternal","DeviceModelInternal","CardanoDRepType","EnumCardanoCertificateType","CardanoCertificateType","EnumCardanoTxOutputSerializationFormat","CardanoTxOutputSerializationFormat","EnumCardanoNativeScriptHashDisplayFormat","CardanoNativeScriptHashDisplayFormat","EnumCardanoNativeScriptType","CardanoNativeScriptType","EnumCardanoAddressType","CardanoAddressType","EnumCardanoDerivationType","CardanoDerivationType","ProdTestT1","FirmwareUpload","FirmwareRequest","FirmwareErase","AuthorizeCoinJoin","OwnershipProof","GetOwnershipProof","TxAckPrevExtraData","TxAckPrevExtraDataWrapper","TxAckPrevOutput","TxAckPrevOutputWrapper","TxAckPrevInput","TxAckPrevInputWrapper","TxAckPrevMeta","TxAckOutput","TxAckOutputWrapper","TxAckInput","TxAckInputWrapper","TxAck","TxAckResponse","TxAckPaymentRequest","PaymentRequestMemo","CoinPurchaseMemo","RefundMemo","TextMemo","PrevOutput","PrevInput","PrevTx","TxOutput","TxOutputType","ChangeOutputScriptType","TxOutputBinType","TxInput","TxInputType","InternalInputScriptType","TxRequest","TxRequestSerializedType","FailureType","Success","CardanoSignTxFinished","CardanoTxBodyHash","CardanoTxHostAck","CardanoTxWitnessResponse","CardanoTxWitnessRequest","CardanoTxAuxiliaryDataSupplement","CardanoTxItemAck","CardanoTxReferenceInput","CardanoTxRequiredSigner","CardanoTxCollateralInput","CardanoTxMint","CardanoTxAuxiliaryData","CardanoCVoteRegistrationParametersType","CardanoCVoteRegistrationDelegation","CardanoTxWithdrawal","CardanoTxCertificate","CardanoDRep","CardanoPoolParametersType","CardanoPoolMetadataType","CardanoPoolRelayParameters","CardanoPoolOwner","CardanoTxReferenceScriptChunk","CardanoTxInlineDatumChunk","CardanoToken","CardanoAssetGroup","CardanoTxOutput","CardanoTxInput","CardanoSignTxInit","CardanoPublicKey","CardanoGetPublicKey","CardanoAddress","CardanoGetAddress","CardanoAddressParametersType","CardanoNativeScriptHash","CardanoGetNativeScriptHash","CardanoNativeScript","CardanoBlockchainPointerType","EnumCardanoTxWitnessType","CardanoTxWitnessType","EnumCardanoTxSigningMode","CardanoTxSigningMode","EnumCardanoCVoteRegistrationFormat","CardanoCVoteRegistrationFormat","EnumCardanoTxAuxiliaryDataSupplementType","CardanoTxAuxiliaryDataSupplementType","EnumCardanoPoolRelayType","CardanoPoolRelayType","EnumCardanoDRepType","EosActionSellRam","EosActionBuyRamBytes","EosActionBuyRam","EosActionRefund","EosActionUndelegate","EosActionDelegate","EosActionTransfer","EosActionCommon","EosAuthorization","EosAuthorizationWait","EosAuthorizationAccount","EosAuthorizationKey","EosPermissionLevel","EosAsset","EosTxActionRequest","EosSignTx","EosTxHeader","EosPublicKey","EosGetPublicKey","DebugLinkOptigaSetSecMax","DebugLinkResetDebugEvents","EnumDebugWaitType","DebugWaitType","EnumDebugPhysicalButton","DebugPhysicalButton","EnumDebugButton","DebugButton","ECDHSessionKey","GetECDHSessionKey","SignedIdentity","SignIdentity","IdentityType","CipheredKeyValue","CipherKeyValue","Deprecated_PassphraseStateAck","Deprecated_PassphraseStateRequest","PassphraseAck","PassphraseRequest","PinMatrixAck","PinMatrixRequest","PinMatrixRequestType","EnumEnum_PinMatrixRequestType","Enum_PinMatrixRequestType","ButtonAck","ButtonRequest","ButtonRequestType","EnumEnum_ButtonRequestType","Enum_ButtonRequestType","Failure","EnumFailureType","Initialize","HomescreenFormat","EnumEnum_HomescreenFormat","Enum_HomescreenFormat","DisplayRotation","EnumEnum_DisplayRotation","Enum_DisplayRotation","SafetyCheckLevel","EnumEnum_SafetyCheckLevel","Enum_SafetyCheckLevel","BackupType","EnumEnum_BackupType","Enum_BackupType","EthereumTypedDataSignature","EthereumSignTypedHash","EthereumVerifyMessage","EthereumMessageSignature","EthereumSignMessage","EthereumTxAck","EthereumTxRequest","EthereumSignTxEIP1559","EthereumAccessList","EthereumSignTx","EthereumAddress","EthereumGetAddress","EthereumPublicKey","EthereumGetPublicKey","EthereumTypedDataValueAck","EthereumTypedDataValueRequest","EthereumTypedDataStructAck","EthereumStructMember","EthereumFieldType","EnumEthereumDataType","EthereumDataType","EthereumTypedDataStructRequest","EthereumSignTypedData","EthereumDefinitions","EthereumTokenInfo","EthereumNetworkInfo","EnumEthereumDefinitionType","EthereumDefinitionType","EosSignedTx","EosTxActionAck","EosActionUnknown","EosActionNewAccount","EosActionUnlinkAuth","EosActionLinkAuth","EosActionDeleteAuth","EosActionUpdateAuth","EosActionVoteProducer","WordRequestType","EnumEnum_WordRequestType","Enum_WordRequestType","EntropyCheckContinue","EntropyCheckReady","EntropyAck","EntropyRequest","BackupDevice","Slip39Group","ResetDevice","LoadDevice","WipeDevice","AuthenticityProof","AuthenticateDevice","FirmwareHash","GetFirmwareHash","Entropy","GetEntropy","Cancel","Ping","SdProtect","EnumSdProtectOperationType","SdProtectOperationType","ChangeWipeCode","ChangePin","ApplyFlags","TranslationDataAck","TranslationDataRequest","ChangeLanguage","ApplySettings","EndSession","SetBusy","LockDevice","Features","RecoveryDevice","RecoveryType","EnumEnum_RecoveryType","Enum_RecoveryType","EnumRecoveryDeviceInputMethod","RecoveryDeviceInputMethod","Capability","EnumEnum_Capability","Enum_Capability","RecoveryStatus","EnumEnum_RecoveryStatus","Enum_RecoveryStatus","BackupAvailability","EnumEnum_BackupAvailability","Enum_BackupAvailability","GetFeatures","SolanaGetAddress","SolanaPublicKey","SolanaGetPublicKey","RippleSignedTx","RippleSignTx","RipplePayment","RippleAddress","RippleGetAddress","NEMDecryptedMessage","NEMDecryptMessage","NEMSignedTx","NEMSignTx","NEMImportanceTransfer","EnumNEMImportanceTransferMode","NEMImportanceTransferMode","NEMAggregateModification","NEMCosignatoryModification","EnumNEMModificationType","NEMModificationType","NEMMosaicSupplyChange","EnumNEMSupplyChangeType","NEMSupplyChangeType","NEMMosaicCreation","NEMMosaicDefinition","EnumNEMMosaicLevy","NEMMosaicLevy","NEMProvisionNamespace","NEMTransfer","NEMMosaic","NEMTransactionCommon","NEMAddress","NEMGetAddress","SetBrightness","UnlockBootloader","ShowDeviceTutorial","UnlockedPathRequest","UnlockPath","Nonce","GetNonce","RebootToBootloader","EnumBootCommand","BootCommand","CancelAuthorization","PreauthorizedRequest","DoPreauthorized","NextU2FCounter","GetNextU2FCounter","SetU2FCounter","WordAck","WordRequest","TezosSignedTx","TezosSignTx","TezosBallotOp","EnumTezosBallotType","TezosBallotType","TezosProposalOp","TezosDelegationOp","TezosOriginationOp","TezosTransactionOp","TezosParametersManager","TezosManagerTransfer","TezosRevealOp","TezosContractID","EnumTezosContractType","TezosContractType","TezosPublicKey","TezosGetPublicKey","TezosAddress","TezosGetAddress","StellarSignedTx","StellarClaimClaimableBalanceOp","StellarBumpSequenceOp","StellarManageDataOp","StellarAccountMergeOp","StellarAllowTrustOp","StellarChangeTrustOp","StellarSetOptionsOp","EnumStellarSignerType","StellarSignerType","StellarCreatePassiveSellOfferOp","StellarManageBuyOfferOp","StellarManageSellOfferOp","StellarPathPaymentStrictSendOp","StellarPathPaymentStrictReceiveOp","StellarCreateAccountOp","StellarPaymentOp","StellarTxOpRequest","StellarSignTx","EnumStellarMemoType","StellarMemoType","StellarAddress","StellarGetAddress","StellarAsset","EnumStellarAssetType","StellarAssetType","SolanaTxSignature","SolanaSignTx","SolanaTxAdditionalInfo","SolanaTxTokenAccountInfo","SolanaAddress","MessageType","schema_utils_1","require","Type","Enum","address_n","Array","Number","show_display","Optional","Boolean","chunkify","$id","address","String","public_key","msg_count","account_number","chain_id","memo","sequence","source","amount","Uint","denom","coins","inputs","outputs","id","ordertype","price","quantity","sender","side","symbol","timeinforce","refid","signature","KeyOfEnum","depth","fingerprint","child_num","chain_code","private_key","node","Union","pubkeys","signatures","m","nodes","pubkeys_order","ecdsa_curve_name","coin_name","script_type","ignore_xpub_magic","xpub","root_fingerprint","descriptor","multisig","mac","ownership_id","message","no_script_type","fee_rate","no_fee_threshold","min_registrable_amount","mask_public_key","outputs_count","inputs_count","version","lock_time","expiry","overwintered","version_group_id","timestamp","branch_id","amount_unit","decred_staking_ticket","serialize","coinjoin_request","request_index","tx_hash","extra_data_len","extra_data_offset","signature_index","serialized_tx","request_type","details","serialized","Exclude","Literal","CommonTxInputType","prev_hash","prev_index","decred_tree","orig_hash","orig_index","decred_staking_spend","script_pubkey","coinjoin_flags","script_sig","witness","ownership_proof","commitment_data","Intersect","Undefined","CloneType","decred_script_version","payment_req_index","op_return_data","text","coin_type","text_memo","refund_memo","coin_purchase_memo","nonce","recipient_name","memos","bin_outputs","extra_data","inputs_cnt","outputs_cnt","tx","input","output","extra_data_chunk","user_confirmation","ownership_ids","coordinator","max_rounds","max_coordinator_fee_rate","max_fee_per_kvbyte","length","offset","payload","Buffer","ArrayBuffer","hash","block_index","tx_index","certificate_index","Recursive","This","type","scripts","key_hash","key_path","required_signatures_count","invalid_before","invalid_hereafter","script","display_format","derivation_type","script_hash","address_type","address_n_staking","staking_key_hash","certificate_pointer","script_payment_hash","script_staking_hash","protocol_magic","network_id","address_parameters","signing_mode","fee","ttl","certificates_count","withdrawals_count","has_auxiliary_data","validity_interval_start","witness_requests_count","minting_asset_groups_count","include_network_id","script_data_hash","collateral_inputs_count","required_signers_count","has_collateral_return","total_collateral","reference_inputs_count","tag_cbor_sets","asset_groups_count","datum_hash","format","inline_datum_size","reference_script_size","policy_id","tokens_count","asset_name_bytes","mint_amount","allowNegative","data","staking_key_path","ipv4_address","ipv6_address","host_name","port","url","pool_id","vrf_key_hash","pledge","cost","margin_numerator","margin_denominator","reward_account","metadata","owners_count","relays_count","path","pool","pool_parameters","deposit","drep","vote_public_key","weight","staking_path","payment_address_parameters","delegations","voting_purpose","payment_address","cvote_registration_parameters","auxiliary_data_hash","cvote_registration_signature","pub_key","code","pages","name","pin","_on_device","passphrase","_state","on_device","state","key","encrypt","ask_on_encrypt","ask_on_decrypt","iv","proto","user","host","index","identity","challenge_hidden","challenge_visual","peer_public_key","session_key","wif_public_key","raw_public_key","expiration","ref_block_num","ref_block_prefix","max_net_usage_words","max_cpu_usage_ms","delay_sec","header","num_actions","data_size","actor","permission","account","wait_sec","threshold","keys","accounts","waits","authorization","receiver","net_quantity","cpu_quantity","transfer","owner","payer","bytes","voter","proxy","producers","parent","auth","requirement","creator","active","data_chunk","common","delegate","undelegate","refund","buy_ram","buy_ram_bytes","sell_ram","vote_producer","update_auth","delete_auth","link_auth","unlink_auth","new_account","unknown","slip44","decimals","encoded_network","encoded_token","primary_type","metamask_v4_compat","definitions","data_type","size","entry_type","struct_name","members","member_path","_old_address","gas_price","gas_limit","to","data_initial_chunk","data_length","tx_type","storage_keys","max_gas_fee","max_priority_fee","access_list","signature_v","signature_r","signature_s","domain_separator_hash","message_hash","session_id","_skip_passphrase","derive_cardano","word_count","passphrase_protection","pin_protection","language","label","enforce_wordlist","input_method","u2f_counter","vendor","major_version","minor_version","patch_version","bootloader_mode","Null","device_id","initialized","revision","bootloader_hash","imported","unlocked","_passphrase_cached","firmware_present","backup_availability","flags","model","fw_major","fw_minor","fw_patch","fw_vendor","unfinished_backup","no_backup","recovery_status","capabilities","backup_type","sd_card_present","sd_protection","wipe_code_protection","passphrase_always_on_device","safety_checks","auto_lock_delay_ms","display_rotation","experimental_features","busy","homescreen_format","hide_passphrase_from_host","internal_model","unit_color","unit_btconly","homescreen_width","homescreen_height","bootloader_locked","language_version_matches","unit_packaging","haptic_feedback","recovery_type","optiga_sec","expiry_ms","use_passphrase","homescreen","_passphrase_source","data_offset","remove","operation","button_protection","entropy","challenge","certificates","mnemonics","skip_checksum","needs_backup","strength","skip_backup","entropy_check","member_threshold","member_count","group_threshold","groups","entropy_commitment","prev_entropy","finish","word","boot_command","firmware_header","language_data_length","network","deadline","signer","namespace","mosaic","recipient","mosaics","sink","ticker","divisibility","levy","levy_address","levy_namespace","levy_mosaic","supply","mutable_supply","transferable","description","networks","definition","delta","modifications","relative_change","mode","transaction","cosigning","provision_namespace","mosaic_creation","supply_change","aggregate_modification","importance_transfer","destination","destination_tag","last_ledger_sequence","payment","base_address","token_program","token_mint","token_account","token_accounts_infos","additional_info","issuer","network_passphrase","source_account","sequence_number","timebounds_start","timebounds_end","memo_type","memo_text","memo_id","memo_hash","num_operations","destination_account","asset","starting_balance","send_asset","send_max","destination_asset","destination_amount","paths","send_amount","destination_min","selling_asset","buying_asset","price_n","price_d","offer_id","inflation_destination_account","clear_flags","set_flags","master_weight","low_threshold","medium_threshold","high_threshold","home_domain","signer_type","signer_key","signer_weight","limit","trusted_account","asset_type","asset_code","is_authorized","bump_to","balance_id","tag","Uint8Array","counter","storage_limit","set_delegate","cancel_delegate","parameters","parameters_manager","manager_pubkey","balance","spendable","delegatable","period","proposals","proposal","ballot","branch","reveal","origination","delegation","sig_op_contents","operation_hash"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@trezor/protobuf/lib/messages-schema.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TxRequestDetailsType = exports.RequestType = exports.EnumEnum_RequestType = exports.Enum_RequestType = exports.SignTx = exports.CoinJoinRequest = exports.VerifyMessage = exports.MessageSignature = exports.SignMessage = exports.OwnershipId = exports.GetOwnershipId = exports.Address = exports.GetAddress = exports.PublicKey = exports.GetPublicKey = exports.MultisigRedeemScriptType = exports.HDNodePathType = exports.HDNodeType = exports.EnumMultisigPubkeysOrder = exports.MultisigPubkeysOrder = exports.EnumAmountUnit = exports.AmountUnit = exports.EnumDecredStakingSpendType = exports.DecredStakingSpendType = exports.OutputScriptType = exports.EnumEnum_OutputScriptType = exports.Enum_OutputScriptType = exports.InputScriptType = exports.EnumEnum_InputScriptType = exports.Enum_InputScriptType = exports.BinanceSignedTx = exports.BinanceCancelMsg = exports.BinanceOrderMsg = exports.EnumBinanceTimeInForce = exports.BinanceTimeInForce = exports.EnumBinanceOrderSide = exports.BinanceOrderSide = exports.EnumBinanceOrderType = exports.BinanceOrderType = exports.BinanceTransferMsg = exports.BinanceInputOutput = exports.BinanceCoin = exports.BinanceTxRequest = exports.BinanceSignTx = exports.BinancePublicKey = exports.BinanceGetPublicKey = exports.BinanceAddress = exports.BinanceGetAddress = exports.EnumDeviceModelInternal = exports.DeviceModelInternal = void 0;\nexports.CardanoDRepType = exports.EnumCardanoCertificateType = exports.CardanoCertificateType = exports.EnumCardanoTxOutputSerializationFormat = exports.CardanoTxOutputSerializationFormat = exports.EnumCardanoNativeScriptHashDisplayFormat = exports.CardanoNativeScriptHashDisplayFormat = exports.EnumCardanoNativeScriptType = exports.CardanoNativeScriptType = exports.EnumCardanoAddressType = exports.CardanoAddressType = exports.EnumCardanoDerivationType = exports.CardanoDerivationType = exports.ProdTestT1 = exports.FirmwareUpload = exports.FirmwareRequest = exports.FirmwareErase = exports.AuthorizeCoinJoin = exports.OwnershipProof = exports.GetOwnershipProof = exports.TxAckPrevExtraData = exports.TxAckPrevExtraDataWrapper = exports.TxAckPrevOutput = exports.TxAckPrevOutputWrapper = exports.TxAckPrevInput = exports.TxAckPrevInputWrapper = exports.TxAckPrevMeta = exports.TxAckOutput = exports.TxAckOutputWrapper = exports.TxAckInput = exports.TxAckInputWrapper = exports.TxAck = exports.TxAckResponse = exports.TxAckPaymentRequest = exports.PaymentRequestMemo = exports.CoinPurchaseMemo = exports.RefundMemo = exports.TextMemo = exports.PrevOutput = exports.PrevInput = exports.PrevTx = exports.TxOutput = exports.TxOutputType = exports.ChangeOutputScriptType = exports.TxOutputBinType = exports.TxInput = exports.TxInputType = exports.InternalInputScriptType = exports.TxRequest = exports.TxRequestSerializedType = void 0;\nexports.FailureType = exports.Success = exports.CardanoSignTxFinished = exports.CardanoTxBodyHash = exports.CardanoTxHostAck = exports.CardanoTxWitnessResponse = exports.CardanoTxWitnessRequest = exports.CardanoTxAuxiliaryDataSupplement = exports.CardanoTxItemAck = exports.CardanoTxReferenceInput = exports.CardanoTxRequiredSigner = exports.CardanoTxCollateralInput = exports.CardanoTxMint = exports.CardanoTxAuxiliaryData = exports.CardanoCVoteRegistrationParametersType = exports.CardanoCVoteRegistrationDelegation = exports.CardanoTxWithdrawal = exports.CardanoTxCertificate = exports.CardanoDRep = exports.CardanoPoolParametersType = exports.CardanoPoolMetadataType = exports.CardanoPoolRelayParameters = exports.CardanoPoolOwner = exports.CardanoTxReferenceScriptChunk = exports.CardanoTxInlineDatumChunk = exports.CardanoToken = exports.CardanoAssetGroup = exports.CardanoTxOutput = exports.CardanoTxInput = exports.CardanoSignTxInit = exports.CardanoPublicKey = exports.CardanoGetPublicKey = exports.CardanoAddress = exports.CardanoGetAddress = exports.CardanoAddressParametersType = exports.CardanoNativeScriptHash = exports.CardanoGetNativeScriptHash = exports.CardanoNativeScript = exports.CardanoBlockchainPointerType = exports.EnumCardanoTxWitnessType = exports.CardanoTxWitnessType = exports.EnumCardanoTxSigningMode = exports.CardanoTxSigningMode = exports.EnumCardanoCVoteRegistrationFormat = exports.CardanoCVoteRegistrationFormat = exports.EnumCardanoTxAuxiliaryDataSupplementType = exports.CardanoTxAuxiliaryDataSupplementType = exports.EnumCardanoPoolRelayType = exports.CardanoPoolRelayType = exports.EnumCardanoDRepType = void 0;\nexports.EosActionSellRam = exports.EosActionBuyRamBytes = exports.EosActionBuyRam = exports.EosActionRefund = exports.EosActionUndelegate = exports.EosActionDelegate = exports.EosActionTransfer = exports.EosActionCommon = exports.EosAuthorization = exports.EosAuthorizationWait = exports.EosAuthorizationAccount = exports.EosAuthorizationKey = exports.EosPermissionLevel = exports.EosAsset = exports.EosTxActionRequest = exports.EosSignTx = exports.EosTxHeader = exports.EosPublicKey = exports.EosGetPublicKey = exports.DebugLinkOptigaSetSecMax = exports.DebugLinkResetDebugEvents = exports.EnumDebugWaitType = exports.DebugWaitType = exports.EnumDebugPhysicalButton = exports.DebugPhysicalButton = exports.EnumDebugButton = exports.DebugButton = exports.ECDHSessionKey = exports.GetECDHSessionKey = exports.SignedIdentity = exports.SignIdentity = exports.IdentityType = exports.CipheredKeyValue = exports.CipherKeyValue = exports.Deprecated_PassphraseStateAck = exports.Deprecated_PassphraseStateRequest = exports.PassphraseAck = exports.PassphraseRequest = exports.PinMatrixAck = exports.PinMatrixRequest = exports.PinMatrixRequestType = exports.EnumEnum_PinMatrixRequestType = exports.Enum_PinMatrixRequestType = exports.ButtonAck = exports.ButtonRequest = exports.ButtonRequestType = exports.EnumEnum_ButtonRequestType = exports.Enum_ButtonRequestType = exports.Failure = exports.EnumFailureType = void 0;\nexports.Initialize = exports.HomescreenFormat = exports.EnumEnum_HomescreenFormat = exports.Enum_HomescreenFormat = exports.DisplayRotation = exports.EnumEnum_DisplayRotation = exports.Enum_DisplayRotation = exports.SafetyCheckLevel = exports.EnumEnum_SafetyCheckLevel = exports.Enum_SafetyCheckLevel = exports.BackupType = exports.EnumEnum_BackupType = exports.Enum_BackupType = exports.EthereumTypedDataSignature = exports.EthereumSignTypedHash = exports.EthereumVerifyMessage = exports.EthereumMessageSignature = exports.EthereumSignMessage = exports.EthereumTxAck = exports.EthereumTxRequest = exports.EthereumSignTxEIP1559 = exports.EthereumAccessList = exports.EthereumSignTx = exports.EthereumAddress = exports.EthereumGetAddress = exports.EthereumPublicKey = exports.EthereumGetPublicKey = exports.EthereumTypedDataValueAck = exports.EthereumTypedDataValueRequest = exports.EthereumTypedDataStructAck = exports.EthereumStructMember = exports.EthereumFieldType = exports.EnumEthereumDataType = exports.EthereumDataType = exports.EthereumTypedDataStructRequest = exports.EthereumSignTypedData = exports.EthereumDefinitions = exports.EthereumTokenInfo = exports.EthereumNetworkInfo = exports.EnumEthereumDefinitionType = exports.EthereumDefinitionType = exports.EosSignedTx = exports.EosTxActionAck = exports.EosActionUnknown = exports.EosActionNewAccount = exports.EosActionUnlinkAuth = exports.EosActionLinkAuth = exports.EosActionDeleteAuth = exports.EosActionUpdateAuth = exports.EosActionVoteProducer = void 0;\nexports.WordRequestType = exports.EnumEnum_WordRequestType = exports.Enum_WordRequestType = exports.EntropyCheckContinue = exports.EntropyCheckReady = exports.EntropyAck = exports.EntropyRequest = exports.BackupDevice = exports.Slip39Group = exports.ResetDevice = exports.LoadDevice = exports.WipeDevice = exports.AuthenticityProof = exports.AuthenticateDevice = exports.FirmwareHash = exports.GetFirmwareHash = exports.Entropy = exports.GetEntropy = exports.Cancel = exports.Ping = exports.SdProtect = exports.EnumSdProtectOperationType = exports.SdProtectOperationType = exports.ChangeWipeCode = exports.ChangePin = exports.ApplyFlags = exports.TranslationDataAck = exports.TranslationDataRequest = exports.ChangeLanguage = exports.ApplySettings = exports.EndSession = exports.SetBusy = exports.LockDevice = exports.Features = exports.RecoveryDevice = exports.RecoveryType = exports.EnumEnum_RecoveryType = exports.Enum_RecoveryType = exports.EnumRecoveryDeviceInputMethod = exports.RecoveryDeviceInputMethod = exports.Capability = exports.EnumEnum_Capability = exports.Enum_Capability = exports.RecoveryStatus = exports.EnumEnum_RecoveryStatus = exports.Enum_RecoveryStatus = exports.BackupAvailability = exports.EnumEnum_BackupAvailability = exports.Enum_BackupAvailability = exports.GetFeatures = void 0;\nexports.SolanaGetAddress = exports.SolanaPublicKey = exports.SolanaGetPublicKey = exports.RippleSignedTx = exports.RippleSignTx = exports.RipplePayment = exports.RippleAddress = exports.RippleGetAddress = exports.NEMDecryptedMessage = exports.NEMDecryptMessage = exports.NEMSignedTx = exports.NEMSignTx = exports.NEMImportanceTransfer = exports.EnumNEMImportanceTransferMode = exports.NEMImportanceTransferMode = exports.NEMAggregateModification = exports.NEMCosignatoryModification = exports.EnumNEMModificationType = exports.NEMModificationType = exports.NEMMosaicSupplyChange = exports.EnumNEMSupplyChangeType = exports.NEMSupplyChangeType = exports.NEMMosaicCreation = exports.NEMMosaicDefinition = exports.EnumNEMMosaicLevy = exports.NEMMosaicLevy = exports.NEMProvisionNamespace = exports.NEMTransfer = exports.NEMMosaic = exports.NEMTransactionCommon = exports.NEMAddress = exports.NEMGetAddress = exports.SetBrightness = exports.UnlockBootloader = exports.ShowDeviceTutorial = exports.UnlockedPathRequest = exports.UnlockPath = exports.Nonce = exports.GetNonce = exports.RebootToBootloader = exports.EnumBootCommand = exports.BootCommand = exports.CancelAuthorization = exports.PreauthorizedRequest = exports.DoPreauthorized = exports.NextU2FCounter = exports.GetNextU2FCounter = exports.SetU2FCounter = exports.WordAck = exports.WordRequest = void 0;\nexports.TezosSignedTx = exports.TezosSignTx = exports.TezosBallotOp = exports.EnumTezosBallotType = exports.TezosBallotType = exports.TezosProposalOp = exports.TezosDelegationOp = exports.TezosOriginationOp = exports.TezosTransactionOp = exports.TezosParametersManager = exports.TezosManagerTransfer = exports.TezosRevealOp = exports.TezosContractID = exports.EnumTezosContractType = exports.TezosContractType = exports.TezosPublicKey = exports.TezosGetPublicKey = exports.TezosAddress = exports.TezosGetAddress = exports.StellarSignedTx = exports.StellarClaimClaimableBalanceOp = exports.StellarBumpSequenceOp = exports.StellarManageDataOp = exports.StellarAccountMergeOp = exports.StellarAllowTrustOp = exports.StellarChangeTrustOp = exports.StellarSetOptionsOp = exports.EnumStellarSignerType = exports.StellarSignerType = exports.StellarCreatePassiveSellOfferOp = exports.StellarManageBuyOfferOp = exports.StellarManageSellOfferOp = exports.StellarPathPaymentStrictSendOp = exports.StellarPathPaymentStrictReceiveOp = exports.StellarCreateAccountOp = exports.StellarPaymentOp = exports.StellarTxOpRequest = exports.StellarSignTx = exports.EnumStellarMemoType = exports.StellarMemoType = exports.StellarAddress = exports.StellarGetAddress = exports.StellarAsset = exports.EnumStellarAssetType = exports.StellarAssetType = exports.SolanaTxSignature = exports.SolanaSignTx = exports.SolanaTxAdditionalInfo = exports.SolanaTxTokenAccountInfo = exports.SolanaAddress = void 0;\nexports.MessageType = void 0;\nconst schema_utils_1 = require(\"@trezor/schema-utils\");\nvar DeviceModelInternal;\n(function (DeviceModelInternal) {\n    DeviceModelInternal[\"T1B1\"] = \"T1B1\";\n    DeviceModelInternal[\"T2T1\"] = \"T2T1\";\n    DeviceModelInternal[\"T2B1\"] = \"T2B1\";\n    DeviceModelInternal[\"T3B1\"] = \"T3B1\";\n    DeviceModelInternal[\"T3T1\"] = \"T3T1\";\n    DeviceModelInternal[\"T3W1\"] = \"T3W1\";\n    DeviceModelInternal[\"UNKNOWN\"] = \"UNKNOWN\";\n})(DeviceModelInternal || (exports.DeviceModelInternal = DeviceModelInternal = {}));\nexports.EnumDeviceModelInternal = schema_utils_1.Type.Enum(DeviceModelInternal);\nexports.BinanceGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'BinanceGetAddress' });\nexports.BinanceAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n}, { $id: 'BinanceAddress' });\nexports.BinanceGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'BinanceGetPublicKey' });\nexports.BinancePublicKey = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n}, { $id: 'BinancePublicKey' });\nexports.BinanceSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    msg_count: schema_utils_1.Type.Number(),\n    account_number: schema_utils_1.Type.Number(),\n    chain_id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    memo: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sequence: schema_utils_1.Type.Number(),\n    source: schema_utils_1.Type.Number(),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'BinanceSignTx' });\nexports.BinanceTxRequest = schema_utils_1.Type.Object({}, { $id: 'BinanceTxRequest' });\nexports.BinanceCoin = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    denom: schema_utils_1.Type.String(),\n}, { $id: 'BinanceCoin' });\nexports.BinanceInputOutput = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    coins: schema_utils_1.Type.Array(exports.BinanceCoin),\n}, { $id: 'BinanceInputOutput' });\nexports.BinanceTransferMsg = schema_utils_1.Type.Object({\n    inputs: schema_utils_1.Type.Array(exports.BinanceInputOutput),\n    outputs: schema_utils_1.Type.Array(exports.BinanceInputOutput),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'BinanceTransferMsg' });\nvar BinanceOrderType;\n(function (BinanceOrderType) {\n    BinanceOrderType[BinanceOrderType[\"OT_UNKNOWN\"] = 0] = \"OT_UNKNOWN\";\n    BinanceOrderType[BinanceOrderType[\"MARKET\"] = 1] = \"MARKET\";\n    BinanceOrderType[BinanceOrderType[\"LIMIT\"] = 2] = \"LIMIT\";\n    BinanceOrderType[BinanceOrderType[\"OT_RESERVED\"] = 3] = \"OT_RESERVED\";\n})(BinanceOrderType || (exports.BinanceOrderType = BinanceOrderType = {}));\nexports.EnumBinanceOrderType = schema_utils_1.Type.Enum(BinanceOrderType);\nvar BinanceOrderSide;\n(function (BinanceOrderSide) {\n    BinanceOrderSide[BinanceOrderSide[\"SIDE_UNKNOWN\"] = 0] = \"SIDE_UNKNOWN\";\n    BinanceOrderSide[BinanceOrderSide[\"BUY\"] = 1] = \"BUY\";\n    BinanceOrderSide[BinanceOrderSide[\"SELL\"] = 2] = \"SELL\";\n})(BinanceOrderSide || (exports.BinanceOrderSide = BinanceOrderSide = {}));\nexports.EnumBinanceOrderSide = schema_utils_1.Type.Enum(BinanceOrderSide);\nvar BinanceTimeInForce;\n(function (BinanceTimeInForce) {\n    BinanceTimeInForce[BinanceTimeInForce[\"TIF_UNKNOWN\"] = 0] = \"TIF_UNKNOWN\";\n    BinanceTimeInForce[BinanceTimeInForce[\"GTE\"] = 1] = \"GTE\";\n    BinanceTimeInForce[BinanceTimeInForce[\"TIF_RESERVED\"] = 2] = \"TIF_RESERVED\";\n    BinanceTimeInForce[BinanceTimeInForce[\"IOC\"] = 3] = \"IOC\";\n})(BinanceTimeInForce || (exports.BinanceTimeInForce = BinanceTimeInForce = {}));\nexports.EnumBinanceTimeInForce = schema_utils_1.Type.Enum(BinanceTimeInForce);\nexports.BinanceOrderMsg = schema_utils_1.Type.Object({\n    id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ordertype: exports.EnumBinanceOrderType,\n    price: schema_utils_1.Type.Number(),\n    quantity: schema_utils_1.Type.Number(),\n    sender: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    side: exports.EnumBinanceOrderSide,\n    symbol: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    timeinforce: exports.EnumBinanceTimeInForce,\n}, { $id: 'BinanceOrderMsg' });\nexports.BinanceCancelMsg = schema_utils_1.Type.Object({\n    refid: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sender: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    symbol: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'BinanceCancelMsg' });\nexports.BinanceSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    public_key: schema_utils_1.Type.String(),\n}, { $id: 'BinanceSignedTx' });\nvar Enum_InputScriptType;\n(function (Enum_InputScriptType) {\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDADDRESS\"] = 0] = \"SPENDADDRESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDMULTISIG\"] = 1] = \"SPENDMULTISIG\";\n    Enum_InputScriptType[Enum_InputScriptType[\"EXTERNAL\"] = 2] = \"EXTERNAL\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDWITNESS\"] = 3] = \"SPENDWITNESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDP2SHWITNESS\"] = 4] = \"SPENDP2SHWITNESS\";\n    Enum_InputScriptType[Enum_InputScriptType[\"SPENDTAPROOT\"] = 5] = \"SPENDTAPROOT\";\n})(Enum_InputScriptType || (exports.Enum_InputScriptType = Enum_InputScriptType = {}));\nexports.EnumEnum_InputScriptType = schema_utils_1.Type.Enum(Enum_InputScriptType);\nexports.InputScriptType = schema_utils_1.Type.KeyOfEnum(Enum_InputScriptType, { $id: 'InputScriptType' });\nvar Enum_OutputScriptType;\n(function (Enum_OutputScriptType) {\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOADDRESS\"] = 0] = \"PAYTOADDRESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOSCRIPTHASH\"] = 1] = \"PAYTOSCRIPTHASH\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOMULTISIG\"] = 2] = \"PAYTOMULTISIG\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOOPRETURN\"] = 3] = \"PAYTOOPRETURN\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOWITNESS\"] = 4] = \"PAYTOWITNESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOP2SHWITNESS\"] = 5] = \"PAYTOP2SHWITNESS\";\n    Enum_OutputScriptType[Enum_OutputScriptType[\"PAYTOTAPROOT\"] = 6] = \"PAYTOTAPROOT\";\n})(Enum_OutputScriptType || (exports.Enum_OutputScriptType = Enum_OutputScriptType = {}));\nexports.EnumEnum_OutputScriptType = schema_utils_1.Type.Enum(Enum_OutputScriptType);\nexports.OutputScriptType = schema_utils_1.Type.KeyOfEnum(Enum_OutputScriptType, { $id: 'OutputScriptType' });\nvar DecredStakingSpendType;\n(function (DecredStakingSpendType) {\n    DecredStakingSpendType[DecredStakingSpendType[\"SSGen\"] = 0] = \"SSGen\";\n    DecredStakingSpendType[DecredStakingSpendType[\"SSRTX\"] = 1] = \"SSRTX\";\n})(DecredStakingSpendType || (exports.DecredStakingSpendType = DecredStakingSpendType = {}));\nexports.EnumDecredStakingSpendType = schema_utils_1.Type.Enum(DecredStakingSpendType);\nvar AmountUnit;\n(function (AmountUnit) {\n    AmountUnit[AmountUnit[\"BITCOIN\"] = 0] = \"BITCOIN\";\n    AmountUnit[AmountUnit[\"MILLIBITCOIN\"] = 1] = \"MILLIBITCOIN\";\n    AmountUnit[AmountUnit[\"MICROBITCOIN\"] = 2] = \"MICROBITCOIN\";\n    AmountUnit[AmountUnit[\"SATOSHI\"] = 3] = \"SATOSHI\";\n})(AmountUnit || (exports.AmountUnit = AmountUnit = {}));\nexports.EnumAmountUnit = schema_utils_1.Type.Enum(AmountUnit);\nvar MultisigPubkeysOrder;\n(function (MultisigPubkeysOrder) {\n    MultisigPubkeysOrder[MultisigPubkeysOrder[\"PRESERVED\"] = 0] = \"PRESERVED\";\n    MultisigPubkeysOrder[MultisigPubkeysOrder[\"LEXICOGRAPHIC\"] = 1] = \"LEXICOGRAPHIC\";\n})(MultisigPubkeysOrder || (exports.MultisigPubkeysOrder = MultisigPubkeysOrder = {}));\nexports.EnumMultisigPubkeysOrder = schema_utils_1.Type.Enum(MultisigPubkeysOrder);\nexports.HDNodeType = schema_utils_1.Type.Object({\n    depth: schema_utils_1.Type.Number(),\n    fingerprint: schema_utils_1.Type.Number(),\n    child_num: schema_utils_1.Type.Number(),\n    chain_code: schema_utils_1.Type.String(),\n    private_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    public_key: schema_utils_1.Type.String(),\n}, { $id: 'HDNodeType' });\nexports.HDNodePathType = schema_utils_1.Type.Object({\n    node: schema_utils_1.Type.Union([exports.HDNodeType, schema_utils_1.Type.String()]),\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n}, { $id: 'HDNodePathType' });\nexports.MultisigRedeemScriptType = schema_utils_1.Type.Object({\n    pubkeys: schema_utils_1.Type.Array(exports.HDNodePathType),\n    signatures: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n    m: schema_utils_1.Type.Number(),\n    nodes: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.HDNodeType)),\n    address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    pubkeys_order: schema_utils_1.Type.Optional(exports.EnumMultisigPubkeysOrder),\n}, { $id: 'MultisigRedeemScriptType' });\nexports.GetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    ignore_xpub_magic: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'GetPublicKey' });\nexports.PublicKey = schema_utils_1.Type.Object({\n    node: exports.HDNodeType,\n    xpub: schema_utils_1.Type.String(),\n    root_fingerprint: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    descriptor: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'PublicKey' });\nexports.GetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    ignore_xpub_magic: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'GetAddress' });\nexports.Address = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    mac: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'Address' });\nexports.GetOwnershipId = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n}, { $id: 'GetOwnershipId' });\nexports.OwnershipId = schema_utils_1.Type.Object({\n    ownership_id: schema_utils_1.Type.String(),\n}, { $id: 'OwnershipId' });\nexports.SignMessage = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    message: schema_utils_1.Type.String(),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    no_script_type: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'SignMessage' });\nexports.MessageSignature = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'MessageSignature' });\nexports.VerifyMessage = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n    message: schema_utils_1.Type.String(),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'VerifyMessage' });\nexports.CoinJoinRequest = schema_utils_1.Type.Object({\n    fee_rate: schema_utils_1.Type.Number(),\n    no_fee_threshold: schema_utils_1.Type.Number(),\n    min_registrable_amount: schema_utils_1.Type.Number(),\n    mask_public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    signature: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CoinJoinRequest' });\nexports.SignTx = schema_utils_1.Type.Object({\n    outputs_count: schema_utils_1.Type.Number(),\n    inputs_count: schema_utils_1.Type.Number(),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    lock_time: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    overwintered: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    amount_unit: schema_utils_1.Type.Optional(exports.EnumAmountUnit),\n    decred_staking_ticket: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    serialize: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    coinjoin_request: schema_utils_1.Type.Optional(exports.CoinJoinRequest),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'SignTx' });\nvar Enum_RequestType;\n(function (Enum_RequestType) {\n    Enum_RequestType[Enum_RequestType[\"TXINPUT\"] = 0] = \"TXINPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXOUTPUT\"] = 1] = \"TXOUTPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXMETA\"] = 2] = \"TXMETA\";\n    Enum_RequestType[Enum_RequestType[\"TXFINISHED\"] = 3] = \"TXFINISHED\";\n    Enum_RequestType[Enum_RequestType[\"TXEXTRADATA\"] = 4] = \"TXEXTRADATA\";\n    Enum_RequestType[Enum_RequestType[\"TXORIGINPUT\"] = 5] = \"TXORIGINPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXORIGOUTPUT\"] = 6] = \"TXORIGOUTPUT\";\n    Enum_RequestType[Enum_RequestType[\"TXPAYMENTREQ\"] = 7] = \"TXPAYMENTREQ\";\n})(Enum_RequestType || (exports.Enum_RequestType = Enum_RequestType = {}));\nexports.EnumEnum_RequestType = schema_utils_1.Type.Enum(Enum_RequestType);\nexports.RequestType = schema_utils_1.Type.KeyOfEnum(Enum_RequestType, { $id: 'RequestType' });\nexports.TxRequestDetailsType = schema_utils_1.Type.Object({\n    request_index: schema_utils_1.Type.Number(),\n    tx_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    extra_data_offset: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'TxRequestDetailsType' });\nexports.TxRequestSerializedType = schema_utils_1.Type.Object({\n    signature_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    signature: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    serialized_tx: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'TxRequestSerializedType' });\nexports.TxRequest = schema_utils_1.Type.Object({\n    request_type: exports.RequestType,\n    details: exports.TxRequestDetailsType,\n    serialized: schema_utils_1.Type.Optional(exports.TxRequestSerializedType),\n}, { $id: 'TxRequest' });\nexports.InternalInputScriptType = schema_utils_1.Type.Exclude(exports.InputScriptType, schema_utils_1.Type.Literal('EXTERNAL'), {\n    $id: 'InternalInputScriptType',\n});\nconst CommonTxInputType = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n    amount: schema_utils_1.Type.Uint(),\n    sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    decred_tree: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    decred_staking_spend: schema_utils_1.Type.Optional(exports.EnumDecredStakingSpendType),\n    script_pubkey: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    coinjoin_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    script_sig: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    witness: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ownership_proof: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    commitment_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CommonTxInputType' });\nexports.TxInputType = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Intersect([\n        CommonTxInputType,\n        schema_utils_1.Type.Object({\n            address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n            script_type: schema_utils_1.Type.Optional(exports.InternalInputScriptType),\n        }),\n    ]),\n    schema_utils_1.Type.Intersect([\n        CommonTxInputType,\n        schema_utils_1.Type.Object({\n            address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n            script_type: schema_utils_1.Type.Literal('EXTERNAL'),\n            script_pubkey: schema_utils_1.Type.String(),\n        }),\n    ]),\n], { $id: 'TxInputType' });\nexports.TxInput = (0, schema_utils_1.CloneType)(exports.TxInputType, { $id: 'TxInput' });\nexports.TxOutputBinType = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    script_pubkey: schema_utils_1.Type.String(),\n    decred_script_version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'TxOutputBinType' });\nexports.ChangeOutputScriptType = schema_utils_1.Type.Exclude(exports.OutputScriptType, schema_utils_1.Type.Literal('PAYTOOPRETURN'), { $id: 'ChangeOutputScriptType' });\nexports.TxOutputType = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.String(),\n        address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        script_type: schema_utils_1.Type.Literal('PAYTOADDRESS'),\n        amount: schema_utils_1.Type.Uint(),\n        multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n        script_type: schema_utils_1.Type.Optional(exports.ChangeOutputScriptType),\n        amount: schema_utils_1.Type.Uint(),\n        multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.String(),\n        address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        script_type: schema_utils_1.Type.Optional(exports.ChangeOutputScriptType),\n        amount: schema_utils_1.Type.Uint(),\n        multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n    schema_utils_1.Type.Object({\n        address: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n        amount: schema_utils_1.Type.Union([schema_utils_1.Type.Literal('0'), schema_utils_1.Type.Literal(0)]),\n        op_return_data: schema_utils_1.Type.String(),\n        script_type: schema_utils_1.Type.Literal('PAYTOOPRETURN'),\n        orig_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        orig_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        payment_req_index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n], { $id: 'TxOutputType' });\nexports.TxOutput = (0, schema_utils_1.CloneType)(exports.TxOutputType, { $id: 'TxOutput' });\nexports.PrevTx = schema_utils_1.Type.Object({\n    version: schema_utils_1.Type.Number(),\n    lock_time: schema_utils_1.Type.Number(),\n    inputs_count: schema_utils_1.Type.Number(),\n    outputs_count: schema_utils_1.Type.Number(),\n    extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'PrevTx' });\nexports.PrevInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n    script_sig: schema_utils_1.Type.String(),\n    sequence: schema_utils_1.Type.Number(),\n    decred_tree: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'PrevInput' });\nexports.PrevOutput = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    script_pubkey: schema_utils_1.Type.String(),\n    decred_script_version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'PrevOutput' });\nexports.TextMemo = schema_utils_1.Type.Object({\n    text: schema_utils_1.Type.String(),\n}, { $id: 'TextMemo' });\nexports.RefundMemo = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    mac: schema_utils_1.Type.String(),\n}, { $id: 'RefundMemo' });\nexports.CoinPurchaseMemo = schema_utils_1.Type.Object({\n    coin_type: schema_utils_1.Type.Number(),\n    amount: schema_utils_1.Type.Uint(),\n    address: schema_utils_1.Type.String(),\n    mac: schema_utils_1.Type.String(),\n}, { $id: 'CoinPurchaseMemo' });\nexports.PaymentRequestMemo = schema_utils_1.Type.Object({\n    text_memo: schema_utils_1.Type.Optional(exports.TextMemo),\n    refund_memo: schema_utils_1.Type.Optional(exports.RefundMemo),\n    coin_purchase_memo: schema_utils_1.Type.Optional(exports.CoinPurchaseMemo),\n}, { $id: 'PaymentRequestMemo' });\nexports.TxAckPaymentRequest = schema_utils_1.Type.Object({\n    nonce: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    recipient_name: schema_utils_1.Type.String(),\n    memos: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.PaymentRequestMemo)),\n    amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'TxAckPaymentRequest' });\nexports.TxAckResponse = schema_utils_1.Type.Union([\n    schema_utils_1.Type.Object({\n        inputs: schema_utils_1.Type.Array(schema_utils_1.Type.Union([exports.TxInputType, exports.PrevInput])),\n    }),\n    schema_utils_1.Type.Object({\n        bin_outputs: schema_utils_1.Type.Array(exports.TxOutputBinType),\n    }),\n    schema_utils_1.Type.Object({\n        outputs: schema_utils_1.Type.Array(exports.TxOutputType),\n    }),\n    schema_utils_1.Type.Object({\n        extra_data: schema_utils_1.Type.String(),\n    }),\n    schema_utils_1.Type.Object({\n        version: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        lock_time: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        inputs_cnt: schema_utils_1.Type.Number(),\n        outputs_cnt: schema_utils_1.Type.Number(),\n        extra_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n        extra_data_len: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        timestamp: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        version_group_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        expiry: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n        branch_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    }),\n], { $id: 'TxAckResponse' });\nexports.TxAck = schema_utils_1.Type.Object({\n    tx: exports.TxAckResponse,\n}, { $id: 'TxAck' });\nexports.TxAckInputWrapper = schema_utils_1.Type.Object({\n    input: exports.TxInput,\n}, { $id: 'TxAckInputWrapper' });\nexports.TxAckInput = schema_utils_1.Type.Object({\n    tx: exports.TxAckInputWrapper,\n}, { $id: 'TxAckInput' });\nexports.TxAckOutputWrapper = schema_utils_1.Type.Object({\n    output: exports.TxOutput,\n}, { $id: 'TxAckOutputWrapper' });\nexports.TxAckOutput = schema_utils_1.Type.Object({\n    tx: exports.TxAckOutputWrapper,\n}, { $id: 'TxAckOutput' });\nexports.TxAckPrevMeta = schema_utils_1.Type.Object({\n    tx: exports.PrevTx,\n}, { $id: 'TxAckPrevMeta' });\nexports.TxAckPrevInputWrapper = schema_utils_1.Type.Object({\n    input: exports.PrevInput,\n}, { $id: 'TxAckPrevInputWrapper' });\nexports.TxAckPrevInput = schema_utils_1.Type.Object({\n    tx: exports.TxAckPrevInputWrapper,\n}, { $id: 'TxAckPrevInput' });\nexports.TxAckPrevOutputWrapper = schema_utils_1.Type.Object({\n    output: exports.PrevOutput,\n}, { $id: 'TxAckPrevOutputWrapper' });\nexports.TxAckPrevOutput = schema_utils_1.Type.Object({\n    tx: exports.TxAckPrevOutputWrapper,\n}, { $id: 'TxAckPrevOutput' });\nexports.TxAckPrevExtraDataWrapper = schema_utils_1.Type.Object({\n    extra_data_chunk: schema_utils_1.Type.String(),\n}, { $id: 'TxAckPrevExtraDataWrapper' });\nexports.TxAckPrevExtraData = schema_utils_1.Type.Object({\n    tx: exports.TxAckPrevExtraDataWrapper,\n}, { $id: 'TxAckPrevExtraData' });\nexports.GetOwnershipProof = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    multisig: schema_utils_1.Type.Optional(exports.MultisigRedeemScriptType),\n    user_confirmation: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    ownership_ids: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.String())),\n    commitment_data: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'GetOwnershipProof' });\nexports.OwnershipProof = schema_utils_1.Type.Object({\n    ownership_proof: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'OwnershipProof' });\nexports.AuthorizeCoinJoin = schema_utils_1.Type.Object({\n    coordinator: schema_utils_1.Type.String(),\n    max_rounds: schema_utils_1.Type.Number(),\n    max_coordinator_fee_rate: schema_utils_1.Type.Number(),\n    max_fee_per_kvbyte: schema_utils_1.Type.Number(),\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    coin_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_type: schema_utils_1.Type.Optional(exports.InputScriptType),\n    amount_unit: schema_utils_1.Type.Optional(exports.EnumAmountUnit),\n}, { $id: 'AuthorizeCoinJoin' });\nexports.FirmwareErase = schema_utils_1.Type.Object({\n    length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'FirmwareErase' });\nexports.FirmwareRequest = schema_utils_1.Type.Object({\n    offset: schema_utils_1.Type.Number(),\n    length: schema_utils_1.Type.Number(),\n}, { $id: 'FirmwareRequest' });\nexports.FirmwareUpload = schema_utils_1.Type.Object({\n    payload: schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.ArrayBuffer()]),\n    hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'FirmwareUpload' });\nexports.ProdTestT1 = schema_utils_1.Type.Object({\n    payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'ProdTestT1' });\nvar CardanoDerivationType;\n(function (CardanoDerivationType) {\n    CardanoDerivationType[CardanoDerivationType[\"LEDGER\"] = 0] = \"LEDGER\";\n    CardanoDerivationType[CardanoDerivationType[\"ICARUS\"] = 1] = \"ICARUS\";\n    CardanoDerivationType[CardanoDerivationType[\"ICARUS_TREZOR\"] = 2] = \"ICARUS_TREZOR\";\n})(CardanoDerivationType || (exports.CardanoDerivationType = CardanoDerivationType = {}));\nexports.EnumCardanoDerivationType = schema_utils_1.Type.Enum(CardanoDerivationType);\nvar CardanoAddressType;\n(function (CardanoAddressType) {\n    CardanoAddressType[CardanoAddressType[\"BASE\"] = 0] = \"BASE\";\n    CardanoAddressType[CardanoAddressType[\"BASE_SCRIPT_KEY\"] = 1] = \"BASE_SCRIPT_KEY\";\n    CardanoAddressType[CardanoAddressType[\"BASE_KEY_SCRIPT\"] = 2] = \"BASE_KEY_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"BASE_SCRIPT_SCRIPT\"] = 3] = \"BASE_SCRIPT_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"POINTER\"] = 4] = \"POINTER\";\n    CardanoAddressType[CardanoAddressType[\"POINTER_SCRIPT\"] = 5] = \"POINTER_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"ENTERPRISE\"] = 6] = \"ENTERPRISE\";\n    CardanoAddressType[CardanoAddressType[\"ENTERPRISE_SCRIPT\"] = 7] = \"ENTERPRISE_SCRIPT\";\n    CardanoAddressType[CardanoAddressType[\"BYRON\"] = 8] = \"BYRON\";\n    CardanoAddressType[CardanoAddressType[\"REWARD\"] = 14] = \"REWARD\";\n    CardanoAddressType[CardanoAddressType[\"REWARD_SCRIPT\"] = 15] = \"REWARD_SCRIPT\";\n})(CardanoAddressType || (exports.CardanoAddressType = CardanoAddressType = {}));\nexports.EnumCardanoAddressType = schema_utils_1.Type.Enum(CardanoAddressType);\nvar CardanoNativeScriptType;\n(function (CardanoNativeScriptType) {\n    CardanoNativeScriptType[CardanoNativeScriptType[\"PUB_KEY\"] = 0] = \"PUB_KEY\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"ALL\"] = 1] = \"ALL\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"ANY\"] = 2] = \"ANY\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"N_OF_K\"] = 3] = \"N_OF_K\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"INVALID_BEFORE\"] = 4] = \"INVALID_BEFORE\";\n    CardanoNativeScriptType[CardanoNativeScriptType[\"INVALID_HEREAFTER\"] = 5] = \"INVALID_HEREAFTER\";\n})(CardanoNativeScriptType || (exports.CardanoNativeScriptType = CardanoNativeScriptType = {}));\nexports.EnumCardanoNativeScriptType = schema_utils_1.Type.Enum(CardanoNativeScriptType);\nvar CardanoNativeScriptHashDisplayFormat;\n(function (CardanoNativeScriptHashDisplayFormat) {\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"HIDE\"] = 0] = \"HIDE\";\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"BECH32\"] = 1] = \"BECH32\";\n    CardanoNativeScriptHashDisplayFormat[CardanoNativeScriptHashDisplayFormat[\"POLICY_ID\"] = 2] = \"POLICY_ID\";\n})(CardanoNativeScriptHashDisplayFormat || (exports.CardanoNativeScriptHashDisplayFormat = CardanoNativeScriptHashDisplayFormat = {}));\nexports.EnumCardanoNativeScriptHashDisplayFormat = schema_utils_1.Type.Enum(CardanoNativeScriptHashDisplayFormat);\nvar CardanoTxOutputSerializationFormat;\n(function (CardanoTxOutputSerializationFormat) {\n    CardanoTxOutputSerializationFormat[CardanoTxOutputSerializationFormat[\"ARRAY_LEGACY\"] = 0] = \"ARRAY_LEGACY\";\n    CardanoTxOutputSerializationFormat[CardanoTxOutputSerializationFormat[\"MAP_BABBAGE\"] = 1] = \"MAP_BABBAGE\";\n})(CardanoTxOutputSerializationFormat || (exports.CardanoTxOutputSerializationFormat = CardanoTxOutputSerializationFormat = {}));\nexports.EnumCardanoTxOutputSerializationFormat = schema_utils_1.Type.Enum(CardanoTxOutputSerializationFormat);\nvar CardanoCertificateType;\n(function (CardanoCertificateType) {\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_REGISTRATION\"] = 0] = \"STAKE_REGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DEREGISTRATION\"] = 1] = \"STAKE_DEREGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DELEGATION\"] = 2] = \"STAKE_DELEGATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_POOL_REGISTRATION\"] = 3] = \"STAKE_POOL_REGISTRATION\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_REGISTRATION_CONWAY\"] = 7] = \"STAKE_REGISTRATION_CONWAY\";\n    CardanoCertificateType[CardanoCertificateType[\"STAKE_DEREGISTRATION_CONWAY\"] = 8] = \"STAKE_DEREGISTRATION_CONWAY\";\n    CardanoCertificateType[CardanoCertificateType[\"VOTE_DELEGATION\"] = 9] = \"VOTE_DELEGATION\";\n})(CardanoCertificateType || (exports.CardanoCertificateType = CardanoCertificateType = {}));\nexports.EnumCardanoCertificateType = schema_utils_1.Type.Enum(CardanoCertificateType);\nvar CardanoDRepType;\n(function (CardanoDRepType) {\n    CardanoDRepType[CardanoDRepType[\"KEY_HASH\"] = 0] = \"KEY_HASH\";\n    CardanoDRepType[CardanoDRepType[\"SCRIPT_HASH\"] = 1] = \"SCRIPT_HASH\";\n    CardanoDRepType[CardanoDRepType[\"ABSTAIN\"] = 2] = \"ABSTAIN\";\n    CardanoDRepType[CardanoDRepType[\"NO_CONFIDENCE\"] = 3] = \"NO_CONFIDENCE\";\n})(CardanoDRepType || (exports.CardanoDRepType = CardanoDRepType = {}));\nexports.EnumCardanoDRepType = schema_utils_1.Type.Enum(CardanoDRepType);\nvar CardanoPoolRelayType;\n(function (CardanoPoolRelayType) {\n    CardanoPoolRelayType[CardanoPoolRelayType[\"SINGLE_HOST_IP\"] = 0] = \"SINGLE_HOST_IP\";\n    CardanoPoolRelayType[CardanoPoolRelayType[\"SINGLE_HOST_NAME\"] = 1] = \"SINGLE_HOST_NAME\";\n    CardanoPoolRelayType[CardanoPoolRelayType[\"MULTIPLE_HOST_NAME\"] = 2] = \"MULTIPLE_HOST_NAME\";\n})(CardanoPoolRelayType || (exports.CardanoPoolRelayType = CardanoPoolRelayType = {}));\nexports.EnumCardanoPoolRelayType = schema_utils_1.Type.Enum(CardanoPoolRelayType);\nvar CardanoTxAuxiliaryDataSupplementType;\n(function (CardanoTxAuxiliaryDataSupplementType) {\n    CardanoTxAuxiliaryDataSupplementType[CardanoTxAuxiliaryDataSupplementType[\"NONE\"] = 0] = \"NONE\";\n    CardanoTxAuxiliaryDataSupplementType[CardanoTxAuxiliaryDataSupplementType[\"CVOTE_REGISTRATION_SIGNATURE\"] = 1] = \"CVOTE_REGISTRATION_SIGNATURE\";\n})(CardanoTxAuxiliaryDataSupplementType || (exports.CardanoTxAuxiliaryDataSupplementType = CardanoTxAuxiliaryDataSupplementType = {}));\nexports.EnumCardanoTxAuxiliaryDataSupplementType = schema_utils_1.Type.Enum(CardanoTxAuxiliaryDataSupplementType);\nvar CardanoCVoteRegistrationFormat;\n(function (CardanoCVoteRegistrationFormat) {\n    CardanoCVoteRegistrationFormat[CardanoCVoteRegistrationFormat[\"CIP15\"] = 0] = \"CIP15\";\n    CardanoCVoteRegistrationFormat[CardanoCVoteRegistrationFormat[\"CIP36\"] = 1] = \"CIP36\";\n})(CardanoCVoteRegistrationFormat || (exports.CardanoCVoteRegistrationFormat = CardanoCVoteRegistrationFormat = {}));\nexports.EnumCardanoCVoteRegistrationFormat = schema_utils_1.Type.Enum(CardanoCVoteRegistrationFormat);\nvar CardanoTxSigningMode;\n(function (CardanoTxSigningMode) {\n    CardanoTxSigningMode[CardanoTxSigningMode[\"ORDINARY_TRANSACTION\"] = 0] = \"ORDINARY_TRANSACTION\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"POOL_REGISTRATION_AS_OWNER\"] = 1] = \"POOL_REGISTRATION_AS_OWNER\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"MULTISIG_TRANSACTION\"] = 2] = \"MULTISIG_TRANSACTION\";\n    CardanoTxSigningMode[CardanoTxSigningMode[\"PLUTUS_TRANSACTION\"] = 3] = \"PLUTUS_TRANSACTION\";\n})(CardanoTxSigningMode || (exports.CardanoTxSigningMode = CardanoTxSigningMode = {}));\nexports.EnumCardanoTxSigningMode = schema_utils_1.Type.Enum(CardanoTxSigningMode);\nvar CardanoTxWitnessType;\n(function (CardanoTxWitnessType) {\n    CardanoTxWitnessType[CardanoTxWitnessType[\"BYRON_WITNESS\"] = 0] = \"BYRON_WITNESS\";\n    CardanoTxWitnessType[CardanoTxWitnessType[\"SHELLEY_WITNESS\"] = 1] = \"SHELLEY_WITNESS\";\n})(CardanoTxWitnessType || (exports.CardanoTxWitnessType = CardanoTxWitnessType = {}));\nexports.EnumCardanoTxWitnessType = schema_utils_1.Type.Enum(CardanoTxWitnessType);\nexports.CardanoBlockchainPointerType = schema_utils_1.Type.Object({\n    block_index: schema_utils_1.Type.Number(),\n    tx_index: schema_utils_1.Type.Number(),\n    certificate_index: schema_utils_1.Type.Number(),\n}, { $id: 'CardanoBlockchainPointerType' });\nexports.CardanoNativeScript = schema_utils_1.Type.Recursive(This => schema_utils_1.Type.Object({\n    type: exports.EnumCardanoNativeScriptType,\n    scripts: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(This)),\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    required_signatures_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    invalid_before: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    invalid_hereafter: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n}), { $id: 'CardanoNativeScript' });\nexports.CardanoGetNativeScriptHash = schema_utils_1.Type.Object({\n    script: exports.CardanoNativeScript,\n    display_format: exports.EnumCardanoNativeScriptHashDisplayFormat,\n    derivation_type: exports.EnumCardanoDerivationType,\n}, { $id: 'CardanoGetNativeScriptHash' });\nexports.CardanoNativeScriptHash = schema_utils_1.Type.Object({\n    script_hash: schema_utils_1.Type.String(),\n}, { $id: 'CardanoNativeScriptHash' });\nexports.CardanoAddressParametersType = schema_utils_1.Type.Object({\n    address_type: exports.EnumCardanoAddressType,\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    address_n_staking: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    staking_key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    certificate_pointer: schema_utils_1.Type.Optional(exports.CardanoBlockchainPointerType),\n    script_payment_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_staking_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoAddressParametersType' });\nexports.CardanoGetAddress = schema_utils_1.Type.Object({\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    protocol_magic: schema_utils_1.Type.Number(),\n    network_id: schema_utils_1.Type.Number(),\n    address_parameters: exports.CardanoAddressParametersType,\n    derivation_type: exports.EnumCardanoDerivationType,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'CardanoGetAddress' });\nexports.CardanoAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n}, { $id: 'CardanoAddress' });\nexports.CardanoGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    derivation_type: exports.EnumCardanoDerivationType,\n}, { $id: 'CardanoGetPublicKey' });\nexports.CardanoPublicKey = schema_utils_1.Type.Object({\n    xpub: schema_utils_1.Type.String(),\n    node: exports.HDNodeType,\n}, { $id: 'CardanoPublicKey' });\nexports.CardanoSignTxInit = schema_utils_1.Type.Object({\n    signing_mode: exports.EnumCardanoTxSigningMode,\n    protocol_magic: schema_utils_1.Type.Number(),\n    network_id: schema_utils_1.Type.Number(),\n    inputs_count: schema_utils_1.Type.Number(),\n    outputs_count: schema_utils_1.Type.Number(),\n    fee: schema_utils_1.Type.Uint(),\n    ttl: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    certificates_count: schema_utils_1.Type.Number(),\n    withdrawals_count: schema_utils_1.Type.Number(),\n    has_auxiliary_data: schema_utils_1.Type.Boolean(),\n    validity_interval_start: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    witness_requests_count: schema_utils_1.Type.Number(),\n    minting_asset_groups_count: schema_utils_1.Type.Number(),\n    derivation_type: exports.EnumCardanoDerivationType,\n    include_network_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    script_data_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    collateral_inputs_count: schema_utils_1.Type.Number(),\n    required_signers_count: schema_utils_1.Type.Number(),\n    has_collateral_return: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    total_collateral: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    reference_inputs_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    tag_cbor_sets: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'CardanoSignTxInit' });\nexports.CardanoTxInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n}, { $id: 'CardanoTxInput' });\nexports.CardanoTxOutput = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    address_parameters: schema_utils_1.Type.Optional(exports.CardanoAddressParametersType),\n    amount: schema_utils_1.Type.Uint(),\n    asset_groups_count: schema_utils_1.Type.Number(),\n    datum_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    format: schema_utils_1.Type.Optional(exports.EnumCardanoTxOutputSerializationFormat),\n    inline_datum_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    reference_script_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'CardanoTxOutput' });\nexports.CardanoAssetGroup = schema_utils_1.Type.Object({\n    policy_id: schema_utils_1.Type.String(),\n    tokens_count: schema_utils_1.Type.Number(),\n}, { $id: 'CardanoAssetGroup' });\nexports.CardanoToken = schema_utils_1.Type.Object({\n    asset_name_bytes: schema_utils_1.Type.String(),\n    amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    mint_amount: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint({ allowNegative: true })),\n}, { $id: 'CardanoToken' });\nexports.CardanoTxInlineDatumChunk = schema_utils_1.Type.Object({\n    data: schema_utils_1.Type.String(),\n}, { $id: 'CardanoTxInlineDatumChunk' });\nexports.CardanoTxReferenceScriptChunk = schema_utils_1.Type.Object({\n    data: schema_utils_1.Type.String(),\n}, { $id: 'CardanoTxReferenceScriptChunk' });\nexports.CardanoPoolOwner = schema_utils_1.Type.Object({\n    staking_key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    staking_key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoPoolOwner' });\nexports.CardanoPoolRelayParameters = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoPoolRelayType,\n    ipv4_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ipv6_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    host_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    port: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'CardanoPoolRelayParameters' });\nexports.CardanoPoolMetadataType = schema_utils_1.Type.Object({\n    url: schema_utils_1.Type.String(),\n    hash: schema_utils_1.Type.String(),\n}, { $id: 'CardanoPoolMetadataType' });\nexports.CardanoPoolParametersType = schema_utils_1.Type.Object({\n    pool_id: schema_utils_1.Type.String(),\n    vrf_key_hash: schema_utils_1.Type.String(),\n    pledge: schema_utils_1.Type.Uint(),\n    cost: schema_utils_1.Type.Uint(),\n    margin_numerator: schema_utils_1.Type.Uint(),\n    margin_denominator: schema_utils_1.Type.Uint(),\n    reward_account: schema_utils_1.Type.String(),\n    metadata: schema_utils_1.Type.Optional(exports.CardanoPoolMetadataType),\n    owners_count: schema_utils_1.Type.Number(),\n    relays_count: schema_utils_1.Type.Number(),\n}, { $id: 'CardanoPoolParametersType' });\nexports.CardanoDRep = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoDRepType,\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    script_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoDRep' });\nexports.CardanoTxCertificate = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoCertificateType,\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    pool: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    pool_parameters: schema_utils_1.Type.Optional(exports.CardanoPoolParametersType),\n    script_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    deposit: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    drep: schema_utils_1.Type.Optional(exports.CardanoDRep),\n}, { $id: 'CardanoTxCertificate' });\nexports.CardanoTxWithdrawal = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    amount: schema_utils_1.Type.Uint(),\n    script_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoTxWithdrawal' });\nexports.CardanoCVoteRegistrationDelegation = schema_utils_1.Type.Object({\n    vote_public_key: schema_utils_1.Type.String(),\n    weight: schema_utils_1.Type.Uint(),\n}, { $id: 'CardanoCVoteRegistrationDelegation' });\nexports.CardanoCVoteRegistrationParametersType = schema_utils_1.Type.Object({\n    vote_public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    staking_path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    payment_address_parameters: schema_utils_1.Type.Optional(exports.CardanoAddressParametersType),\n    nonce: schema_utils_1.Type.Uint(),\n    format: schema_utils_1.Type.Optional(exports.EnumCardanoCVoteRegistrationFormat),\n    delegations: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.CardanoCVoteRegistrationDelegation)),\n    voting_purpose: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    payment_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoCVoteRegistrationParametersType' });\nexports.CardanoTxAuxiliaryData = schema_utils_1.Type.Object({\n    cvote_registration_parameters: schema_utils_1.Type.Optional(exports.CardanoCVoteRegistrationParametersType),\n    hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoTxAuxiliaryData' });\nexports.CardanoTxMint = schema_utils_1.Type.Object({\n    asset_groups_count: schema_utils_1.Type.Number(),\n}, { $id: 'CardanoTxMint' });\nexports.CardanoTxCollateralInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n}, { $id: 'CardanoTxCollateralInput' });\nexports.CardanoTxRequiredSigner = schema_utils_1.Type.Object({\n    key_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key_path: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n}, { $id: 'CardanoTxRequiredSigner' });\nexports.CardanoTxReferenceInput = schema_utils_1.Type.Object({\n    prev_hash: schema_utils_1.Type.String(),\n    prev_index: schema_utils_1.Type.Number(),\n}, { $id: 'CardanoTxReferenceInput' });\nexports.CardanoTxItemAck = schema_utils_1.Type.Object({}, { $id: 'CardanoTxItemAck' });\nexports.CardanoTxAuxiliaryDataSupplement = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoTxAuxiliaryDataSupplementType,\n    auxiliary_data_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    cvote_registration_signature: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoTxAuxiliaryDataSupplement' });\nexports.CardanoTxWitnessRequest = schema_utils_1.Type.Object({\n    path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n}, { $id: 'CardanoTxWitnessRequest' });\nexports.CardanoTxWitnessResponse = schema_utils_1.Type.Object({\n    type: exports.EnumCardanoTxWitnessType,\n    pub_key: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n    chain_code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CardanoTxWitnessResponse' });\nexports.CardanoTxHostAck = schema_utils_1.Type.Object({}, { $id: 'CardanoTxHostAck' });\nexports.CardanoTxBodyHash = schema_utils_1.Type.Object({\n    tx_hash: schema_utils_1.Type.String(),\n}, { $id: 'CardanoTxBodyHash' });\nexports.CardanoSignTxFinished = schema_utils_1.Type.Object({}, { $id: 'CardanoSignTxFinished' });\nexports.Success = schema_utils_1.Type.Object({\n    message: schema_utils_1.Type.String(),\n}, { $id: 'Success' });\nvar FailureType;\n(function (FailureType) {\n    FailureType[FailureType[\"Failure_UnexpectedMessage\"] = 1] = \"Failure_UnexpectedMessage\";\n    FailureType[FailureType[\"Failure_ButtonExpected\"] = 2] = \"Failure_ButtonExpected\";\n    FailureType[FailureType[\"Failure_DataError\"] = 3] = \"Failure_DataError\";\n    FailureType[FailureType[\"Failure_ActionCancelled\"] = 4] = \"Failure_ActionCancelled\";\n    FailureType[FailureType[\"Failure_PinExpected\"] = 5] = \"Failure_PinExpected\";\n    FailureType[FailureType[\"Failure_PinCancelled\"] = 6] = \"Failure_PinCancelled\";\n    FailureType[FailureType[\"Failure_PinInvalid\"] = 7] = \"Failure_PinInvalid\";\n    FailureType[FailureType[\"Failure_InvalidSignature\"] = 8] = \"Failure_InvalidSignature\";\n    FailureType[FailureType[\"Failure_ProcessError\"] = 9] = \"Failure_ProcessError\";\n    FailureType[FailureType[\"Failure_NotEnoughFunds\"] = 10] = \"Failure_NotEnoughFunds\";\n    FailureType[FailureType[\"Failure_NotInitialized\"] = 11] = \"Failure_NotInitialized\";\n    FailureType[FailureType[\"Failure_PinMismatch\"] = 12] = \"Failure_PinMismatch\";\n    FailureType[FailureType[\"Failure_WipeCodeMismatch\"] = 13] = \"Failure_WipeCodeMismatch\";\n    FailureType[FailureType[\"Failure_InvalidSession\"] = 14] = \"Failure_InvalidSession\";\n    FailureType[FailureType[\"Failure_FirmwareError\"] = 99] = \"Failure_FirmwareError\";\n})(FailureType || (exports.FailureType = FailureType = {}));\nexports.EnumFailureType = schema_utils_1.Type.Enum(FailureType);\nexports.Failure = schema_utils_1.Type.Object({\n    code: schema_utils_1.Type.Optional(exports.EnumFailureType),\n    message: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'Failure' });\nvar Enum_ButtonRequestType;\n(function (Enum_ButtonRequestType) {\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Other\"] = 1] = \"ButtonRequest_Other\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_FeeOverThreshold\"] = 2] = \"ButtonRequest_FeeOverThreshold\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ConfirmOutput\"] = 3] = \"ButtonRequest_ConfirmOutput\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ResetDevice\"] = 4] = \"ButtonRequest_ResetDevice\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ConfirmWord\"] = 5] = \"ButtonRequest_ConfirmWord\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_WipeDevice\"] = 6] = \"ButtonRequest_WipeDevice\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_ProtectCall\"] = 7] = \"ButtonRequest_ProtectCall\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_SignTx\"] = 8] = \"ButtonRequest_SignTx\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_FirmwareCheck\"] = 9] = \"ButtonRequest_FirmwareCheck\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Address\"] = 10] = \"ButtonRequest_Address\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PublicKey\"] = 11] = \"ButtonRequest_PublicKey\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_MnemonicWordCount\"] = 12] = \"ButtonRequest_MnemonicWordCount\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_MnemonicInput\"] = 13] = \"ButtonRequest_MnemonicInput\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"_Deprecated_ButtonRequest_PassphraseType\"] = 14] = \"_Deprecated_ButtonRequest_PassphraseType\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_UnknownDerivationPath\"] = 15] = \"ButtonRequest_UnknownDerivationPath\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_RecoveryHomepage\"] = 16] = \"ButtonRequest_RecoveryHomepage\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Success\"] = 17] = \"ButtonRequest_Success\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_Warning\"] = 18] = \"ButtonRequest_Warning\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PassphraseEntry\"] = 19] = \"ButtonRequest_PassphraseEntry\";\n    Enum_ButtonRequestType[Enum_ButtonRequestType[\"ButtonRequest_PinEntry\"] = 20] = \"ButtonRequest_PinEntry\";\n})(Enum_ButtonRequestType || (exports.Enum_ButtonRequestType = Enum_ButtonRequestType = {}));\nexports.EnumEnum_ButtonRequestType = schema_utils_1.Type.Enum(Enum_ButtonRequestType);\nexports.ButtonRequestType = schema_utils_1.Type.KeyOfEnum(Enum_ButtonRequestType, {\n    $id: 'ButtonRequestType',\n});\nexports.ButtonRequest = schema_utils_1.Type.Object({\n    code: schema_utils_1.Type.Optional(exports.ButtonRequestType),\n    pages: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'ButtonRequest' });\nexports.ButtonAck = schema_utils_1.Type.Object({}, { $id: 'ButtonAck' });\nvar Enum_PinMatrixRequestType;\n(function (Enum_PinMatrixRequestType) {\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_Current\"] = 1] = \"PinMatrixRequestType_Current\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_NewFirst\"] = 2] = \"PinMatrixRequestType_NewFirst\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_NewSecond\"] = 3] = \"PinMatrixRequestType_NewSecond\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_WipeCodeFirst\"] = 4] = \"PinMatrixRequestType_WipeCodeFirst\";\n    Enum_PinMatrixRequestType[Enum_PinMatrixRequestType[\"PinMatrixRequestType_WipeCodeSecond\"] = 5] = \"PinMatrixRequestType_WipeCodeSecond\";\n})(Enum_PinMatrixRequestType || (exports.Enum_PinMatrixRequestType = Enum_PinMatrixRequestType = {}));\nexports.EnumEnum_PinMatrixRequestType = schema_utils_1.Type.Enum(Enum_PinMatrixRequestType);\nexports.PinMatrixRequestType = schema_utils_1.Type.KeyOfEnum(Enum_PinMatrixRequestType, {\n    $id: 'PinMatrixRequestType',\n});\nexports.PinMatrixRequest = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Optional(exports.PinMatrixRequestType),\n}, { $id: 'PinMatrixRequest' });\nexports.PinMatrixAck = schema_utils_1.Type.Object({\n    pin: schema_utils_1.Type.String(),\n}, { $id: 'PinMatrixAck' });\nexports.PassphraseRequest = schema_utils_1.Type.Object({\n    _on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'PassphraseRequest' });\nexports.PassphraseAck = schema_utils_1.Type.Object({\n    passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    _state: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'PassphraseAck' });\nexports.Deprecated_PassphraseStateRequest = schema_utils_1.Type.Object({\n    state: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'Deprecated_PassphraseStateRequest' });\nexports.Deprecated_PassphraseStateAck = schema_utils_1.Type.Object({}, { $id: 'Deprecated_PassphraseStateAck' });\nexports.CipherKeyValue = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    key: schema_utils_1.Type.String(),\n    value: schema_utils_1.Type.String(),\n    encrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    ask_on_encrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    ask_on_decrypt: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    iv: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'CipherKeyValue' });\nexports.CipheredKeyValue = schema_utils_1.Type.Object({\n    value: schema_utils_1.Type.String(),\n}, { $id: 'CipheredKeyValue' });\nexports.IdentityType = schema_utils_1.Type.Object({\n    proto: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    user: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    host: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    port: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    path: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    index: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'IdentityType' });\nexports.SignIdentity = schema_utils_1.Type.Object({\n    identity: exports.IdentityType,\n    challenge_hidden: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    challenge_visual: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'SignIdentity' });\nexports.SignedIdentity = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    public_key: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'SignedIdentity' });\nexports.GetECDHSessionKey = schema_utils_1.Type.Object({\n    identity: exports.IdentityType,\n    peer_public_key: schema_utils_1.Type.String(),\n    ecdsa_curve_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'GetECDHSessionKey' });\nexports.ECDHSessionKey = schema_utils_1.Type.Object({\n    session_key: schema_utils_1.Type.String(),\n    public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'ECDHSessionKey' });\nvar DebugButton;\n(function (DebugButton) {\n    DebugButton[DebugButton[\"NO\"] = 0] = \"NO\";\n    DebugButton[DebugButton[\"YES\"] = 1] = \"YES\";\n    DebugButton[DebugButton[\"INFO\"] = 2] = \"INFO\";\n})(DebugButton || (exports.DebugButton = DebugButton = {}));\nexports.EnumDebugButton = schema_utils_1.Type.Enum(DebugButton);\nvar DebugPhysicalButton;\n(function (DebugPhysicalButton) {\n    DebugPhysicalButton[DebugPhysicalButton[\"LEFT_BTN\"] = 0] = \"LEFT_BTN\";\n    DebugPhysicalButton[DebugPhysicalButton[\"MIDDLE_BTN\"] = 1] = \"MIDDLE_BTN\";\n    DebugPhysicalButton[DebugPhysicalButton[\"RIGHT_BTN\"] = 2] = \"RIGHT_BTN\";\n})(DebugPhysicalButton || (exports.DebugPhysicalButton = DebugPhysicalButton = {}));\nexports.EnumDebugPhysicalButton = schema_utils_1.Type.Enum(DebugPhysicalButton);\nvar DebugWaitType;\n(function (DebugWaitType) {\n    DebugWaitType[DebugWaitType[\"IMMEDIATE\"] = 0] = \"IMMEDIATE\";\n    DebugWaitType[DebugWaitType[\"NEXT_LAYOUT\"] = 1] = \"NEXT_LAYOUT\";\n    DebugWaitType[DebugWaitType[\"CURRENT_LAYOUT\"] = 2] = \"CURRENT_LAYOUT\";\n})(DebugWaitType || (exports.DebugWaitType = DebugWaitType = {}));\nexports.EnumDebugWaitType = schema_utils_1.Type.Enum(DebugWaitType);\nexports.DebugLinkResetDebugEvents = schema_utils_1.Type.Object({}, { $id: 'DebugLinkResetDebugEvents' });\nexports.DebugLinkOptigaSetSecMax = schema_utils_1.Type.Object({}, { $id: 'DebugLinkOptigaSetSecMax' });\nexports.EosGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EosGetPublicKey' });\nexports.EosPublicKey = schema_utils_1.Type.Object({\n    wif_public_key: schema_utils_1.Type.String(),\n    raw_public_key: schema_utils_1.Type.String(),\n}, { $id: 'EosPublicKey' });\nexports.EosTxHeader = schema_utils_1.Type.Object({\n    expiration: schema_utils_1.Type.Number(),\n    ref_block_num: schema_utils_1.Type.Number(),\n    ref_block_prefix: schema_utils_1.Type.Number(),\n    max_net_usage_words: schema_utils_1.Type.Number(),\n    max_cpu_usage_ms: schema_utils_1.Type.Number(),\n    delay_sec: schema_utils_1.Type.Number(),\n}, { $id: 'EosTxHeader' });\nexports.EosSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    chain_id: schema_utils_1.Type.String(),\n    header: exports.EosTxHeader,\n    num_actions: schema_utils_1.Type.Number(),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EosSignTx' });\nexports.EosTxActionRequest = schema_utils_1.Type.Object({\n    data_size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'EosTxActionRequest' });\nexports.EosAsset = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    symbol: schema_utils_1.Type.String(),\n}, { $id: 'EosAsset' });\nexports.EosPermissionLevel = schema_utils_1.Type.Object({\n    actor: schema_utils_1.Type.String(),\n    permission: schema_utils_1.Type.String(),\n}, { $id: 'EosPermissionLevel' });\nexports.EosAuthorizationKey = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    key: schema_utils_1.Type.String(),\n    address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    weight: schema_utils_1.Type.Number(),\n}, { $id: 'EosAuthorizationKey' });\nexports.EosAuthorizationAccount = schema_utils_1.Type.Object({\n    account: exports.EosPermissionLevel,\n    weight: schema_utils_1.Type.Number(),\n}, { $id: 'EosAuthorizationAccount' });\nexports.EosAuthorizationWait = schema_utils_1.Type.Object({\n    wait_sec: schema_utils_1.Type.Number(),\n    weight: schema_utils_1.Type.Number(),\n}, { $id: 'EosAuthorizationWait' });\nexports.EosAuthorization = schema_utils_1.Type.Object({\n    threshold: schema_utils_1.Type.Number(),\n    keys: schema_utils_1.Type.Array(exports.EosAuthorizationKey),\n    accounts: schema_utils_1.Type.Array(exports.EosAuthorizationAccount),\n    waits: schema_utils_1.Type.Array(exports.EosAuthorizationWait),\n}, { $id: 'EosAuthorization' });\nexports.EosActionCommon = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    name: schema_utils_1.Type.String(),\n    authorization: schema_utils_1.Type.Array(exports.EosPermissionLevel),\n}, { $id: 'EosActionCommon' });\nexports.EosActionTransfer = schema_utils_1.Type.Object({\n    sender: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    quantity: exports.EosAsset,\n    memo: schema_utils_1.Type.String(),\n}, { $id: 'EosActionTransfer' });\nexports.EosActionDelegate = schema_utils_1.Type.Object({\n    sender: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    net_quantity: exports.EosAsset,\n    cpu_quantity: exports.EosAsset,\n    transfer: schema_utils_1.Type.Boolean(),\n}, { $id: 'EosActionDelegate' });\nexports.EosActionUndelegate = schema_utils_1.Type.Object({\n    sender: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    net_quantity: exports.EosAsset,\n    cpu_quantity: exports.EosAsset,\n}, { $id: 'EosActionUndelegate' });\nexports.EosActionRefund = schema_utils_1.Type.Object({\n    owner: schema_utils_1.Type.String(),\n}, { $id: 'EosActionRefund' });\nexports.EosActionBuyRam = schema_utils_1.Type.Object({\n    payer: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    quantity: exports.EosAsset,\n}, { $id: 'EosActionBuyRam' });\nexports.EosActionBuyRamBytes = schema_utils_1.Type.Object({\n    payer: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    bytes: schema_utils_1.Type.Number(),\n}, { $id: 'EosActionBuyRamBytes' });\nexports.EosActionSellRam = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    bytes: schema_utils_1.Type.Number(),\n}, { $id: 'EosActionSellRam' });\nexports.EosActionVoteProducer = schema_utils_1.Type.Object({\n    voter: schema_utils_1.Type.String(),\n    proxy: schema_utils_1.Type.String(),\n    producers: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n}, { $id: 'EosActionVoteProducer' });\nexports.EosActionUpdateAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    permission: schema_utils_1.Type.String(),\n    parent: schema_utils_1.Type.String(),\n    auth: exports.EosAuthorization,\n}, { $id: 'EosActionUpdateAuth' });\nexports.EosActionDeleteAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    permission: schema_utils_1.Type.String(),\n}, { $id: 'EosActionDeleteAuth' });\nexports.EosActionLinkAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    code: schema_utils_1.Type.String(),\n    type: schema_utils_1.Type.String(),\n    requirement: schema_utils_1.Type.String(),\n}, { $id: 'EosActionLinkAuth' });\nexports.EosActionUnlinkAuth = schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    code: schema_utils_1.Type.String(),\n    type: schema_utils_1.Type.String(),\n}, { $id: 'EosActionUnlinkAuth' });\nexports.EosActionNewAccount = schema_utils_1.Type.Object({\n    creator: schema_utils_1.Type.String(),\n    name: schema_utils_1.Type.String(),\n    owner: exports.EosAuthorization,\n    active: exports.EosAuthorization,\n}, { $id: 'EosActionNewAccount' });\nexports.EosActionUnknown = schema_utils_1.Type.Object({\n    data_size: schema_utils_1.Type.Number(),\n    data_chunk: schema_utils_1.Type.String(),\n}, { $id: 'EosActionUnknown' });\nexports.EosTxActionAck = schema_utils_1.Type.Object({\n    common: exports.EosActionCommon,\n    transfer: schema_utils_1.Type.Optional(exports.EosActionTransfer),\n    delegate: schema_utils_1.Type.Optional(exports.EosActionDelegate),\n    undelegate: schema_utils_1.Type.Optional(exports.EosActionUndelegate),\n    refund: schema_utils_1.Type.Optional(exports.EosActionRefund),\n    buy_ram: schema_utils_1.Type.Optional(exports.EosActionBuyRam),\n    buy_ram_bytes: schema_utils_1.Type.Optional(exports.EosActionBuyRamBytes),\n    sell_ram: schema_utils_1.Type.Optional(exports.EosActionSellRam),\n    vote_producer: schema_utils_1.Type.Optional(exports.EosActionVoteProducer),\n    update_auth: schema_utils_1.Type.Optional(exports.EosActionUpdateAuth),\n    delete_auth: schema_utils_1.Type.Optional(exports.EosActionDeleteAuth),\n    link_auth: schema_utils_1.Type.Optional(exports.EosActionLinkAuth),\n    unlink_auth: schema_utils_1.Type.Optional(exports.EosActionUnlinkAuth),\n    new_account: schema_utils_1.Type.Optional(exports.EosActionNewAccount),\n    unknown: schema_utils_1.Type.Optional(exports.EosActionUnknown),\n}, { $id: 'EosTxActionAck' });\nexports.EosSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'EosSignedTx' });\nvar EthereumDefinitionType;\n(function (EthereumDefinitionType) {\n    EthereumDefinitionType[EthereumDefinitionType[\"NETWORK\"] = 0] = \"NETWORK\";\n    EthereumDefinitionType[EthereumDefinitionType[\"TOKEN\"] = 1] = \"TOKEN\";\n})(EthereumDefinitionType || (exports.EthereumDefinitionType = EthereumDefinitionType = {}));\nexports.EnumEthereumDefinitionType = schema_utils_1.Type.Enum(EthereumDefinitionType);\nexports.EthereumNetworkInfo = schema_utils_1.Type.Object({\n    chain_id: schema_utils_1.Type.Number(),\n    symbol: schema_utils_1.Type.String(),\n    slip44: schema_utils_1.Type.Number(),\n    name: schema_utils_1.Type.String(),\n}, { $id: 'EthereumNetworkInfo' });\nexports.EthereumTokenInfo = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    chain_id: schema_utils_1.Type.Number(),\n    symbol: schema_utils_1.Type.String(),\n    decimals: schema_utils_1.Type.Number(),\n    name: schema_utils_1.Type.String(),\n}, { $id: 'EthereumTokenInfo' });\nexports.EthereumDefinitions = schema_utils_1.Type.Object({\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n    encoded_token: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n}, { $id: 'EthereumDefinitions' });\nexports.EthereumSignTypedData = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    primary_type: schema_utils_1.Type.String(),\n    metamask_v4_compat: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions),\n}, { $id: 'EthereumSignTypedData' });\nexports.EthereumTypedDataStructRequest = schema_utils_1.Type.Object({\n    name: schema_utils_1.Type.String(),\n}, { $id: 'EthereumTypedDataStructRequest' });\nvar EthereumDataType;\n(function (EthereumDataType) {\n    EthereumDataType[EthereumDataType[\"UINT\"] = 1] = \"UINT\";\n    EthereumDataType[EthereumDataType[\"INT\"] = 2] = \"INT\";\n    EthereumDataType[EthereumDataType[\"BYTES\"] = 3] = \"BYTES\";\n    EthereumDataType[EthereumDataType[\"STRING\"] = 4] = \"STRING\";\n    EthereumDataType[EthereumDataType[\"BOOL\"] = 5] = \"BOOL\";\n    EthereumDataType[EthereumDataType[\"ADDRESS\"] = 6] = \"ADDRESS\";\n    EthereumDataType[EthereumDataType[\"ARRAY\"] = 7] = \"ARRAY\";\n    EthereumDataType[EthereumDataType[\"STRUCT\"] = 8] = \"STRUCT\";\n})(EthereumDataType || (exports.EthereumDataType = EthereumDataType = {}));\nexports.EnumEthereumDataType = schema_utils_1.Type.Enum(EthereumDataType);\nexports.EthereumFieldType = schema_utils_1.Type.Recursive(This => schema_utils_1.Type.Object({\n    data_type: exports.EnumEthereumDataType,\n    size: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    entry_type: schema_utils_1.Type.Optional(This),\n    struct_name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}), { $id: 'EthereumFieldType' });\nexports.EthereumStructMember = schema_utils_1.Type.Object({\n    type: exports.EthereumFieldType,\n    name: schema_utils_1.Type.String(),\n}, { $id: 'EthereumStructMember' });\nexports.EthereumTypedDataStructAck = schema_utils_1.Type.Object({\n    members: schema_utils_1.Type.Array(exports.EthereumStructMember),\n}, { $id: 'EthereumTypedDataStructAck' });\nexports.EthereumTypedDataValueRequest = schema_utils_1.Type.Object({\n    member_path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n}, { $id: 'EthereumTypedDataValueRequest' });\nexports.EthereumTypedDataValueAck = schema_utils_1.Type.Object({\n    value: schema_utils_1.Type.String(),\n}, { $id: 'EthereumTypedDataValueAck' });\nexports.EthereumGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EthereumGetPublicKey' });\nexports.EthereumPublicKey = schema_utils_1.Type.Object({\n    node: exports.HDNodeType,\n    xpub: schema_utils_1.Type.String(),\n}, { $id: 'EthereumPublicKey' });\nexports.EthereumGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EthereumGetAddress' });\nexports.EthereumAddress = schema_utils_1.Type.Object({\n    _old_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    address: schema_utils_1.Type.String(),\n}, { $id: 'EthereumAddress' });\nexports.EthereumSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    nonce: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    gas_price: schema_utils_1.Type.String(),\n    gas_limit: schema_utils_1.Type.String(),\n    to: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    value: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    data_initial_chunk: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    data_length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    chain_id: schema_utils_1.Type.Number(),\n    tx_type: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EthereumSignTx' });\nexports.EthereumAccessList = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n    storage_keys: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n}, { $id: 'EthereumAccessList' });\nexports.EthereumSignTxEIP1559 = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    nonce: schema_utils_1.Type.String(),\n    max_gas_fee: schema_utils_1.Type.String(),\n    max_priority_fee: schema_utils_1.Type.String(),\n    gas_limit: schema_utils_1.Type.String(),\n    to: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    value: schema_utils_1.Type.String(),\n    data_initial_chunk: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    data_length: schema_utils_1.Type.Number(),\n    chain_id: schema_utils_1.Type.Number(),\n    access_list: schema_utils_1.Type.Array(exports.EthereumAccessList),\n    definitions: schema_utils_1.Type.Optional(exports.EthereumDefinitions),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EthereumSignTxEIP1559' });\nexports.EthereumTxRequest = schema_utils_1.Type.Object({\n    data_length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    signature_v: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    signature_r: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    signature_s: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'EthereumTxRequest' });\nexports.EthereumTxAck = schema_utils_1.Type.Object({\n    data_chunk: schema_utils_1.Type.String(),\n}, { $id: 'EthereumTxAck' });\nexports.EthereumSignMessage = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    message: schema_utils_1.Type.String(),\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EthereumSignMessage' });\nexports.EthereumMessageSignature = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    address: schema_utils_1.Type.String(),\n}, { $id: 'EthereumMessageSignature' });\nexports.EthereumVerifyMessage = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    message: schema_utils_1.Type.String(),\n    address: schema_utils_1.Type.String(),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EthereumVerifyMessage' });\nexports.EthereumSignTypedHash = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    domain_separator_hash: schema_utils_1.Type.String(),\n    message_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    encoded_network: schema_utils_1.Type.Optional(schema_utils_1.Type.ArrayBuffer()),\n}, { $id: 'EthereumSignTypedHash' });\nexports.EthereumTypedDataSignature = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    address: schema_utils_1.Type.String(),\n}, { $id: 'EthereumTypedDataSignature' });\nvar Enum_BackupType;\n(function (Enum_BackupType) {\n    Enum_BackupType[Enum_BackupType[\"Bip39\"] = 0] = \"Bip39\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Basic\"] = 1] = \"Slip39_Basic\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Advanced\"] = 2] = \"Slip39_Advanced\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Single_Extendable\"] = 3] = \"Slip39_Single_Extendable\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Basic_Extendable\"] = 4] = \"Slip39_Basic_Extendable\";\n    Enum_BackupType[Enum_BackupType[\"Slip39_Advanced_Extendable\"] = 5] = \"Slip39_Advanced_Extendable\";\n})(Enum_BackupType || (exports.Enum_BackupType = Enum_BackupType = {}));\nexports.EnumEnum_BackupType = schema_utils_1.Type.Enum(Enum_BackupType);\nexports.BackupType = schema_utils_1.Type.KeyOfEnum(Enum_BackupType, { $id: 'BackupType' });\nvar Enum_SafetyCheckLevel;\n(function (Enum_SafetyCheckLevel) {\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"Strict\"] = 0] = \"Strict\";\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"PromptAlways\"] = 1] = \"PromptAlways\";\n    Enum_SafetyCheckLevel[Enum_SafetyCheckLevel[\"PromptTemporarily\"] = 2] = \"PromptTemporarily\";\n})(Enum_SafetyCheckLevel || (exports.Enum_SafetyCheckLevel = Enum_SafetyCheckLevel = {}));\nexports.EnumEnum_SafetyCheckLevel = schema_utils_1.Type.Enum(Enum_SafetyCheckLevel);\nexports.SafetyCheckLevel = schema_utils_1.Type.KeyOfEnum(Enum_SafetyCheckLevel, { $id: 'SafetyCheckLevel' });\nvar Enum_DisplayRotation;\n(function (Enum_DisplayRotation) {\n    Enum_DisplayRotation[Enum_DisplayRotation[\"North\"] = 0] = \"North\";\n    Enum_DisplayRotation[Enum_DisplayRotation[\"East\"] = 90] = \"East\";\n    Enum_DisplayRotation[Enum_DisplayRotation[\"South\"] = 180] = \"South\";\n    Enum_DisplayRotation[Enum_DisplayRotation[\"West\"] = 270] = \"West\";\n})(Enum_DisplayRotation || (exports.Enum_DisplayRotation = Enum_DisplayRotation = {}));\nexports.EnumEnum_DisplayRotation = schema_utils_1.Type.Enum(Enum_DisplayRotation);\nexports.DisplayRotation = schema_utils_1.Type.KeyOfEnum(Enum_DisplayRotation, { $id: 'DisplayRotation' });\nvar Enum_HomescreenFormat;\n(function (Enum_HomescreenFormat) {\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"Toif\"] = 1] = \"Toif\";\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"Jpeg\"] = 2] = \"Jpeg\";\n    Enum_HomescreenFormat[Enum_HomescreenFormat[\"ToiG\"] = 3] = \"ToiG\";\n})(Enum_HomescreenFormat || (exports.Enum_HomescreenFormat = Enum_HomescreenFormat = {}));\nexports.EnumEnum_HomescreenFormat = schema_utils_1.Type.Enum(Enum_HomescreenFormat);\nexports.HomescreenFormat = schema_utils_1.Type.KeyOfEnum(Enum_HomescreenFormat, { $id: 'HomescreenFormat' });\nexports.Initialize = schema_utils_1.Type.Object({\n    session_id: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    _skip_passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    derive_cardano: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'Initialize' });\nexports.GetFeatures = schema_utils_1.Type.Object({}, { $id: 'GetFeatures' });\nvar Enum_BackupAvailability;\n(function (Enum_BackupAvailability) {\n    Enum_BackupAvailability[Enum_BackupAvailability[\"NotAvailable\"] = 0] = \"NotAvailable\";\n    Enum_BackupAvailability[Enum_BackupAvailability[\"Required\"] = 1] = \"Required\";\n    Enum_BackupAvailability[Enum_BackupAvailability[\"Available\"] = 2] = \"Available\";\n})(Enum_BackupAvailability || (exports.Enum_BackupAvailability = Enum_BackupAvailability = {}));\nexports.EnumEnum_BackupAvailability = schema_utils_1.Type.Enum(Enum_BackupAvailability);\nexports.BackupAvailability = schema_utils_1.Type.KeyOfEnum(Enum_BackupAvailability, {\n    $id: 'BackupAvailability',\n});\nvar Enum_RecoveryStatus;\n(function (Enum_RecoveryStatus) {\n    Enum_RecoveryStatus[Enum_RecoveryStatus[\"Nothing\"] = 0] = \"Nothing\";\n    Enum_RecoveryStatus[Enum_RecoveryStatus[\"Recovery\"] = 1] = \"Recovery\";\n    Enum_RecoveryStatus[Enum_RecoveryStatus[\"Backup\"] = 2] = \"Backup\";\n})(Enum_RecoveryStatus || (exports.Enum_RecoveryStatus = Enum_RecoveryStatus = {}));\nexports.EnumEnum_RecoveryStatus = schema_utils_1.Type.Enum(Enum_RecoveryStatus);\nexports.RecoveryStatus = schema_utils_1.Type.KeyOfEnum(Enum_RecoveryStatus, { $id: 'RecoveryStatus' });\nvar Enum_Capability;\n(function (Enum_Capability) {\n    Enum_Capability[Enum_Capability[\"Capability_Bitcoin\"] = 1] = \"Capability_Bitcoin\";\n    Enum_Capability[Enum_Capability[\"Capability_Bitcoin_like\"] = 2] = \"Capability_Bitcoin_like\";\n    Enum_Capability[Enum_Capability[\"Capability_Binance\"] = 3] = \"Capability_Binance\";\n    Enum_Capability[Enum_Capability[\"Capability_Cardano\"] = 4] = \"Capability_Cardano\";\n    Enum_Capability[Enum_Capability[\"Capability_Crypto\"] = 5] = \"Capability_Crypto\";\n    Enum_Capability[Enum_Capability[\"Capability_EOS\"] = 6] = \"Capability_EOS\";\n    Enum_Capability[Enum_Capability[\"Capability_Ethereum\"] = 7] = \"Capability_Ethereum\";\n    Enum_Capability[Enum_Capability[\"Capability_Lisk\"] = 8] = \"Capability_Lisk\";\n    Enum_Capability[Enum_Capability[\"Capability_Monero\"] = 9] = \"Capability_Monero\";\n    Enum_Capability[Enum_Capability[\"Capability_NEM\"] = 10] = \"Capability_NEM\";\n    Enum_Capability[Enum_Capability[\"Capability_Ripple\"] = 11] = \"Capability_Ripple\";\n    Enum_Capability[Enum_Capability[\"Capability_Stellar\"] = 12] = \"Capability_Stellar\";\n    Enum_Capability[Enum_Capability[\"Capability_Tezos\"] = 13] = \"Capability_Tezos\";\n    Enum_Capability[Enum_Capability[\"Capability_U2F\"] = 14] = \"Capability_U2F\";\n    Enum_Capability[Enum_Capability[\"Capability_Shamir\"] = 15] = \"Capability_Shamir\";\n    Enum_Capability[Enum_Capability[\"Capability_ShamirGroups\"] = 16] = \"Capability_ShamirGroups\";\n    Enum_Capability[Enum_Capability[\"Capability_PassphraseEntry\"] = 17] = \"Capability_PassphraseEntry\";\n    Enum_Capability[Enum_Capability[\"Capability_Solana\"] = 18] = \"Capability_Solana\";\n    Enum_Capability[Enum_Capability[\"Capability_Translations\"] = 19] = \"Capability_Translations\";\n    Enum_Capability[Enum_Capability[\"Capability_Brightness\"] = 20] = \"Capability_Brightness\";\n    Enum_Capability[Enum_Capability[\"Capability_Haptic\"] = 21] = \"Capability_Haptic\";\n})(Enum_Capability || (exports.Enum_Capability = Enum_Capability = {}));\nexports.EnumEnum_Capability = schema_utils_1.Type.Enum(Enum_Capability);\nexports.Capability = schema_utils_1.Type.KeyOfEnum(Enum_Capability, { $id: 'Capability' });\nvar RecoveryDeviceInputMethod;\n(function (RecoveryDeviceInputMethod) {\n    RecoveryDeviceInputMethod[RecoveryDeviceInputMethod[\"ScrambledWords\"] = 0] = \"ScrambledWords\";\n    RecoveryDeviceInputMethod[RecoveryDeviceInputMethod[\"Matrix\"] = 1] = \"Matrix\";\n})(RecoveryDeviceInputMethod || (exports.RecoveryDeviceInputMethod = RecoveryDeviceInputMethod = {}));\nexports.EnumRecoveryDeviceInputMethod = schema_utils_1.Type.Enum(RecoveryDeviceInputMethod);\nvar Enum_RecoveryType;\n(function (Enum_RecoveryType) {\n    Enum_RecoveryType[Enum_RecoveryType[\"NormalRecovery\"] = 0] = \"NormalRecovery\";\n    Enum_RecoveryType[Enum_RecoveryType[\"DryRun\"] = 1] = \"DryRun\";\n    Enum_RecoveryType[Enum_RecoveryType[\"UnlockRepeatedBackup\"] = 2] = \"UnlockRepeatedBackup\";\n})(Enum_RecoveryType || (exports.Enum_RecoveryType = Enum_RecoveryType = {}));\nexports.EnumEnum_RecoveryType = schema_utils_1.Type.Enum(Enum_RecoveryType);\nexports.RecoveryType = schema_utils_1.Type.KeyOfEnum(Enum_RecoveryType, { $id: 'RecoveryType' });\nexports.RecoveryDevice = schema_utils_1.Type.Object({\n    word_count: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    passphrase_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    pin_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    enforce_wordlist: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    input_method: schema_utils_1.Type.Optional(exports.EnumRecoveryDeviceInputMethod),\n    u2f_counter: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    type: schema_utils_1.Type.Optional(exports.RecoveryType),\n}, { $id: 'RecoveryDevice' });\nexports.Features = schema_utils_1.Type.Object({\n    vendor: schema_utils_1.Type.String(),\n    major_version: schema_utils_1.Type.Number(),\n    minor_version: schema_utils_1.Type.Number(),\n    patch_version: schema_utils_1.Type.Number(),\n    bootloader_mode: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    device_id: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    pin_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    passphrase_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    language: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    label: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    initialized: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    revision: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    bootloader_hash: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    imported: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    unlocked: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    _passphrase_cached: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    firmware_present: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    backup_availability: schema_utils_1.Type.Union([exports.BackupAvailability, schema_utils_1.Type.Null()]),\n    flags: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    model: schema_utils_1.Type.String(),\n    fw_major: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    fw_minor: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    fw_patch: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    fw_vendor: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    unfinished_backup: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    no_backup: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    recovery_status: schema_utils_1.Type.Union([exports.RecoveryStatus, schema_utils_1.Type.Null()]),\n    capabilities: schema_utils_1.Type.Array(exports.Capability),\n    backup_type: schema_utils_1.Type.Union([exports.BackupType, schema_utils_1.Type.Null()]),\n    sd_card_present: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    sd_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    wipe_code_protection: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    session_id: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Null()]),\n    passphrase_always_on_device: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    safety_checks: schema_utils_1.Type.Union([exports.SafetyCheckLevel, schema_utils_1.Type.Null()]),\n    auto_lock_delay_ms: schema_utils_1.Type.Union([schema_utils_1.Type.Number(), schema_utils_1.Type.Null()]),\n    display_rotation: schema_utils_1.Type.Union([exports.DisplayRotation, schema_utils_1.Type.Null()]),\n    experimental_features: schema_utils_1.Type.Union([schema_utils_1.Type.Boolean(), schema_utils_1.Type.Null()]),\n    busy: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    homescreen_format: schema_utils_1.Type.Optional(exports.HomescreenFormat),\n    hide_passphrase_from_host: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    internal_model: exports.EnumDeviceModelInternal,\n    unit_color: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    unit_btconly: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    homescreen_width: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    homescreen_height: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    bootloader_locked: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    language_version_matches: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    unit_packaging: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    haptic_feedback: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    recovery_type: schema_utils_1.Type.Optional(exports.RecoveryType),\n    optiga_sec: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'Features' });\nexports.LockDevice = schema_utils_1.Type.Object({}, { $id: 'LockDevice' });\nexports.SetBusy = schema_utils_1.Type.Object({\n    expiry_ms: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'SetBusy' });\nexports.EndSession = schema_utils_1.Type.Object({}, { $id: 'EndSession' });\nexports.ApplySettings = schema_utils_1.Type.Object({\n    language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    use_passphrase: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    homescreen: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    _passphrase_source: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    auto_lock_delay_ms: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    display_rotation: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([exports.DisplayRotation, exports.EnumEnum_DisplayRotation])),\n    passphrase_always_on_device: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    safety_checks: schema_utils_1.Type.Optional(exports.SafetyCheckLevel),\n    experimental_features: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    hide_passphrase_from_host: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    haptic_feedback: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'ApplySettings' });\nexports.ChangeLanguage = schema_utils_1.Type.Object({\n    data_length: schema_utils_1.Type.Number(),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'ChangeLanguage' });\nexports.TranslationDataRequest = schema_utils_1.Type.Object({\n    data_length: schema_utils_1.Type.Number(),\n    data_offset: schema_utils_1.Type.Number(),\n}, { $id: 'TranslationDataRequest' });\nexports.TranslationDataAck = schema_utils_1.Type.Object({\n    data_chunk: schema_utils_1.Type.String(),\n}, { $id: 'TranslationDataAck' });\nexports.ApplyFlags = schema_utils_1.Type.Object({\n    flags: schema_utils_1.Type.Number(),\n}, { $id: 'ApplyFlags' });\nexports.ChangePin = schema_utils_1.Type.Object({\n    remove: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'ChangePin' });\nexports.ChangeWipeCode = schema_utils_1.Type.Object({\n    remove: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'ChangeWipeCode' });\nvar SdProtectOperationType;\n(function (SdProtectOperationType) {\n    SdProtectOperationType[SdProtectOperationType[\"DISABLE\"] = 0] = \"DISABLE\";\n    SdProtectOperationType[SdProtectOperationType[\"ENABLE\"] = 1] = \"ENABLE\";\n    SdProtectOperationType[SdProtectOperationType[\"REFRESH\"] = 2] = \"REFRESH\";\n})(SdProtectOperationType || (exports.SdProtectOperationType = SdProtectOperationType = {}));\nexports.EnumSdProtectOperationType = schema_utils_1.Type.Enum(SdProtectOperationType);\nexports.SdProtect = schema_utils_1.Type.Object({\n    operation: exports.EnumSdProtectOperationType,\n}, { $id: 'SdProtect' });\nexports.Ping = schema_utils_1.Type.Object({\n    message: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    button_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'Ping' });\nexports.Cancel = schema_utils_1.Type.Object({}, { $id: 'Cancel' });\nexports.GetEntropy = schema_utils_1.Type.Object({\n    size: schema_utils_1.Type.Number(),\n}, { $id: 'GetEntropy' });\nexports.Entropy = schema_utils_1.Type.Object({\n    entropy: schema_utils_1.Type.String(),\n}, { $id: 'Entropy' });\nexports.GetFirmwareHash = schema_utils_1.Type.Object({\n    challenge: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'GetFirmwareHash' });\nexports.FirmwareHash = schema_utils_1.Type.Object({\n    hash: schema_utils_1.Type.String(),\n}, { $id: 'FirmwareHash' });\nexports.AuthenticateDevice = schema_utils_1.Type.Object({\n    challenge: schema_utils_1.Type.String(),\n}, { $id: 'AuthenticateDevice' });\nexports.AuthenticityProof = schema_utils_1.Type.Object({\n    certificates: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'AuthenticityProof' });\nexports.WipeDevice = schema_utils_1.Type.Object({}, { $id: 'WipeDevice' });\nexports.LoadDevice = schema_utils_1.Type.Object({\n    mnemonics: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n    pin: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    passphrase_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    skip_checksum: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    u2f_counter: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    needs_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    no_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'LoadDevice' });\nexports.ResetDevice = schema_utils_1.Type.Object({\n    strength: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    passphrase_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    pin_protection: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    language: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    label: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    u2f_counter: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    skip_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    no_backup: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    backup_type: schema_utils_1.Type.Optional(exports.EnumEnum_BackupType),\n    entropy_check: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'ResetDevice' });\nexports.Slip39Group = schema_utils_1.Type.Object({\n    member_threshold: schema_utils_1.Type.Number(),\n    member_count: schema_utils_1.Type.Number(),\n}, { $id: 'Slip39Group' });\nexports.BackupDevice = schema_utils_1.Type.Object({\n    group_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    groups: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.Slip39Group)),\n}, { $id: 'BackupDevice' });\nexports.EntropyRequest = schema_utils_1.Type.Object({\n    entropy_commitment: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    prev_entropy: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'EntropyRequest' });\nexports.EntropyAck = schema_utils_1.Type.Object({\n    entropy: schema_utils_1.Type.String(),\n}, { $id: 'EntropyAck' });\nexports.EntropyCheckReady = schema_utils_1.Type.Object({}, { $id: 'EntropyCheckReady' });\nexports.EntropyCheckContinue = schema_utils_1.Type.Object({\n    finish: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'EntropyCheckContinue' });\nvar Enum_WordRequestType;\n(function (Enum_WordRequestType) {\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Plain\"] = 0] = \"WordRequestType_Plain\";\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Matrix9\"] = 1] = \"WordRequestType_Matrix9\";\n    Enum_WordRequestType[Enum_WordRequestType[\"WordRequestType_Matrix6\"] = 2] = \"WordRequestType_Matrix6\";\n})(Enum_WordRequestType || (exports.Enum_WordRequestType = Enum_WordRequestType = {}));\nexports.EnumEnum_WordRequestType = schema_utils_1.Type.Enum(Enum_WordRequestType);\nexports.WordRequestType = schema_utils_1.Type.KeyOfEnum(Enum_WordRequestType, { $id: 'WordRequestType' });\nexports.WordRequest = schema_utils_1.Type.Object({\n    type: exports.WordRequestType,\n}, { $id: 'WordRequest' });\nexports.WordAck = schema_utils_1.Type.Object({\n    word: schema_utils_1.Type.String(),\n}, { $id: 'WordAck' });\nexports.SetU2FCounter = schema_utils_1.Type.Object({\n    u2f_counter: schema_utils_1.Type.Number(),\n}, { $id: 'SetU2FCounter' });\nexports.GetNextU2FCounter = schema_utils_1.Type.Object({}, { $id: 'GetNextU2FCounter' });\nexports.NextU2FCounter = schema_utils_1.Type.Object({\n    u2f_counter: schema_utils_1.Type.Number(),\n}, { $id: 'NextU2FCounter' });\nexports.DoPreauthorized = schema_utils_1.Type.Object({}, { $id: 'DoPreauthorized' });\nexports.PreauthorizedRequest = schema_utils_1.Type.Object({}, { $id: 'PreauthorizedRequest' });\nexports.CancelAuthorization = schema_utils_1.Type.Object({}, { $id: 'CancelAuthorization' });\nvar BootCommand;\n(function (BootCommand) {\n    BootCommand[BootCommand[\"STOP_AND_WAIT\"] = 0] = \"STOP_AND_WAIT\";\n    BootCommand[BootCommand[\"INSTALL_UPGRADE\"] = 1] = \"INSTALL_UPGRADE\";\n})(BootCommand || (exports.BootCommand = BootCommand = {}));\nexports.EnumBootCommand = schema_utils_1.Type.Enum(BootCommand);\nexports.RebootToBootloader = schema_utils_1.Type.Object({\n    boot_command: schema_utils_1.Type.Optional(exports.EnumBootCommand),\n    firmware_header: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    language_data_length: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'RebootToBootloader' });\nexports.GetNonce = schema_utils_1.Type.Object({}, { $id: 'GetNonce' });\nexports.Nonce = schema_utils_1.Type.Object({\n    nonce: schema_utils_1.Type.String(),\n}, { $id: 'Nonce' });\nexports.UnlockPath = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    mac: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'UnlockPath' });\nexports.UnlockedPathRequest = schema_utils_1.Type.Object({\n    mac: schema_utils_1.Type.String(),\n}, { $id: 'UnlockedPathRequest' });\nexports.ShowDeviceTutorial = schema_utils_1.Type.Object({}, { $id: 'ShowDeviceTutorial' });\nexports.UnlockBootloader = schema_utils_1.Type.Object({}, { $id: 'UnlockBootloader' });\nexports.SetBrightness = schema_utils_1.Type.Object({\n    value: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'SetBrightness' });\nexports.NEMGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'NEMGetAddress' });\nexports.NEMAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n}, { $id: 'NEMAddress' });\nexports.NEMTransactionCommon = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    timestamp: schema_utils_1.Type.Number(),\n    fee: schema_utils_1.Type.Uint(),\n    deadline: schema_utils_1.Type.Number(),\n    signer: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'NEMTransactionCommon' });\nexports.NEMMosaic = schema_utils_1.Type.Object({\n    namespace: schema_utils_1.Type.String(),\n    mosaic: schema_utils_1.Type.String(),\n    quantity: schema_utils_1.Type.Number(),\n}, { $id: 'NEMMosaic' });\nexports.NEMTransfer = schema_utils_1.Type.Object({\n    recipient: schema_utils_1.Type.String(),\n    amount: schema_utils_1.Type.Uint(),\n    payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    mosaics: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.NEMMosaic)),\n}, { $id: 'NEMTransfer' });\nexports.NEMProvisionNamespace = schema_utils_1.Type.Object({\n    namespace: schema_utils_1.Type.String(),\n    parent: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    sink: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Uint(),\n}, { $id: 'NEMProvisionNamespace' });\nvar NEMMosaicLevy;\n(function (NEMMosaicLevy) {\n    NEMMosaicLevy[NEMMosaicLevy[\"MosaicLevy_Absolute\"] = 1] = \"MosaicLevy_Absolute\";\n    NEMMosaicLevy[NEMMosaicLevy[\"MosaicLevy_Percentile\"] = 2] = \"MosaicLevy_Percentile\";\n})(NEMMosaicLevy || (exports.NEMMosaicLevy = NEMMosaicLevy = {}));\nexports.EnumNEMMosaicLevy = schema_utils_1.Type.Enum(NEMMosaicLevy);\nexports.NEMMosaicDefinition = schema_utils_1.Type.Object({\n    name: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    ticker: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    namespace: schema_utils_1.Type.String(),\n    mosaic: schema_utils_1.Type.String(),\n    divisibility: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    levy: schema_utils_1.Type.Optional(exports.EnumNEMMosaicLevy),\n    fee: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    levy_address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    levy_namespace: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    levy_mosaic: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    supply: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    mutable_supply: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    transferable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    description: schema_utils_1.Type.String(),\n    networks: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n}, { $id: 'NEMMosaicDefinition' });\nexports.NEMMosaicCreation = schema_utils_1.Type.Object({\n    definition: exports.NEMMosaicDefinition,\n    sink: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Uint(),\n}, { $id: 'NEMMosaicCreation' });\nvar NEMSupplyChangeType;\n(function (NEMSupplyChangeType) {\n    NEMSupplyChangeType[NEMSupplyChangeType[\"SupplyChange_Increase\"] = 1] = \"SupplyChange_Increase\";\n    NEMSupplyChangeType[NEMSupplyChangeType[\"SupplyChange_Decrease\"] = 2] = \"SupplyChange_Decrease\";\n})(NEMSupplyChangeType || (exports.NEMSupplyChangeType = NEMSupplyChangeType = {}));\nexports.EnumNEMSupplyChangeType = schema_utils_1.Type.Enum(NEMSupplyChangeType);\nexports.NEMMosaicSupplyChange = schema_utils_1.Type.Object({\n    namespace: schema_utils_1.Type.String(),\n    mosaic: schema_utils_1.Type.String(),\n    type: exports.EnumNEMSupplyChangeType,\n    delta: schema_utils_1.Type.Number(),\n}, { $id: 'NEMMosaicSupplyChange' });\nvar NEMModificationType;\n(function (NEMModificationType) {\n    NEMModificationType[NEMModificationType[\"CosignatoryModification_Add\"] = 1] = \"CosignatoryModification_Add\";\n    NEMModificationType[NEMModificationType[\"CosignatoryModification_Delete\"] = 2] = \"CosignatoryModification_Delete\";\n})(NEMModificationType || (exports.NEMModificationType = NEMModificationType = {}));\nexports.EnumNEMModificationType = schema_utils_1.Type.Enum(NEMModificationType);\nexports.NEMCosignatoryModification = schema_utils_1.Type.Object({\n    type: exports.EnumNEMModificationType,\n    public_key: schema_utils_1.Type.String(),\n}, { $id: 'NEMCosignatoryModification' });\nexports.NEMAggregateModification = schema_utils_1.Type.Object({\n    modifications: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.NEMCosignatoryModification)),\n    relative_change: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'NEMAggregateModification' });\nvar NEMImportanceTransferMode;\n(function (NEMImportanceTransferMode) {\n    NEMImportanceTransferMode[NEMImportanceTransferMode[\"ImportanceTransfer_Activate\"] = 1] = \"ImportanceTransfer_Activate\";\n    NEMImportanceTransferMode[NEMImportanceTransferMode[\"ImportanceTransfer_Deactivate\"] = 2] = \"ImportanceTransfer_Deactivate\";\n})(NEMImportanceTransferMode || (exports.NEMImportanceTransferMode = NEMImportanceTransferMode = {}));\nexports.EnumNEMImportanceTransferMode = schema_utils_1.Type.Enum(NEMImportanceTransferMode);\nexports.NEMImportanceTransfer = schema_utils_1.Type.Object({\n    mode: exports.EnumNEMImportanceTransferMode,\n    public_key: schema_utils_1.Type.String(),\n}, { $id: 'NEMImportanceTransfer' });\nexports.NEMSignTx = schema_utils_1.Type.Object({\n    transaction: exports.NEMTransactionCommon,\n    multisig: schema_utils_1.Type.Optional(exports.NEMTransactionCommon),\n    transfer: schema_utils_1.Type.Optional(exports.NEMTransfer),\n    cosigning: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    provision_namespace: schema_utils_1.Type.Optional(exports.NEMProvisionNamespace),\n    mosaic_creation: schema_utils_1.Type.Optional(exports.NEMMosaicCreation),\n    supply_change: schema_utils_1.Type.Optional(exports.NEMMosaicSupplyChange),\n    aggregate_modification: schema_utils_1.Type.Optional(exports.NEMAggregateModification),\n    importance_transfer: schema_utils_1.Type.Optional(exports.NEMImportanceTransfer),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'NEMSignTx' });\nexports.NEMSignedTx = schema_utils_1.Type.Object({\n    data: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'NEMSignedTx' });\nexports.NEMDecryptMessage = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    network: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    public_key: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    payload: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'NEMDecryptMessage' });\nexports.NEMDecryptedMessage = schema_utils_1.Type.Object({\n    payload: schema_utils_1.Type.String(),\n}, { $id: 'NEMDecryptedMessage' });\nexports.RippleGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'RippleGetAddress' });\nexports.RippleAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n}, { $id: 'RippleAddress' });\nexports.RipplePayment = schema_utils_1.Type.Object({\n    amount: schema_utils_1.Type.Uint(),\n    destination: schema_utils_1.Type.String(),\n    destination_tag: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'RipplePayment' });\nexports.RippleSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    fee: schema_utils_1.Type.Uint(),\n    flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    sequence: schema_utils_1.Type.Number(),\n    last_ledger_sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    payment: exports.RipplePayment,\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'RippleSignTx' });\nexports.RippleSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    serialized_tx: schema_utils_1.Type.String(),\n}, { $id: 'RippleSignedTx' });\nexports.SolanaGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'SolanaGetPublicKey' });\nexports.SolanaPublicKey = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n}, { $id: 'SolanaPublicKey' });\nexports.SolanaGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'SolanaGetAddress' });\nexports.SolanaAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n}, { $id: 'SolanaAddress' });\nexports.SolanaTxTokenAccountInfo = schema_utils_1.Type.Object({\n    base_address: schema_utils_1.Type.String(),\n    token_program: schema_utils_1.Type.String(),\n    token_mint: schema_utils_1.Type.String(),\n    token_account: schema_utils_1.Type.String(),\n}, { $id: 'SolanaTxTokenAccountInfo' });\nexports.SolanaTxAdditionalInfo = schema_utils_1.Type.Object({\n    token_accounts_infos: schema_utils_1.Type.Array(exports.SolanaTxTokenAccountInfo),\n}, { $id: 'SolanaTxAdditionalInfo' });\nexports.SolanaSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    serialized_tx: schema_utils_1.Type.String(),\n    additional_info: schema_utils_1.Type.Optional(exports.SolanaTxAdditionalInfo),\n}, { $id: 'SolanaSignTx' });\nexports.SolanaTxSignature = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'SolanaTxSignature' });\nvar StellarAssetType;\n(function (StellarAssetType) {\n    StellarAssetType[StellarAssetType[\"NATIVE\"] = 0] = \"NATIVE\";\n    StellarAssetType[StellarAssetType[\"ALPHANUM4\"] = 1] = \"ALPHANUM4\";\n    StellarAssetType[StellarAssetType[\"ALPHANUM12\"] = 2] = \"ALPHANUM12\";\n})(StellarAssetType || (exports.StellarAssetType = StellarAssetType = {}));\nexports.EnumStellarAssetType = schema_utils_1.Type.Enum(StellarAssetType);\nexports.StellarAsset = schema_utils_1.Type.Object({\n    type: schema_utils_1.Type.Union([\n        schema_utils_1.Type.Literal(0),\n        schema_utils_1.Type.Literal(1),\n        schema_utils_1.Type.Literal(2),\n        schema_utils_1.Type.Literal('NATIVE'),\n        schema_utils_1.Type.Literal('ALPHANUM4'),\n        schema_utils_1.Type.Literal('ALPHANUM12'),\n    ]),\n    code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    issuer: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n}, { $id: 'StellarAsset' });\nexports.StellarGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'StellarGetAddress' });\nexports.StellarAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n}, { $id: 'StellarAddress' });\nvar StellarMemoType;\n(function (StellarMemoType) {\n    StellarMemoType[StellarMemoType[\"NONE\"] = 0] = \"NONE\";\n    StellarMemoType[StellarMemoType[\"TEXT\"] = 1] = \"TEXT\";\n    StellarMemoType[StellarMemoType[\"ID\"] = 2] = \"ID\";\n    StellarMemoType[StellarMemoType[\"HASH\"] = 3] = \"HASH\";\n    StellarMemoType[StellarMemoType[\"RETURN\"] = 4] = \"RETURN\";\n})(StellarMemoType || (exports.StellarMemoType = StellarMemoType = {}));\nexports.EnumStellarMemoType = schema_utils_1.Type.Enum(StellarMemoType);\nexports.StellarSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    network_passphrase: schema_utils_1.Type.String(),\n    source_account: schema_utils_1.Type.String(),\n    fee: schema_utils_1.Type.Uint(),\n    sequence_number: schema_utils_1.Type.Uint(),\n    timebounds_start: schema_utils_1.Type.Number(),\n    timebounds_end: schema_utils_1.Type.Number(),\n    memo_type: exports.EnumStellarMemoType,\n    memo_text: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    memo_id: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    memo_hash: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()])),\n    num_operations: schema_utils_1.Type.Number(),\n}, { $id: 'StellarSignTx' });\nexports.StellarTxOpRequest = schema_utils_1.Type.Object({}, { $id: 'StellarTxOpRequest' });\nexports.StellarPaymentOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    destination_account: schema_utils_1.Type.String(),\n    asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n}, { $id: 'StellarPaymentOp' });\nexports.StellarCreateAccountOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    new_account: schema_utils_1.Type.String(),\n    starting_balance: schema_utils_1.Type.Uint(),\n}, { $id: 'StellarCreateAccountOp' });\nexports.StellarPathPaymentStrictReceiveOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    send_asset: exports.StellarAsset,\n    send_max: schema_utils_1.Type.Uint(),\n    destination_account: schema_utils_1.Type.String(),\n    destination_asset: exports.StellarAsset,\n    destination_amount: schema_utils_1.Type.Uint(),\n    paths: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.StellarAsset)),\n}, { $id: 'StellarPathPaymentStrictReceiveOp' });\nexports.StellarPathPaymentStrictSendOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    send_asset: exports.StellarAsset,\n    send_amount: schema_utils_1.Type.Uint(),\n    destination_account: schema_utils_1.Type.String(),\n    destination_asset: exports.StellarAsset,\n    destination_min: schema_utils_1.Type.Uint(),\n    paths: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(exports.StellarAsset)),\n}, { $id: 'StellarPathPaymentStrictSendOp' });\nexports.StellarManageSellOfferOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    selling_asset: exports.StellarAsset,\n    buying_asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    price_n: schema_utils_1.Type.Number(),\n    price_d: schema_utils_1.Type.Number(),\n    offer_id: schema_utils_1.Type.Uint(),\n}, { $id: 'StellarManageSellOfferOp' });\nexports.StellarManageBuyOfferOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    selling_asset: exports.StellarAsset,\n    buying_asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    price_n: schema_utils_1.Type.Number(),\n    price_d: schema_utils_1.Type.Number(),\n    offer_id: schema_utils_1.Type.Uint(),\n}, { $id: 'StellarManageBuyOfferOp' });\nexports.StellarCreatePassiveSellOfferOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    selling_asset: exports.StellarAsset,\n    buying_asset: exports.StellarAsset,\n    amount: schema_utils_1.Type.Uint(),\n    price_n: schema_utils_1.Type.Number(),\n    price_d: schema_utils_1.Type.Number(),\n}, { $id: 'StellarCreatePassiveSellOfferOp' });\nvar StellarSignerType;\n(function (StellarSignerType) {\n    StellarSignerType[StellarSignerType[\"ACCOUNT\"] = 0] = \"ACCOUNT\";\n    StellarSignerType[StellarSignerType[\"PRE_AUTH\"] = 1] = \"PRE_AUTH\";\n    StellarSignerType[StellarSignerType[\"HASH\"] = 2] = \"HASH\";\n})(StellarSignerType || (exports.StellarSignerType = StellarSignerType = {}));\nexports.EnumStellarSignerType = schema_utils_1.Type.Enum(StellarSignerType);\nexports.StellarSetOptionsOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    inflation_destination_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    clear_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    set_flags: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n    master_weight: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    low_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    medium_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    high_threshold: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint()),\n    home_domain: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    signer_type: schema_utils_1.Type.Optional(exports.EnumStellarSignerType),\n    signer_key: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()])),\n    signer_weight: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n}, { $id: 'StellarSetOptionsOp' });\nexports.StellarChangeTrustOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    asset: exports.StellarAsset,\n    limit: schema_utils_1.Type.Uint(),\n}, { $id: 'StellarChangeTrustOp' });\nexports.StellarAllowTrustOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    trusted_account: schema_utils_1.Type.String(),\n    asset_type: exports.EnumStellarAssetType,\n    asset_code: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    is_authorized: schema_utils_1.Type.Boolean(),\n}, { $id: 'StellarAllowTrustOp' });\nexports.StellarAccountMergeOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    destination_account: schema_utils_1.Type.String(),\n}, { $id: 'StellarAccountMergeOp' });\nexports.StellarManageDataOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    key: schema_utils_1.Type.String(),\n    value: schema_utils_1.Type.Optional(schema_utils_1.Type.Union([schema_utils_1.Type.Buffer(), schema_utils_1.Type.String()])),\n}, { $id: 'StellarManageDataOp' });\nexports.StellarBumpSequenceOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    bump_to: schema_utils_1.Type.Uint(),\n}, { $id: 'StellarBumpSequenceOp' });\nexports.StellarClaimClaimableBalanceOp = schema_utils_1.Type.Object({\n    source_account: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    balance_id: schema_utils_1.Type.String(),\n}, { $id: 'StellarClaimClaimableBalanceOp' });\nexports.StellarSignedTx = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n    signature: schema_utils_1.Type.String(),\n}, { $id: 'StellarSignedTx' });\nexports.TezosGetAddress = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'TezosGetAddress' });\nexports.TezosAddress = schema_utils_1.Type.Object({\n    address: schema_utils_1.Type.String(),\n}, { $id: 'TezosAddress' });\nexports.TezosGetPublicKey = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    show_display: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'TezosGetPublicKey' });\nexports.TezosPublicKey = schema_utils_1.Type.Object({\n    public_key: schema_utils_1.Type.String(),\n}, { $id: 'TezosPublicKey' });\nvar TezosContractType;\n(function (TezosContractType) {\n    TezosContractType[TezosContractType[\"Implicit\"] = 0] = \"Implicit\";\n    TezosContractType[TezosContractType[\"Originated\"] = 1] = \"Originated\";\n})(TezosContractType || (exports.TezosContractType = TezosContractType = {}));\nexports.EnumTezosContractType = schema_utils_1.Type.Enum(TezosContractType);\nexports.TezosContractID = schema_utils_1.Type.Object({\n    tag: schema_utils_1.Type.Number(),\n    hash: schema_utils_1.Type.Uint8Array(),\n}, { $id: 'TezosContractID' });\nexports.TezosRevealOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    public_key: schema_utils_1.Type.Uint8Array(),\n}, { $id: 'TezosRevealOp' });\nexports.TezosManagerTransfer = schema_utils_1.Type.Object({\n    destination: exports.TezosContractID,\n    amount: schema_utils_1.Type.Uint(),\n}, { $id: 'TezosManagerTransfer' });\nexports.TezosParametersManager = schema_utils_1.Type.Object({\n    set_delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint8Array()),\n    cancel_delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    transfer: schema_utils_1.Type.Optional(exports.TezosManagerTransfer),\n}, { $id: 'TezosParametersManager' });\nexports.TezosTransactionOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    amount: schema_utils_1.Type.Uint(),\n    destination: exports.TezosContractID,\n    parameters: schema_utils_1.Type.Optional(schema_utils_1.Type.Array(schema_utils_1.Type.Number())),\n    parameters_manager: schema_utils_1.Type.Optional(exports.TezosParametersManager),\n}, { $id: 'TezosTransactionOp' });\nexports.TezosOriginationOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    manager_pubkey: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n    balance: schema_utils_1.Type.Number(),\n    spendable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    delegatable: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n    delegate: schema_utils_1.Type.Optional(schema_utils_1.Type.Uint8Array()),\n    script: schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Array(schema_utils_1.Type.Number())]),\n}, { $id: 'TezosOriginationOp' });\nexports.TezosDelegationOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.Uint8Array(),\n    fee: schema_utils_1.Type.Uint(),\n    counter: schema_utils_1.Type.Number(),\n    gas_limit: schema_utils_1.Type.Number(),\n    storage_limit: schema_utils_1.Type.Number(),\n    delegate: schema_utils_1.Type.Uint8Array(),\n}, { $id: 'TezosDelegationOp' });\nexports.TezosProposalOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    period: schema_utils_1.Type.Number(),\n    proposals: schema_utils_1.Type.Array(schema_utils_1.Type.String()),\n}, { $id: 'TezosProposalOp' });\nvar TezosBallotType;\n(function (TezosBallotType) {\n    TezosBallotType[TezosBallotType[\"Yay\"] = 0] = \"Yay\";\n    TezosBallotType[TezosBallotType[\"Nay\"] = 1] = \"Nay\";\n    TezosBallotType[TezosBallotType[\"Pass\"] = 2] = \"Pass\";\n})(TezosBallotType || (exports.TezosBallotType = TezosBallotType = {}));\nexports.EnumTezosBallotType = schema_utils_1.Type.Enum(TezosBallotType);\nexports.TezosBallotOp = schema_utils_1.Type.Object({\n    source: schema_utils_1.Type.String(),\n    period: schema_utils_1.Type.Number(),\n    proposal: schema_utils_1.Type.String(),\n    ballot: exports.EnumTezosBallotType,\n}, { $id: 'TezosBallotOp' });\nexports.TezosSignTx = schema_utils_1.Type.Object({\n    address_n: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n    branch: schema_utils_1.Type.Uint8Array(),\n    reveal: schema_utils_1.Type.Optional(exports.TezosRevealOp),\n    transaction: schema_utils_1.Type.Optional(exports.TezosTransactionOp),\n    origination: schema_utils_1.Type.Optional(exports.TezosOriginationOp),\n    delegation: schema_utils_1.Type.Optional(exports.TezosDelegationOp),\n    proposal: schema_utils_1.Type.Optional(exports.TezosProposalOp),\n    ballot: schema_utils_1.Type.Optional(exports.TezosBallotOp),\n    chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n}, { $id: 'TezosSignTx' });\nexports.TezosSignedTx = schema_utils_1.Type.Object({\n    signature: schema_utils_1.Type.String(),\n    sig_op_contents: schema_utils_1.Type.String(),\n    operation_hash: schema_utils_1.Type.String(),\n}, { $id: 'TezosSignedTx' });\nexports.MessageType = schema_utils_1.Type.Object({\n    BinanceGetAddress: exports.BinanceGetAddress,\n    BinanceAddress: exports.BinanceAddress,\n    BinanceGetPublicKey: exports.BinanceGetPublicKey,\n    BinancePublicKey: exports.BinancePublicKey,\n    BinanceSignTx: exports.BinanceSignTx,\n    BinanceTxRequest: exports.BinanceTxRequest,\n    BinanceCoin: exports.BinanceCoin,\n    BinanceInputOutput: exports.BinanceInputOutput,\n    BinanceTransferMsg: exports.BinanceTransferMsg,\n    BinanceOrderMsg: exports.BinanceOrderMsg,\n    BinanceCancelMsg: exports.BinanceCancelMsg,\n    BinanceSignedTx: exports.BinanceSignedTx,\n    HDNodeType: exports.HDNodeType,\n    HDNodePathType: exports.HDNodePathType,\n    MultisigRedeemScriptType: exports.MultisigRedeemScriptType,\n    GetPublicKey: exports.GetPublicKey,\n    PublicKey: exports.PublicKey,\n    GetAddress: exports.GetAddress,\n    Address: exports.Address,\n    GetOwnershipId: exports.GetOwnershipId,\n    OwnershipId: exports.OwnershipId,\n    SignMessage: exports.SignMessage,\n    MessageSignature: exports.MessageSignature,\n    VerifyMessage: exports.VerifyMessage,\n    CoinJoinRequest: exports.CoinJoinRequest,\n    SignTx: exports.SignTx,\n    TxRequestDetailsType: exports.TxRequestDetailsType,\n    TxRequestSerializedType: exports.TxRequestSerializedType,\n    TxRequest: exports.TxRequest,\n    TxInputType: exports.TxInputType,\n    TxOutputBinType: exports.TxOutputBinType,\n    TxOutputType: exports.TxOutputType,\n    PrevTx: exports.PrevTx,\n    PrevInput: exports.PrevInput,\n    PrevOutput: exports.PrevOutput,\n    TextMemo: exports.TextMemo,\n    RefundMemo: exports.RefundMemo,\n    CoinPurchaseMemo: exports.CoinPurchaseMemo,\n    PaymentRequestMemo: exports.PaymentRequestMemo,\n    TxAckPaymentRequest: exports.TxAckPaymentRequest,\n    TxAck: exports.TxAck,\n    TxAckInputWrapper: exports.TxAckInputWrapper,\n    TxAckInput: exports.TxAckInput,\n    TxAckOutputWrapper: exports.TxAckOutputWrapper,\n    TxAckOutput: exports.TxAckOutput,\n    TxAckPrevMeta: exports.TxAckPrevMeta,\n    TxAckPrevInputWrapper: exports.TxAckPrevInputWrapper,\n    TxAckPrevInput: exports.TxAckPrevInput,\n    TxAckPrevOutputWrapper: exports.TxAckPrevOutputWrapper,\n    TxAckPrevOutput: exports.TxAckPrevOutput,\n    TxAckPrevExtraDataWrapper: exports.TxAckPrevExtraDataWrapper,\n    TxAckPrevExtraData: exports.TxAckPrevExtraData,\n    GetOwnershipProof: exports.GetOwnershipProof,\n    OwnershipProof: exports.OwnershipProof,\n    AuthorizeCoinJoin: exports.AuthorizeCoinJoin,\n    FirmwareErase: exports.FirmwareErase,\n    FirmwareRequest: exports.FirmwareRequest,\n    FirmwareUpload: exports.FirmwareUpload,\n    ProdTestT1: exports.ProdTestT1,\n    CardanoBlockchainPointerType: exports.CardanoBlockchainPointerType,\n    CardanoNativeScript: exports.CardanoNativeScript,\n    CardanoGetNativeScriptHash: exports.CardanoGetNativeScriptHash,\n    CardanoNativeScriptHash: exports.CardanoNativeScriptHash,\n    CardanoAddressParametersType: exports.CardanoAddressParametersType,\n    CardanoGetAddress: exports.CardanoGetAddress,\n    CardanoAddress: exports.CardanoAddress,\n    CardanoGetPublicKey: exports.CardanoGetPublicKey,\n    CardanoPublicKey: exports.CardanoPublicKey,\n    CardanoSignTxInit: exports.CardanoSignTxInit,\n    CardanoTxInput: exports.CardanoTxInput,\n    CardanoTxOutput: exports.CardanoTxOutput,\n    CardanoAssetGroup: exports.CardanoAssetGroup,\n    CardanoToken: exports.CardanoToken,\n    CardanoTxInlineDatumChunk: exports.CardanoTxInlineDatumChunk,\n    CardanoTxReferenceScriptChunk: exports.CardanoTxReferenceScriptChunk,\n    CardanoPoolOwner: exports.CardanoPoolOwner,\n    CardanoPoolRelayParameters: exports.CardanoPoolRelayParameters,\n    CardanoPoolMetadataType: exports.CardanoPoolMetadataType,\n    CardanoPoolParametersType: exports.CardanoPoolParametersType,\n    CardanoDRep: exports.CardanoDRep,\n    CardanoTxCertificate: exports.CardanoTxCertificate,\n    CardanoTxWithdrawal: exports.CardanoTxWithdrawal,\n    CardanoCVoteRegistrationDelegation: exports.CardanoCVoteRegistrationDelegation,\n    CardanoCVoteRegistrationParametersType: exports.CardanoCVoteRegistrationParametersType,\n    CardanoTxAuxiliaryData: exports.CardanoTxAuxiliaryData,\n    CardanoTxMint: exports.CardanoTxMint,\n    CardanoTxCollateralInput: exports.CardanoTxCollateralInput,\n    CardanoTxRequiredSigner: exports.CardanoTxRequiredSigner,\n    CardanoTxReferenceInput: exports.CardanoTxReferenceInput,\n    CardanoTxItemAck: exports.CardanoTxItemAck,\n    CardanoTxAuxiliaryDataSupplement: exports.CardanoTxAuxiliaryDataSupplement,\n    CardanoTxWitnessRequest: exports.CardanoTxWitnessRequest,\n    CardanoTxWitnessResponse: exports.CardanoTxWitnessResponse,\n    CardanoTxHostAck: exports.CardanoTxHostAck,\n    CardanoTxBodyHash: exports.CardanoTxBodyHash,\n    CardanoSignTxFinished: exports.CardanoSignTxFinished,\n    Success: exports.Success,\n    Failure: exports.Failure,\n    ButtonRequest: exports.ButtonRequest,\n    ButtonAck: exports.ButtonAck,\n    PinMatrixRequest: exports.PinMatrixRequest,\n    PinMatrixAck: exports.PinMatrixAck,\n    PassphraseRequest: exports.PassphraseRequest,\n    PassphraseAck: exports.PassphraseAck,\n    Deprecated_PassphraseStateRequest: exports.Deprecated_PassphraseStateRequest,\n    Deprecated_PassphraseStateAck: exports.Deprecated_PassphraseStateAck,\n    CipherKeyValue: exports.CipherKeyValue,\n    CipheredKeyValue: exports.CipheredKeyValue,\n    IdentityType: exports.IdentityType,\n    SignIdentity: exports.SignIdentity,\n    SignedIdentity: exports.SignedIdentity,\n    GetECDHSessionKey: exports.GetECDHSessionKey,\n    ECDHSessionKey: exports.ECDHSessionKey,\n    DebugLinkResetDebugEvents: exports.DebugLinkResetDebugEvents,\n    DebugLinkOptigaSetSecMax: exports.DebugLinkOptigaSetSecMax,\n    EosGetPublicKey: exports.EosGetPublicKey,\n    EosPublicKey: exports.EosPublicKey,\n    EosTxHeader: exports.EosTxHeader,\n    EosSignTx: exports.EosSignTx,\n    EosTxActionRequest: exports.EosTxActionRequest,\n    EosAsset: exports.EosAsset,\n    EosPermissionLevel: exports.EosPermissionLevel,\n    EosAuthorizationKey: exports.EosAuthorizationKey,\n    EosAuthorizationAccount: exports.EosAuthorizationAccount,\n    EosAuthorizationWait: exports.EosAuthorizationWait,\n    EosAuthorization: exports.EosAuthorization,\n    EosActionCommon: exports.EosActionCommon,\n    EosActionTransfer: exports.EosActionTransfer,\n    EosActionDelegate: exports.EosActionDelegate,\n    EosActionUndelegate: exports.EosActionUndelegate,\n    EosActionRefund: exports.EosActionRefund,\n    EosActionBuyRam: exports.EosActionBuyRam,\n    EosActionBuyRamBytes: exports.EosActionBuyRamBytes,\n    EosActionSellRam: exports.EosActionSellRam,\n    EosActionVoteProducer: exports.EosActionVoteProducer,\n    EosActionUpdateAuth: exports.EosActionUpdateAuth,\n    EosActionDeleteAuth: exports.EosActionDeleteAuth,\n    EosActionLinkAuth: exports.EosActionLinkAuth,\n    EosActionUnlinkAuth: exports.EosActionUnlinkAuth,\n    EosActionNewAccount: exports.EosActionNewAccount,\n    EosActionUnknown: exports.EosActionUnknown,\n    EosTxActionAck: exports.EosTxActionAck,\n    EosSignedTx: exports.EosSignedTx,\n    EthereumNetworkInfo: exports.EthereumNetworkInfo,\n    EthereumTokenInfo: exports.EthereumTokenInfo,\n    EthereumDefinitions: exports.EthereumDefinitions,\n    EthereumSignTypedData: exports.EthereumSignTypedData,\n    EthereumTypedDataStructRequest: exports.EthereumTypedDataStructRequest,\n    EthereumFieldType: exports.EthereumFieldType,\n    EthereumStructMember: exports.EthereumStructMember,\n    EthereumTypedDataStructAck: exports.EthereumTypedDataStructAck,\n    EthereumTypedDataValueRequest: exports.EthereumTypedDataValueRequest,\n    EthereumTypedDataValueAck: exports.EthereumTypedDataValueAck,\n    EthereumGetPublicKey: exports.EthereumGetPublicKey,\n    EthereumPublicKey: exports.EthereumPublicKey,\n    EthereumGetAddress: exports.EthereumGetAddress,\n    EthereumAddress: exports.EthereumAddress,\n    EthereumSignTx: exports.EthereumSignTx,\n    EthereumAccessList: exports.EthereumAccessList,\n    EthereumSignTxEIP1559: exports.EthereumSignTxEIP1559,\n    EthereumTxRequest: exports.EthereumTxRequest,\n    EthereumTxAck: exports.EthereumTxAck,\n    EthereumSignMessage: exports.EthereumSignMessage,\n    EthereumMessageSignature: exports.EthereumMessageSignature,\n    EthereumVerifyMessage: exports.EthereumVerifyMessage,\n    EthereumSignTypedHash: exports.EthereumSignTypedHash,\n    EthereumTypedDataSignature: exports.EthereumTypedDataSignature,\n    Initialize: exports.Initialize,\n    GetFeatures: exports.GetFeatures,\n    RecoveryDevice: exports.RecoveryDevice,\n    Features: exports.Features,\n    LockDevice: exports.LockDevice,\n    SetBusy: exports.SetBusy,\n    EndSession: exports.EndSession,\n    ApplySettings: exports.ApplySettings,\n    ChangeLanguage: exports.ChangeLanguage,\n    TranslationDataRequest: exports.TranslationDataRequest,\n    TranslationDataAck: exports.TranslationDataAck,\n    ApplyFlags: exports.ApplyFlags,\n    ChangePin: exports.ChangePin,\n    ChangeWipeCode: exports.ChangeWipeCode,\n    SdProtect: exports.SdProtect,\n    Ping: exports.Ping,\n    Cancel: exports.Cancel,\n    GetEntropy: exports.GetEntropy,\n    Entropy: exports.Entropy,\n    GetFirmwareHash: exports.GetFirmwareHash,\n    FirmwareHash: exports.FirmwareHash,\n    AuthenticateDevice: exports.AuthenticateDevice,\n    AuthenticityProof: exports.AuthenticityProof,\n    WipeDevice: exports.WipeDevice,\n    LoadDevice: exports.LoadDevice,\n    ResetDevice: exports.ResetDevice,\n    Slip39Group: exports.Slip39Group,\n    BackupDevice: exports.BackupDevice,\n    EntropyRequest: exports.EntropyRequest,\n    EntropyAck: exports.EntropyAck,\n    EntropyCheckReady: exports.EntropyCheckReady,\n    EntropyCheckContinue: exports.EntropyCheckContinue,\n    WordRequest: exports.WordRequest,\n    WordAck: exports.WordAck,\n    SetU2FCounter: exports.SetU2FCounter,\n    GetNextU2FCounter: exports.GetNextU2FCounter,\n    NextU2FCounter: exports.NextU2FCounter,\n    DoPreauthorized: exports.DoPreauthorized,\n    PreauthorizedRequest: exports.PreauthorizedRequest,\n    CancelAuthorization: exports.CancelAuthorization,\n    RebootToBootloader: exports.RebootToBootloader,\n    GetNonce: exports.GetNonce,\n    Nonce: exports.Nonce,\n    UnlockPath: exports.UnlockPath,\n    UnlockedPathRequest: exports.UnlockedPathRequest,\n    ShowDeviceTutorial: exports.ShowDeviceTutorial,\n    UnlockBootloader: exports.UnlockBootloader,\n    SetBrightness: exports.SetBrightness,\n    NEMGetAddress: exports.NEMGetAddress,\n    NEMAddress: exports.NEMAddress,\n    NEMTransactionCommon: exports.NEMTransactionCommon,\n    NEMMosaic: exports.NEMMosaic,\n    NEMTransfer: exports.NEMTransfer,\n    NEMProvisionNamespace: exports.NEMProvisionNamespace,\n    NEMMosaicDefinition: exports.NEMMosaicDefinition,\n    NEMMosaicCreation: exports.NEMMosaicCreation,\n    NEMMosaicSupplyChange: exports.NEMMosaicSupplyChange,\n    NEMCosignatoryModification: exports.NEMCosignatoryModification,\n    NEMAggregateModification: exports.NEMAggregateModification,\n    NEMImportanceTransfer: exports.NEMImportanceTransfer,\n    NEMSignTx: exports.NEMSignTx,\n    NEMSignedTx: exports.NEMSignedTx,\n    NEMDecryptMessage: exports.NEMDecryptMessage,\n    NEMDecryptedMessage: exports.NEMDecryptedMessage,\n    RippleGetAddress: exports.RippleGetAddress,\n    RippleAddress: exports.RippleAddress,\n    RipplePayment: exports.RipplePayment,\n    RippleSignTx: exports.RippleSignTx,\n    RippleSignedTx: exports.RippleSignedTx,\n    SolanaGetPublicKey: exports.SolanaGetPublicKey,\n    SolanaPublicKey: exports.SolanaPublicKey,\n    SolanaGetAddress: exports.SolanaGetAddress,\n    SolanaAddress: exports.SolanaAddress,\n    SolanaTxTokenAccountInfo: exports.SolanaTxTokenAccountInfo,\n    SolanaTxAdditionalInfo: exports.SolanaTxAdditionalInfo,\n    SolanaSignTx: exports.SolanaSignTx,\n    SolanaTxSignature: exports.SolanaTxSignature,\n    StellarAsset: exports.StellarAsset,\n    StellarGetAddress: exports.StellarGetAddress,\n    StellarAddress: exports.StellarAddress,\n    StellarSignTx: exports.StellarSignTx,\n    StellarTxOpRequest: exports.StellarTxOpRequest,\n    StellarPaymentOp: exports.StellarPaymentOp,\n    StellarCreateAccountOp: exports.StellarCreateAccountOp,\n    StellarPathPaymentStrictReceiveOp: exports.StellarPathPaymentStrictReceiveOp,\n    StellarPathPaymentStrictSendOp: exports.StellarPathPaymentStrictSendOp,\n    StellarManageSellOfferOp: exports.StellarManageSellOfferOp,\n    StellarManageBuyOfferOp: exports.StellarManageBuyOfferOp,\n    StellarCreatePassiveSellOfferOp: exports.StellarCreatePassiveSellOfferOp,\n    StellarSetOptionsOp: exports.StellarSetOptionsOp,\n    StellarChangeTrustOp: exports.StellarChangeTrustOp,\n    StellarAllowTrustOp: exports.StellarAllowTrustOp,\n    StellarAccountMergeOp: exports.StellarAccountMergeOp,\n    StellarManageDataOp: exports.StellarManageDataOp,\n    StellarBumpSequenceOp: exports.StellarBumpSequenceOp,\n    StellarClaimClaimableBalanceOp: exports.StellarClaimClaimableBalanceOp,\n    StellarSignedTx: exports.StellarSignedTx,\n    TezosGetAddress: exports.TezosGetAddress,\n    TezosAddress: exports.TezosAddress,\n    TezosGetPublicKey: exports.TezosGetPublicKey,\n    TezosPublicKey: exports.TezosPublicKey,\n    TezosContractID: exports.TezosContractID,\n    TezosRevealOp: exports.TezosRevealOp,\n    TezosManagerTransfer: exports.TezosManagerTransfer,\n    TezosParametersManager: exports.TezosParametersManager,\n    TezosTransactionOp: exports.TezosTransactionOp,\n    TezosOriginationOp: exports.TezosOriginationOp,\n    TezosDelegationOp: exports.TezosDelegationOp,\n    TezosProposalOp: exports.TezosProposalOp,\n    TezosBallotOp: exports.TezosBallotOp,\n    TezosSignTx: exports.TezosSignTx,\n    TezosSignedTx: exports.TezosSignedTx,\n}, { $id: 'MessageType' });\n//# sourceMappingURL=messages-schema.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}