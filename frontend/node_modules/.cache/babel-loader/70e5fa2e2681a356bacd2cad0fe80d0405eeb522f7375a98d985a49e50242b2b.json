{"ast":null,"code":"import { keccak_256 } from '@noble/hashes/sha3';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function keccak256(value, to_) {\n  const to = to_ || 'hex';\n  const bytes = keccak_256(isHex(value, {\n    strict: false\n  }) ? toBytes(value) : value);\n  if (to === 'bytes') return bytes;\n  return toHex(bytes);\n}","map":{"version":3,"names":["keccak_256","isHex","toBytes","toHex","keccak256","value","to_","to","bytes","strict"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\viem\\utils\\hash\\keccak256.ts"],"sourcesContent":["import { keccak_256 } from '@noble/hashes/sha3'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Keccak256Hash<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type Keccak256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function keccak256<to extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: to | undefined,\n): Keccak256Hash<to> {\n  const to = to_ || 'hex'\n  const bytes = keccak_256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Keccak256Hash<to>\n  return toHex(bytes) as Keccak256Hash<to>\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,oBAAoB;AAI/C,SAA8BC,KAAK,QAAQ,kBAAkB;AAC7D,SAAgCC,OAAO,QAAQ,wBAAwB;AACvE,SAA8BC,KAAK,QAAQ,sBAAsB;AAcjE,OAAM,SAAUC,SAASA,CACvBC,KAAsB,EACtBC,GAAoB;EAEpB,MAAMC,EAAE,GAAGD,GAAG,IAAI,KAAK;EACvB,MAAME,KAAK,GAAGR,UAAU,CACtBC,KAAK,CAACI,KAAK,EAAE;IAAEI,MAAM,EAAE;EAAK,CAAE,CAAC,GAAGP,OAAO,CAACG,KAAK,CAAC,GAAGA,KAAK,CACzD;EACD,IAAIE,EAAE,KAAK,OAAO,EAAE,OAAOC,KAA0B;EACrD,OAAOL,KAAK,CAACK,KAAK,CAAsB;AAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}