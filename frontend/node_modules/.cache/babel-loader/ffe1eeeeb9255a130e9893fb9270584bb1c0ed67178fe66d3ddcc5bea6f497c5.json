{"ast":null,"code":"import { getCache, withCache } from '../../utils/promise/withCache.js';\nconst cacheKey = id => `blockNumber.${id}`;\n/** @internal */\nexport function getBlockNumberCache(id) {\n  return getCache(cacheKey(id));\n}\n/**\n * Returns the number of the most recent block seen.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockNumber\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockNumberParameters}\n * @returns The number of the block. {@link GetBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockNumber } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const blockNumber = await getBlockNumber(client)\n * // 69420n\n */\nexport async function getBlockNumber(client, {\n  cacheTime = client.cacheTime\n} = {}) {\n  const blockNumberHex = await withCache(() => client.request({\n    method: 'eth_blockNumber'\n  }), {\n    cacheKey: cacheKey(client.uid),\n    cacheTime\n  });\n  return BigInt(blockNumberHex);\n}\n//# sourceMappingURL=getBlockNumber.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}