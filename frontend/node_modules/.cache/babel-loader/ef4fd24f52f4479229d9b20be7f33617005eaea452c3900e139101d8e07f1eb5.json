{"ast":null,"code":"import { getAddress } from '../address/getAddress.js';\nimport { isAddressEqual } from '../address/isAddressEqual.js';\nimport { recoverTypedDataAddress } from './recoverTypedDataAddress.js';\n/**\n * Verify that typed data was signed by the provided address.\n *\n * Note:  Only supports Externally Owned Accounts. Does not support Contract Accounts.\n *        It is highly recommended to use `publicClient.verifyTypedData` instead to ensure\n *        wallet interoperability.\n *\n * - Docs {@link https://viem.sh/docs/utilities/verifyTypedData}\n *\n * @param parameters - {@link VerifyTypedDataParameters}\n * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n */\nexport async function verifyTypedData(parameters) {\n  const {\n    address,\n    domain,\n    message,\n    primaryType,\n    signature,\n    types\n  } = parameters;\n  return isAddressEqual(getAddress(address), await recoverTypedDataAddress({\n    domain,\n    message,\n    primaryType,\n    signature,\n    types\n  }));\n}\n//# sourceMappingURL=verifyTypedData.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}