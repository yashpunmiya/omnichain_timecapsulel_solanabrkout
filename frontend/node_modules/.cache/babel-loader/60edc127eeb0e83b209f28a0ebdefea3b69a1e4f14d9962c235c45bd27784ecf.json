{"ast":null,"code":"import { concatHex } from '../data/concat.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { numberToHex } from '../encoding/toHex.js';\nimport { toRlp } from '../encoding/toRlp.js';\nimport { keccak256 } from '../hash/keccak256.js';\n/**\n * Computes an Authorization hash in [EIP-7702 format](https://eips.ethereum.org/EIPS/eip-7702): `keccak256('0x05' || rlp([chain_id, address, nonce]))`.\n */\nexport function hashAuthorization(parameters) {\n  const {\n    chainId,\n    nonce,\n    to\n  } = parameters;\n  const address = parameters.contractAddress ?? parameters.address;\n  const hash = keccak256(concatHex(['0x05', toRlp([chainId ? numberToHex(chainId) : '0x', address, nonce ? numberToHex(nonce) : '0x'])]));\n  if (to === 'bytes') return hexToBytes(hash);\n  return hash;\n}\n//# sourceMappingURL=hashAuthorization.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}