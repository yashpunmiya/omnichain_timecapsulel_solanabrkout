{"ast":null,"code":"import { bytesToHex, numberToHex } from '../encoding/toHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const rpcTransactionType = {\n  legacy: '0x0',\n  eip2930: '0x1',\n  eip1559: '0x2',\n  eip4844: '0x3',\n  eip7702: '0x4'\n};\nexport function formatTransactionRequest(request) {\n  const rpcRequest = {};\n  if (typeof request.authorizationList !== 'undefined') rpcRequest.authorizationList = formatAuthorizationList(request.authorizationList);\n  if (typeof request.accessList !== 'undefined') rpcRequest.accessList = request.accessList;\n  if (typeof request.blobVersionedHashes !== 'undefined') rpcRequest.blobVersionedHashes = request.blobVersionedHashes;\n  if (typeof request.blobs !== 'undefined') {\n    if (typeof request.blobs[0] !== 'string') rpcRequest.blobs = request.blobs.map(x => bytesToHex(x));else rpcRequest.blobs = request.blobs;\n  }\n  if (typeof request.data !== 'undefined') rpcRequest.data = request.data;\n  if (typeof request.from !== 'undefined') rpcRequest.from = request.from;\n  if (typeof request.gas !== 'undefined') rpcRequest.gas = numberToHex(request.gas);\n  if (typeof request.gasPrice !== 'undefined') rpcRequest.gasPrice = numberToHex(request.gasPrice);\n  if (typeof request.maxFeePerBlobGas !== 'undefined') rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas);\n  if (typeof request.maxFeePerGas !== 'undefined') rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n  if (typeof request.maxPriorityFeePerGas !== 'undefined') rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n  if (typeof request.nonce !== 'undefined') rpcRequest.nonce = numberToHex(request.nonce);\n  if (typeof request.to !== 'undefined') rpcRequest.to = request.to;\n  if (typeof request.type !== 'undefined') rpcRequest.type = rpcTransactionType[request.type];\n  if (typeof request.value !== 'undefined') rpcRequest.value = numberToHex(request.value);\n  return rpcRequest;\n}\nexport const defineTransactionRequest = /*#__PURE__*/defineFormatter('transactionRequest', formatTransactionRequest);\n//////////////////////////////////////////////////////////////////////////////\nfunction formatAuthorizationList(authorizationList) {\n  return authorizationList.map(authorization => ({\n    address: authorization.contractAddress,\n    r: authorization.r,\n    s: authorization.s,\n    chainId: numberToHex(authorization.chainId),\n    nonce: numberToHex(authorization.nonce),\n    ...(typeof authorization.yParity !== 'undefined' ? {\n      yParity: numberToHex(authorization.yParity)\n    } : {}),\n    ...(typeof authorization.v !== 'undefined' && typeof authorization.yParity === 'undefined' ? {\n      v: numberToHex(authorization.v)\n    } : {})\n  }));\n}","map":{"version":3,"names":["bytesToHex","numberToHex","defineFormatter","rpcTransactionType","legacy","eip2930","eip1559","eip4844","eip7702","formatTransactionRequest","request","rpcRequest","authorizationList","formatAuthorizationList","accessList","blobVersionedHashes","blobs","map","x","data","from","gas","gasPrice","maxFeePerBlobGas","maxFeePerGas","maxPriorityFeePerGas","nonce","to","type","value","defineTransactionRequest","authorization","address","contractAddress","r","s","chainId","yParity","v"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\utils\\formatters\\transactionRequest.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { AuthorizationList } from '../../experimental/eip7702/types/authorization.js'\nimport type { RpcAuthorizationList } from '../../experimental/eip7702/types/rpc.js'\nimport type {\n  Chain,\n  ExtractChainFormatterParameters,\n} from '../../types/chain.js'\nimport type { ByteArray } from '../../types/misc.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { bytesToHex, numberToHex } from '../encoding/toHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\nexport type FormattedTransactionRequest<\n  chain extends Chain | undefined = Chain | undefined,\n> = ExtractChainFormatterParameters<\n  chain,\n  'transactionRequest',\n  TransactionRequest\n>\n\nexport const rpcTransactionType = {\n  legacy: '0x0',\n  eip2930: '0x1',\n  eip1559: '0x2',\n  eip4844: '0x3',\n  eip7702: '0x4',\n} as const\n\nexport type FormatTransactionRequestErrorType = ErrorType\n\nexport function formatTransactionRequest(\n  request: ExactPartial<TransactionRequest>,\n) {\n  const rpcRequest = {} as RpcTransactionRequest\n\n  if (typeof request.authorizationList !== 'undefined')\n    rpcRequest.authorizationList = formatAuthorizationList(\n      request.authorizationList,\n    )\n  if (typeof request.accessList !== 'undefined')\n    rpcRequest.accessList = request.accessList\n  if (typeof request.blobVersionedHashes !== 'undefined')\n    rpcRequest.blobVersionedHashes = request.blobVersionedHashes\n  if (typeof request.blobs !== 'undefined') {\n    if (typeof request.blobs[0] !== 'string')\n      rpcRequest.blobs = (request.blobs as ByteArray[]).map((x) =>\n        bytesToHex(x),\n      )\n    else rpcRequest.blobs = request.blobs\n  }\n  if (typeof request.data !== 'undefined') rpcRequest.data = request.data\n  if (typeof request.from !== 'undefined') rpcRequest.from = request.from\n  if (typeof request.gas !== 'undefined')\n    rpcRequest.gas = numberToHex(request.gas)\n  if (typeof request.gasPrice !== 'undefined')\n    rpcRequest.gasPrice = numberToHex(request.gasPrice)\n  if (typeof request.maxFeePerBlobGas !== 'undefined')\n    rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas)\n  if (typeof request.maxFeePerGas !== 'undefined')\n    rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas)\n  if (typeof request.maxPriorityFeePerGas !== 'undefined')\n    rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas)\n  if (typeof request.nonce !== 'undefined')\n    rpcRequest.nonce = numberToHex(request.nonce)\n  if (typeof request.to !== 'undefined') rpcRequest.to = request.to\n  if (typeof request.type !== 'undefined')\n    rpcRequest.type = rpcTransactionType[request.type]\n  if (typeof request.value !== 'undefined')\n    rpcRequest.value = numberToHex(request.value)\n\n  return rpcRequest\n}\n\nexport type DefineTransactionRequestErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter(\n  'transactionRequest',\n  formatTransactionRequest,\n)\n\n//////////////////////////////////////////////////////////////////////////////\n\nfunction formatAuthorizationList(\n  authorizationList: AuthorizationList<number, boolean>,\n): RpcAuthorizationList {\n  return authorizationList.map(\n    (authorization) =>\n      ({\n        address: authorization.contractAddress,\n        r: authorization.r,\n        s: authorization.s,\n        chainId: numberToHex(authorization.chainId),\n        nonce: numberToHex(authorization.nonce),\n        ...(typeof authorization.yParity !== 'undefined'\n          ? { yParity: numberToHex(authorization.yParity) }\n          : {}),\n        ...(typeof authorization.v !== 'undefined' &&\n        typeof authorization.yParity === 'undefined'\n          ? { v: numberToHex(authorization.v) }\n          : {}),\n      }) as any,\n  ) as RpcAuthorizationList\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}