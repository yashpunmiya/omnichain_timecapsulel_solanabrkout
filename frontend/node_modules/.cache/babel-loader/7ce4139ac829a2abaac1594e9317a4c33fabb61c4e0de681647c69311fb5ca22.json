{"ast":null,"code":"import { getAddress } from '../address/getAddress.js';\nimport { isAddressEqual } from '../address/isAddressEqual.js';\nimport { recoverMessageAddress } from './recoverMessageAddress.js';\n/**\n * Verify that a message was signed by the provided address.\n *\n * Note:  Only supports Externally Owned Accounts. Does not support Contract Accounts.\n *        It is highly recommended to use `publicClient.verifyMessage` instead to ensure\n *        wallet interoperability.\n *\n * - Docs {@link https://viem.sh/docs/utilities/verifyMessage}\n *\n * @param parameters - {@link VerifyMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n */\nexport async function verifyMessage({\n  address,\n  message,\n  signature\n}) {\n  return isAddressEqual(getAddress(address), await recoverMessageAddress({\n    message,\n    signature\n  }));\n}\n//# sourceMappingURL=verifyMessage.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}