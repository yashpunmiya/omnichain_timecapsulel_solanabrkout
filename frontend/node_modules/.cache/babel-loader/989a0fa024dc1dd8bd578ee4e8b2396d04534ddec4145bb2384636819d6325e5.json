{"ast":null,"code":"// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require\nexport const panicReasons = {\n  1: 'An `assert` condition failed.',\n  17: 'Arithmetic operation resulted in underflow or overflow.',\n  18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',\n  33: 'Attempted to convert to an invalid type.',\n  34: 'Attempted to access a storage byte array that is incorrectly encoded.',\n  49: 'Performed `.pop()` on an empty array',\n  50: 'Array index is out of bounds.',\n  65: 'Allocated too much memory or created an array which is too large.',\n  81: 'Attempted to call a zero-initialized variable of internal function type.'\n};\nexport const solidityError = {\n  inputs: [{\n    name: 'message',\n    type: 'string'\n  }],\n  name: 'Error',\n  type: 'error'\n};\nexport const solidityPanic = {\n  inputs: [{\n    name: 'reason',\n    type: 'uint256'\n  }],\n  name: 'Panic',\n  type: 'error'\n};","map":{"version":3,"names":["panicReasons","solidityError","inputs","name","type","solidityPanic"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@reown\\appkit-controllers\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\constants\\solidity.ts"],"sourcesContent":["import type { AbiError } from 'abitype'\n\n// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require\nexport const panicReasons = {\n  1: 'An `assert` condition failed.',\n  17: 'Arithmetic operation resulted in underflow or overflow.',\n  18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',\n  33: 'Attempted to convert to an invalid type.',\n  34: 'Attempted to access a storage byte array that is incorrectly encoded.',\n  49: 'Performed `.pop()` on an empty array',\n  50: 'Array index is out of bounds.',\n  65: 'Allocated too much memory or created an array which is too large.',\n  81: 'Attempted to call a zero-initialized variable of internal function type.',\n} as const\n\nexport const solidityError: AbiError = {\n  inputs: [\n    {\n      name: 'message',\n      type: 'string',\n    },\n  ],\n  name: 'Error',\n  type: 'error',\n}\nexport const solidityPanic: AbiError = {\n  inputs: [\n    {\n      name: 'reason',\n      type: 'uint256',\n    },\n  ],\n  name: 'Panic',\n  type: 'error',\n}\n"],"mappings":"AAEA;AACA,OAAO,MAAMA,YAAY,GAAG;EAC1B,CAAC,EAAE,+BAA+B;EAClC,EAAE,EAAE,yDAAyD;EAC7D,EAAE,EAAE,wDAAwD;EAC5D,EAAE,EAAE,0CAA0C;EAC9C,EAAE,EAAE,uEAAuE;EAC3E,EAAE,EAAE,sCAAsC;EAC1C,EAAE,EAAE,+BAA+B;EACnC,EAAE,EAAE,mEAAmE;EACvE,EAAE,EAAE;CACI;AAEV,OAAO,MAAMC,aAAa,GAAa;EACrCC,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;GACP,CACF;EACDD,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE;CACP;AACD,OAAO,MAAMC,aAAa,GAAa;EACrCH,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE;GACP,CACF;EACDD,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE;CACP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}