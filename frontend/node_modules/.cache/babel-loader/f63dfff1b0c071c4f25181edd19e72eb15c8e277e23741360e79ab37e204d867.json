{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TypeDereferenceError = void 0;\nexports.Pushref = Pushref;\nexports.Deref = Deref;\nconst index_1 = require(\"../../type/error/index\");\nconst index_2 = require(\"../../type/symbols/index\");\nconst guard_1 = require(\"../guard/guard\");\nclass TypeDereferenceError extends index_1.TypeBoxError {\n  constructor(schema) {\n    super(`Unable to dereference schema with $id '${schema.$ref}'`);\n    this.schema = schema;\n  }\n}\nexports.TypeDereferenceError = TypeDereferenceError;\nfunction Resolve(schema, references) {\n  const target = references.find(target => target.$id === schema.$ref);\n  if (target === undefined) throw new TypeDereferenceError(schema);\n  return Deref(target, references);\n}\n/** `[Internal]` Pushes a schema onto references if the schema has an $id and does not exist on references */\nfunction Pushref(schema, references) {\n  if (!(0, guard_1.IsString)(schema.$id) || references.some(target => target.$id === schema.$id)) return references;\n  references.push(schema);\n  return references;\n}\n/** `[Internal]` Dereferences a schema from the references array or throws if not found */\nfunction Deref(schema, references) {\n  // prettier-ignore\n  return schema[index_2.Kind] === 'This' || schema[index_2.Kind] === 'Ref' ? Resolve(schema, references) : schema;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","TypeDereferenceError","Pushref","Deref","index_1","require","index_2","guard_1","TypeBoxError","constructor","schema","$ref","Resolve","references","target","find","$id","undefined","IsString","some","push","Kind"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@sinclair/typebox/build/cjs/value/deref/deref.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypeDereferenceError = void 0;\nexports.Pushref = Pushref;\nexports.Deref = Deref;\nconst index_1 = require(\"../../type/error/index\");\nconst index_2 = require(\"../../type/symbols/index\");\nconst guard_1 = require(\"../guard/guard\");\nclass TypeDereferenceError extends index_1.TypeBoxError {\n    constructor(schema) {\n        super(`Unable to dereference schema with $id '${schema.$ref}'`);\n        this.schema = schema;\n    }\n}\nexports.TypeDereferenceError = TypeDereferenceError;\nfunction Resolve(schema, references) {\n    const target = references.find((target) => target.$id === schema.$ref);\n    if (target === undefined)\n        throw new TypeDereferenceError(schema);\n    return Deref(target, references);\n}\n/** `[Internal]` Pushes a schema onto references if the schema has an $id and does not exist on references */\nfunction Pushref(schema, references) {\n    if (!(0, guard_1.IsString)(schema.$id) || references.some((target) => target.$id === schema.$id))\n        return references;\n    references.push(schema);\n    return references;\n}\n/** `[Internal]` Dereferences a schema from the references array or throws if not found */\nfunction Deref(schema, references) {\n    // prettier-ignore\n    return (schema[index_2.Kind] === 'This' || schema[index_2.Kind] === 'Ref')\n        ? Resolve(schema, references)\n        : schema;\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,oBAAoB,GAAG,KAAK,CAAC;AACrCF,OAAO,CAACG,OAAO,GAAGA,OAAO;AACzBH,OAAO,CAACI,KAAK,GAAGA,KAAK;AACrB,MAAMC,OAAO,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AACjD,MAAMC,OAAO,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACnD,MAAME,OAAO,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AACzC,MAAMJ,oBAAoB,SAASG,OAAO,CAACI,YAAY,CAAC;EACpDC,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,CAAC,0CAA0CA,MAAM,CAACC,IAAI,GAAG,CAAC;IAC/D,IAAI,CAACD,MAAM,GAAGA,MAAM;EACxB;AACJ;AACAX,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB;AACnD,SAASW,OAAOA,CAACF,MAAM,EAAEG,UAAU,EAAE;EACjC,MAAMC,MAAM,GAAGD,UAAU,CAACE,IAAI,CAAED,MAAM,IAAKA,MAAM,CAACE,GAAG,KAAKN,MAAM,CAACC,IAAI,CAAC;EACtE,IAAIG,MAAM,KAAKG,SAAS,EACpB,MAAM,IAAIhB,oBAAoB,CAACS,MAAM,CAAC;EAC1C,OAAOP,KAAK,CAACW,MAAM,EAAED,UAAU,CAAC;AACpC;AACA;AACA,SAASX,OAAOA,CAACQ,MAAM,EAAEG,UAAU,EAAE;EACjC,IAAI,CAAC,CAAC,CAAC,EAAEN,OAAO,CAACW,QAAQ,EAAER,MAAM,CAACM,GAAG,CAAC,IAAIH,UAAU,CAACM,IAAI,CAAEL,MAAM,IAAKA,MAAM,CAACE,GAAG,KAAKN,MAAM,CAACM,GAAG,CAAC,EAC5F,OAAOH,UAAU;EACrBA,UAAU,CAACO,IAAI,CAACV,MAAM,CAAC;EACvB,OAAOG,UAAU;AACrB;AACA;AACA,SAASV,KAAKA,CAACO,MAAM,EAAEG,UAAU,EAAE;EAC/B;EACA,OAAQH,MAAM,CAACJ,OAAO,CAACe,IAAI,CAAC,KAAK,MAAM,IAAIX,MAAM,CAACJ,OAAO,CAACe,IAAI,CAAC,KAAK,KAAK,GACnET,OAAO,CAACF,MAAM,EAAEG,UAAU,CAAC,GAC3BH,MAAM;AAChB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}