{"ast":null,"code":"import React, { useLayoutEffect, useRef } from 'react';\nexport const Collapse = ({\n  id,\n  children,\n  expanded = false\n}) => {\n  const ref = useRef(null);\n  const instant = useRef(true);\n  const transition = 'height 250ms ease-out';\n  const openCollapse = () => {\n    const node = ref.current;\n    if (!node) return;\n    requestAnimationFrame(() => {\n      node.style.height = node.scrollHeight + 'px';\n    });\n  };\n  const closeCollapse = () => {\n    const node = ref.current;\n    if (!node) return;\n    requestAnimationFrame(() => {\n      node.style.height = node.offsetHeight + 'px';\n      node.style.overflow = 'hidden';\n      requestAnimationFrame(() => {\n        node.style.height = '0';\n      });\n    });\n  };\n  useLayoutEffect(() => {\n    if (expanded) {\n      openCollapse();\n    } else {\n      closeCollapse();\n    }\n  }, [expanded]);\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (!node) return;\n    function handleComplete() {\n      if (!node) return;\n      node.style.overflow = expanded ? 'initial' : 'hidden';\n      if (expanded) {\n        node.style.height = 'auto';\n      }\n    }\n    function handleTransitionEnd(event) {\n      if (node && event.target === node && event.propertyName === 'height') {\n        handleComplete();\n      }\n    }\n    if (instant.current) {\n      handleComplete();\n      instant.current = false;\n    }\n    node.addEventListener('transitionend', handleTransitionEnd);\n    return () => node.removeEventListener('transitionend', handleTransitionEnd);\n  }, [expanded]);\n  return React.createElement(\"div\", {\n    className: \"wallet-adapter-collapse\",\n    id: id,\n    ref: ref,\n    role: \"region\",\n    style: {\n      height: 0,\n      transition: instant.current ? undefined : transition\n    }\n  }, children);\n};\n//# sourceMappingURL=Collapse.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}