{"ast":null,"code":"/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v2.0.3\n   Copyright Â© 2012-2025 Faisal Salman <f@faisalman.com>\n   AGPLv3 License */ /*\n                     Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n                     Supports browser & node.js environment. \n                     Demo   : https://uaparser.dev\n                     Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n/* jshint esversion: 3 */\n/* globals window */\n\n(function (window, undefined) {\n  'use strict';\n\n  //////////////\n  // Constants\n  /////////////\n  var LIBVERSION = '2.0.3',\n    UA_MAX_LENGTH = 500,\n    USER_AGENT = 'user-agent',\n    EMPTY = '',\n    UNKNOWN = '?',\n    // typeof\n    FUNC_TYPE = 'function',\n    UNDEF_TYPE = 'undefined',\n    OBJ_TYPE = 'object',\n    STR_TYPE = 'string',\n    // properties\n    UA_BROWSER = 'browser',\n    UA_CPU = 'cpu',\n    UA_DEVICE = 'device',\n    UA_ENGINE = 'engine',\n    UA_OS = 'os',\n    UA_RESULT = 'result',\n    NAME = 'name',\n    TYPE = 'type',\n    VENDOR = 'vendor',\n    VERSION = 'version',\n    ARCHITECTURE = 'architecture',\n    MAJOR = 'major',\n    MODEL = 'model',\n    // device types\n    CONSOLE = 'console',\n    MOBILE = 'mobile',\n    TABLET = 'tablet',\n    SMARTTV = 'smarttv',\n    WEARABLE = 'wearable',\n    XR = 'xr',\n    EMBEDDED = 'embedded',\n    // browser types\n    INAPP = 'inapp',\n    // client hints\n    BRANDS = 'brands',\n    FORMFACTORS = 'formFactors',\n    FULLVERLIST = 'fullVersionList',\n    PLATFORM = 'platform',\n    PLATFORMVER = 'platformVersion',\n    BITNESS = 'bitness',\n    CH_HEADER = 'sec-ch-ua',\n    CH_HEADER_FULL_VER_LIST = CH_HEADER + '-full-version-list',\n    CH_HEADER_ARCH = CH_HEADER + '-arch',\n    CH_HEADER_BITNESS = CH_HEADER + '-' + BITNESS,\n    CH_HEADER_FORM_FACTORS = CH_HEADER + '-form-factors',\n    CH_HEADER_MOBILE = CH_HEADER + '-' + MOBILE,\n    CH_HEADER_MODEL = CH_HEADER + '-' + MODEL,\n    CH_HEADER_PLATFORM = CH_HEADER + '-' + PLATFORM,\n    CH_HEADER_PLATFORM_VER = CH_HEADER_PLATFORM + '-version',\n    CH_ALL_VALUES = [BRANDS, FULLVERLIST, MOBILE, MODEL, PLATFORM, PLATFORMVER, ARCHITECTURE, FORMFACTORS, BITNESS],\n    // device vendors\n    AMAZON = 'Amazon',\n    APPLE = 'Apple',\n    ASUS = 'ASUS',\n    BLACKBERRY = 'BlackBerry',\n    GOOGLE = 'Google',\n    HUAWEI = 'Huawei',\n    LENOVO = 'Lenovo',\n    HONOR = 'Honor',\n    LG = 'LG',\n    MICROSOFT = 'Microsoft',\n    MOTOROLA = 'Motorola',\n    NVIDIA = 'Nvidia',\n    ONEPLUS = 'OnePlus',\n    OPPO = 'OPPO',\n    SAMSUNG = 'Samsung',\n    SHARP = 'Sharp',\n    SONY = 'Sony',\n    XIAOMI = 'Xiaomi',\n    ZEBRA = 'Zebra',\n    // browsers\n    CHROME = 'Chrome',\n    CHROMIUM = 'Chromium',\n    CHROMECAST = 'Chromecast',\n    EDGE = 'Edge',\n    FIREFOX = 'Firefox',\n    OPERA = 'Opera',\n    FACEBOOK = 'Facebook',\n    SOGOU = 'Sogou',\n    PREFIX_MOBILE = 'Mobile ',\n    SUFFIX_BROWSER = ' Browser',\n    // os\n    WINDOWS = 'Windows';\n  var isWindow = typeof window !== UNDEF_TYPE,\n    NAVIGATOR = isWindow && window.navigator ? window.navigator : undefined,\n    NAVIGATOR_UADATA = NAVIGATOR && NAVIGATOR.userAgentData ? NAVIGATOR.userAgentData : undefined;\n\n  ///////////\n  // Helper\n  //////////\n\n  var extend = function (defaultRgx, extensions) {\n      var mergedRgx = {};\n      var extraRgx = extensions;\n      if (!isExtensions(extensions)) {\n        extraRgx = {};\n        for (var i in extensions) {\n          for (var j in extensions[i]) {\n            extraRgx[j] = extensions[i][j].concat(extraRgx[j] ? extraRgx[j] : []);\n          }\n        }\n      }\n      for (var k in defaultRgx) {\n        mergedRgx[k] = extraRgx[k] && extraRgx[k].length % 2 === 0 ? extraRgx[k].concat(defaultRgx[k]) : defaultRgx[k];\n      }\n      return mergedRgx;\n    },\n    enumerize = function (arr) {\n      var enums = {};\n      for (var i = 0; i < arr.length; i++) {\n        enums[arr[i].toUpperCase()] = arr[i];\n      }\n      return enums;\n    },\n    has = function (str1, str2) {\n      if (typeof str1 === OBJ_TYPE && str1.length > 0) {\n        for (var i in str1) {\n          if (lowerize(str1[i]) == lowerize(str2)) return true;\n        }\n        return false;\n      }\n      return isString(str1) ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n    },\n    isExtensions = function (obj, deep) {\n      for (var prop in obj) {\n        return /^(browser|cpu|device|engine|os)$/.test(prop) || (deep ? isExtensions(obj[prop]) : false);\n      }\n    },\n    isString = function (val) {\n      return typeof val === STR_TYPE;\n    },\n    itemListToArray = function (header) {\n      if (!header) return undefined;\n      var arr = [];\n      var tokens = strip(/\\\\?\\\"/g, header).split(',');\n      for (var i = 0; i < tokens.length; i++) {\n        if (tokens[i].indexOf(';') > -1) {\n          var token = trim(tokens[i]).split(';v=');\n          arr[i] = {\n            brand: token[0],\n            version: token[1]\n          };\n        } else {\n          arr[i] = trim(tokens[i]);\n        }\n      }\n      return arr;\n    },\n    lowerize = function (str) {\n      return isString(str) ? str.toLowerCase() : str;\n    },\n    majorize = function (version) {\n      return isString(version) ? strip(/[^\\d\\.]/g, version).split('.')[0] : undefined;\n    },\n    setProps = function (arr) {\n      for (var i in arr) {\n        var propName = arr[i];\n        if (typeof propName == OBJ_TYPE && propName.length == 2) {\n          this[propName[0]] = propName[1];\n        } else {\n          this[propName] = undefined;\n        }\n      }\n      return this;\n    },\n    strip = function (pattern, str) {\n      return isString(str) ? str.replace(pattern, EMPTY) : str;\n    },\n    stripQuotes = function (str) {\n      return strip(/\\\\?\\\"/g, str);\n    },\n    trim = function (str, len) {\n      if (isString(str)) {\n        str = strip(/^\\s\\s*/, str);\n        return typeof len === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n      }\n    };\n\n  ///////////////\n  // Map helper\n  //////////////\n\n  var rgxMapper = function (ua, arrays) {\n      if (!ua || !arrays) return;\n      var i = 0,\n        j,\n        k,\n        p,\n        q,\n        matches,\n        match;\n\n      // loop through all regexes maps\n      while (i < arrays.length && !matches) {\n        var regex = arrays[i],\n          // even sequence (0,2,4,..)\n          props = arrays[i + 1]; // odd sequence (1,3,5,..)\n        j = k = 0;\n\n        // try matching uastring with regexes\n        while (j < regex.length && !matches) {\n          if (!regex[j]) {\n            break;\n          }\n          matches = regex[j++].exec(ua);\n          if (!!matches) {\n            for (p = 0; p < props.length; p++) {\n              match = matches[++k];\n              q = props[p];\n              // check if given property is actually array\n              if (typeof q === OBJ_TYPE && q.length > 0) {\n                if (q.length === 2) {\n                  if (typeof q[1] == FUNC_TYPE) {\n                    // assign modified match\n                    this[q[0]] = q[1].call(this, match);\n                  } else {\n                    // assign given value, ignore regex match\n                    this[q[0]] = q[1];\n                  }\n                } else if (q.length === 3) {\n                  // check whether function or regex\n                  if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                    // call function (usually string mapper)\n                    this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                  } else {\n                    // sanitize match using given regex\n                    this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                  }\n                } else if (q.length === 4) {\n                  this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                }\n              } else {\n                this[q] = match ? match : undefined;\n              }\n            }\n          }\n        }\n        i += 2;\n      }\n    },\n    strMapper = function (str, map) {\n      for (var i in map) {\n        // check if current value is array\n        if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n          for (var j = 0; j < map[i].length; j++) {\n            if (has(map[i][j], str)) {\n              return i === UNKNOWN ? undefined : i;\n            }\n          }\n        } else if (has(map[i], str)) {\n          return i === UNKNOWN ? undefined : i;\n        }\n      }\n      return map.hasOwnProperty('*') ? map['*'] : str;\n    };\n\n  ///////////////\n  // String map\n  //////////////\n\n  var windowsVersionMap = {\n      'ME': '4.90',\n      'NT 3.11': 'NT3.51',\n      'NT 4.0': 'NT4.0',\n      '2000': 'NT 5.0',\n      'XP': ['NT 5.1', 'NT 5.2'],\n      'Vista': 'NT 6.0',\n      '7': 'NT 6.1',\n      '8': 'NT 6.2',\n      '8.1': 'NT 6.3',\n      '10': ['NT 6.4', 'NT 10.0'],\n      'RT': 'ARM'\n    },\n    formFactorsMap = {\n      'embedded': 'Automotive',\n      'mobile': 'Mobile',\n      'tablet': ['Tablet', 'EInk'],\n      'smarttv': 'TV',\n      'wearable': 'Watch',\n      'xr': ['VR', 'XR'],\n      '?': ['Desktop', 'Unknown'],\n      '*': undefined\n    };\n\n  //////////////\n  // Regex map\n  /////////////\n\n  var defaultRegexes = {\n    browser: [[\n    // Most common regardless engine\n    /\\b(?:crmo|crios)\\/([\\w\\.]+)/i // Chrome for Android/iOS\n    ], [VERSION, [NAME, PREFIX_MOBILE + 'Chrome']], [/edg(?:e|ios|a)?\\/([\\w\\.]+)/i // Microsoft Edge\n    ], [VERSION, [NAME, 'Edge']], [\n    // Presto based\n    /(opera mini)\\/([-\\w\\.]+)/i,\n    // Opera Mini\n    /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,\n    // Opera Mobi/Tablet\n    /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i // Opera\n    ], [NAME, VERSION], [/opios[\\/ ]+([\\w\\.]+)/i // Opera mini on iphone >= 8.0\n    ], [VERSION, [NAME, OPERA + ' Mini']], [/\\bop(?:rg)?x\\/([\\w\\.]+)/i // Opera GX\n    ], [VERSION, [NAME, OPERA + ' GX']], [/\\bopr\\/([\\w\\.]+)/i // Opera Webkit\n    ], [VERSION, [NAME, OPERA]], [\n    // Mixed\n    /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i // Baidu\n    ], [VERSION, [NAME, 'Baidu']], [/\\b(?:mxbrowser|mxios|myie2)\\/?([-\\w\\.]*)\\b/i // Maxthon\n    ], [VERSION, [NAME, 'Maxthon']], [/(kindle)\\/([\\w\\.]+)/i,\n    // Kindle\n    /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\\/ ]?([\\w\\.]*)/i,\n    // Lunascape/Maxthon/Netfront/Jasmine/Blazer/Sleipnir\n    // Trident based\n    /(avant|iemobile|slim(?:browser|boat|jet))[\\/ ]?([\\d\\.]*)/i,\n    // Avant/IEMobile/SlimBrowser/SlimBoat/Slimjet\n    /(?:ms|\\()(ie) ([\\w\\.]+)/i,\n    // Internet Explorer\n\n    // Blink/Webkit/KHTML based                                         // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon/LG Browser/Otter/qutebrowser/Dooble\n    /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon|otter|dooble|(?:lg |qute)browser)\\/([-\\w\\.]+)/i,\n    // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ//Vivaldi/DuckDuckGo/Klar/Helio/Dragon\n    /(heytap|ovi|115|surf)browser\\/([\\d\\.]+)/i,\n    // HeyTap/Ovi/115/Surf\n    /(ecosia|weibo)(?:__| \\w+@)([\\d\\.]+)/i // Ecosia/Weibo\n    ], [NAME, VERSION], [/quark(?:pc)?\\/([-\\w\\.]+)/i // Quark\n    ], [VERSION, [NAME, 'Quark']], [/\\bddg\\/([\\w\\.]+)/i // DuckDuckGo\n    ], [VERSION, [NAME, 'DuckDuckGo']], [/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i // UCBrowser\n    ], [VERSION, [NAME, 'UCBrowser']], [/microm.+\\bqbcore\\/([\\w\\.]+)/i,\n    // WeChat Desktop for Windows Built-in Browser\n    /\\bqbcore\\/([\\w\\.]+).+microm/i, /micromessenger\\/([\\w\\.]+)/i // WeChat\n    ], [VERSION, [NAME, 'WeChat']], [/konqueror\\/([\\w\\.]+)/i // Konqueror\n    ], [VERSION, [NAME, 'Konqueror']], [/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i // IE11\n    ], [VERSION, [NAME, 'IE']], [/ya(?:search)?browser\\/([\\w\\.]+)/i // Yandex\n    ], [VERSION, [NAME, 'Yandex']], [/slbrowser\\/([\\w\\.]+)/i // Smart Lenovo Browser\n    ], [VERSION, [NAME, 'Smart ' + LENOVO + SUFFIX_BROWSER]], [/(avast|avg)\\/([\\w\\.]+)/i // Avast/AVG Secure Browser\n    ], [[NAME, /(.+)/, '$1 Secure' + SUFFIX_BROWSER], VERSION], [/\\bfocus\\/([\\w\\.]+)/i // Firefox Focus\n    ], [VERSION, [NAME, FIREFOX + ' Focus']], [/\\bopt\\/([\\w\\.]+)/i // Opera Touch\n    ], [VERSION, [NAME, OPERA + ' Touch']], [/coc_coc\\w+\\/([\\w\\.]+)/i // Coc Coc Browser\n    ], [VERSION, [NAME, 'Coc Coc']], [/dolfin\\/([\\w\\.]+)/i // Dolphin\n    ], [VERSION, [NAME, 'Dolphin']], [/coast\\/([\\w\\.]+)/i // Opera Coast\n    ], [VERSION, [NAME, OPERA + ' Coast']], [/miuibrowser\\/([\\w\\.]+)/i // MIUI Browser\n    ], [VERSION, [NAME, 'MIUI' + SUFFIX_BROWSER]], [/fxios\\/([\\w\\.-]+)/i // Firefox for iOS\n    ], [VERSION, [NAME, PREFIX_MOBILE + FIREFOX]], [/\\bqihoobrowser\\/?([\\w\\.]*)/i // 360\n    ], [VERSION, [NAME, '360']], [/\\b(qq)\\/([\\w\\.]+)/i // QQ\n    ], [[NAME, /(.+)/, '$1Browser'], VERSION], [/(oculus|sailfish|huawei|vivo|pico)browser\\/([\\w\\.]+)/i], [[NAME, /(.+)/, '$1' + SUFFIX_BROWSER], VERSION], [\n    // Oculus/Sailfish/HuaweiBrowser/VivoBrowser/PicoBrowser\n    /samsungbrowser\\/([\\w\\.]+)/i // Samsung Internet\n    ], [VERSION, [NAME, SAMSUNG + ' Internet']], [/metasr[\\/ ]?([\\d\\.]+)/i // Sogou Explorer\n    ], [VERSION, [NAME, SOGOU + ' Explorer']], [/(sogou)mo\\w+\\/([\\d\\.]+)/i // Sogou Mobile\n    ], [[NAME, SOGOU + ' Mobile'], VERSION], [/(electron)\\/([\\w\\.]+) safari/i,\n    // Electron-based App\n    /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,\n    // Tesla\n    /m?(qqbrowser|2345(?=browser|chrome|explorer))\\w*[\\/ ]?v?([\\w\\.]+)/i // QQ/2345\n    ], [NAME, VERSION], [/(lbbrowser|rekonq)/i // LieBao Browser/Rekonq\n    ], [NAME], [/ome\\/([\\w\\.]+) \\w* ?(iron) saf/i,\n    // Iron\n    /ome\\/([\\w\\.]+).+qihu (360)[es]e/i // 360\n    ], [VERSION, NAME], [\n    // WebView\n    /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i // Facebook App for iOS & Android\n    ], [[NAME, FACEBOOK], VERSION, [TYPE, INAPP]], [/(Klarna)\\/([\\w\\.]+)/i,\n    // Klarna Shopping Browser for iOS & Android\n    /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,\n    // Kakao App\n    /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,\n    // Naver InApp\n    /(daum)apps[\\/ ]([\\w\\.]+)/i,\n    // Daum App\n    /safari (line)\\/([\\w\\.]+)/i,\n    // Line App for iOS\n    /\\b(line)\\/([\\w\\.]+)\\/iab/i,\n    // Line App for Android\n    /(alipay)client\\/([\\w\\.]+)/i,\n    // Alipay\n    /(twitter)(?:and| f.+e\\/([\\w\\.]+))/i,\n    // Twitter\n    /(instagram|snapchat)[\\/ ]([-\\w\\.]+)/i // Instagram/Snapchat\n    ], [NAME, VERSION, [TYPE, INAPP]], [/\\bgsa\\/([\\w\\.]+) .*safari\\//i // Google Search Appliance on iOS\n    ], [VERSION, [NAME, 'GSA'], [TYPE, INAPP]], [/musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i // TikTok\n    ], [VERSION, [NAME, 'TikTok'], [TYPE, INAPP]], [/\\[(linkedin)app\\]/i // LinkedIn App for iOS & Android\n    ], [NAME, [TYPE, INAPP]], [/(chromium)[\\/ ]([-\\w\\.]+)/i // Chromium\n    ], [NAME, VERSION], [/headlesschrome(?:\\/([\\w\\.]+)| )/i // Chrome Headless\n    ], [VERSION, [NAME, CHROME + ' Headless']], [/ wv\\).+(chrome)\\/([\\w\\.]+)/i // Chrome WebView\n    ], [[NAME, CHROME + ' WebView'], VERSION], [/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i // Android Browser\n    ], [VERSION, [NAME, 'Android' + SUFFIX_BROWSER]], [/chrome\\/([\\w\\.]+) mobile/i // Chrome Mobile\n    ], [VERSION, [NAME, PREFIX_MOBILE + 'Chrome']], [/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i // Chrome/OmniWeb/Arora/Tizen/Nokia\n    ], [NAME, VERSION], [/version\\/([\\w\\.\\,]+) .*mobile(?:\\/\\w+ | ?)safari/i // Safari Mobile\n    ], [VERSION, [NAME, PREFIX_MOBILE + 'Safari']], [/iphone .*mobile(?:\\/\\w+ | ?)safari/i], [[NAME, PREFIX_MOBILE + 'Safari']], [/version\\/([\\w\\.\\,]+) .*(safari)/i // Safari\n    ], [VERSION, NAME], [/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i // Safari < 3.0\n    ], [NAME, [VERSION, '1']], [/(webkit|khtml)\\/([\\w\\.]+)/i], [NAME, VERSION], [\n    // Gecko based\n    /(?:mobile|tablet);.*(firefox)\\/([\\w\\.-]+)/i // Firefox Mobile\n    ], [[NAME, PREFIX_MOBILE + FIREFOX], VERSION], [/(navigator|netscape\\d?)\\/([-\\w\\.]+)/i // Netscape\n    ], [[NAME, 'Netscape'], VERSION], [/(wolvic|librewolf)\\/([\\w\\.]+)/i // Wolvic/LibreWolf\n    ], [NAME, VERSION], [/mobile vr; rv:([\\w\\.]+)\\).+firefox/i // Firefox Reality\n    ], [VERSION, [NAME, FIREFOX + ' Reality']], [/ekiohf.+(flow)\\/([\\w\\.]+)/i,\n    // Flow\n    /(swiftfox)/i,\n    // Swiftfox\n    /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\\/ ]?([\\w\\.\\+]+)/i,\n    // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n    /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n    // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n    /(firefox)\\/([\\w\\.]+)/i,\n    // Other Firefox-based\n    /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,\n    // Mozilla\n\n    // Other\n    /(amaya|dillo|doris|icab|ladybird|lynx|mosaic|netsurf|obigo|polaris|w3m|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n    // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Obigo/Mosaic/Go/ICE/UP.Browser/Ladybird\n    /\\b(links) \\(([\\w\\.]+)/i // Links\n    ], [NAME, [VERSION, /_/g, '.']], [/(cobalt)\\/([\\w\\.]+)/i // Cobalt\n    ], [NAME, [VERSION, /[^\\d\\.]+./, EMPTY]]],\n    cpu: [[/\\b((amd|x|x86[-_]?|wow|win)64)\\b/i // AMD64 (x64)\n    ], [[ARCHITECTURE, 'amd64']], [/(ia32(?=;))/i,\n    // IA32 (quicktime)\n    /\\b((i[346]|x)86)(pc)?\\b/i // IA32 (x86)\n    ], [[ARCHITECTURE, 'ia32']], [/\\b(aarch64|arm(v?[89]e?l?|_?64))\\b/i // ARM64\n    ], [[ARCHITECTURE, 'arm64']], [/\\b(arm(v[67])?ht?n?[fl]p?)\\b/i // ARMHF\n    ], [[ARCHITECTURE, 'armhf']], [\n    // PocketPC mistakenly identified as PowerPC\n    /( (ce|mobile); ppc;|\\/[\\w\\.]+arm\\b)/i], [[ARCHITECTURE, 'arm']], [/((ppc|powerpc)(64)?)( mac|;|\\))/i // PowerPC\n    ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [/ sun4\\w[;\\)]/i // SPARC\n    ], [[ARCHITECTURE, 'sparc']], [/\\b(avr32|ia64(?=;)|68k(?=\\))|\\barm(?=v([1-7]|[5-7]1)l?|;|eabi)|(irix|mips|sparc)(64)?\\b|pa-risc)/i\n    // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n    ], [[ARCHITECTURE, lowerize]]],\n    device: [[\n    //////////////////////////\n    // MOBILES & TABLETS\n    /////////////////////////\n\n    // Samsung\n    /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [/\\b((?:s[cgp]h|gt|sm)-(?![lr])\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i, /samsung[- ]((?!sm-[lr])[-\\w]+)/i, /sec-(sgh\\w+)/i], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n    // Apple\n    /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i // iPod/iPhone\n    ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [/\\((ipad);[-\\w\\),; ]+apple/i,\n    // iPad\n    /applecoremedia\\/[\\w\\.]+ \\((ipad)/i, /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [/(macintosh);/i], [MODEL, [VENDOR, APPLE]], [\n    // Sharp\n    /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n    // Honor\n    /\\b((?:brt|eln|hey2?|gdi|jdn)-a?[lnw]09|(?:ag[rm]3?|jdn2|kob2)-a?[lw]0[09]hn)(?: bui|\\)|;)/i], [MODEL, [VENDOR, HONOR], [TYPE, TABLET]], [/honor([-\\w ]+)[;\\)]/i], [MODEL, [VENDOR, HONOR], [TYPE, MOBILE]], [\n    // Huawei\n    /\\b((?:ag[rs][2356]?k?|bah[234]?|bg[2o]|bt[kv]|cmr|cpn|db[ry]2?|jdn2|got|kob2?k?|mon|pce|scm|sht?|[tw]gr|vrd)-[ad]?[lw][0125][09]b?|605hw|bg2-u03|(?:gem|fdr|m2|ple|t1)-[7a]0[1-4][lu]|t1-a2[13][lw]|mediapad[\\w\\. ]*(?= bui|\\)))\\b(?!.+d\\/s)/i], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [/(?:huawei)([-\\w ]+)[;\\)]/i, /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n    // Xiaomi\n    /oid[^\\)]+; (2[\\dbc]{4}(182|283|rp\\w{2})[cgl]|m2105k81a?c)(?: bui|\\))/i, /\\b((?:red)?mi[-_ ]?pad[\\w- ]*)(?: bui|\\))/i // Mi Pad tablets\n    ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [/\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,\n    // Xiaomi POCO\n    /\\b; (\\w+) build\\/hm\\1/i,\n    // Xiaomi Hongmi 'numeric' models\n    /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,\n    // Xiaomi Hongmi\n    /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,\n    // Xiaomi Redmi\n    /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,\n    // Xiaomi Redmi 'numeric' models\n    /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\\))/i,\n    // Xiaomi Mi\n    / ([\\w ]+) miui\\/v?\\d/i], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n    // OPPO\n    /; (\\w+) bui.+ oppo/i, /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i], [MODEL, [VENDOR, OPPO], [TYPE, MOBILE]], [/\\b(opd2(\\d{3}a?))(?: bui|\\))/i], [MODEL, [VENDOR, strMapper, {\n      'OnePlus': ['304', '403', '203'],\n      '*': OPPO\n    }], [TYPE, TABLET]], [\n    // BLU Vivo Series\n    /(vivo (5r?|6|8l?|go|one|s|x[il]?[2-4]?)[\\w\\+ ]*)(?: bui|\\))/i], [MODEL, [VENDOR, 'BLU'], [TYPE, MOBILE]], [\n    // Vivo\n    /; vivo (\\w+)(?: bui|\\))/i, /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n    // Realme\n    /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n    // Motorola\n    /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i, /\\bmot(?:orola)?[- ](\\w*)/i, /((?:moto(?! 360)[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n    // LG\n    /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i, /\\blg[-e;\\/ ]+(?!.*(?:browser|netcast|android tv|watch))(\\w+)/i, /\\blg-?([\\d\\w]+) bui/i], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n    // Lenovo\n    /(ideatab[-\\w ]+|602lv|d-42a|a101lv|a2109a|a3500-hv|s[56]000|pb-6505[my]|tb-?x?\\d{3,4}(?:f[cu]|xu|[av])|yt\\d?-[jx]?\\d+[lfmx])( bui|;|\\)|\\/)/i, /lenovo ?(b[68]0[08]0-?[hf]?|tab(?:[\\w- ]+?)|tb[\\w-]{6,7})( bui|;|\\)|\\/)/i], [MODEL, [VENDOR, LENOVO], [TYPE, TABLET]], [\n    // Nokia\n    /(nokia) (t[12][01])/i], [VENDOR, MODEL, [TYPE, TABLET]], [/(?:maemo|nokia).*(n900|lumia \\d+|rm-\\d+)/i, /nokia[-_ ]?(([-\\w\\. ]*))/i], [[MODEL, /_/g, ' '], [TYPE, MOBILE], [VENDOR, 'Nokia']], [\n    // Google\n    /(pixel (c|tablet))\\b/i // Google Pixel C/Tablet\n    ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i // Google Pixel\n    ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n    // Sony\n    /droid.+; (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [/sony tablet [ps]/i, /\\b(?:sony)?sgp\\w+(?: bui|\\))/i], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n    // OnePlus\n    / (kb2005|in20[12]5|be20[12][59])\\b/i, /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i], [MODEL, [VENDOR, ONEPLUS], [TYPE, MOBILE]], [\n    // Amazon\n    /(alexa)webm/i, /(kf[a-z]{2}wi|aeo(?!bc)\\w\\w)( bui|\\))/i,\n    // Kindle Fire without Silk / Echo Show\n    /(kf[a-z]+)( bui|\\)).+silk\\//i // Kindle Fire HD\n    ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i // Fire Phone\n    ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n    // BlackBerry\n    /(playbook);[-\\w\\),; ]+(rim)/i // BlackBerry PlayBook\n    ], [MODEL, VENDOR, [TYPE, TABLET]], [/\\b((?:bb[a-f]|st[hv])100-\\d)/i, /\\(bb10; (\\w+)/i // BlackBerry 10\n    ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n    // Asus\n    /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n    // HTC\n    /(nexus 9)/i // HTC Nexus 9\n    ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,\n    // HTC\n\n    // ZTE\n    /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i, /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n    ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n    // TCL\n    /tcl (xess p17aa)/i, /droid [\\w\\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])(_\\w(\\w|\\w\\w))?(\\)| bui)/i], [MODEL, [VENDOR, 'TCL'], [TYPE, TABLET]], [/droid [\\w\\.]+; (418(?:7d|8v)|5087z|5102l|61(?:02[dh]|25[adfh]|27[ai]|56[dh]|59k|65[ah])|a509dl|t(?:43(?:0w|1[adepqu])|50(?:6d|7[adju])|6(?:09dl|10k|12b|71[efho]|76[hjk])|7(?:66[ahju]|67[hw]|7[045][bh]|71[hk]|73o|76[ho]|79w|81[hks]?|82h|90[bhsy]|99b)|810[hs]))(_\\w(\\w|\\w\\w))?(\\)| bui)/i], [MODEL, [VENDOR, 'TCL'], [TYPE, MOBILE]], [\n    // itel\n    /(itel) ((\\w+))/i], [[VENDOR, lowerize], MODEL, [TYPE, strMapper, {\n      'tablet': ['p10001l', 'w7001'],\n      '*': 'mobile'\n    }]], [\n    // Acer\n    /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n    // Meizu\n    /droid.+; (m[1-5] note) bui/i, /\\bmz-([-\\w]{2,})/i], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n    // Ulefone\n    /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [\n    // Energizer\n    /; (energy ?\\w+)(?: bui|\\))/i, /; energizer ([\\w ]+)(?: bui|\\))/i], [MODEL, [VENDOR, 'Energizer'], [TYPE, MOBILE]], [\n    // Cat\n    /; cat (b35);/i, /; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\\))/i], [MODEL, [VENDOR, 'Cat'], [TYPE, MOBILE]], [\n    // Smartfren\n    /((?:new )?andromax[\\w- ]+)(?: bui|\\))/i], [MODEL, [VENDOR, 'Smartfren'], [TYPE, MOBILE]], [\n    // Nothing\n    /droid.+; (a(?:015|06[35]|142p?))/i], [MODEL, [VENDOR, 'Nothing'], [TYPE, MOBILE]], [\n    // Archos\n    /; (x67 5g|tikeasy \\w+|ac[1789]\\d\\w+)( b|\\))/i, /archos ?(5|gamepad2?|([\\w ]*[t1789]|hello) ?\\d+[\\w ]*)( b|\\))/i], [MODEL, [VENDOR, 'Archos'], [TYPE, TABLET]], [/archos ([\\w ]+)( b|\\))/i, /; (ac[3-6]\\d\\w{2,8})( b|\\))/i], [MODEL, [VENDOR, 'Archos'], [TYPE, MOBILE]], [\n    // MIXED\n    /(imo) (tab \\w+)/i,\n    // IMO\n    /(infinix) (x1101b?)/i // Infinix XPad\n    ], [VENDOR, MODEL, [TYPE, TABLET]], [/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus(?! zenw)|dell|jolla|meizu|motorola|polytron|infinix|tecno|micromax|advan)[-_ ]?([-\\w]*)/i,\n    // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron/Infinix/Tecno/Micromax/Advan\n    /; (blu|hmd|imo|tcl)[_ ]([\\w\\+ ]+?)(?: bui|\\)|; r)/i,\n    // BLU/HMD/IMO/TCL\n    /(hp) ([\\w ]+\\w)/i,\n    // HP iPAQ\n    /(microsoft); (lumia[\\w ]+)/i,\n    // Microsoft Lumia\n    /(lenovo)[-_ ]?([-\\w ]+?)(?: bui|\\)|\\/)/i,\n    // Lenovo\n    /(oppo) ?([\\w ]+) bui/i // OPPO\n    ], [VENDOR, MODEL, [TYPE, MOBILE]], [/(kobo)\\s(ereader|touch)/i,\n    // Kobo\n    /(hp).+(touchpad(?!.+tablet)|tablet)/i,\n    // HP TouchPad\n    /(kindle)\\/([\\w\\.]+)/i // Kindle\n    ], [VENDOR, MODEL, [TYPE, TABLET]], [/(surface duo)/i // Surface Duo\n    ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i // Fairphone\n    ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [/((?:tegranote|shield t(?!.+d tv))[\\w- ]*?)(?: b|\\))/i // Nvidia Tablets\n    ], [MODEL, [VENDOR, NVIDIA], [TYPE, TABLET]], [/(sprint) (\\w+)/i // Sprint Phones\n    ], [VENDOR, MODEL, [TYPE, MOBILE]], [/(kin\\.[onetw]{3})/i // Microsoft Kin\n    ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [/droid.+; ([c6]+|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i // Zebra\n    ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n    ///////////////////\n    // SMARTTVS\n    ///////////////////\n\n    /smart-tv.+(samsung)/i // Samsung\n    ], [VENDOR, [TYPE, SMARTTV]], [/hbbtv.+maple;(\\d+)/i], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [/tcast.+(lg)e?. ([-\\w]+)/i // LG SmartTV\n    ], [VENDOR, MODEL, [TYPE, SMARTTV]], [/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i], [[VENDOR, LG], [TYPE, SMARTTV]], [/(apple) ?tv/i // Apple TV\n    ], [VENDOR, [MODEL, APPLE + ' TV'], [TYPE, SMARTTV]], [/crkey.*devicetype\\/chromecast/i // Google Chromecast Third Generation\n    ], [[MODEL, CHROMECAST + ' Third Generation'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [/crkey.*devicetype\\/([^/]*)/i // Google Chromecast with specific device type\n    ], [[MODEL, /^/, 'Chromecast '], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [/fuchsia.*crkey/i // Google Chromecast Nest Hub\n    ], [[MODEL, CHROMECAST + ' Nest Hub'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [/crkey/i // Google Chromecast, Linux-based or unknown\n    ], [[MODEL, CHROMECAST], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [/(portaltv)/i // Facebook Portal TV\n    ], [MODEL, [VENDOR, FACEBOOK], [TYPE, SMARTTV]], [/droid.+aft(\\w+)( bui|\\))/i // Fire TV\n    ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [/(shield \\w+ tv)/i // Nvidia Shield TV\n    ], [MODEL, [VENDOR, NVIDIA], [TYPE, SMARTTV]], [/\\(dtv[\\);].+(aquos)/i, /(aquos-tv[\\w ]+)\\)/i // Sharp\n    ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]], [/(bravia[\\w ]+)( bui|\\))/i // Sony\n    ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [/(mi(tv|box)-?\\w+) bui/i // Xiaomi\n    ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [/Hbbtv.*(technisat) (.*);/i // TechniSAT\n    ], [VENDOR, MODEL, [TYPE, SMARTTV]], [/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,\n    // Roku\n    /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i // HbbTV devices\n    ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n    // SmartTV from Unidentified Vendors\n    /droid.+; ([\\w- ]+) (?:android tv|smart[- ]?tv)/i], [MODEL, [TYPE, SMARTTV]], [/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i], [[TYPE, SMARTTV]], [\n    ///////////////////\n    // CONSOLES\n    ///////////////////\n\n    /(ouya)/i,\n    // Ouya\n    /(nintendo) (\\w+)/i // Nintendo\n    ], [VENDOR, MODEL, [TYPE, CONSOLE]], [/droid.+; (shield)( bui|\\))/i // Nvidia Portable\n    ], [MODEL, [VENDOR, NVIDIA], [TYPE, CONSOLE]], [/(playstation \\w+)/i // Playstation\n    ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i // Microsoft Xbox\n    ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n    ///////////////////\n    // WEARABLES\n    ///////////////////\n\n    /\\b(sm-[lr]\\d\\d[0156][fnuw]?s?|gear live)\\b/i // Samsung Galaxy Watch\n    ], [MODEL, [VENDOR, SAMSUNG], [TYPE, WEARABLE]], [/((pebble))app/i,\n    // Pebble\n    /(asus|google|lg|oppo) ((pixel |zen)?watch[\\w ]*)( bui|\\))/i // Asus ZenWatch / LG Watch / Pixel Watch\n    ], [VENDOR, MODEL, [TYPE, WEARABLE]], [/(ow(?:19|20)?we?[1-3]{1,3})/i // Oppo Watch\n    ], [MODEL, [VENDOR, OPPO], [TYPE, WEARABLE]], [/(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i // Apple Watch\n    ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [/(opwwe\\d{3})/i // OnePlus Watch\n    ], [MODEL, [VENDOR, ONEPLUS], [TYPE, WEARABLE]], [/(moto 360)/i // Motorola 360\n    ], [MODEL, [VENDOR, MOTOROLA], [TYPE, WEARABLE]], [/(smartwatch 3)/i // Sony SmartWatch\n    ], [MODEL, [VENDOR, SONY], [TYPE, WEARABLE]], [/(g watch r)/i // LG G Watch R\n    ], [MODEL, [VENDOR, LG], [TYPE, WEARABLE]], [/droid.+; (wt63?0{2,3})\\)/i], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n    ///////////////////\n    // XR\n    ///////////////////\n\n    /droid.+; (glass) \\d/i // Google Glass\n    ], [MODEL, [VENDOR, GOOGLE], [TYPE, XR]], [/(pico) (4|neo3(?: link|pro)?)/i // Pico\n    ], [VENDOR, MODEL, [TYPE, XR]], [/(quest( \\d| pro)?s?).+vr/i // Meta Quest\n    ], [MODEL, [VENDOR, FACEBOOK], [TYPE, XR]], [\n    ///////////////////\n    // EMBEDDED\n    ///////////////////\n\n    /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i // Tesla\n    ], [VENDOR, [TYPE, EMBEDDED]], [/(aeobc)\\b/i // Echo Dot\n    ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [/(homepod).+mac os/i // Apple HomePod\n    ], [MODEL, [VENDOR, APPLE], [TYPE, EMBEDDED]], [/windows iot/i], [[TYPE, EMBEDDED]], [\n    ////////////////////\n    // MIXED (GENERIC)\n    ///////////////////\n\n    /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+?(mobile|vr|\\d) safari/i], [MODEL, [TYPE, strMapper, {\n      'mobile': 'Mobile',\n      'xr': 'VR',\n      '*': TABLET\n    }]], [/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i // Unidentifiable Tablet\n    ], [[TYPE, TABLET]], [/(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i // Unidentifiable Mobile\n    ], [[TYPE, MOBILE]], [/droid .+?; ([\\w\\. -]+)( bui|\\))/i // Generic Android Device\n    ], [MODEL, [VENDOR, 'Generic']]],\n    engine: [[/windows.+ edge\\/([\\w\\.]+)/i // EdgeHTML\n    ], [VERSION, [NAME, EDGE + 'HTML']], [/(arkweb)\\/([\\w\\.]+)/i // ArkWeb\n    ], [NAME, VERSION], [/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i // Blink\n    ], [VERSION, [NAME, 'Blink']], [/(presto)\\/([\\w\\.]+)/i,\n    // Presto\n    /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\\/([\\w\\.]+)/i,\n    // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna/Servo\n    /ekioh(flow)\\/([\\w\\.]+)/i,\n    // Flow\n    /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,\n    // KHTML/Tasman/Links\n    /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,\n    // iCab\n\n    /\\b(libweb)/i // LibWeb\n    ], [NAME, VERSION], [/ladybird\\//i], [[NAME, 'LibWeb']], [/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i // Gecko\n    ], [VERSION, NAME]],\n    os: [[\n    // Windows\n    /microsoft (windows) (vista|xp)/i // Windows (iTunes)\n    ], [NAME, VERSION], [/(windows (?:phone(?: os)?|mobile|iot))[\\/ ]?([\\d\\.\\w ]*)/i // Windows Phone\n    ], [NAME, [VERSION, strMapper, windowsVersionMap]], [/windows nt 6\\.2; (arm)/i,\n    // Windows RT\n    /windows[\\/ ]([ntce\\d\\. ]+\\w)(?!.+xbox)/i, /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i], [[VERSION, strMapper, windowsVersionMap], [NAME, WINDOWS]], [\n    // iOS/macOS\n    /[adehimnop]{4,7}\\b(?:.*os ([\\w]+) like mac|; opera)/i,\n    // iOS\n    /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i, /cfnetwork\\/.+darwin/i], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [/(mac os x) ?([\\w\\. ]*)/i, /(macintosh|mac_powerpc\\b)(?!.+haiku)/i // Mac OS\n    ], [[NAME, 'macOS'], [VERSION, /_/g, '.']], [\n    // Google Chromecast\n    /android ([\\d\\.]+).*crkey/i // Google Chromecast, Android-based\n    ], [VERSION, [NAME, CHROMECAST + ' Android']], [/fuchsia.*crkey\\/([\\d\\.]+)/i // Google Chromecast, Fuchsia-based\n    ], [VERSION, [NAME, CHROMECAST + ' Fuchsia']], [/crkey\\/([\\d\\.]+).*devicetype\\/smartspeaker/i // Google Chromecast, Linux-based Smart Speaker\n    ], [VERSION, [NAME, CHROMECAST + ' SmartSpeaker']], [/linux.*crkey\\/([\\d\\.]+)/i // Google Chromecast, Legacy Linux-based\n    ], [VERSION, [NAME, CHROMECAST + ' Linux']], [/crkey\\/([\\d\\.]+)/i // Google Chromecast, unknown\n    ], [VERSION, [NAME, CHROMECAST]], [\n    // Mobile OSes\n    /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i // Android-x86/HarmonyOS\n    ], [VERSION, NAME], [/(ubuntu) ([\\w\\.]+) like android/i // Ubuntu Touch\n    ], [[NAME, /(.+)/, '$1 Touch'], VERSION], [\n    // Android/Blackberry/WebOS/QNX/Bada/RIM/KaiOS/Maemo/MeeGo/S40/Sailfish OS/OpenHarmony/Tizen\n    /(android|bada|blackberry|kaios|maemo|meego|openharmony|qnx|rim tablet os|sailfish|series40|symbian|tizen|webos)\\w*[-\\/\\.; ]?([\\d\\.]*)/i], [NAME, VERSION], [/\\(bb(10);/i // BlackBerry 10\n    ], [VERSION, [NAME, BLACKBERRY]], [/(?:symbian ?os|symbos|s60(?=;)|series ?60)[-\\/ ]?([\\w\\.]*)/i // Symbian\n    ], [VERSION, [NAME, 'Symbian']], [/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n    ], [VERSION, [NAME, FIREFOX + ' OS']], [/web0s;.+rt(tv)/i, /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i // WebOS\n    ], [VERSION, [NAME, 'webOS']], [/watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i // watchOS\n    ], [VERSION, [NAME, 'watchOS']], [\n    // Google ChromeOS\n    /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i // Chromium OS\n    ], [[NAME, \"Chrome OS\"], VERSION], [\n    // Smart TVs\n    /panasonic;(viera)/i,\n    // Panasonic Viera\n    /(netrange)mmh/i,\n    // Netrange\n    /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,\n    // NetTV\n\n    // Console\n    /(nintendo|playstation) (\\w+)/i,\n    // Nintendo/Playstation\n    /(xbox); +xbox ([^\\);]+)/i,\n    // Microsoft Xbox (360, One, X, S, Series X, Series S)\n    /(pico) .+os([\\w\\.]+)/i,\n    // Pico\n\n    // Other\n    /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,\n    // Joli/Palm\n    /(mint)[\\/\\(\\) ]?(\\w*)/i,\n    // Mint\n    /(mageia|vectorlinux)[; ]/i,\n    // Mageia/VectorLinux\n    /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n    // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n    /(hurd|linux)(?: arm\\w*| x86\\w*| ?)([\\w\\.]*)/i,\n    // Hurd/Linux\n    /(gnu) ?([\\w\\.]*)/i,\n    // GNU\n    /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,\n    // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n    /(haiku) (\\w+)/i // Haiku\n    ], [NAME, VERSION], [/(sunos) ?([\\w\\.\\d]*)/i // Solaris\n    ], [[NAME, 'Solaris'], VERSION], [/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,\n    // Solaris\n    /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,\n    // AIX\n    /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,\n    // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS\n    /(unix) ?([\\w\\.]*)/i // UNIX\n    ], [NAME, VERSION]]\n  };\n\n  /////////////////\n  // Factories\n  ////////////////\n\n  var defaultProps = function () {\n    var props = {\n      init: {},\n      isIgnore: {},\n      isIgnoreRgx: {},\n      toString: {}\n    };\n    setProps.call(props.init, [[UA_BROWSER, [NAME, VERSION, MAJOR, TYPE]], [UA_CPU, [ARCHITECTURE]], [UA_DEVICE, [TYPE, MODEL, VENDOR]], [UA_ENGINE, [NAME, VERSION]], [UA_OS, [NAME, VERSION]]]);\n    setProps.call(props.isIgnore, [[UA_BROWSER, [VERSION, MAJOR]], [UA_ENGINE, [VERSION]], [UA_OS, [VERSION]]]);\n    setProps.call(props.isIgnoreRgx, [[UA_BROWSER, / ?browser$/i], [UA_OS, / ?os$/i]]);\n    setProps.call(props.toString, [[UA_BROWSER, [NAME, VERSION]], [UA_CPU, [ARCHITECTURE]], [UA_DEVICE, [VENDOR, MODEL]], [UA_ENGINE, [NAME, VERSION]], [UA_OS, [NAME, VERSION]]]);\n    return props;\n  }();\n  var createIData = function (item, itemType) {\n    var init_props = defaultProps.init[itemType],\n      is_ignoreProps = defaultProps.isIgnore[itemType] || 0,\n      is_ignoreRgx = defaultProps.isIgnoreRgx[itemType] || 0,\n      toString_props = defaultProps.toString[itemType] || 0;\n    function IData() {\n      setProps.call(this, init_props);\n    }\n    IData.prototype.getItem = function () {\n      return item;\n    };\n    IData.prototype.withClientHints = function () {\n      // nodejs / non-client-hints browsers\n      if (!NAVIGATOR_UADATA) {\n        return item.parseCH().get();\n      }\n\n      // browsers based on chromium 85+\n      return NAVIGATOR_UADATA.getHighEntropyValues(CH_ALL_VALUES).then(function (res) {\n        return item.setCH(new UACHData(res, false)).parseCH().get();\n      });\n    };\n    IData.prototype.withFeatureCheck = function () {\n      return item.detectFeature().get();\n    };\n    if (itemType != UA_RESULT) {\n      IData.prototype.is = function (strToCheck) {\n        var is = false;\n        for (var i in this) {\n          if (this.hasOwnProperty(i) && !has(is_ignoreProps, i) && lowerize(is_ignoreRgx ? strip(is_ignoreRgx, this[i]) : this[i]) == lowerize(is_ignoreRgx ? strip(is_ignoreRgx, strToCheck) : strToCheck)) {\n            is = true;\n            if (strToCheck != UNDEF_TYPE) break;\n          } else if (strToCheck == UNDEF_TYPE && is) {\n            is = !is;\n            break;\n          }\n        }\n        return is;\n      };\n      IData.prototype.toString = function () {\n        var str = EMPTY;\n        for (var i in toString_props) {\n          if (typeof this[toString_props[i]] !== UNDEF_TYPE) {\n            str += (str ? ' ' : EMPTY) + this[toString_props[i]];\n          }\n        }\n        return str || UNDEF_TYPE;\n      };\n    }\n    if (!NAVIGATOR_UADATA) {\n      IData.prototype.then = function (cb) {\n        var that = this;\n        var IDataResolve = function () {\n          for (var prop in that) {\n            if (that.hasOwnProperty(prop)) {\n              this[prop] = that[prop];\n            }\n          }\n        };\n        IDataResolve.prototype = {\n          is: IData.prototype.is,\n          toString: IData.prototype.toString\n        };\n        var resolveData = new IDataResolve();\n        cb(resolveData);\n        return resolveData;\n      };\n    }\n    return new IData();\n  };\n\n  /////////////////\n  // Constructor\n  ////////////////\n\n  function UACHData(uach, isHttpUACH) {\n    uach = uach || {};\n    setProps.call(this, CH_ALL_VALUES);\n    if (isHttpUACH) {\n      setProps.call(this, [[BRANDS, itemListToArray(uach[CH_HEADER])], [FULLVERLIST, itemListToArray(uach[CH_HEADER_FULL_VER_LIST])], [MOBILE, /\\?1/.test(uach[CH_HEADER_MOBILE])], [MODEL, stripQuotes(uach[CH_HEADER_MODEL])], [PLATFORM, stripQuotes(uach[CH_HEADER_PLATFORM])], [PLATFORMVER, stripQuotes(uach[CH_HEADER_PLATFORM_VER])], [ARCHITECTURE, stripQuotes(uach[CH_HEADER_ARCH])], [FORMFACTORS, itemListToArray(uach[CH_HEADER_FORM_FACTORS])], [BITNESS, stripQuotes(uach[CH_HEADER_BITNESS])]]);\n    } else {\n      for (var prop in uach) {\n        if (this.hasOwnProperty(prop) && typeof uach[prop] !== UNDEF_TYPE) this[prop] = uach[prop];\n      }\n    }\n  }\n  function UAItem(itemType, ua, rgxMap, uaCH) {\n    this.get = function (prop) {\n      if (!prop) return this.data;\n      return this.data.hasOwnProperty(prop) ? this.data[prop] : undefined;\n    };\n    this.set = function (prop, val) {\n      this.data[prop] = val;\n      return this;\n    };\n    this.setCH = function (ch) {\n      this.uaCH = ch;\n      return this;\n    };\n    this.detectFeature = function () {\n      if (NAVIGATOR && NAVIGATOR.userAgent == this.ua) {\n        switch (this.itemType) {\n          case UA_BROWSER:\n            // Brave-specific detection\n            if (NAVIGATOR.brave && typeof NAVIGATOR.brave.isBrave == FUNC_TYPE) {\n              this.set(NAME, 'Brave');\n            }\n            break;\n          case UA_DEVICE:\n            // Chrome-specific detection: check for 'mobile' value of navigator.userAgentData\n            if (!this.get(TYPE) && NAVIGATOR_UADATA && NAVIGATOR_UADATA[MOBILE]) {\n              this.set(TYPE, MOBILE);\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (this.get(MODEL) == 'Macintosh' && NAVIGATOR && typeof NAVIGATOR.standalone !== UNDEF_TYPE && NAVIGATOR.maxTouchPoints && NAVIGATOR.maxTouchPoints > 2) {\n              this.set(MODEL, 'iPad').set(TYPE, TABLET);\n            }\n            break;\n          case UA_OS:\n            // Chrome-specific detection: check for 'platform' value of navigator.userAgentData\n            if (!this.get(NAME) && NAVIGATOR_UADATA && NAVIGATOR_UADATA[PLATFORM]) {\n              this.set(NAME, NAVIGATOR_UADATA[PLATFORM]);\n            }\n            break;\n          case UA_RESULT:\n            var data = this.data;\n            var detect = function (itemType) {\n              return data[itemType].getItem().detectFeature().get();\n            };\n            this.set(UA_BROWSER, detect(UA_BROWSER)).set(UA_CPU, detect(UA_CPU)).set(UA_DEVICE, detect(UA_DEVICE)).set(UA_ENGINE, detect(UA_ENGINE)).set(UA_OS, detect(UA_OS));\n        }\n      }\n      return this;\n    };\n    this.parseUA = function () {\n      if (this.itemType != UA_RESULT) {\n        rgxMapper.call(this.data, this.ua, this.rgxMap);\n      }\n      if (this.itemType == UA_BROWSER) {\n        this.set(MAJOR, majorize(this.get(VERSION)));\n      }\n      return this;\n    };\n    this.parseCH = function () {\n      var uaCH = this.uaCH,\n        rgxMap = this.rgxMap;\n      switch (this.itemType) {\n        case UA_BROWSER:\n        case UA_ENGINE:\n          var brands = uaCH[FULLVERLIST] || uaCH[BRANDS],\n            prevName;\n          if (brands) {\n            for (var i in brands) {\n              var brandName = brands[i].brand || brands[i],\n                brandVersion = brands[i].version;\n              if (this.itemType == UA_BROWSER && !/not.a.brand/i.test(brandName) && (!prevName || /chrom/i.test(prevName) && brandName != CHROMIUM)) {\n                brandName = strMapper(brandName, {\n                  'Chrome': 'Google Chrome',\n                  'Edge': 'Microsoft Edge',\n                  'Chrome WebView': 'Android WebView',\n                  'Chrome Headless': 'HeadlessChrome',\n                  'Huawei Browser': 'HuaweiBrowser',\n                  'MIUI Browser': 'Miui Browser',\n                  'Opera Mobi': 'OperaMobile',\n                  'Yandex': 'YaBrowser'\n                });\n                this.set(NAME, brandName).set(VERSION, brandVersion).set(MAJOR, majorize(brandVersion));\n                prevName = brandName;\n              }\n              if (this.itemType == UA_ENGINE && brandName == CHROMIUM) {\n                this.set(VERSION, brandVersion);\n              }\n            }\n          }\n          break;\n        case UA_CPU:\n          var archName = uaCH[ARCHITECTURE];\n          if (archName) {\n            if (archName && uaCH[BITNESS] == '64') archName += '64';\n            rgxMapper.call(this.data, archName + ';', rgxMap);\n          }\n          break;\n        case UA_DEVICE:\n          if (uaCH[MOBILE]) {\n            this.set(TYPE, MOBILE);\n          }\n          if (uaCH[MODEL]) {\n            this.set(MODEL, uaCH[MODEL]);\n            if (!this.get(TYPE) || !this.get(VENDOR)) {\n              var reParse = {};\n              rgxMapper.call(reParse, 'droid 9; ' + uaCH[MODEL] + ')', rgxMap);\n              if (!this.get(TYPE) && !!reParse.type) {\n                this.set(TYPE, reParse.type);\n              }\n              if (!this.get(VENDOR) && !!reParse.vendor) {\n                this.set(VENDOR, reParse.vendor);\n              }\n            }\n          }\n          if (uaCH[FORMFACTORS]) {\n            var ff;\n            if (typeof uaCH[FORMFACTORS] !== 'string') {\n              var idx = 0;\n              while (!ff && idx < uaCH[FORMFACTORS].length) {\n                ff = strMapper(uaCH[FORMFACTORS][idx++], formFactorsMap);\n              }\n            } else {\n              ff = strMapper(uaCH[FORMFACTORS], formFactorsMap);\n            }\n            this.set(TYPE, ff);\n          }\n          break;\n        case UA_OS:\n          var osName = uaCH[PLATFORM];\n          if (osName) {\n            var osVersion = uaCH[PLATFORMVER];\n            if (osName == WINDOWS) osVersion = parseInt(majorize(osVersion), 10) >= 13 ? '11' : '10';\n            this.set(NAME, osName).set(VERSION, osVersion);\n          }\n          // Xbox-Specific Detection\n          if (this.get(NAME) == WINDOWS && uaCH[MODEL] == 'Xbox') {\n            this.set(NAME, 'Xbox').set(VERSION, undefined);\n          }\n          break;\n        case UA_RESULT:\n          var data = this.data;\n          var parse = function (itemType) {\n            return data[itemType].getItem().setCH(uaCH).parseCH().get();\n          };\n          this.set(UA_BROWSER, parse(UA_BROWSER)).set(UA_CPU, parse(UA_CPU)).set(UA_DEVICE, parse(UA_DEVICE)).set(UA_ENGINE, parse(UA_ENGINE)).set(UA_OS, parse(UA_OS));\n      }\n      return this;\n    };\n    setProps.call(this, [['itemType', itemType], ['ua', ua], ['uaCH', uaCH], ['rgxMap', rgxMap], ['data', createIData(this, itemType)]]);\n    return this;\n  }\n  function UAParser(ua, extensions, headers) {\n    if (typeof ua === OBJ_TYPE) {\n      if (isExtensions(ua, true)) {\n        if (typeof extensions === OBJ_TYPE) {\n          headers = extensions; // case UAParser(extensions, headers)           \n        }\n        extensions = ua; // case UAParser(extensions)\n      } else {\n        headers = ua; // case UAParser(headers)\n        extensions = undefined;\n      }\n      ua = undefined;\n    } else if (typeof ua === STR_TYPE && !isExtensions(extensions, true)) {\n      headers = extensions; // case UAParser(ua, headers)\n      extensions = undefined;\n    }\n\n    // Convert Headers object into a plain object\n    if (headers && typeof headers.append === FUNC_TYPE) {\n      var kv = {};\n      headers.forEach(function (v, k) {\n        kv[k] = v;\n      });\n      headers = kv;\n    }\n    if (!(this instanceof UAParser)) {\n      return new UAParser(ua, extensions, headers).getResult();\n    }\n    var userAgent = typeof ua === STR_TYPE ? ua :\n      // Passed user-agent string\n      headers && headers[USER_AGENT] ? headers[USER_AGENT] :\n      // User-Agent from passed headers\n      NAVIGATOR && NAVIGATOR.userAgent ? NAVIGATOR.userAgent :\n      // navigator.userAgent\n      EMPTY,\n      // empty string\n\n      httpUACH = new UACHData(headers, true),\n      regexMap = extensions ? extend(defaultRegexes, extensions) : defaultRegexes,\n      createItemFunc = function (itemType) {\n        if (itemType == UA_RESULT) {\n          return function () {\n            return new UAItem(itemType, userAgent, regexMap, httpUACH).set('ua', userAgent).set(UA_BROWSER, this.getBrowser()).set(UA_CPU, this.getCPU()).set(UA_DEVICE, this.getDevice()).set(UA_ENGINE, this.getEngine()).set(UA_OS, this.getOS()).get();\n          };\n        } else {\n          return function () {\n            return new UAItem(itemType, userAgent, regexMap[itemType], httpUACH).parseUA().get();\n          };\n        }\n      };\n\n    // public methods\n    setProps.call(this, [['getBrowser', createItemFunc(UA_BROWSER)], ['getCPU', createItemFunc(UA_CPU)], ['getDevice', createItemFunc(UA_DEVICE)], ['getEngine', createItemFunc(UA_ENGINE)], ['getOS', createItemFunc(UA_OS)], ['getResult', createItemFunc(UA_RESULT)], ['getUA', function () {\n      return userAgent;\n    }], ['setUA', function (ua) {\n      if (isString(ua)) userAgent = ua.length > UA_MAX_LENGTH ? trim(ua, UA_MAX_LENGTH) : ua;\n      return this;\n    }]]).setUA(userAgent);\n    return this;\n  }\n  UAParser.VERSION = LIBVERSION;\n  UAParser.BROWSER = enumerize([NAME, VERSION, MAJOR, TYPE]);\n  UAParser.CPU = enumerize([ARCHITECTURE]);\n  UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n  UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n  ///////////\n  // Export\n  //////////\n\n  // check js environment\n  if (typeof exports !== UNDEF_TYPE) {\n    // nodejs env\n    if (typeof module !== UNDEF_TYPE && module.exports) {\n      exports = module.exports = UAParser;\n    }\n    exports.UAParser = UAParser;\n  } else {\n    // requirejs env (optional)\n    if (typeof define === FUNC_TYPE && define.amd) {\n      define(function () {\n        return UAParser;\n      });\n    } else if (isWindow) {\n      // browser env\n      window.UAParser = UAParser;\n    }\n  }\n\n  // jQuery/Zepto specific (optional)\n  // Note:\n  //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n  //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n  //   and we should catch that.\n  var $ = isWindow && (window.jQuery || window.Zepto);\n  if ($ && !$.ua) {\n    var parser = new UAParser();\n    $.ua = parser.getResult();\n    $.ua.get = function () {\n      return parser.getUA();\n    };\n    $.ua.set = function (ua) {\n      parser.setUA(ua);\n      var result = parser.getResult();\n      for (var prop in result) {\n        $.ua[prop] = result[prop];\n      }\n    };\n  }\n})(typeof window === 'object' ? window : this);","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}