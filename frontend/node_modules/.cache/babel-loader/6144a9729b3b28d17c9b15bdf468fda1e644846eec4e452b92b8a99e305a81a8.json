{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProxyEventEmitter = void 0;\nclass ProxyEventEmitter {\n  eventEmitters;\n  constructor(eventEmitters) {\n    this.eventEmitters = eventEmitters;\n  }\n  emit(eventName, ...args) {\n    this.eventEmitters.forEach(emitter => emitter.emit(eventName, ...args));\n    return true;\n  }\n  on(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.on(eventName, listener));\n    return this;\n  }\n  off(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.off(eventName, listener));\n    return this;\n  }\n  once(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.once(eventName, listener));\n    return this;\n  }\n  addListener(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.addListener(eventName, listener));\n    return this;\n  }\n  prependListener(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.prependListener(eventName, listener));\n    return this;\n  }\n  prependOnceListener(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.prependOnceListener(eventName, listener));\n    return this;\n  }\n  removeAllListeners(event) {\n    this.eventEmitters.forEach(emitter => emitter.removeAllListeners(event));\n    return this;\n  }\n  removeListener(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.removeListener(eventName, listener));\n    return this;\n  }\n  setMaxListeners(n) {\n    this.eventEmitters.forEach(emitter => emitter.setMaxListeners(n));\n    return this;\n  }\n  eventNames() {\n    return this.eventEmitters[0].eventNames();\n  }\n  getMaxListeners() {\n    return this.eventEmitters[0].getMaxListeners();\n  }\n  listenerCount(eventName, listener) {\n    return this.eventEmitters[0].listenerCount(eventName, listener);\n  }\n  rawListeners(eventName) {\n    return this.eventEmitters[0].rawListeners(eventName);\n  }\n  listeners(eventName) {\n    return this.eventEmitters[0].listeners(eventName);\n  }\n}\nexports.ProxyEventEmitter = ProxyEventEmitter;\n//# sourceMappingURL=proxy-event-emitter.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}