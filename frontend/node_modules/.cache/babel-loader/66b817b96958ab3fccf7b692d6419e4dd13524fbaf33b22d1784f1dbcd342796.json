{"ast":null,"code":"import { useWallet } from '@solana/wallet-adapter-react';\nimport { useCallback } from 'react';\nexport function useWalletConnectButton() {\n  const {\n    connect,\n    connected,\n    connecting,\n    wallet\n  } = useWallet();\n  let buttonState;\n  if (connecting) {\n    buttonState = 'connecting';\n  } else if (connected) {\n    buttonState = 'connected';\n  } else if (wallet) {\n    buttonState = 'has-wallet';\n  } else {\n    buttonState = 'no-wallet';\n  }\n  const handleConnectButtonClick = useCallback(() => {\n    connect().catch(() => {\n      // Silently catch because any errors are caught by the context `onError` handler\n    });\n  }, [connect]);\n  return {\n    buttonDisabled: buttonState !== 'has-wallet',\n    buttonState,\n    onButtonClick: buttonState === 'has-wallet' ? handleConnectButtonClick : undefined,\n    walletIcon: wallet?.adapter.icon,\n    walletName: wallet?.adapter.name\n  };\n}","map":{"version":3,"names":["useWallet","useCallback","useWalletConnectButton","connect","connected","connecting","wallet","buttonState","handleConnectButtonClick","catch","buttonDisabled","onButtonClick","undefined","walletIcon","adapter","icon","walletName","name"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@solana\\wallet-adapter-base-ui\\src\\useWalletConnectButton.ts"],"sourcesContent":["import { useWallet, type Wallet } from '@solana/wallet-adapter-react';\nimport { useCallback } from 'react';\n\ntype ButtonState = {\n    buttonDisabled: boolean;\n    buttonState: 'connecting' | 'connected' | 'has-wallet' | 'no-wallet';\n    onButtonClick?: () => void;\n    walletIcon?: Wallet['adapter']['icon'];\n    walletName?: Wallet['adapter']['name'];\n};\n\nexport function useWalletConnectButton(): ButtonState {\n    const { connect, connected, connecting, wallet } = useWallet();\n    let buttonState: ButtonState['buttonState'];\n    if (connecting) {\n        buttonState = 'connecting';\n    } else if (connected) {\n        buttonState = 'connected';\n    } else if (wallet) {\n        buttonState = 'has-wallet';\n    } else {\n        buttonState = 'no-wallet';\n    }\n    const handleConnectButtonClick = useCallback(() => {\n        connect().catch(() => {\n            // Silently catch because any errors are caught by the context `onError` handler\n        });\n    }, [connect]);\n    return {\n        buttonDisabled: buttonState !== 'has-wallet',\n        buttonState,\n        onButtonClick: buttonState === 'has-wallet' ? handleConnectButtonClick : undefined,\n        walletIcon: wallet?.adapter.icon,\n        walletName: wallet?.adapter.name,\n    };\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAqB,8BAA8B;AACrE,SAASC,WAAW,QAAQ,OAAO;AAUnC,OAAM,SAAUC,sBAAsBA,CAAA;EAClC,MAAM;IAAEC,OAAO;IAAEC,SAAS;IAAEC,UAAU;IAAEC;EAAM,CAAE,GAAGN,SAAS,EAAE;EAC9D,IAAIO,WAAuC;EAC3C,IAAIF,UAAU,EAAE;IACZE,WAAW,GAAG,YAAY;EAC9B,CAAC,MAAM,IAAIH,SAAS,EAAE;IAClBG,WAAW,GAAG,WAAW;EAC7B,CAAC,MAAM,IAAID,MAAM,EAAE;IACfC,WAAW,GAAG,YAAY;EAC9B,CAAC,MAAM;IACHA,WAAW,GAAG,WAAW;EAC7B;EACA,MAAMC,wBAAwB,GAAGP,WAAW,CAAC,MAAK;IAC9CE,OAAO,EAAE,CAACM,KAAK,CAAC,MAAK;MACjB;IAAA,CACH,CAAC;EACN,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EACb,OAAO;IACHO,cAAc,EAAEH,WAAW,KAAK,YAAY;IAC5CA,WAAW;IACXI,aAAa,EAAEJ,WAAW,KAAK,YAAY,GAAGC,wBAAwB,GAAGI,SAAS;IAClFC,UAAU,EAAEP,MAAM,EAAEQ,OAAO,CAACC,IAAI;IAChCC,UAAU,EAAEV,MAAM,EAAEQ,OAAO,CAACG;GAC/B;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}