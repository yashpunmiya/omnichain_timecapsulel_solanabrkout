{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\nvar Transform = require('stream').Transform;\nvar inherits = require('inherits');\nfunction HashBase(blockSize) {\n  Transform.call(this);\n  this._block = Buffer.allocUnsafe(blockSize);\n  this._blockSize = blockSize;\n  this._blockOffset = 0;\n  this._length = [0, 0, 0, 0];\n  this._finalized = false;\n}\ninherits(HashBase, Transform);\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null;\n  try {\n    this.update(chunk, encoding);\n  } catch (err) {\n    error = err;\n  }\n  callback(error);\n};\nHashBase.prototype._flush = function (callback) {\n  var error = null;\n  try {\n    this.push(this.digest());\n  } catch (err) {\n    error = err;\n  }\n  callback(error);\n};\nvar useUint8Array = typeof Uint8Array !== 'undefined';\nvar useArrayBuffer = typeof ArrayBuffer !== 'undefined' && typeof Uint8Array !== 'undefined' && ArrayBuffer.isView && (Buffer.prototype instanceof Uint8Array || Buffer.TYPED_ARRAY_SUPPORT);\nfunction toBuffer(data, encoding) {\n  // No need to do anything for exact instance\n  // This is only valid when safe-buffer.Buffer === buffer.Buffer, i.e. when Buffer.from/Buffer.alloc existed\n  if (data instanceof Buffer) return data;\n\n  // Convert strings to Buffer\n  if (typeof data === 'string') return Buffer.from(data, encoding);\n\n  /*\n   * Wrap any TypedArray instances and DataViews\n   * Makes sense only on engines with full TypedArray support -- let Buffer detect that\n   */\n  if (useArrayBuffer && ArrayBuffer.isView(data)) {\n    if (data.byteLength === 0) return Buffer.alloc(0); // Bug in Node.js <6.3.1, which treats this as out-of-bounds\n    var res = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n    // Recheck result size, as offset/length doesn't work on Node.js <5.10\n    // We just go to Uint8Array case if this fails\n    if (res.byteLength === data.byteLength) return res;\n  }\n\n  /*\n   * Uint8Array in engines where Buffer.from might not work with ArrayBuffer, just copy over\n   * Doesn't make sense with other TypedArray instances\n   */\n  if (useUint8Array && data instanceof Uint8Array) return Buffer.from(data);\n\n  /*\n   * Old Buffer polyfill on an engine that doesn't have TypedArray support\n   * Also, this is from a different Buffer polyfill implementation then we have, as instanceof check failed\n   * Convert to our current Buffer implementation\n   */\n  if (Buffer.isBuffer(data) && data.constructor && typeof data.constructor.isBuffer === 'function' && data.constructor.isBuffer(data)) {\n    return Buffer.from(data);\n  }\n  throw new TypeError('The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView.');\n}\nHashBase.prototype.update = function (data, encoding) {\n  if (this._finalized) throw new Error('Digest already called');\n  data = toBuffer(data, encoding); // asserts correct input type\n\n  // consume data\n  var block = this._block;\n  var offset = 0;\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++];\n    this._update();\n    this._blockOffset = 0;\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++];\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry;\n    carry = this._length[j] / 0x0100000000 | 0;\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry;\n  }\n  return this;\n};\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented');\n};\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called');\n  this._finalized = true;\n  var digest = this._digest();\n  if (encoding !== undefined) digest = digest.toString(encoding);\n\n  // reset state\n  this._block.fill(0);\n  this._blockOffset = 0;\n  for (var i = 0; i < 4; ++i) this._length[i] = 0;\n  return digest;\n};\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented');\n};\nmodule.exports = HashBase;","map":{"version":3,"names":["Buffer","require","Transform","inherits","HashBase","blockSize","call","_block","allocUnsafe","_blockSize","_blockOffset","_length","_finalized","prototype","_transform","chunk","encoding","callback","error","update","err","_flush","push","digest","useUint8Array","Uint8Array","useArrayBuffer","ArrayBuffer","isView","TYPED_ARRAY_SUPPORT","toBuffer","data","from","byteLength","alloc","res","buffer","byteOffset","isBuffer","constructor","TypeError","Error","block","offset","length","i","_update","j","carry","_digest","undefined","toString","fill","module","exports"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/hash-base/index.js"],"sourcesContent":["'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nvar useUint8Array = typeof Uint8Array !== 'undefined'\nvar useArrayBuffer = typeof ArrayBuffer !== 'undefined' &&\n  typeof Uint8Array !== 'undefined' &&\n  ArrayBuffer.isView &&\n  (Buffer.prototype instanceof Uint8Array || Buffer.TYPED_ARRAY_SUPPORT)\n\nfunction toBuffer (data, encoding) {\n  // No need to do anything for exact instance\n  // This is only valid when safe-buffer.Buffer === buffer.Buffer, i.e. when Buffer.from/Buffer.alloc existed\n  if (data instanceof Buffer) return data\n\n  // Convert strings to Buffer\n  if (typeof data === 'string') return Buffer.from(data, encoding)\n\n  /*\n   * Wrap any TypedArray instances and DataViews\n   * Makes sense only on engines with full TypedArray support -- let Buffer detect that\n   */\n  if (useArrayBuffer && ArrayBuffer.isView(data)) {\n    if (data.byteLength === 0) return Buffer.alloc(0) // Bug in Node.js <6.3.1, which treats this as out-of-bounds\n    var res = Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n    // Recheck result size, as offset/length doesn't work on Node.js <5.10\n    // We just go to Uint8Array case if this fails\n    if (res.byteLength === data.byteLength) return res\n  }\n\n  /*\n   * Uint8Array in engines where Buffer.from might not work with ArrayBuffer, just copy over\n   * Doesn't make sense with other TypedArray instances\n   */\n  if (useUint8Array && data instanceof Uint8Array) return Buffer.from(data)\n\n  /*\n   * Old Buffer polyfill on an engine that doesn't have TypedArray support\n   * Also, this is from a different Buffer polyfill implementation then we have, as instanceof check failed\n   * Convert to our current Buffer implementation\n   */\n  if (\n    Buffer.isBuffer(data) &&\n    data.constructor &&\n    typeof data.constructor.isBuffer === 'function' &&\n    data.constructor.isBuffer(data)\n  ) {\n    return Buffer.from(data)\n  }\n\n  throw new TypeError('The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView.')\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n\n  data = toBuffer(data, encoding) // asserts correct input type\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC,CAACD,MAAM;AAC1C,IAAIE,SAAS,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAACC,SAAS;AAC3C,IAAIC,QAAQ,GAAGF,OAAO,CAAC,UAAU,CAAC;AAElC,SAASG,QAAQA,CAAEC,SAAS,EAAE;EAC5BH,SAAS,CAACI,IAAI,CAAC,IAAI,CAAC;EAEpB,IAAI,CAACC,MAAM,GAAGP,MAAM,CAACQ,WAAW,CAACH,SAAS,CAAC;EAC3C,IAAI,CAACI,UAAU,GAAGJ,SAAS;EAC3B,IAAI,CAACK,YAAY,GAAG,CAAC;EACrB,IAAI,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE3B,IAAI,CAACC,UAAU,GAAG,KAAK;AACzB;AAEAT,QAAQ,CAACC,QAAQ,EAAEF,SAAS,CAAC;AAE7BE,QAAQ,CAACS,SAAS,CAACC,UAAU,GAAG,UAAUC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;EACnE,IAAIC,KAAK,GAAG,IAAI;EAChB,IAAI;IACF,IAAI,CAACC,MAAM,CAACJ,KAAK,EAAEC,QAAQ,CAAC;EAC9B,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZF,KAAK,GAAGE,GAAG;EACb;EAEAH,QAAQ,CAACC,KAAK,CAAC;AACjB,CAAC;AAEDd,QAAQ,CAACS,SAAS,CAACQ,MAAM,GAAG,UAAUJ,QAAQ,EAAE;EAC9C,IAAIC,KAAK,GAAG,IAAI;EAChB,IAAI;IACF,IAAI,CAACI,IAAI,CAAC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOH,GAAG,EAAE;IACZF,KAAK,GAAGE,GAAG;EACb;EAEAH,QAAQ,CAACC,KAAK,CAAC;AACjB,CAAC;AAED,IAAIM,aAAa,GAAG,OAAOC,UAAU,KAAK,WAAW;AACrD,IAAIC,cAAc,GAAG,OAAOC,WAAW,KAAK,WAAW,IACrD,OAAOF,UAAU,KAAK,WAAW,IACjCE,WAAW,CAACC,MAAM,KACjB5B,MAAM,CAACa,SAAS,YAAYY,UAAU,IAAIzB,MAAM,CAAC6B,mBAAmB,CAAC;AAExE,SAASC,QAAQA,CAAEC,IAAI,EAAEf,QAAQ,EAAE;EACjC;EACA;EACA,IAAIe,IAAI,YAAY/B,MAAM,EAAE,OAAO+B,IAAI;;EAEvC;EACA,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE,OAAO/B,MAAM,CAACgC,IAAI,CAACD,IAAI,EAAEf,QAAQ,CAAC;;EAEhE;AACF;AACA;AACA;EACE,IAAIU,cAAc,IAAIC,WAAW,CAACC,MAAM,CAACG,IAAI,CAAC,EAAE;IAC9C,IAAIA,IAAI,CAACE,UAAU,KAAK,CAAC,EAAE,OAAOjC,MAAM,CAACkC,KAAK,CAAC,CAAC,CAAC,EAAC;IAClD,IAAIC,GAAG,GAAGnC,MAAM,CAACgC,IAAI,CAACD,IAAI,CAACK,MAAM,EAAEL,IAAI,CAACM,UAAU,EAAEN,IAAI,CAACE,UAAU,CAAC;IACpE;IACA;IACA,IAAIE,GAAG,CAACF,UAAU,KAAKF,IAAI,CAACE,UAAU,EAAE,OAAOE,GAAG;EACpD;;EAEA;AACF;AACA;AACA;EACE,IAAIX,aAAa,IAAIO,IAAI,YAAYN,UAAU,EAAE,OAAOzB,MAAM,CAACgC,IAAI,CAACD,IAAI,CAAC;;EAEzE;AACF;AACA;AACA;AACA;EACE,IACE/B,MAAM,CAACsC,QAAQ,CAACP,IAAI,CAAC,IACrBA,IAAI,CAACQ,WAAW,IAChB,OAAOR,IAAI,CAACQ,WAAW,CAACD,QAAQ,KAAK,UAAU,IAC/CP,IAAI,CAACQ,WAAW,CAACD,QAAQ,CAACP,IAAI,CAAC,EAC/B;IACA,OAAO/B,MAAM,CAACgC,IAAI,CAACD,IAAI,CAAC;EAC1B;EAEA,MAAM,IAAIS,SAAS,CAAC,+FAA+F,CAAC;AACtH;AAEApC,QAAQ,CAACS,SAAS,CAACM,MAAM,GAAG,UAAUY,IAAI,EAAEf,QAAQ,EAAE;EACpD,IAAI,IAAI,CAACJ,UAAU,EAAE,MAAM,IAAI6B,KAAK,CAAC,uBAAuB,CAAC;EAE7DV,IAAI,GAAGD,QAAQ,CAACC,IAAI,EAAEf,QAAQ,CAAC,EAAC;;EAEhC;EACA,IAAI0B,KAAK,GAAG,IAAI,CAACnC,MAAM;EACvB,IAAIoC,MAAM,GAAG,CAAC;EACd,OAAO,IAAI,CAACjC,YAAY,GAAGqB,IAAI,CAACa,MAAM,GAAGD,MAAM,IAAI,IAAI,CAAClC,UAAU,EAAE;IAClE,KAAK,IAAIoC,CAAC,GAAG,IAAI,CAACnC,YAAY,EAAEmC,CAAC,GAAG,IAAI,CAACpC,UAAU,GAAGiC,KAAK,CAACG,CAAC,EAAE,CAAC,GAAGd,IAAI,CAACY,MAAM,EAAE,CAAC;IACjF,IAAI,CAACG,OAAO,CAAC,CAAC;IACd,IAAI,CAACpC,YAAY,GAAG,CAAC;EACvB;EACA,OAAOiC,MAAM,GAAGZ,IAAI,CAACa,MAAM,EAAEF,KAAK,CAAC,IAAI,CAAChC,YAAY,EAAE,CAAC,GAAGqB,IAAI,CAACY,MAAM,EAAE,CAAC;;EAExE;EACA,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEC,KAAK,GAAGjB,IAAI,CAACa,MAAM,GAAG,CAAC,EAAEI,KAAK,GAAG,CAAC,EAAE,EAAED,CAAC,EAAE;IACvD,IAAI,CAACpC,OAAO,CAACoC,CAAC,CAAC,IAAIC,KAAK;IACxBA,KAAK,GAAI,IAAI,CAACrC,OAAO,CAACoC,CAAC,CAAC,GAAG,YAAY,GAAI,CAAC;IAC5C,IAAIC,KAAK,GAAG,CAAC,EAAE,IAAI,CAACrC,OAAO,CAACoC,CAAC,CAAC,IAAI,YAAY,GAAGC,KAAK;EACxD;EAEA,OAAO,IAAI;AACb,CAAC;AAED5C,QAAQ,CAACS,SAAS,CAACiC,OAAO,GAAG,YAAY;EACvC,MAAM,IAAIL,KAAK,CAAC,4BAA4B,CAAC;AAC/C,CAAC;AAEDrC,QAAQ,CAACS,SAAS,CAACU,MAAM,GAAG,UAAUP,QAAQ,EAAE;EAC9C,IAAI,IAAI,CAACJ,UAAU,EAAE,MAAM,IAAI6B,KAAK,CAAC,uBAAuB,CAAC;EAC7D,IAAI,CAAC7B,UAAU,GAAG,IAAI;EAEtB,IAAIW,MAAM,GAAG,IAAI,CAAC0B,OAAO,CAAC,CAAC;EAC3B,IAAIjC,QAAQ,KAAKkC,SAAS,EAAE3B,MAAM,GAAGA,MAAM,CAAC4B,QAAQ,CAACnC,QAAQ,CAAC;;EAE9D;EACA,IAAI,CAACT,MAAM,CAAC6C,IAAI,CAAC,CAAC,CAAC;EACnB,IAAI,CAAC1C,YAAY,GAAG,CAAC;EACrB,KAAK,IAAImC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAE,IAAI,CAAClC,OAAO,CAACkC,CAAC,CAAC,GAAG,CAAC;EAE/C,OAAOtB,MAAM;AACf,CAAC;AAEDnB,QAAQ,CAACS,SAAS,CAACoC,OAAO,GAAG,YAAY;EACvC,MAAM,IAAIR,KAAK,CAAC,4BAA4B,CAAC;AAC/C,CAAC;AAEDY,MAAM,CAACC,OAAO,GAAGlD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}