{"ast":null,"code":"const JSONStringify = data => JSON.stringify(data, (_, value) => typeof value === \"bigint\" ? value.toString() + \"n\" : value);\nconst JSONParse = json => {\n  const numbersBiggerThanMaxInt = /([\\[:])?(\\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\\}\\]])/g;\n  const serializedData = json.replace(numbersBiggerThanMaxInt, \"$1\\\"$2n\\\"$3\");\n  return JSON.parse(serializedData, (_, value) => {\n    const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n    if (isCustomFormatBigInt) return BigInt(value.substring(0, value.length - 1));\n    return value;\n  });\n};\nexport function safeJsonParse(value) {\n  if (typeof value !== \"string\") {\n    throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n  }\n  try {\n    return JSONParse(value);\n  } catch (_a) {\n    return value;\n  }\n}\nexport function safeJsonStringify(value) {\n  return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n}","map":{"version":3,"names":["JSONStringify","data","JSON","stringify","_","value","toString","JSONParse","json","numbersBiggerThanMaxInt","serializedData","replace","parse","isCustomFormatBigInt","match","BigInt","substring","length","safeJsonParse","Error","_a","safeJsonStringify"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"AAQA,MAAMA,aAAa,GAAGC,IAAI,IACxBC,IAAI,CAACC,SAAS,CAACF,IAAI,EAAE,CAACG,CAAC,EAAEC,KAAK,KAC5B,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACC,QAAQ,EAAE,GAAG,GAAG,GAAGD,KAAK,CAC3D;AASH,MAAME,SAAS,GAAGC,IAAI,IAAG;EAMvB,MAAMC,uBAAuB,GAAG,oQAAoQ;EACpS,MAAMC,cAAc,GAAGF,IAAI,CAACG,OAAO,CAACF,uBAAuB,EAAE,aAAa,CAAC;EAE3E,OAAOP,IAAI,CAACU,KAAK,CAACF,cAAc,EAAE,CAACN,CAAC,EAAEC,KAAK,KAAI;IAC7C,MAAMQ,oBAAoB,GACxB,OAAOR,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACS,KAAK,CAAC,QAAQ,CAAC;IAEpD,IAAID,oBAAoB,EACtB,OAAOE,MAAM,CAACV,KAAK,CAACW,SAAS,CAAC,CAAC,EAAEX,KAAK,CAACY,MAAM,GAAG,CAAC,CAAC,CAAC;IAErD,OAAOZ,KAAK;EACd,CAAC,CAAC;AACJ,CAAC;AAED,OAAM,SAAUa,aAAaA,CAAUb,KAAa;EAClD,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAC7B,MAAM,IAAIc,KAAK,CAAC,wCAAwC,OAAOd,KAAK,EAAE,CAAC;;EAEzE,IAAI;IACF,OAAOE,SAAS,CAACF,KAAK,CAAC;GACxB,CAAC,OAAAe,EAAA,EAAM;IACN,OAAOf,KAAK;;AAEhB;AAEA,OAAM,SAAUgB,iBAAiBA,CAAChB,KAAU;EAC1C,OAAO,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGL,aAAa,CAACK,KAAK,CAAC,IAAI,EAAE;AACvE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}