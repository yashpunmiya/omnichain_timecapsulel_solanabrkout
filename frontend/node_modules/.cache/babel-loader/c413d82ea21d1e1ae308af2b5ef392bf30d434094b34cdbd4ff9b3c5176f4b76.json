{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { AssetUtil, ConnectorController, RouterController } from '@reown/appkit-controllers';\nimport { customElement } from '@reown/appkit-ui';\nimport '@reown/appkit-ui/wui-flex';\nimport '@reown/appkit-ui/wui-list-wallet';\nlet W3mConnectMultiChainWidget = class W3mConnectMultiChainWidget extends LitElement {\n  constructor() {\n    super();\n    this.unsubscribe = [];\n    this.tabIdx = undefined;\n    this.connectors = ConnectorController.state.connectors;\n    this.unsubscribe.push(ConnectorController.subscribeKey('connectors', val => this.connectors = val));\n  }\n  disconnectedCallback() {\n    this.unsubscribe.forEach(unsubscribe => unsubscribe());\n  }\n  render() {\n    const multiChainConnectors = this.connectors.filter(connector => connector.type === 'MULTI_CHAIN' && connector.name !== 'WalletConnect');\n    if (!multiChainConnectors?.length) {\n      this.style.cssText = `display: none`;\n      return null;\n    }\n    return html`\n      <wui-flex flexDirection=\"column\" gap=\"xs\">\n        ${multiChainConnectors.map(connector => html`\n            <wui-list-wallet\n              imageSrc=${ifDefined(AssetUtil.getConnectorImage(connector))}\n              .installed=${true}\n              name=${connector.name ?? 'Unknown'}\n              tagVariant=\"shade\"\n              tagLabel=\"multichain\"\n              data-testid=${`wallet-selector-${connector.id}`}\n              @click=${() => this.onConnector(connector)}\n              tabIdx=${ifDefined(this.tabIdx)}\n            >\n            </wui-list-wallet>\n          `)}\n      </wui-flex>\n    `;\n  }\n  onConnector(connector) {\n    ConnectorController.setActiveConnector(connector);\n    RouterController.push('ConnectingMultiChain');\n  }\n};\n__decorate([property()], W3mConnectMultiChainWidget.prototype, \"tabIdx\", void 0);\n__decorate([state()], W3mConnectMultiChainWidget.prototype, \"connectors\", void 0);\nW3mConnectMultiChainWidget = __decorate([customElement('w3m-connect-multi-chain-widget')], W3mConnectMultiChainWidget);\nexport { W3mConnectMultiChainWidget };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}