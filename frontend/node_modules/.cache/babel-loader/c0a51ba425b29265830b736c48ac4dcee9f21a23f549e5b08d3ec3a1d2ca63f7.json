{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { AssetUtil, ConnectionController, ConnectorController, CoreHelperUtil, OptionsController, RouterController, StorageUtil } from '@reown/appkit-controllers';\nimport { customElement } from '@reown/appkit-ui';\nimport '@reown/appkit-ui/wui-flex';\nimport '@reown/appkit-ui/wui-list-wallet';\nlet W3mConnectCustomWidget = class W3mConnectCustomWidget extends LitElement {\n  constructor() {\n    super();\n    this.unsubscribe = [];\n    this.tabIdx = undefined;\n    this.connectors = ConnectorController.state.connectors;\n    this.loading = false;\n    this.unsubscribe.push(ConnectorController.subscribeKey('connectors', val => this.connectors = val));\n    if (CoreHelperUtil.isTelegram() && CoreHelperUtil.isIos()) {\n      this.loading = !ConnectionController.state.wcUri;\n      this.unsubscribe.push(ConnectionController.subscribeKey('wcUri', val => this.loading = !val));\n    }\n  }\n  disconnectedCallback() {\n    this.unsubscribe.forEach(unsubscribe => unsubscribe());\n  }\n  render() {\n    const {\n      customWallets\n    } = OptionsController.state;\n    if (!customWallets?.length) {\n      this.style.cssText = `display: none`;\n      return null;\n    }\n    const wallets = this.filterOutDuplicateWallets(customWallets);\n    return html`<wui-flex flexDirection=\"column\" gap=\"xs\">\n      ${wallets.map(wallet => html`\n          <wui-list-wallet\n            imageSrc=${ifDefined(AssetUtil.getWalletImage(wallet))}\n            name=${wallet.name ?? 'Unknown'}\n            @click=${() => this.onConnectWallet(wallet)}\n            data-testid=${`wallet-selector-${wallet.id}`}\n            tabIdx=${ifDefined(this.tabIdx)}\n            ?loading=${this.loading}\n          >\n          </wui-list-wallet>\n        `)}\n    </wui-flex>`;\n  }\n  filterOutDuplicateWallets(wallets) {\n    const recent = StorageUtil.getRecentWallets();\n    const connectorRDNSs = this.connectors.map(connector => connector.info?.rdns).filter(Boolean);\n    const recentRDNSs = recent.map(wallet => wallet.rdns).filter(Boolean);\n    const allRDNSs = connectorRDNSs.concat(recentRDNSs);\n    if (allRDNSs.includes('io.metamask.mobile') && CoreHelperUtil.isMobile()) {\n      const index = allRDNSs.indexOf('io.metamask.mobile');\n      allRDNSs[index] = 'io.metamask';\n    }\n    const filtered = wallets.filter(wallet => !allRDNSs.includes(String(wallet?.rdns)));\n    return filtered;\n  }\n  onConnectWallet(wallet) {\n    if (this.loading) {\n      return;\n    }\n    RouterController.push('ConnectingWalletConnect', {\n      wallet\n    });\n  }\n};\n__decorate([property()], W3mConnectCustomWidget.prototype, \"tabIdx\", void 0);\n__decorate([state()], W3mConnectCustomWidget.prototype, \"connectors\", void 0);\n__decorate([state()], W3mConnectCustomWidget.prototype, \"loading\", void 0);\nW3mConnectCustomWidget = __decorate([customElement('w3m-connect-custom-widget')], W3mConnectCustomWidget);\nexport { W3mConnectCustomWidget };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}