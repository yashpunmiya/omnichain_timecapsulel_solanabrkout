{"ast":null,"code":"import { ed25519 } from '@noble/curves/ed25519';\nimport { bytesEqual } from './util.js';\n/**\n * TODO: docs\n */\nexport function verifyMessageSignature({\n  message,\n  signedMessage,\n  signature,\n  publicKey\n}) {\n  // TODO: implement https://github.com/solana-labs/solana/blob/master/docs/src/proposals/off-chain-message-signing.md\n  return bytesEqual(message, signedMessage) && ed25519.verify(signature, signedMessage, publicKey);\n}\n/**\n * TODO: docs\n */\nexport function verifySignMessage(input, output) {\n  const {\n    message,\n    account: {\n      publicKey\n    }\n  } = input;\n  const {\n    signedMessage,\n    signature\n  } = output;\n  return verifyMessageSignature({\n    message,\n    signedMessage,\n    signature,\n    publicKey: publicKey\n  });\n}","map":{"version":3,"names":["ed25519","bytesEqual","verifyMessageSignature","message","signedMessage","signature","publicKey","verify","verifySignMessage","input","output","account"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@solana\\wallet-standard-util\\src\\signMessage.ts"],"sourcesContent":["import { ed25519 } from '@noble/curves/ed25519';\nimport type { SolanaSignMessageInput, SolanaSignMessageOutput } from '@solana/wallet-standard-features';\nimport { bytesEqual } from './util.js';\n\n/**\n * TODO: docs\n */\nexport function verifyMessageSignature({\n    message,\n    signedMessage,\n    signature,\n    publicKey,\n}: {\n    message: Uint8Array;\n    signedMessage: Uint8Array;\n    signature: Uint8Array;\n    publicKey: Uint8Array;\n}): boolean {\n    // TODO: implement https://github.com/solana-labs/solana/blob/master/docs/src/proposals/off-chain-message-signing.md\n    return bytesEqual(message, signedMessage) && ed25519.verify(signature, signedMessage, publicKey);\n}\n\n/**\n * TODO: docs\n */\nexport function verifySignMessage(input: SolanaSignMessageInput, output: SolanaSignMessageOutput): boolean {\n    const {\n        message,\n        account: { publicKey },\n    } = input;\n    const { signedMessage, signature } = output;\n    return verifyMessageSignature({ message, signedMessage, signature, publicKey: publicKey as Uint8Array });\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,uBAAuB;AAE/C,SAASC,UAAU,QAAQ,WAAW;AAEtC;;;AAGA,OAAM,SAAUC,sBAAsBA,CAAC;EACnCC,OAAO;EACPC,aAAa;EACbC,SAAS;EACTC;AAAS,CAMZ;EACG;EACA,OAAOL,UAAU,CAACE,OAAO,EAAEC,aAAa,CAAC,IAAIJ,OAAO,CAACO,MAAM,CAACF,SAAS,EAAED,aAAa,EAAEE,SAAS,CAAC;AACpG;AAEA;;;AAGA,OAAM,SAAUE,iBAAiBA,CAACC,KAA6B,EAAEC,MAA+B;EAC5F,MAAM;IACFP,OAAO;IACPQ,OAAO,EAAE;MAAEL;IAAS;EAAE,CACzB,GAAGG,KAAK;EACT,MAAM;IAAEL,aAAa;IAAEC;EAAS,CAAE,GAAGK,MAAM;EAC3C,OAAOR,sBAAsB,CAAC;IAAEC,OAAO;IAAEC,aAAa;IAAEC,SAAS;IAAEC,SAAS,EAAEA;EAAuB,CAAE,CAAC;AAC5G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}