{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CryptoECKey = void 0;\nconst lib_1 = require(\"./lib\");\nconst RegistryItem_1 = require(\"./RegistryItem\");\nconst RegistryType_1 = require(\"./RegistryType\");\nvar Keys;\n(function (Keys) {\n  Keys[Keys[\"curve\"] = 1] = \"curve\";\n  Keys[Keys[\"private\"] = 2] = \"private\";\n  Keys[Keys[\"data\"] = 3] = \"data\";\n})(Keys || (Keys = {}));\nclass CryptoECKey extends RegistryItem_1.RegistryItem {\n  constructor(args) {\n    super();\n    this.isECKey = () => {\n      return true;\n    };\n    this.getCurve = () => this.curve || 0;\n    this.isPrivateKey = () => this.privateKey || false;\n    this.getData = () => this.data;\n    this.getRegistryType = () => {\n      return RegistryType_1.RegistryTypes.CRYPTO_ECKEY;\n    };\n    this.toDataItem = () => {\n      const map = {};\n      if (this.curve) {\n        map[Keys.curve] = this.curve;\n      }\n      if (this.privateKey !== undefined) {\n        map[Keys.private] = this.privateKey;\n      }\n      map[Keys.data] = this.data;\n      return new lib_1.DataItem(map);\n    };\n    this.getOutputDescriptorContent = () => {\n      return this.data.toString('hex');\n    };\n    this.data = args.data;\n    this.curve = args.curve;\n    this.privateKey = args.privateKey || undefined;\n  }\n}\nexports.CryptoECKey = CryptoECKey;\nCryptoECKey.fromDataItem = dataItem => {\n  const map = dataItem.getData();\n  const curve = map[Keys.curve];\n  const privateKey = map[Keys.private];\n  const data = map[Keys.data];\n  if (!data) {\n    throw new Error(`#[ur-registry][CryptoECKey][fn.fromDataItem]: decoded [dataItem][#data.data] is undefined: ${dataItem}`);\n  }\n  return new CryptoECKey({\n    data,\n    curve,\n    privateKey\n  });\n};\nCryptoECKey.fromCBOR = _cborPayload => {\n  const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);\n  return CryptoECKey.fromDataItem(dataItem);\n};\n//# sourceMappingURL=CryptoECKey.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}