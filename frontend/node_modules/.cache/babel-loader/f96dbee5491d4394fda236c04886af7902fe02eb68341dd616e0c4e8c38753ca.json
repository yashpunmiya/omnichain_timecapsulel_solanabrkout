{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SelectFeeLevel = exports.FeeLevel = exports.FeeInfo = void 0;\nconst schema_utils_1 = require(\"@trezor/schema-utils\");\nexports.FeeInfo = schema_utils_1.Type.Object({\n  blockTime: schema_utils_1.Type.Number(),\n  minFee: schema_utils_1.Type.Number(),\n  maxFee: schema_utils_1.Type.Number(),\n  dustLimit: schema_utils_1.Type.Number()\n});\nexports.FeeLevel = schema_utils_1.Type.Object({\n  label: schema_utils_1.Type.Union([schema_utils_1.Type.Literal('high'), schema_utils_1.Type.Literal('normal'), schema_utils_1.Type.Literal('economy'), schema_utils_1.Type.Literal('low'), schema_utils_1.Type.Literal('custom')]),\n  blocks: schema_utils_1.Type.Number(),\n  feePerUnit: schema_utils_1.Type.String(),\n  feePerTx: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  feeLimit: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  baseFeePerGas: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  maxFeePerGas: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  maxPriorityFeePerGas: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  maxWaitTimeEstimate: schema_utils_1.Type.Optional(schema_utils_1.Type.Number())\n});\nexports.SelectFeeLevel = schema_utils_1.Type.Union([schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.String(),\n  fee: schema_utils_1.Type.Literal('0'),\n  feePerByte: schema_utils_1.Type.Optional(schema_utils_1.Type.Undefined()),\n  disabled: schema_utils_1.Type.Literal(true)\n}), schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.String(),\n  fee: schema_utils_1.Type.String(),\n  feePerByte: schema_utils_1.Type.String(),\n  minutes: schema_utils_1.Type.Number(),\n  total: schema_utils_1.Type.String()\n})]);\n//# sourceMappingURL=fees.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}