{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseConnectSettings = exports.getEnv = void 0;\nconst connectSettings_1 = require(\"@trezor/connect/lib/data/connectSettings\");\nconst getEnv = () => {\n  if (typeof chrome !== 'undefined' && typeof chrome.runtime?.onConnect !== 'undefined') {\n    return 'webextension';\n  }\n  if (typeof navigator !== 'undefined') {\n    if (typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative') {\n      return 'react-native';\n    }\n    const userAgent = navigator.userAgent.toLowerCase();\n    if (userAgent.indexOf(' electron/') > -1) {\n      return 'electron';\n    }\n  }\n  return 'web';\n};\nexports.getEnv = getEnv;\nconst parseConnectSettings = (input = {}) => {\n  const settings = {\n    popup: true,\n    ...input\n  };\n  let globalSrc;\n  if (typeof window !== 'undefined') {\n    globalSrc = window.__TREZOR_CONNECT_SRC;\n  } else if (typeof global !== 'undefined') {\n    globalSrc = global.__TREZOR_CONNECT_SRC;\n  }\n  if (typeof globalSrc === 'string') {\n    settings.connectSrc = globalSrc;\n    settings.debug = true;\n  }\n  if (typeof input.env !== 'string') {\n    settings.env = (0, exports.getEnv)();\n  }\n  return (0, connectSettings_1.parseConnectSettings)(settings);\n};\nexports.parseConnectSettings = parseConnectSettings;\n//# sourceMappingURL=connectSettings.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}