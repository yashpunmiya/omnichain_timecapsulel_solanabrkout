{"ast":null,"code":"import { getVersion } from './internal/errors.js';\n/**\n * Base error class inherited by all errors thrown by ox.\n *\n * @example\n * ```ts\n * import { Errors } from 'ox'\n * throw new Errors.BaseError('An error occurred')\n * ```\n */\nexport class BaseError extends Error {\n  constructor(shortMessage, options = {}) {\n    const details = (() => {\n      if (options.cause instanceof BaseError) {\n        if (options.cause.details) return options.cause.details;\n        if (options.cause.shortMessage) return options.cause.shortMessage;\n      }\n      if (options.cause?.message) return options.cause.message;\n      return options.details;\n    })();\n    const docsPath = (() => {\n      if (options.cause instanceof BaseError) return options.cause.docsPath || options.docsPath;\n      return options.docsPath;\n    })();\n    const docsBaseUrl = 'https://oxlib.sh';\n    const docs = `${docsBaseUrl}${docsPath ?? ''}`;\n    const message = [shortMessage || 'An error occurred.', ...(options.metaMessages ? ['', ...options.metaMessages] : []), ...(details || docsPath ? ['', details ? `Details: ${details}` : undefined, docsPath ? `See: ${docs}` : undefined] : [])].filter(x => typeof x === 'string').join('\\n');\n    super(message, options.cause ? {\n      cause: options.cause\n    } : undefined);\n    Object.defineProperty(this, \"details\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"docs\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"docsPath\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shortMessage\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"cause\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'BaseError'\n    });\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: `ox@${getVersion()}`\n    });\n    this.cause = options.cause;\n    this.details = details;\n    this.docs = docs;\n    this.docsPath = docsPath;\n    this.shortMessage = shortMessage;\n  }\n  walk(fn) {\n    return walk(this, fn);\n  }\n}\n/** @internal */\nfunction walk(err, fn) {\n  if (fn?.(err)) return err;\n  if (err && typeof err === 'object' && 'cause' in err && err.cause) return walk(err.cause, fn);\n  return fn ? null : err;\n}\n//# sourceMappingURL=Errors.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}