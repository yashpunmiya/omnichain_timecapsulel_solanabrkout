{"ast":null,"code":"'use strict';\n\n/** @type {typeof JSON.stringify} */\nvar jsonStringify = (typeof JSON !== 'undefined' ? JSON : require('jsonify')).stringify;\nvar isArray = require('isarray');\nvar objectKeys = require('object-keys');\nvar callBind = require('call-bind');\nvar callBound = require('call-bound');\nvar $join = callBound('Array.prototype.join');\nvar $indexOf = callBound('Array.prototype.indexOf');\nvar $splice = callBound('Array.prototype.splice');\nvar $sort = callBound('Array.prototype.sort');\n\n/** @type {(n: number, char: string) => string} */\nvar strRepeat = function repeat(n, char) {\n  var str = '';\n  for (var i = 0; i < n; i += 1) {\n    str += char;\n  }\n  return str;\n};\n\n/** @type {(parent: import('.').Node, key: import('.').Key, value: unknown) => unknown} */\nvar defaultReplacer = function (_parent, _key, value) {\n  return value;\n};\n\n/** @type {import('.')} */\nmodule.exports = function stableStringify(obj) {\n  /** @type {Parameters<import('.')>[1]} */\n  var opts = arguments.length > 1 ? arguments[1] : void undefined;\n  var space = opts && opts.space || '';\n  if (typeof space === 'number') {\n    space = strRepeat(space, ' ');\n  }\n  var cycles = !!opts && typeof opts.cycles === 'boolean' && opts.cycles;\n  /** @type {undefined | typeof defaultReplacer} */\n  var replacer = opts && opts.replacer ? callBind(opts.replacer) : defaultReplacer;\n  if (opts && typeof opts.collapseEmpty !== 'undefined' && typeof opts.collapseEmpty !== 'boolean') {\n    throw new TypeError('`collapseEmpty` must be a boolean, if provided');\n  }\n  var collapseEmpty = !!opts && opts.collapseEmpty;\n  var cmpOpt = typeof opts === 'function' ? opts : opts && opts.cmp;\n  /** @type {undefined | (<T extends import('.').NonArrayNode>(node: T) => (a: Exclude<keyof T, symbol | number>, b: Exclude<keyof T, symbol | number>) => number)} */\n  var cmp = cmpOpt && function (node) {\n    // eslint-disable-next-line no-extra-parens\n    var get = /** @type {NonNullable<typeof cmpOpt>} */cmpOpt.length > 2 && /** @type {import('.').Getter['get']} */function get(k) {\n      return node[k];\n    };\n    return function (a, b) {\n      // eslint-disable-next-line no-extra-parens\n      return /** @type {NonNullable<typeof cmpOpt>} */cmpOpt({\n        key: a,\n        value: node[a]\n      }, {\n        key: b,\n        value: node[b]\n      },\n      // @ts-expect-error TS doesn't understand the optimization used here\n      get ? /** @type {import('.').Getter} */{\n        __proto__: null,\n        get: get\n      } : void undefined);\n    };\n  };\n\n  /** @type {import('.').Node[]} */\n  var seen = [];\n  return /** @type {(parent: import('.').Node, key: string | number, node: unknown, level: number) => string | undefined} */function stringify(parent, key, node, level) {\n    var indent = space ? '\\n' + strRepeat(level, space) : '';\n    var colonSeparator = space ? ': ' : ':';\n\n    // eslint-disable-next-line no-extra-parens\n    if (node && /** @type {{ toJSON?: unknown }} */node.toJSON && typeof /** @type {{ toJSON?: unknown }} */node.toJSON === 'function') {\n      // eslint-disable-next-line no-extra-parens\n      node = /** @type {{ toJSON: Function }} */node.toJSON();\n    }\n    node = replacer(parent, key, node);\n    if (node === undefined) {\n      return;\n    }\n    if (typeof node !== 'object' || node === null) {\n      return jsonStringify(node);\n    }\n\n    /** @type {(out: string[], brackets: '[]' | '{}') => string} */\n    var groupOutput = function (out, brackets) {\n      return collapseEmpty && out.length === 0 ? brackets : (brackets === '[]' ? '[' : '{') + $join(out, ',') + indent + (brackets === '[]' ? ']' : '}');\n    };\n    if (isArray(node)) {\n      var out = [];\n      for (var i = 0; i < node.length; i++) {\n        var item = stringify(node, i, node[i], level + 1) || jsonStringify(null);\n        out[out.length] = indent + space + item;\n      }\n      return groupOutput(out, '[]');\n    }\n    if ($indexOf(seen, node) !== -1) {\n      if (cycles) {\n        return jsonStringify('__cycle__');\n      }\n      throw new TypeError('Converting circular structure to JSON');\n    } else {\n      seen[seen.length] = /** @type {import('.').NonArrayNode} */node;\n    }\n\n    /** @type {import('.').Key[]} */\n    // eslint-disable-next-line no-extra-parens\n    var keys = $sort(objectKeys(node), cmp && cmp(/** @type {import('.').NonArrayNode} */node));\n    var out = [];\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // eslint-disable-next-line no-extra-parens\n      var value = stringify(/** @type {import('.').Node} */node, key, /** @type {import('.').NonArrayNode} */node[key], level + 1);\n      if (!value) {\n        continue;\n      }\n      var keyValue = jsonStringify(key) + colonSeparator + value;\n      out[out.length] = indent + space + keyValue;\n    }\n    $splice(seen, $indexOf(seen, node), 1);\n    return groupOutput(out, '{}');\n  }({\n    '': obj\n  }, '', obj, 0);\n};","map":{"version":3,"names":["jsonStringify","JSON","require","stringify","isArray","objectKeys","callBind","callBound","$join","$indexOf","$splice","$sort","strRepeat","repeat","n","char","str","i","defaultReplacer","_parent","_key","value","module","exports","stableStringify","obj","opts","arguments","length","undefined","space","cycles","replacer","collapseEmpty","TypeError","cmpOpt","cmp","node","get","k","a","b","key","__proto__","seen","parent","level","indent","colonSeparator","toJSON","groupOutput","out","brackets","item","keys","keyValue"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/json-stable-stringify/index.js"],"sourcesContent":["'use strict';\n\n/** @type {typeof JSON.stringify} */\nvar jsonStringify = (typeof JSON !== 'undefined' ? JSON : require('jsonify')).stringify;\n\nvar isArray = require('isarray');\nvar objectKeys = require('object-keys');\nvar callBind = require('call-bind');\nvar callBound = require('call-bound');\n\nvar $join = callBound('Array.prototype.join');\nvar $indexOf = callBound('Array.prototype.indexOf');\nvar $splice = callBound('Array.prototype.splice');\nvar $sort = callBound('Array.prototype.sort');\n\n/** @type {(n: number, char: string) => string} */\nvar strRepeat = function repeat(n, char) {\n\tvar str = '';\n\tfor (var i = 0; i < n; i += 1) {\n\t\tstr += char;\n\t}\n\treturn str;\n};\n\n/** @type {(parent: import('.').Node, key: import('.').Key, value: unknown) => unknown} */\nvar defaultReplacer = function (_parent, _key, value) { return value; };\n\n/** @type {import('.')} */\nmodule.exports = function stableStringify(obj) {\n\t/** @type {Parameters<import('.')>[1]} */\n\tvar opts = arguments.length > 1 ? arguments[1] : void undefined;\n\tvar space = (opts && opts.space) || '';\n\tif (typeof space === 'number') { space = strRepeat(space, ' '); }\n\tvar cycles = !!opts && typeof opts.cycles === 'boolean' && opts.cycles;\n\t/** @type {undefined | typeof defaultReplacer} */\n\tvar replacer = opts && opts.replacer ? callBind(opts.replacer) : defaultReplacer;\n\tif (opts && typeof opts.collapseEmpty !== 'undefined' && typeof opts.collapseEmpty !== 'boolean') {\n\t\tthrow new TypeError('`collapseEmpty` must be a boolean, if provided');\n\t}\n\tvar collapseEmpty = !!opts && opts.collapseEmpty;\n\n\tvar cmpOpt = typeof opts === 'function' ? opts : opts && opts.cmp;\n\t/** @type {undefined | (<T extends import('.').NonArrayNode>(node: T) => (a: Exclude<keyof T, symbol | number>, b: Exclude<keyof T, symbol | number>) => number)} */\n\tvar cmp = cmpOpt && function (node) {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar get = /** @type {NonNullable<typeof cmpOpt>} */ (cmpOpt).length > 2\n\t\t\t&& /** @type {import('.').Getter['get']} */ function get(k) { return node[k]; };\n\t\treturn function (a, b) {\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\treturn /** @type {NonNullable<typeof cmpOpt>} */ (cmpOpt)(\n\t\t\t\t{ key: a, value: node[a] },\n\t\t\t\t{ key: b, value: node[b] },\n\t\t\t\t// @ts-expect-error TS doesn't understand the optimization used here\n\t\t\t\tget ? /** @type {import('.').Getter} */ { __proto__: null, get: get } : void undefined\n\t\t\t);\n\t\t};\n\t};\n\n\t/** @type {import('.').Node[]} */\n\tvar seen = [];\n\treturn (/** @type {(parent: import('.').Node, key: string | number, node: unknown, level: number) => string | undefined} */\n\t\tfunction stringify(parent, key, node, level) {\n\t\t\tvar indent = space ? '\\n' + strRepeat(level, space) : '';\n\t\t\tvar colonSeparator = space ? ': ' : ':';\n\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tif (node && /** @type {{ toJSON?: unknown }} */ (node).toJSON && typeof /** @type {{ toJSON?: unknown }} */ (node).toJSON === 'function') {\n\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\tnode = /** @type {{ toJSON: Function }} */ (node).toJSON();\n\t\t\t}\n\n\t\t\tnode = replacer(parent, key, node);\n\t\t\tif (node === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (typeof node !== 'object' || node === null) {\n\t\t\t\treturn jsonStringify(node);\n\t\t\t}\n\n\t\t\t/** @type {(out: string[], brackets: '[]' | '{}') => string} */\n\t\t\tvar groupOutput = function (out, brackets) {\n\t\t\t\treturn collapseEmpty && out.length === 0\n\t\t\t\t\t? brackets\n\t\t\t\t\t: (brackets === '[]' ? '[' : '{') + $join(out, ',') + indent + (brackets === '[]' ? ']' : '}');\n\t\t\t};\n\n\t\t\tif (isArray(node)) {\n\t\t\t\tvar out = [];\n\t\t\t\tfor (var i = 0; i < node.length; i++) {\n\t\t\t\t\tvar item = stringify(node, i, node[i], level + 1) || jsonStringify(null);\n\t\t\t\t\tout[out.length] = indent + space + item;\n\t\t\t\t}\n\t\t\t\treturn groupOutput(out, '[]');\n\t\t\t}\n\n\t\t\tif ($indexOf(seen, node) !== -1) {\n\t\t\t\tif (cycles) { return jsonStringify('__cycle__'); }\n\t\t\t\tthrow new TypeError('Converting circular structure to JSON');\n\t\t\t} else {\n\t\t\t\tseen[seen.length] = /** @type {import('.').NonArrayNode} */ (node);\n\t\t\t}\n\n\t\t\t/** @type {import('.').Key[]} */\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tvar keys = $sort(objectKeys(node), cmp && cmp(/** @type {import('.').NonArrayNode} */ (node)));\n\t\t\tvar out = [];\n\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\tvar value = stringify(/** @type {import('.').Node} */ (node), key, /** @type {import('.').NonArrayNode} */ (node)[key], level + 1);\n\n\t\t\t\tif (!value) { continue; }\n\n\t\t\t\tvar keyValue = jsonStringify(key)\n\t\t\t\t\t+ colonSeparator\n\t\t\t\t\t+ value;\n\n\t\t\t\tout[out.length] = indent + space + keyValue;\n\t\t\t}\n\t\t\t$splice(seen, $indexOf(seen, node), 1);\n\t\t\treturn groupOutput(out, '{}');\n\t\t}({ '': obj }, '', obj, 0)\n\t);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}