{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractUrlsFromText = void 0;\nconst URL_REGEX = /\\b(?:https?:\\/\\/|www\\.)[a-zA-Z0-9-._~:/?#[\\]@!$&'()*+,;=%]+\\b|(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}(?=\\b|\\s|$|\\])/gi;\nconst extractUrlsFromText = text => {\n  const urls = [];\n  const textParts = [];\n  let lastIndex = 0;\n  const matches = [...text.matchAll(URL_REGEX)];\n  matches.forEach(match => {\n    const url = match[0];\n    const index = match.index !== undefined ? match.index : -1;\n    if (lastIndex < index) {\n      textParts.push(text.slice(lastIndex, index));\n    }\n    urls.push(url);\n    lastIndex = index + url.length;\n  });\n  if (lastIndex < text.length) {\n    textParts.push(text.slice(lastIndex));\n  }\n  if (textParts.length === 0 && urls.length > 0) {\n    textParts.push('');\n  }\n  return {\n    textParts,\n    urls\n  };\n};\nexports.extractUrlsFromText = extractUrlsFromText;","map":{"version":3,"names":["Object","defineProperty","exports","value","extractUrlsFromText","URL_REGEX","text","urls","textParts","lastIndex","matches","matchAll","forEach","match","url","index","undefined","push","slice","length"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@trezor/utils/lib/extractUrlsFromText.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractUrlsFromText = void 0;\nconst URL_REGEX = /\\b(?:https?:\\/\\/|www\\.)[a-zA-Z0-9-._~:/?#[\\]@!$&'()*+,;=%]+\\b|(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}(?=\\b|\\s|$|\\])/gi;\nconst extractUrlsFromText = (text) => {\n    const urls = [];\n    const textParts = [];\n    let lastIndex = 0;\n    const matches = [...text.matchAll(URL_REGEX)];\n    matches.forEach(match => {\n        const url = match[0];\n        const index = match.index !== undefined ? match.index : -1;\n        if (lastIndex < index) {\n            textParts.push(text.slice(lastIndex, index));\n        }\n        urls.push(url);\n        lastIndex = index + url.length;\n    });\n    if (lastIndex < text.length) {\n        textParts.push(text.slice(lastIndex));\n    }\n    if (textParts.length === 0 && urls.length > 0) {\n        textParts.push('');\n    }\n    return { textParts, urls };\n};\nexports.extractUrlsFromText = extractUrlsFromText;\n//# sourceMappingURL=extractUrlsFromText.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAG,KAAK,CAAC;AACpC,MAAMC,SAAS,GAAG,gHAAgH;AAClI,MAAMD,mBAAmB,GAAIE,IAAI,IAAK;EAClC,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,SAAS,GAAG,EAAE;EACpB,IAAIC,SAAS,GAAG,CAAC;EACjB,MAAMC,OAAO,GAAG,CAAC,GAAGJ,IAAI,CAACK,QAAQ,CAACN,SAAS,CAAC,CAAC;EAC7CK,OAAO,CAACE,OAAO,CAACC,KAAK,IAAI;IACrB,MAAMC,GAAG,GAAGD,KAAK,CAAC,CAAC,CAAC;IACpB,MAAME,KAAK,GAAGF,KAAK,CAACE,KAAK,KAAKC,SAAS,GAAGH,KAAK,CAACE,KAAK,GAAG,CAAC,CAAC;IAC1D,IAAIN,SAAS,GAAGM,KAAK,EAAE;MACnBP,SAAS,CAACS,IAAI,CAACX,IAAI,CAACY,KAAK,CAACT,SAAS,EAAEM,KAAK,CAAC,CAAC;IAChD;IACAR,IAAI,CAACU,IAAI,CAACH,GAAG,CAAC;IACdL,SAAS,GAAGM,KAAK,GAAGD,GAAG,CAACK,MAAM;EAClC,CAAC,CAAC;EACF,IAAIV,SAAS,GAAGH,IAAI,CAACa,MAAM,EAAE;IACzBX,SAAS,CAACS,IAAI,CAACX,IAAI,CAACY,KAAK,CAACT,SAAS,CAAC,CAAC;EACzC;EACA,IAAID,SAAS,CAACW,MAAM,KAAK,CAAC,IAAIZ,IAAI,CAACY,MAAM,GAAG,CAAC,EAAE;IAC3CX,SAAS,CAACS,IAAI,CAAC,EAAE,CAAC;EACtB;EACA,OAAO;IAAET,SAAS;IAAED;EAAK,CAAC;AAC9B,CAAC;AACDL,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}