{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport base64urlLib from 'base64url';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport { TORUS_SAPPHIRE_NETWORK, TORUS_LEGACY_NETWORK } from '@toruslabs/constants';\nexport { TORUS_LEGACY_NETWORK, TORUS_SAPPHIRE_NETWORK } from '@toruslabs/constants';\nimport Color from 'color';\nconst base64url = base64urlLib;\nfunction safebtoa(str) {\n  return base64url.encode(str);\n}\nfunction safeatob(str) {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return base64url.decode(str);\n}\nfunction base64toJSON(b64str) {\n  return JSON.parse(base64url.decode(b64str));\n}\nfunction jsonToBase64(json) {\n  return base64url.encode(JSON.stringify(json));\n}\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (err) {\n    const error = err;\n    return error && (\n    // everything except Firefox\n    error.code === 22 ||\n    // Firefox\n    error.code === 1014 ||\n    // test name field too, because code might not be present\n    // everything except Firefox\n    error.name === \"QuotaExceededError\" ||\n    // Firefox\n    error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n    // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0;\n  }\n}\nclass MemoryStore {\n  constructor() {\n    _defineProperty(this, \"store\", new Map());\n  }\n  getItem(key) {\n    return this.store.get(key) || null;\n  }\n  setItem(key, value) {\n    this.store.set(key, value);\n  }\n  removeItem(key) {\n    this.store.delete(key);\n  }\n}\nclass BrowserStorage {\n  constructor(storeKey, storage) {\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"_storeKey\", void 0);\n    this.storage = storage;\n    this._storeKey = storeKey;\n    try {\n      if (!storage.getItem(storeKey)) {\n        this.resetStore();\n      }\n    } catch (error) {\n      // Storage is not available\n    }\n  }\n  static getInstance(key) {\n    let storageKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"local\";\n    if (!this.instanceMap.has(key)) {\n      let storage;\n      if (storageKey === \"local\" && storageAvailable(\"localStorage\")) {\n        storage = window.localStorage;\n      } else if (storageKey === \"session\" && storageAvailable(\"sessionStorage\")) {\n        storage = window.sessionStorage;\n      } else {\n        storage = new MemoryStore();\n      }\n      this.instanceMap.set(key, new this(key, storage));\n    }\n    return this.instanceMap.get(key);\n  }\n  toJSON() {\n    return this.storage.getItem(this._storeKey);\n  }\n  resetStore() {\n    const currStore = this.getStore();\n    this.storage.removeItem(this._storeKey);\n    return currStore;\n  }\n  getStore() {\n    return JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n  }\n  get(key) {\n    const store = JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n    return store[key];\n  }\n  set(key, value) {\n    const store = JSON.parse(this.storage.getItem(this._storeKey) || \"{}\");\n    store[key] = value;\n    this.storage.setItem(this._storeKey, JSON.stringify(store));\n  }\n}\n_defineProperty(BrowserStorage, \"instanceMap\", new Map());\nconst storeKey = \"openlogin_store\";\nconst UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\"\n};\nconst OPENLOGIN_NETWORK = _objectSpread(_objectSpread({}, TORUS_SAPPHIRE_NETWORK), TORUS_LEGACY_NETWORK);\nconst SUPPORTED_KEY_CURVES = {\n  SECP256K1: \"secp256k1\",\n  ED25519: \"ed25519\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  FARCASTER: \"farcaster\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n  SMS_PASSWORDLESS: \"sms_passwordless\",\n  WEBAUTHN: \"webauthn\",\n  JWT: \"jwt\"\n};\nconst MFA_LEVELS = {\n  DEFAULT: \"default\",\n  OPTIONAL: \"optional\",\n  MANDATORY: \"mandatory\",\n  NONE: \"none\"\n};\nconst OPENLOGIN_ACTIONS = {\n  LOGIN: \"login\",\n  ENABLE_MFA: \"enable_mfa\",\n  MANAGE_MFA: \"manage_mfa\",\n  MODIFY_SOCIAL_FACTOR: \"modify_social_factor\"\n};\nconst BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  STAGING: \"staging\",\n  TESTING: \"testing\"\n};\n\n/**\n * {@label loginProviderType}\n */\n\n// autocomplete workaround https://github.com/microsoft/TypeScript/issues/29729\n\nconst LANGUAGES = {\n  en: \"en\",\n  ja: \"ja\",\n  ko: \"ko\",\n  de: \"de\",\n  zh: \"zh\",\n  es: \"es\",\n  fr: \"fr\",\n  pt: \"pt\",\n  nl: \"nl\",\n  tr: \"tr\"\n};\nconst LANGUAGE_MAP = {\n  en: \"english\",\n  ja: \"japanese\",\n  ko: \"korean\",\n  de: \"german\",\n  zh: \"mandarin\",\n  es: \"spanish\",\n  fr: \"french\",\n  pt: \"portuguese\",\n  nl: \"dutch\",\n  tr: \"turkish\"\n};\nconst THEME_MODES = {\n  light: \"light\",\n  dark: \"dark\",\n  auto: \"auto\"\n};\nconst MFA_FACTOR = {\n  DEVICE: \"deviceShareFactor\",\n  BACKUP_SHARE: \"backUpShareFactor\",\n  SOCIAL_BACKUP: \"socialBackupFactor\",\n  PASSWORD: \"passwordFactor\",\n  PASSKEYS: \"passkeysFactor\",\n  AUTHENTICATOR: \"authenticatorFactor\"\n};\nfunction getColorsList() {\n  let colorsAmount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n  let colorsShiftAmount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n  let mixColor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"black\";\n  let rotate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let saturation = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 20;\n  let mainColor = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : \"#0346ff\";\n  const colorsList = [];\n  let step;\n  for (step = 0; step < colorsAmount; step += 1) {\n    colorsList.push(Color(mainColor).rotate((step + 1) / colorsAmount * -rotate).saturate((step + 1) / colorsAmount * (saturation / 100)).mix(Color(mixColor), colorsShiftAmount / 100 * (step + 1) / colorsAmount).hex());\n  }\n  return colorsList;\n}\nfunction generateWhiteLabelTheme(primary) {\n  const darkSet = getColorsList(3, 50, \"black\", 0, 20, primary);\n  const lightSet = getColorsList(6, 85, \"white\", 0, 20, primary);\n  return [...darkSet.reverse(), primary, ...lightSet];\n}\nfunction applyWhiteLabelTheme(rootElement, theme) {\n  if (theme.primary) {\n    const themeSet = generateWhiteLabelTheme(theme.primary);\n    rootElement.style.setProperty(\"--app-primary-900\", themeSet[0]);\n    rootElement.style.setProperty(\"--app-primary-800\", themeSet[1]);\n    rootElement.style.setProperty(\"--app-primary-700\", themeSet[2]);\n    rootElement.style.setProperty(\"--app-primary-600\", themeSet[3]);\n    rootElement.style.setProperty(\"--app-primary-500\", themeSet[4]);\n    rootElement.style.setProperty(\"--app-primary-400\", themeSet[5]);\n    rootElement.style.setProperty(\"--app-primary-300\", themeSet[6]);\n    rootElement.style.setProperty(\"--app-primary-200\", themeSet[7]);\n    rootElement.style.setProperty(\"--app-primary-100\", themeSet[8]);\n    rootElement.style.setProperty(\"--app-primary-50\", themeSet[9]);\n  }\n  if (theme.onPrimary) {\n    rootElement.style.setProperty(\"--app-on-primary\", theme.onPrimary);\n  }\n}\nexport { BUILD_ENV, BrowserStorage, LANGUAGES, LANGUAGE_MAP, LOGIN_PROVIDER, MFA_FACTOR, MFA_LEVELS, MemoryStore, OPENLOGIN_ACTIONS, OPENLOGIN_NETWORK, SUPPORTED_KEY_CURVES, THEME_MODES, UX_MODE, applyWhiteLabelTheme, base64toJSON, base64url, generateWhiteLabelTheme, getColorsList, jsonToBase64, safeatob, safebtoa, storageAvailable, storeKey };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}