{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EosSignTransaction = exports.EosSDKTransaction = exports.EosTxAction = exports.EosTxActionCommon = exports.EosAuthorization = exports.EosTxHeader = exports.EosPublicKey = void 0;\nconst schema_utils_1 = require(\"@trezor/schema-utils\");\nconst constants_1 = require(\"../../../constants\");\nconst params_1 = require(\"../../params\");\nexports.EosPublicKey = schema_utils_1.Type.Object({\n  wifPublicKey: schema_utils_1.Type.String(),\n  rawPublicKey: schema_utils_1.Type.String(),\n  path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  serializedPath: schema_utils_1.Type.String()\n});\nexports.EosTxHeader = schema_utils_1.Type.Object({\n  expiration: schema_utils_1.Type.Union([schema_utils_1.Type.Uint(), schema_utils_1.Type.String()]),\n  refBlockNum: schema_utils_1.Type.Number(),\n  refBlockPrefix: schema_utils_1.Type.Number(),\n  maxNetUsageWords: schema_utils_1.Type.Number(),\n  maxCpuUsageMs: schema_utils_1.Type.Number(),\n  delaySec: schema_utils_1.Type.Number()\n});\nexports.EosAuthorization = schema_utils_1.Type.Object({\n  threshold: schema_utils_1.Type.Number(),\n  keys: schema_utils_1.Type.Array(constants_1.PROTO.EosAuthorizationKey),\n  accounts: schema_utils_1.Type.Array(schema_utils_1.Type.Object({\n    permission: constants_1.PROTO.EosPermissionLevel,\n    weight: schema_utils_1.Type.Number()\n  })),\n  waits: schema_utils_1.Type.Array(constants_1.PROTO.EosAuthorizationWait)\n});\nexports.EosTxActionCommon = schema_utils_1.Type.Object({\n  account: schema_utils_1.Type.String(),\n  authorization: schema_utils_1.Type.Array(constants_1.PROTO.EosPermissionLevel)\n});\nexports.EosTxAction = schema_utils_1.Type.Union([schema_utils_1.Type.Intersect([exports.EosTxActionCommon, schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.Literal('transfer'),\n  data: schema_utils_1.Type.Object({\n    from: schema_utils_1.Type.String(),\n    to: schema_utils_1.Type.String(),\n    quantity: schema_utils_1.Type.String(),\n    memo: schema_utils_1.Type.String()\n  })\n})]), schema_utils_1.Type.Intersect([exports.EosTxActionCommon, schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.Literal('delegatebw'),\n  data: schema_utils_1.Type.Object({\n    from: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    stake_net_quantity: schema_utils_1.Type.String(),\n    stake_cpu_quantity: schema_utils_1.Type.String(),\n    transfer: schema_utils_1.Type.Boolean()\n  })\n})]), schema_utils_1.Type.Intersect([exports.EosTxActionCommon, schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.Literal('undelegatebw'),\n  data: schema_utils_1.Type.Object({\n    from: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    unstake_net_quantity: schema_utils_1.Type.String(),\n    unstake_cpu_quantity: schema_utils_1.Type.String()\n  })\n})]), schema_utils_1.Type.Intersect([exports.EosTxActionCommon, schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.Literal('buyram'),\n  data: schema_utils_1.Type.Object({\n    payer: schema_utils_1.Type.String(),\n    receiver: schema_utils_1.Type.String(),\n    quant: schema_utils_1.Type.String()\n  })\n})]), schema_utils_1.Type.Intersect([exports.EosTxActionCommon, schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.Literal('buyrambytes'),\n  data: constants_1.PROTO.EosActionBuyRamBytes\n})]), schema_utils_1.Type.Intersect([exports.EosTxActionCommon, schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.Literal('sellram'),\n  data: constants_1.PROTO.EosActionSellRam\n})]), schema_utils_1.Type.Intersect([exports.EosTxActionCommon, schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.Literal('voteproducer'),\n  data: schema_utils_1.Type.Object({\n    voter: schema_utils_1.Type.String(),\n    proxy: schema_utils_1.Type.String(),\n    producers: schema_utils_1.Type.Array(schema_utils_1.Type.String())\n  })\n})]), schema_utils_1.Type.Intersect([exports.EosTxActionCommon, schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.Literal('refund'),\n  data: constants_1.PROTO.EosActionRefund\n})]), schema_utils_1.Type.Intersect([exports.EosTxActionCommon, schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.Literal('updateauth'),\n  data: schema_utils_1.Type.Object({\n    account: schema_utils_1.Type.String(),\n    permission: schema_utils_1.Type.String(),\n    parent: schema_utils_1.Type.String(),\n    auth: exports.EosAuthorization\n  })\n})]), schema_utils_1.Type.Intersect([exports.EosTxActionCommon, schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.Literal('deleteauth'),\n  data: constants_1.PROTO.EosActionDeleteAuth\n})]), schema_utils_1.Type.Intersect([exports.EosTxActionCommon, schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.Literal('linkauth'),\n  data: constants_1.PROTO.EosActionLinkAuth\n})]), schema_utils_1.Type.Intersect([exports.EosTxActionCommon, schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.Literal('unlinkauth'),\n  data: constants_1.PROTO.EosActionUnlinkAuth\n})]), schema_utils_1.Type.Intersect([exports.EosTxActionCommon, schema_utils_1.Type.Object({\n  name: schema_utils_1.Type.Literal('newaccount'),\n  data: schema_utils_1.Type.Object({\n    creator: schema_utils_1.Type.String(),\n    name: schema_utils_1.Type.String(),\n    owner: exports.EosAuthorization,\n    active: exports.EosAuthorization\n  })\n})])]);\nexports.EosSDKTransaction = schema_utils_1.Type.Object({\n  chainId: schema_utils_1.Type.String(),\n  header: exports.EosTxHeader,\n  actions: schema_utils_1.Type.Array(schema_utils_1.Type.Union([exports.EosTxAction, schema_utils_1.Type.Intersect([exports.EosTxActionCommon, schema_utils_1.Type.Object({\n    name: schema_utils_1.Type.String(),\n    data: schema_utils_1.Type.String()\n  })])]))\n});\nexports.EosSignTransaction = schema_utils_1.Type.Object({\n  path: params_1.DerivationPath,\n  transaction: exports.EosSDKTransaction,\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n});\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}