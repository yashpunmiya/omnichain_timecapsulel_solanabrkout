{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ConnectionController, CoreHelperUtil, EventsController } from '@reown/appkit-controllers';\nimport { customElement } from '@reown/appkit-ui';\nimport { W3mConnectingWidget } from '../../utils/w3m-connecting-widget/index.js';\nlet W3mConnectingWcDesktop = class W3mConnectingWcDesktop extends W3mConnectingWidget {\n  constructor() {\n    super();\n    if (!this.wallet) {\n      throw new Error('w3m-connecting-wc-desktop: No wallet provided');\n    }\n    this.onConnect = this.onConnectProxy.bind(this);\n    this.onRender = this.onRenderProxy.bind(this);\n    EventsController.sendEvent({\n      type: 'track',\n      event: 'SELECT_WALLET',\n      properties: {\n        name: this.wallet.name,\n        platform: 'desktop'\n      }\n    });\n  }\n  onRenderProxy() {\n    if (!this.ready && this.uri) {\n      this.ready = true;\n      this.onConnect?.();\n    }\n  }\n  onConnectProxy() {\n    if (this.wallet?.desktop_link && this.uri) {\n      try {\n        this.error = false;\n        const {\n          desktop_link,\n          name\n        } = this.wallet;\n        const {\n          redirect,\n          href\n        } = CoreHelperUtil.formatNativeUrl(desktop_link, this.uri);\n        ConnectionController.setWcLinking({\n          name,\n          href\n        });\n        ConnectionController.setRecentWallet(this.wallet);\n        CoreHelperUtil.openHref(redirect, '_blank');\n      } catch {\n        this.error = true;\n      }\n    }\n  }\n};\nW3mConnectingWcDesktop = __decorate([customElement('w3m-connecting-wc-desktop')], W3mConnectingWcDesktop);\nexport { W3mConnectingWcDesktop };","map":{"version":3,"names":["ConnectionController","CoreHelperUtil","EventsController","customElement","W3mConnectingWidget","W3mConnectingWcDesktop","constructor","wallet","Error","onConnect","onConnectProxy","bind","onRender","onRenderProxy","sendEvent","type","event","properties","name","platform","ready","uri","desktop_link","error","redirect","href","formatNativeUrl","setWcLinking","setRecentWallet","openHref","__decorate"],"sources":["../../../../../src/partials/w3m-connecting-wc-desktop/index.ts"],"sourcesContent":[null],"mappings":";;;;;;;AAAA,SAASA,oBAAoB,EAAEC,cAAc,EAAEC,gBAAgB,QAAQ,2BAA2B;AAClG,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,SAASC,mBAAmB,QAAQ,4CAA4C;AAGzE,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAuB,SAAQD,mBAAmB;EAC7DE,YAAA;IACE,KAAK,EAAE;IACP,IAAI,CAAC,IAAI,CAACC,MAAM,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;IAClE;IACA,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;IAC/C,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,aAAa,CAACF,IAAI,CAAC,IAAI,CAAC;IAC7CT,gBAAgB,CAACY,SAAS,CAAC;MACzBC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE,eAAe;MACtBC,UAAU,EAAE;QAAEC,IAAI,EAAE,IAAI,CAACX,MAAM,CAACW,IAAI;QAAEC,QAAQ,EAAE;MAAS;KAC1D,CAAC;EACJ;EAGQN,aAAaA,CAAA;IACnB,IAAI,CAAC,IAAI,CAACO,KAAK,IAAI,IAAI,CAACC,GAAG,EAAE;MAC3B,IAAI,CAACD,KAAK,GAAG,IAAI;MACjB,IAAI,CAACX,SAAS,GAAE,CAAE;IACpB;EACF;EAEQC,cAAcA,CAAA;IACpB,IAAI,IAAI,CAACH,MAAM,EAAEe,YAAY,IAAI,IAAI,CAACD,GAAG,EAAE;MACzC,IAAI;QACF,IAAI,CAACE,KAAK,GAAG,KAAK;QAClB,MAAM;UAAED,YAAY;UAAEJ;QAAI,CAAE,GAAG,IAAI,CAACX,MAAM;QAC1C,MAAM;UAAEiB,QAAQ;UAAEC;QAAI,CAAE,GAAGxB,cAAc,CAACyB,eAAe,CAACJ,YAAY,EAAE,IAAI,CAACD,GAAG,CAAC;QACjFrB,oBAAoB,CAAC2B,YAAY,CAAC;UAAET,IAAI;UAAEO;QAAI,CAAE,CAAC;QACjDzB,oBAAoB,CAAC4B,eAAe,CAAC,IAAI,CAACrB,MAAM,CAAC;QACjDN,cAAc,CAAC4B,QAAQ,CAACL,QAAQ,EAAE,QAAQ,CAAC;MAC7C,CAAC,CAAC,MAAM;QACN,IAAI,CAACD,KAAK,GAAG,IAAI;MACnB;IACF;EACF;CACD;AArCYlB,sBAAsB,GAAAyB,UAAA,EADlC3B,aAAa,CAAC,2BAA2B,CAAC,C,EAC9BE,sBAAsB,CAqClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}