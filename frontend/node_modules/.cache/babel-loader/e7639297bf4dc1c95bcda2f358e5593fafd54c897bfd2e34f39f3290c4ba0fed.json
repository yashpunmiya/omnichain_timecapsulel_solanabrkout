{"ast":null,"code":"import { useWallet } from '@solana/wallet-adapter-react';\nimport { useCallback } from 'react';\nexport function useWalletDisconnectButton() {\n  const {\n    disconnecting,\n    disconnect,\n    wallet\n  } = useWallet();\n  let buttonState;\n  if (disconnecting) {\n    buttonState = 'disconnecting';\n  } else if (wallet) {\n    buttonState = 'has-wallet';\n  } else {\n    buttonState = 'no-wallet';\n  }\n  const handleDisconnectButtonClick = useCallback(() => {\n    disconnect().catch(() => {\n      // Silently catch because any errors are caught by the context `onError` handler\n    });\n  }, [disconnect]);\n  return {\n    buttonDisabled: buttonState !== 'has-wallet',\n    buttonState,\n    onButtonClick: buttonState === 'has-wallet' ? handleDisconnectButtonClick : undefined,\n    walletIcon: wallet?.adapter.icon,\n    walletName: wallet?.adapter.name\n  };\n}","map":{"version":3,"names":["useWallet","useCallback","useWalletDisconnectButton","disconnecting","disconnect","wallet","buttonState","handleDisconnectButtonClick","catch","buttonDisabled","onButtonClick","undefined","walletIcon","adapter","icon","walletName","name"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@solana\\wallet-adapter-base-ui\\src\\useWalletDisconnectButton.ts"],"sourcesContent":["import { useWallet, type Wallet } from '@solana/wallet-adapter-react';\nimport { useCallback } from 'react';\n\ntype ButtonState = {\n    buttonDisabled: boolean;\n    buttonState: 'disconnecting' | 'has-wallet' | 'no-wallet';\n    onButtonClick?: () => void;\n    walletIcon?: Wallet['adapter']['icon'];\n    walletName?: Wallet['adapter']['name'];\n};\n\nexport function useWalletDisconnectButton(): ButtonState {\n    const { disconnecting, disconnect, wallet } = useWallet();\n    let buttonState: ButtonState['buttonState'];\n    if (disconnecting) {\n        buttonState = 'disconnecting';\n    } else if (wallet) {\n        buttonState = 'has-wallet';\n    } else {\n        buttonState = 'no-wallet';\n    }\n    const handleDisconnectButtonClick = useCallback(() => {\n        disconnect().catch(() => {\n            // Silently catch because any errors are caught by the context `onError` handler\n        });\n    }, [disconnect]);\n    return {\n        buttonDisabled: buttonState !== 'has-wallet',\n        buttonState,\n        onButtonClick: buttonState === 'has-wallet' ? handleDisconnectButtonClick : undefined,\n        walletIcon: wallet?.adapter.icon,\n        walletName: wallet?.adapter.name,\n    };\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAqB,8BAA8B;AACrE,SAASC,WAAW,QAAQ,OAAO;AAUnC,OAAM,SAAUC,yBAAyBA,CAAA;EACrC,MAAM;IAAEC,aAAa;IAAEC,UAAU;IAAEC;EAAM,CAAE,GAAGL,SAAS,EAAE;EACzD,IAAIM,WAAuC;EAC3C,IAAIH,aAAa,EAAE;IACfG,WAAW,GAAG,eAAe;EACjC,CAAC,MAAM,IAAID,MAAM,EAAE;IACfC,WAAW,GAAG,YAAY;EAC9B,CAAC,MAAM;IACHA,WAAW,GAAG,WAAW;EAC7B;EACA,MAAMC,2BAA2B,GAAGN,WAAW,CAAC,MAAK;IACjDG,UAAU,EAAE,CAACI,KAAK,CAAC,MAAK;MACpB;IAAA,CACH,CAAC;EACN,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAChB,OAAO;IACHK,cAAc,EAAEH,WAAW,KAAK,YAAY;IAC5CA,WAAW;IACXI,aAAa,EAAEJ,WAAW,KAAK,YAAY,GAAGC,2BAA2B,GAAGI,SAAS;IACrFC,UAAU,EAAEP,MAAM,EAAEQ,OAAO,CAACC,IAAI;IAChCC,UAAU,EAAEV,MAAM,EAAEQ,OAAO,CAACG;GAC/B;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}