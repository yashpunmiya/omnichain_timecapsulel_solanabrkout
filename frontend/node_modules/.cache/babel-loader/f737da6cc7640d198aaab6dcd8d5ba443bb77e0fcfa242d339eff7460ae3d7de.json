{"ast":null,"code":"/*!\n * Infinite Scroll v2.0.4\n * measure size of elements\n * MIT license\n */\n\n(function (window, factory) {\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n})(window, function factory() {\n  // -------------------------- helpers -------------------------- //\n\n  // get a number from a string, not a percentage\n  function getStyleSize(value) {\n    let num = parseFloat(value);\n    // not a percent like '100%', and a number\n    let isValid = value.indexOf('%') == -1 && !isNaN(num);\n    return isValid && num;\n  }\n\n  // -------------------------- measurements -------------------------- //\n\n  let measurements = ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom', 'marginLeft', 'marginRight', 'marginTop', 'marginBottom', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'borderBottomWidth'];\n  let measurementsLength = measurements.length;\n  function getZeroSize() {\n    let size = {\n      width: 0,\n      height: 0,\n      innerWidth: 0,\n      innerHeight: 0,\n      outerWidth: 0,\n      outerHeight: 0\n    };\n    measurements.forEach(measurement => {\n      size[measurement] = 0;\n    });\n    return size;\n  }\n\n  // -------------------------- getSize -------------------------- //\n\n  function getSize(elem) {\n    // use querySeletor if elem is string\n    if (typeof elem == 'string') elem = document.querySelector(elem);\n\n    // do not proceed on non-objects\n    let isElement = elem && typeof elem == 'object' && elem.nodeType;\n    if (!isElement) return;\n    let style = getComputedStyle(elem);\n\n    // if hidden, everything is 0\n    if (style.display == 'none') return getZeroSize();\n    let size = {};\n    size.width = elem.offsetWidth;\n    size.height = elem.offsetHeight;\n    let isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n    // get all measurements\n    measurements.forEach(measurement => {\n      let value = style[measurement];\n      let num = parseFloat(value);\n      // any 'auto', 'medium' value will be 0\n      size[measurement] = !isNaN(num) ? num : 0;\n    });\n    let paddingWidth = size.paddingLeft + size.paddingRight;\n    let paddingHeight = size.paddingTop + size.paddingBottom;\n    let marginWidth = size.marginLeft + size.marginRight;\n    let marginHeight = size.marginTop + size.marginBottom;\n    let borderWidth = size.borderLeftWidth + size.borderRightWidth;\n    let borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n    // overwrite width and height if we can get it from style\n    let styleWidth = getStyleSize(style.width);\n    if (styleWidth !== false) {\n      size.width = styleWidth + (\n      // add padding and border unless it's already including it\n      isBorderBox ? 0 : paddingWidth + borderWidth);\n    }\n    let styleHeight = getStyleSize(style.height);\n    if (styleHeight !== false) {\n      size.height = styleHeight + (\n      // add padding and border unless it's already including it\n      isBorderBox ? 0 : paddingHeight + borderHeight);\n    }\n    size.innerWidth = size.width - (paddingWidth + borderWidth);\n    size.innerHeight = size.height - (paddingHeight + borderHeight);\n    size.outerWidth = size.width + marginWidth;\n    size.outerHeight = size.height + marginHeight;\n    return size;\n  }\n  return getSize;\n});","map":{"version":3,"names":["window","factory","module","exports","getSize","getStyleSize","value","num","parseFloat","isValid","indexOf","isNaN","measurements","measurementsLength","length","getZeroSize","size","width","height","innerWidth","innerHeight","outerWidth","outerHeight","forEach","measurement","elem","document","querySelector","isElement","nodeType","style","getComputedStyle","display","offsetWidth","offsetHeight","isBorderBox","boxSizing","paddingWidth","paddingLeft","paddingRight","paddingHeight","paddingTop","paddingBottom","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderWidth","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","styleWidth","styleHeight"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/get-size/get-size.js"],"sourcesContent":["/*!\n * Infinite Scroll v2.0.4\n * measure size of elements\n * MIT license\n */\n\n( function( window, factory ) {\n  if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n\n} )( window, function factory() {\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  let num = parseFloat( value );\n  // not a percent like '100%', and a number\n  let isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\n// -------------------------- measurements -------------------------- //\n\nlet measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth',\n];\n\nlet measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  let size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0,\n  };\n  measurements.forEach( ( measurement ) => {\n    size[ measurement ] = 0;\n  } );\n  return size;\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) elem = document.querySelector( elem );\n\n  // do not proceed on non-objects\n  let isElement = elem && typeof elem == 'object' && elem.nodeType;\n  if ( !isElement ) return;\n\n  let style = getComputedStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) return getZeroSize();\n\n  let size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  let isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  measurements.forEach( ( measurement ) => {\n    let value = style[ measurement ];\n    let num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  } );\n\n  let paddingWidth = size.paddingLeft + size.paddingRight;\n  let paddingHeight = size.paddingTop + size.paddingBottom;\n  let marginWidth = size.marginLeft + size.marginRight;\n  let marginHeight = size.marginTop + size.marginBottom;\n  let borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  let borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  // overwrite width and height if we can get it from style\n  let styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBox ? 0 : paddingWidth + borderWidth );\n  }\n\n  let styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBox ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n} );\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}