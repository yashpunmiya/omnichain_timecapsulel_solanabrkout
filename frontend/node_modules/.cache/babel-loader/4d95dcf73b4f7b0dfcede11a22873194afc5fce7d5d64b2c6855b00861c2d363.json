{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { AssetUtil, ConnectionController, CoreHelperUtil, RouterController, SnackController, ThemeController } from '@reown/appkit-controllers';\nimport '@reown/appkit-ui/wui-button';\nimport '@reown/appkit-ui/wui-flex';\nimport '@reown/appkit-ui/wui-icon';\nimport '@reown/appkit-ui/wui-icon-box';\nimport '@reown/appkit-ui/wui-link';\nimport '@reown/appkit-ui/wui-loading-thumbnail';\nimport '@reown/appkit-ui/wui-text';\nimport '@reown/appkit-ui/wui-wallet-image';\nimport '../../partials/w3m-mobile-download-links/index.js';\nimport styles from './styles.js';\nexport class W3mConnectingWidget extends LitElement {\n  constructor() {\n    super();\n    this.wallet = RouterController.state.data?.wallet;\n    this.connector = RouterController.state.data?.connector;\n    this.timeout = undefined;\n    this.secondaryBtnIcon = 'refresh';\n    this.onConnect = undefined;\n    this.onRender = undefined;\n    this.onAutoConnect = undefined;\n    this.isWalletConnect = true;\n    this.unsubscribe = [];\n    this.imageSrc = AssetUtil.getWalletImage(this.wallet) ?? AssetUtil.getConnectorImage(this.connector);\n    this.name = this.wallet?.name ?? this.connector?.name ?? 'Wallet';\n    this.isRetrying = false;\n    this.uri = ConnectionController.state.wcUri;\n    this.error = ConnectionController.state.wcError;\n    this.ready = false;\n    this.showRetry = false;\n    this.secondaryBtnLabel = 'Try again';\n    this.secondaryLabel = 'Accept connection request in the wallet';\n    this.buffering = false;\n    this.isLoading = false;\n    this.isMobile = false;\n    this.onRetry = undefined;\n    this.unsubscribe.push(...[ConnectionController.subscribeKey('wcUri', val => {\n      this.uri = val;\n      if (this.isRetrying && this.onRetry) {\n        this.isRetrying = false;\n        this.onConnect?.();\n      }\n    }), ConnectionController.subscribeKey('wcError', val => this.error = val), ConnectionController.subscribeKey('buffering', val => this.buffering = val)]);\n    if ((CoreHelperUtil.isTelegram() || CoreHelperUtil.isSafari()) && CoreHelperUtil.isIos() && ConnectionController.state.wcUri) {\n      this.onConnect?.();\n    }\n  }\n  firstUpdated() {\n    this.onAutoConnect?.();\n    this.showRetry = !this.onAutoConnect;\n  }\n  disconnectedCallback() {\n    this.unsubscribe.forEach(unsubscribe => unsubscribe());\n    clearTimeout(this.timeout);\n  }\n  render() {\n    this.onRender?.();\n    this.onShowRetry();\n    const subLabel = this.error ? 'Connection can be declined if a previous request is still active' : this.secondaryLabel;\n    let label = `Continue in ${this.name}`;\n    if (this.buffering) {\n      label = 'Connecting...';\n    }\n    if (this.error) {\n      label = 'Connection declined';\n    }\n    return html`\n      <wui-flex\n        data-error=${ifDefined(this.error)}\n        data-retry=${this.showRetry}\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        .padding=${['3xl', 'xl', 'xl', 'xl']}\n        gap=\"xl\"\n      >\n        <wui-flex justifyContent=\"center\" alignItems=\"center\">\n          <wui-wallet-image size=\"lg\" imageSrc=${ifDefined(this.imageSrc)}></wui-wallet-image>\n\n          ${this.error ? null : this.loaderTemplate()}\n\n          <wui-icon-box\n            backgroundColor=\"error-100\"\n            background=\"opaque\"\n            iconColor=\"error-100\"\n            icon=\"close\"\n            size=\"sm\"\n            border\n            borderColor=\"wui-color-bg-125\"\n          ></wui-icon-box>\n        </wui-flex>\n\n        <wui-flex flexDirection=\"column\" alignItems=\"center\" gap=\"xs\">\n          <wui-text variant=\"paragraph-500\" color=${this.error ? 'error-100' : 'fg-100'}>\n            ${label}\n          </wui-text>\n          <wui-text align=\"center\" variant=\"small-500\" color=\"fg-200\">${subLabel}</wui-text>\n        </wui-flex>\n\n        ${this.secondaryBtnLabel ? html`\n              <wui-button\n                variant=\"accent\"\n                size=\"md\"\n                ?disabled=${this.isRetrying || !this.error && this.buffering || this.isLoading}\n                @click=${this.onTryAgain.bind(this)}\n                data-testid=\"w3m-connecting-widget-secondary-button\"\n              >\n                <wui-icon color=\"inherit\" slot=\"iconLeft\" name=${this.secondaryBtnIcon}></wui-icon>\n                ${this.secondaryBtnLabel}\n              </wui-button>\n            ` : null}\n      </wui-flex>\n\n      ${this.isWalletConnect ? html`\n            <wui-flex .padding=${['0', 'xl', 'xl', 'xl']} justifyContent=\"center\">\n              <wui-link @click=${this.onCopyUri} color=\"fg-200\" data-testid=\"wui-link-copy\">\n                <wui-icon size=\"xs\" color=\"fg-200\" slot=\"iconLeft\" name=\"copy\"></wui-icon>\n                Copy link\n              </wui-link>\n            </wui-flex>\n          ` : null}\n\n      <w3m-mobile-download-links .wallet=${this.wallet}></w3m-mobile-download-links>\n    `;\n  }\n  onShowRetry() {\n    if (this.error && !this.showRetry) {\n      this.showRetry = true;\n      const retryButton = this.shadowRoot?.querySelector('wui-button');\n      retryButton?.animate([{\n        opacity: 0\n      }, {\n        opacity: 1\n      }], {\n        fill: 'forwards',\n        easing: 'ease'\n      });\n    }\n  }\n  onTryAgain() {\n    if (!this.buffering) {\n      ConnectionController.setWcError(false);\n      if (this.onRetry) {\n        this.isRetrying = true;\n        this.onRetry?.();\n      } else {\n        this.onConnect?.();\n      }\n    }\n  }\n  loaderTemplate() {\n    const borderRadiusMaster = ThemeController.state.themeVariables['--w3m-border-radius-master'];\n    const radius = borderRadiusMaster ? parseInt(borderRadiusMaster.replace('px', ''), 10) : 4;\n    return html`<wui-loading-thumbnail radius=${radius * 9}></wui-loading-thumbnail>`;\n  }\n  onCopyUri() {\n    try {\n      if (this.uri) {\n        CoreHelperUtil.copyToClopboard(this.uri);\n        SnackController.showSuccess('Link copied');\n      }\n    } catch {\n      SnackController.showError('Failed to copy');\n    }\n  }\n}\nW3mConnectingWidget.styles = styles;\n__decorate([state()], W3mConnectingWidget.prototype, \"isRetrying\", void 0);\n__decorate([state()], W3mConnectingWidget.prototype, \"uri\", void 0);\n__decorate([state()], W3mConnectingWidget.prototype, \"error\", void 0);\n__decorate([state()], W3mConnectingWidget.prototype, \"ready\", void 0);\n__decorate([state()], W3mConnectingWidget.prototype, \"showRetry\", void 0);\n__decorate([state()], W3mConnectingWidget.prototype, \"secondaryBtnLabel\", void 0);\n__decorate([state()], W3mConnectingWidget.prototype, \"secondaryLabel\", void 0);\n__decorate([state()], W3mConnectingWidget.prototype, \"buffering\", void 0);\n__decorate([state()], W3mConnectingWidget.prototype, \"isLoading\", void 0);\n__decorate([property({\n  type: Boolean\n})], W3mConnectingWidget.prototype, \"isMobile\", void 0);\n__decorate([property()], W3mConnectingWidget.prototype, \"onRetry\", void 0);\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}