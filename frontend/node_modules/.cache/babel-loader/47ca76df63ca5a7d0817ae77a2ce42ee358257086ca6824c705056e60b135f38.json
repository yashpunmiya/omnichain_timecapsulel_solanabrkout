{"ast":null,"code":"import { version } from './version.js';\nlet errorConfig = {\n  getDocsUrl: ({\n    docsBaseUrl,\n    docsPath = '',\n    docsSlug\n  }) => docsPath ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${docsSlug ? `#${docsSlug}` : ''}` : undefined,\n  version: `viem@${version}`\n};\nexport function setErrorConfig(config) {\n  errorConfig = config;\n}\nexport class BaseError extends Error {\n  constructor(shortMessage, args = {}) {\n    const details = (() => {\n      if (args.cause instanceof BaseError) return args.cause.details;\n      if (args.cause?.message) return args.cause.message;\n      return args.details;\n    })();\n    const docsPath = (() => {\n      if (args.cause instanceof BaseError) return args.cause.docsPath || args.docsPath;\n      return args.docsPath;\n    })();\n    const docsUrl = errorConfig.getDocsUrl?.({\n      ...args,\n      docsPath\n    });\n    const message = [shortMessage || 'An error occurred.', '', ...(args.metaMessages ? [...args.metaMessages, ''] : []), ...(docsUrl ? [`Docs: ${docsUrl}`] : []), ...(details ? [`Details: ${details}`] : []), ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : [])].join('\\n');\n    super(message, args.cause ? {\n      cause: args.cause\n    } : undefined);\n    Object.defineProperty(this, \"details\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"docsPath\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"metaMessages\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shortMessage\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'BaseError'\n    });\n    this.details = details;\n    this.docsPath = docsPath;\n    this.metaMessages = args.metaMessages;\n    this.name = args.name ?? this.name;\n    this.shortMessage = shortMessage;\n    this.version = version;\n  }\n  walk(fn) {\n    return walk(this, fn);\n  }\n}\nfunction walk(err, fn) {\n  if (fn?.(err)) return err;\n  if (err && typeof err === 'object' && 'cause' in err && err.cause !== undefined) return walk(err.cause, fn);\n  return fn ? null : err;\n}\n//# sourceMappingURL=base.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}