{"ast":null,"code":"import { proxy } from 'valtio/vanilla';\nimport { subscribeKey as subKey } from 'valtio/vanilla/utils';\nimport { OptionsController } from './OptionsController.js';\n// -- State --------------------------------------------- //\nconst state = proxy({\n  message: '',\n  variant: 'info',\n  open: false\n});\n// -- Controller ---------------------------------------- //\nexport const AlertController = {\n  state,\n  subscribeKey(key, callback) {\n    return subKey(state, key, callback);\n  },\n  open(message, variant) {\n    const {\n      debug\n    } = OptionsController.state;\n    const {\n      shortMessage,\n      longMessage\n    } = message;\n    if (debug) {\n      state.message = shortMessage;\n      state.variant = variant;\n      state.open = true;\n    }\n    if (longMessage) {\n      // eslint-disable-next-line no-console\n      console.error(typeof longMessage === 'function' ? longMessage() : longMessage);\n    }\n  },\n  close() {\n    state.open = false;\n    state.message = '';\n    state.variant = 'info';\n  }\n};\n//# sourceMappingURL=AlertController.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}