{"ast":null,"code":"import { proxy, snapshot, subscribe as sub } from 'valtio/vanilla';\nimport { getW3mThemeVariables } from '@reown/appkit-common';\nimport { ConnectorController } from './ConnectorController.js';\n// -- State --------------------------------------------- //\nconst state = proxy({\n  themeMode: 'dark',\n  themeVariables: {},\n  w3mThemeVariables: undefined\n});\n// -- Controller ---------------------------------------- //\nexport const ThemeController = {\n  state,\n  subscribe(callback) {\n    return sub(state, () => callback(state));\n  },\n  setThemeMode(themeMode) {\n    state.themeMode = themeMode;\n    try {\n      const authConnector = ConnectorController.getAuthConnector();\n      if (authConnector) {\n        const themeVariables = ThemeController.getSnapshot().themeVariables;\n        authConnector.provider.syncTheme({\n          themeMode,\n          themeVariables,\n          w3mThemeVariables: getW3mThemeVariables(themeVariables, themeMode)\n        });\n      }\n    } catch {\n      // eslint-disable-next-line no-console\n      console.info('Unable to sync theme to auth connector');\n    }\n  },\n  setThemeVariables(themeVariables) {\n    state.themeVariables = {\n      ...state.themeVariables,\n      ...themeVariables\n    };\n    try {\n      const authConnector = ConnectorController.getAuthConnector();\n      if (authConnector) {\n        const themeVariablesSnapshot = ThemeController.getSnapshot().themeVariables;\n        authConnector.provider.syncTheme({\n          themeVariables: themeVariablesSnapshot,\n          w3mThemeVariables: getW3mThemeVariables(state.themeVariables, state.themeMode)\n        });\n      }\n    } catch {\n      // eslint-disable-next-line no-console\n      console.info('Unable to sync theme to auth connector');\n    }\n  },\n  getSnapshot() {\n    return snapshot(state);\n  }\n};\n//# sourceMappingURL=ThemeController.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}