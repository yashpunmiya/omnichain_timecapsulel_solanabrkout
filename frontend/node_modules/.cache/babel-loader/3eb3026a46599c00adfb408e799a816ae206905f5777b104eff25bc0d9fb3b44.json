{"ast":null,"code":"import { keccak256 } from '../hash/keccak256.js';\nimport { toPrefixedMessage } from './toPrefixedMessage.js';\nexport function hashMessage(message, to_) {\n  return keccak256(toPrefixedMessage(message), to_);\n}","map":{"version":3,"names":["keccak256","toPrefixedMessage","hashMessage","message","to_"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@reown\\appkit-controllers\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\utils\\signature\\hashMessage.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { toPrefixedMessage } from './toPrefixedMessage.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashMessageReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type HashMessageErrorType = Keccak256ErrorType | ErrorType\n\nexport function hashMessage<to extends To = 'hex'>(\n  message: SignableMessage,\n  to_?: to | undefined,\n): HashMessageReturnType<to> {\n  return keccak256(toPrefixedMessage(message), to_)\n}\n"],"mappings":"AAEA,SAAkCA,SAAS,QAAQ,sBAAsB;AACzE,SAASC,iBAAiB,QAAQ,wBAAwB;AAU1D,OAAM,SAAUC,WAAWA,CACzBC,OAAwB,EACxBC,GAAoB;EAEpB,OAAOJ,SAAS,CAACC,iBAAiB,CAACE,OAAO,CAAC,EAAEC,GAAG,CAAC;AACnD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}