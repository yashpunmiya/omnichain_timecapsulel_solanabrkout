{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UintBuilder = void 0;\nconst typebox_1 = require(\"@sinclair/typebox\");\ntypebox_1.TypeRegistry.Set('Uint', (schema, value) => {\n  if (typeof value !== 'string' && typeof value !== 'number') {\n    return false;\n  }\n  if (typeof value === 'number' && !Number.isSafeInteger(value) || !/^(?:[1-9]\\d*|\\d)$/.test(value.toString().replace(/^-/, schema.allowNegative ? '' : '-'))) {\n    return false;\n  }\n  return true;\n});\nclass UintBuilder extends typebox_1.JavaScriptTypeBuilder {\n  Uint(options) {\n    return (0, typebox_1.CreateType)({\n      [typebox_1.Kind]: 'Uint',\n      type: 'Uint'\n    }, options);\n  }\n}\nexports.UintBuilder = UintBuilder;","map":{"version":3,"names":["typebox_1","require","TypeRegistry","Set","schema","value","Number","isSafeInteger","test","toString","replace","allowNegative","UintBuilder","JavaScriptTypeBuilder","Uint","options","CreateType","Kind","type","exports"],"sources":["../../src/custom-types/uint.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,SAAA,GAAAC,OAAA;AAUAD,SAAA,CAAAE,YAAY,CAACC,GAAG,CAAC,MAAM,EAAE,CAACC,MAAa,EAAEC,KAAc,KAAI;EACvD,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACxD,OAAO,KAAK;EAChB;EACA,IACK,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAACC,MAAM,CAACC,aAAa,CAACF,KAAK,CAAC,IAC1D,CAAC,mBAAmB,CAACG,IAAI,CAACH,KAAK,CAACI,QAAQ,EAAE,CAACC,OAAO,CAAC,IAAI,EAAEN,MAAM,CAACO,aAAa,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,EAC5F;IACE,OAAO,KAAK;EAChB;EAEA,OAAO,IAAI;AACf,CAAC,CAAC;AAEF,MAAaC,WAAY,SAAQZ,SAAA,CAAAa,qBAAqB;EAClDC,IAAIA,CAACC,OAAsB;IACvB,OAAO,IAAAf,SAAA,CAAAgB,UAAU,EAAC;MAAE,CAAChB,SAAA,CAAAiB,IAAI,GAAG,MAAM;MAAEC,IAAI,EAAE;IAAM,CAAE,EAAEH,OAAO,CAAU;EACzE;;AAHJI,OAAA,CAAAP,WAAA,GAAAA,WAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}