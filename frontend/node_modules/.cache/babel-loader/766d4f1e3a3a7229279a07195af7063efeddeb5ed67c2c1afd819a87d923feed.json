{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { state } from 'lit/decorators.js';\nimport { SnackController } from '@reown/appkit-controllers';\nimport { customElement } from '@reown/appkit-ui';\nimport '@reown/appkit-ui/wui-snackbar';\nimport styles from './styles.js';\nconst presets = {\n  loading: undefined,\n  success: {\n    backgroundColor: 'success-100',\n    iconColor: 'success-100',\n    icon: 'checkmark'\n  },\n  error: {\n    backgroundColor: 'error-100',\n    iconColor: 'error-100',\n    icon: 'close'\n  }\n};\nlet W3mSnackBar = class W3mSnackBar extends LitElement {\n  constructor() {\n    super();\n    this.unsubscribe = [];\n    this.timeout = undefined;\n    this.open = SnackController.state.open;\n    this.unsubscribe.push(SnackController.subscribeKey('open', val => {\n      this.open = val;\n      this.onOpen();\n    }));\n  }\n  disconnectedCallback() {\n    clearTimeout(this.timeout);\n    this.unsubscribe.forEach(unsubscribe => unsubscribe());\n  }\n  render() {\n    const {\n      message,\n      variant,\n      svg\n    } = SnackController.state;\n    const preset = presets[variant];\n    const {\n      icon,\n      iconColor\n    } = svg ?? preset ?? {};\n    return html`\n      <wui-snackbar\n        message=${message}\n        backgroundColor=${preset?.backgroundColor}\n        iconColor=${iconColor}\n        icon=${icon}\n        .loading=${variant === 'loading'}\n      ></wui-snackbar>\n    `;\n  }\n  onOpen() {\n    clearTimeout(this.timeout);\n    if (this.open) {\n      this.animate([{\n        opacity: 0,\n        transform: 'translateX(-50%) scale(0.85)'\n      }, {\n        opacity: 1,\n        transform: 'translateX(-50%) scale(1)'\n      }], {\n        duration: 150,\n        fill: 'forwards',\n        easing: 'ease'\n      });\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n      if (SnackController.state.autoClose) {\n        this.timeout = setTimeout(() => SnackController.hide(), 2500);\n      }\n    } else {\n      this.animate([{\n        opacity: 1,\n        transform: 'translateX(-50%) scale(1)'\n      }, {\n        opacity: 0,\n        transform: 'translateX(-50%) scale(0.85)'\n      }], {\n        duration: 150,\n        fill: 'forwards',\n        easing: 'ease'\n      });\n    }\n  }\n};\nW3mSnackBar.styles = styles;\n__decorate([state()], W3mSnackBar.prototype, \"open\", void 0);\nW3mSnackBar = __decorate([customElement('w3m-snackbar')], W3mSnackBar);\nexport { W3mSnackBar };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}