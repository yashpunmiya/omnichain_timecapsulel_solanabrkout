{"ast":null,"code":"\"use strict\";\n\n(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = factory();\n  } else {\n    global.CBOR = factory();\n  }\n})(this, function () {\n  const {\n    DataItem\n  } = require('./DataItem');\n  var CBOR = function () {\n    function BinaryHex(hex) {\n      this.$hex = hex;\n    }\n    BinaryHex.prototype = {\n      length: function () {\n        return this.$hex.length / 2;\n      },\n      toString: function (format) {\n        if (!format || format === 'hex' || format === 16) return this.$hex;\n        if (format === 'utf-8') {\n          var encoded = '';\n          for (var i = 0; i < this.$hex.length; i += 2) {\n            encoded += '%' + this.$hex.substring(i, i + 2);\n          }\n          return decodeURIComponent(encoded);\n        }\n        if (format === 'latin') {\n          var encoded = [];\n          for (var i = 0; i < this.$hex.length; i += 2) {\n            encoded.push(parseInt(this.$hex.substring(i, i + 2), 16));\n          }\n          return String.fromCharCode.apply(String, encoded);\n        }\n        throw new Error('Unrecognised format: ' + format);\n      }\n    };\n    BinaryHex.fromLatinString = function (latinString) {\n      var hex = '';\n      for (var i = 0; i < latinString.length; i++) {\n        var pair = latinString.charCodeAt(i).toString(16);\n        if (pair.length === 1) pair = '0' + pair;\n        hex += pair;\n      }\n      return new BinaryHex(hex);\n    };\n    BinaryHex.fromUtf8String = function (utf8String) {\n      var encoded = encodeURIComponent(utf8String);\n      var hex = '';\n      for (var i = 0; i < encoded.length; i++) {\n        if (encoded.charAt(i) === '%') {\n          hex += encoded.substring(i + 1, i + 3);\n          i += 2;\n        } else {\n          var hexPair = encoded.charCodeAt(i).toString(16);\n          if (hexPair.length < 2) hexPair = '0' + hexPair;\n          hex += hexPair;\n        }\n      }\n      return new BinaryHex(hex);\n    };\n    var semanticEncoders = [];\n    var semanticDecoders = {};\n    var notImplemented = function (label) {\n      return function () {\n        throw new Error(label + ' not implemented');\n      };\n    };\n    function Reader() {}\n    Reader.prototype = {\n      peekByte: notImplemented('peekByte'),\n      readByte: notImplemented('readByte'),\n      readChunk: notImplemented('readChunk'),\n      readFloat16: function () {\n        var half = this.readUint16();\n        var exponent = (half & 0x7fff) >> 10;\n        var mantissa = half & 0x3ff;\n        var negative = half & 0x8000;\n        if (exponent === 0x1f) {\n          if (mantissa === 0) {\n            return negative ? -Infinity : Infinity;\n          }\n          return NaN;\n        }\n        var magnitude = exponent ? Math.pow(2, exponent - 25) * (1024 + mantissa) : Math.pow(2, -24) * mantissa;\n        return negative ? -magnitude : magnitude;\n      },\n      readFloat32: function () {\n        var intValue = this.readUint32();\n        var exponent = (intValue & 0x7fffffff) >> 23;\n        var mantissa = intValue & 0x7fffff;\n        var negative = intValue & 0x80000000;\n        if (exponent === 0xff) {\n          if (mantissa === 0) {\n            return negative ? -Infinity : Infinity;\n          }\n          return NaN;\n        }\n        var magnitude = exponent ? Math.pow(2, exponent - 23 - 127) * (8388608 + mantissa) : Math.pow(2, -23 - 126) * mantissa;\n        return negative ? -magnitude : magnitude;\n      },\n      readFloat64: function () {\n        var int1 = this.readUint32(),\n          int2 = this.readUint32();\n        var exponent = int1 >> 20 & 0x7ff;\n        var mantissa = (int1 & 0xfffff) * 4294967296 + int2;\n        var negative = int1 & 0x80000000;\n        if (exponent === 0x7ff) {\n          if (mantissa === 0) {\n            return negative ? -Infinity : Infinity;\n          }\n          return NaN;\n        }\n        var magnitude = exponent ? Math.pow(2, exponent - 52 - 1023) * (4503599627370496 + mantissa) : Math.pow(2, -52 - 1022) * mantissa;\n        return negative ? -magnitude : magnitude;\n      },\n      readUint16: function () {\n        return this.readByte() * 256 + this.readByte();\n      },\n      readUint32: function () {\n        return this.readUint16() * 65536 + this.readUint16();\n      },\n      readUint64: function () {\n        return this.readUint32() * 4294967296 + this.readUint32();\n      }\n    };\n    function Writer() {}\n    Writer.prototype = {\n      writeByte: notImplemented('writeByte'),\n      result: notImplemented('result'),\n      writeFloat16: notImplemented('writeFloat16'),\n      writeFloat32: notImplemented('writeFloat32'),\n      writeFloat64: notImplemented('writeFloat64'),\n      writeUint16: function (value) {\n        this.writeByte(value >> 8 & 0xff);\n        this.writeByte(value & 0xff);\n      },\n      writeUint32: function (value) {\n        this.writeUint16(value >> 16 & 0xffff);\n        this.writeUint16(value & 0xffff);\n      },\n      writeUint64: function (value) {\n        if (value >= 9007199254740992 || value <= -9007199254740992) {\n          throw new Error('Cannot encode Uint64 of: ' + value + ' magnitude to big (floating point errors)');\n        }\n        this.writeUint32(Math.floor(value / 4294967296));\n        this.writeUint32(value % 4294967296);\n      },\n      writeString: notImplemented('writeString'),\n      canWriteBinary: function (chunk) {\n        return false;\n      },\n      writeBinary: notImplemented('writeChunk')\n    };\n    function readHeaderRaw(reader) {\n      var firstByte = reader.readByte();\n      var majorType = firstByte >> 5,\n        value = firstByte & 0x1f;\n      return {\n        type: majorType,\n        value: value\n      };\n    }\n    function valueFromHeader(header, reader) {\n      var value = header.value;\n      if (value < 24) {\n        return value;\n      } else if (value == 24) {\n        return reader.readByte();\n      } else if (value == 25) {\n        return reader.readUint16();\n      } else if (value == 26) {\n        return reader.readUint32();\n      } else if (value == 27) {\n        return reader.readUint64();\n      } else if (value == 31) {\n        return null;\n      }\n      notImplemented('Additional info: ' + value)();\n    }\n    function writeHeaderRaw(type, value, writer) {\n      writer.writeByte(type << 5 | value);\n    }\n    function writeHeader(type, value, writer) {\n      var firstByte = type << 5;\n      if (value < 24) {\n        writer.writeByte(firstByte | value);\n      } else if (value < 256) {\n        writer.writeByte(firstByte | 24);\n        writer.writeByte(value);\n      } else if (value < 65536) {\n        writer.writeByte(firstByte | 25);\n        writer.writeUint16(value);\n      } else if (value < 4294967296) {\n        writer.writeByte(firstByte | 26);\n        writer.writeUint32(value);\n      } else {\n        writer.writeByte(firstByte | 27);\n        writer.writeUint64(value);\n      }\n    }\n    var stopCode = new Error();\n    function decodeReader(reader) {\n      var header = readHeaderRaw(reader);\n      switch (header.type) {\n        case 0:\n          return valueFromHeader(header, reader);\n        case 1:\n          return -1 - valueFromHeader(header, reader);\n        case 2:\n          return reader.readChunk(valueFromHeader(header, reader));\n        case 3:\n          var buffer = reader.readChunk(valueFromHeader(header, reader));\n          return buffer.toString('utf-8');\n        case 4:\n        case 5:\n          var arrayLength = valueFromHeader(header, reader);\n          var result = [];\n          if (arrayLength !== null) {\n            if (header.type === 5) {\n              arrayLength *= 2;\n            }\n            for (var i = 0; i < arrayLength; i++) {\n              result[i] = decodeReader(reader);\n            }\n          } else {\n            var item;\n            while ((item = decodeReader(reader)) !== stopCode) {\n              result.push(item);\n            }\n          }\n          if (header.type === 5) {\n            var objResult = {};\n            for (var i = 0; i < result.length; i += 2) {\n              objResult[result[i]] = result[i + 1];\n            }\n            return objResult;\n          } else {\n            return result;\n          }\n        case 6:\n          var tag = valueFromHeader(header, reader);\n          var decoder = semanticDecoders[tag];\n          var result = decodeReader(reader);\n          return decoder ? decoder(result) : result;\n        case 7:\n          if (header.value === 25) {\n            return reader.readFloat16();\n          } else if (header.value === 26) {\n            return reader.readFloat32();\n          } else if (header.value === 27) {\n            return reader.readFloat64();\n          }\n          switch (valueFromHeader(header, reader)) {\n            case 20:\n              return false;\n            case 21:\n              return true;\n            case 22:\n              return null;\n            case 23:\n              return undefined;\n            case null:\n              return stopCode;\n            default:\n              throw new Error('Unknown fixed value: ' + header.value);\n          }\n        default:\n          throw new Error('Unsupported header: ' + JSON.stringify(header));\n      }\n      throw new Error('not implemented yet');\n    }\n    function encodeWriter(data, writer) {\n      for (var i = 0; i < semanticEncoders.length; i++) {\n        var replacement = semanticEncoders[i].fn(data);\n        if (replacement !== undefined) {\n          writeHeader(6, semanticEncoders[i].tag, writer);\n          return encodeWriter(replacement, writer);\n        }\n      }\n      if (data && typeof data.toCBOR === 'function') {\n        data = data.toCBOR();\n      }\n      if (data === false) {\n        writeHeader(7, 20, writer);\n      } else if (data === true) {\n        writeHeader(7, 21, writer);\n      } else if (data === null) {\n        writeHeader(7, 22, writer);\n      } else if (data === undefined) {\n        writeHeader(7, 23, writer);\n      } else if (typeof data === 'number') {\n        if (Math.floor(data) === data && data < 9007199254740992 && data > -9007199254740992) {\n          if (data < 0) {\n            writeHeader(1, -1 - data, writer);\n          } else {\n            writeHeader(0, data, writer);\n          }\n        } else {\n          writeHeaderRaw(7, 27, writer);\n          writer.writeFloat64(data);\n        }\n      } else if (typeof data === 'string') {\n        writer.writeString(data, function (length) {\n          writeHeader(3, length, writer);\n        });\n      } else if (writer.canWriteBinary(data)) {\n        writer.writeBinary(data, function (length) {\n          writeHeader(2, length, writer);\n        });\n      } else if (typeof data === 'object') {\n        if (api.config.useToJSON && typeof data.toJSON === 'function') {\n          data = data.toJSON();\n        }\n        if (Array.isArray(data)) {\n          writeHeader(4, data.length, writer);\n          for (var i = 0; i < data.length; i++) {\n            encodeWriter(data[i], writer);\n          }\n        } else {\n          var keys = Object.keys(data);\n          writeHeader(5, keys.length, writer);\n          for (var i = 0; i < keys.length; i++) {\n            const number = parseInt(keys[i]);\n            if (isNaN(number)) {\n              encodeWriter(keys[i], writer);\n              encodeWriter(data[keys[i]], writer);\n            } else {\n              encodeWriter(number, writer);\n              encodeWriter(data[keys[i]], writer);\n            }\n          }\n        }\n      } else {\n        throw new Error('CBOR encoding not supported: ' + data);\n      }\n    }\n    var readerFunctions = [];\n    var writerFunctions = [];\n    var api = {\n      config: {\n        useToJSON: true\n      },\n      addWriter: function (format, writerFunction) {\n        if (typeof format === 'string') {\n          writerFunctions.push(function (f) {\n            if (format === f) return writerFunction(f);\n          });\n        } else {\n          writerFunctions.push(format);\n        }\n      },\n      addReader: function (format, readerFunction) {\n        if (typeof format === 'string') {\n          readerFunctions.push(function (data, f) {\n            if (format === f) return readerFunction(data, f);\n          });\n        } else {\n          readerFunctions.push(format);\n        }\n      },\n      encode: function (data, format) {\n        for (var i = 0; i < writerFunctions.length; i++) {\n          var func = writerFunctions[i];\n          var writer = func(format);\n          if (writer) {\n            encodeWriter(data, writer);\n            return writer.result();\n          }\n        }\n        throw new Error('Unsupported output format: ' + format);\n      },\n      encodeDataItem: function (data, format) {\n        for (var i = 0; i < writerFunctions.length; i++) {\n          var func = writerFunctions[i];\n          var writer = func(format);\n          if (writer) {\n            if (data.getTag() !== undefined) {\n              encodeWriter(data, writer);\n              return writer.result();\n            } else {\n              encodeWriter(data.getData(), writer);\n              return writer.result();\n            }\n          }\n        }\n        throw new Error('Unsupported output format: ' + format);\n      },\n      decode: function (data, format) {\n        for (var i = 0; i < readerFunctions.length; i++) {\n          var func = readerFunctions[i];\n          var reader = func(data, format);\n          if (reader) {\n            return decodeReader(reader);\n          }\n        }\n        throw new Error('Unsupported input format: ' + format);\n      },\n      decodeToDataItem: function (data, format) {\n        for (var i = 0; i < readerFunctions.length; i++) {\n          var func = readerFunctions[i];\n          var reader = func(data, format);\n          if (reader) {\n            const result = decodeReader(reader);\n            if (result instanceof DataItem) {\n              return result;\n            } else {\n              return new DataItem(result);\n            }\n          }\n        }\n        throw new Error('Unsupported input format: ' + format);\n      },\n      addSemanticEncode: function (tag, fn) {\n        if (typeof tag !== 'number' || tag % 1 !== 0 || tag < 0) {\n          throw new Error('Tag must be a positive integer');\n        }\n        semanticEncoders.push({\n          tag: tag,\n          fn: fn\n        });\n        return this;\n      },\n      addSemanticDecode: function (tag, fn) {\n        if (typeof tag !== 'number' || tag % 1 !== 0 || tag < 0) {\n          throw new Error('Tag must be a positive integer');\n        }\n        semanticDecoders[tag] = fn;\n        return this;\n      }\n    };\n    function BufferReader(buffer) {\n      this.buffer = buffer;\n      this.pos = 0;\n    }\n    BufferReader.prototype = Object.create(Reader.prototype);\n    BufferReader.prototype.peekByte = function () {\n      return this.buffer[this.pos];\n    };\n    BufferReader.prototype.readByte = function () {\n      return this.buffer[this.pos++];\n    };\n    BufferReader.prototype.readUint16 = function () {\n      var result = this.buffer.readUInt16BE(this.pos);\n      this.pos += 2;\n      return result;\n    };\n    BufferReader.prototype.readUint32 = function () {\n      var result = this.buffer.readUInt32BE(this.pos);\n      this.pos += 4;\n      return result;\n    };\n    BufferReader.prototype.readFloat32 = function () {\n      var result = this.buffer.readFloatBE(this.pos);\n      this.pos += 4;\n      return result;\n    };\n    BufferReader.prototype.readFloat64 = function () {\n      var result = this.buffer.readDoubleBE(this.pos);\n      this.pos += 8;\n      return result;\n    };\n    BufferReader.prototype.readChunk = function (length) {\n      var result = Buffer.alloc(length);\n      this.buffer.copy(result, 0, this.pos, this.pos += length);\n      return result;\n    };\n    function BufferWriter(stringFormat) {\n      this.byteLength = 0;\n      this.defaultBufferLength = 16384;\n      this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n      this.latestBufferOffset = 0;\n      this.completeBuffers = [];\n      this.stringFormat = stringFormat;\n    }\n    BufferWriter.prototype = Object.create(Writer.prototype);\n    BufferWriter.prototype.writeByte = function (value) {\n      this.latestBuffer[this.latestBufferOffset++] = value;\n      if (this.latestBufferOffset >= this.latestBuffer.length) {\n        this.completeBuffers.push(this.latestBuffer);\n        this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n        this.latestBufferOffset = 0;\n      }\n      this.byteLength++;\n    };\n    BufferWriter.prototype.writeFloat32 = function (value) {\n      var buffer = Buffer.alloc(4);\n      buffer.writeFloatBE(value, 0);\n      this.writeBuffer(buffer);\n    };\n    BufferWriter.prototype.writeFloat64 = function (value) {\n      var buffer = Buffer.alloc(8);\n      buffer.writeDoubleBE(value, 0);\n      this.writeBuffer(buffer);\n    };\n    BufferWriter.prototype.writeString = function (string, lengthFunc) {\n      var buffer = Buffer.from(string, 'utf-8');\n      lengthFunc(buffer.length);\n      this.writeBuffer(buffer);\n    };\n    BufferWriter.prototype.canWriteBinary = function (data) {\n      return data instanceof Buffer;\n    };\n    BufferWriter.prototype.writeBinary = function (buffer, lengthFunc) {\n      lengthFunc(buffer.length);\n      this.writeBuffer(buffer);\n    };\n    BufferWriter.prototype.writeBuffer = function (chunk) {\n      if (!(chunk instanceof Buffer)) throw new TypeError('BufferWriter only accepts Buffers');\n      if (!this.latestBufferOffset) {\n        this.completeBuffers.push(chunk);\n      } else if (this.latestBuffer.length - this.latestBufferOffset >= chunk.length) {\n        chunk.copy(this.latestBuffer, this.latestBufferOffset);\n        this.latestBufferOffset += chunk.length;\n        if (this.latestBufferOffset >= this.latestBuffer.length) {\n          this.completeBuffers.push(this.latestBuffer);\n          this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n          this.latestBufferOffset = 0;\n        }\n      } else {\n        this.completeBuffers.push(this.latestBuffer.slice(0, this.latestBufferOffset));\n        this.completeBuffers.push(chunk);\n        this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n        this.latestBufferOffset = 0;\n      }\n      this.byteLength += chunk.length;\n    };\n    BufferWriter.prototype.result = function () {\n      var result = Buffer.alloc(this.byteLength);\n      var offset = 0;\n      for (var i = 0; i < this.completeBuffers.length; i++) {\n        var buffer = this.completeBuffers[i];\n        buffer.copy(result, offset, 0, buffer.length);\n        offset += buffer.length;\n      }\n      if (this.latestBufferOffset) {\n        this.latestBuffer.copy(result, offset, 0, this.latestBufferOffset);\n      }\n      if (this.stringFormat) return result.toString(this.stringFormat);\n      return result;\n    };\n    if (typeof Buffer === 'function') {\n      api.addReader(function (data, format) {\n        if (Buffer.isBuffer(data)) {\n          return new BufferReader(data);\n        }\n        if (format === 'hex' || format === 'base64') {\n          var buffer = Buffer.from(data, format);\n          return new BufferReader(buffer);\n        }\n      });\n      api.addWriter(function (format) {\n        if (!format || format === 'buffer') {\n          return new BufferWriter();\n        } else if (format === 'hex' || format === 'base64') {\n          return new BufferWriter(format);\n        }\n      });\n    }\n    function HexReader(hex) {\n      this.hex = hex;\n      this.pos = 0;\n    }\n    HexReader.prototype = Object.create(Reader.prototype);\n    HexReader.prototype.peekByte = function () {\n      var pair = this.hex.substring(this.pos, 2);\n      return parseInt(pair, 16);\n    };\n    HexReader.prototype.readByte = function () {\n      var pair = this.hex.substring(this.pos, this.pos + 2);\n      this.pos += 2;\n      return parseInt(pair, 16);\n    };\n    HexReader.prototype.readChunk = function (length) {\n      var hex = this.hex.substring(this.pos, this.pos + length * 2);\n      this.pos += length * 2;\n      if (typeof Buffer === 'function') return Buffer.from(hex, 'hex');\n      return new BinaryHex(hex);\n    };\n    function HexWriter(finalFormat) {\n      this.$hex = '';\n      this.finalFormat = finalFormat || 'hex';\n    }\n    HexWriter.prototype = Object.create(Writer.prototype);\n    HexWriter.prototype.writeByte = function (value) {\n      if (value < 0 || value > 255) throw new Error('Byte value out of range: ' + value);\n      var hex = value.toString(16);\n      if (hex.length == 1) {\n        hex = '0' + hex;\n      }\n      this.$hex += hex;\n    };\n    HexWriter.prototype.canWriteBinary = function (chunk) {\n      return chunk instanceof BinaryHex || typeof Buffer === 'function' && chunk instanceof Buffer;\n    };\n    HexWriter.prototype.writeBinary = function (chunk, lengthFunction) {\n      if (chunk instanceof BinaryHex) {\n        lengthFunction(chunk.length());\n        this.$hex += chunk.$hex;\n      } else if (typeof Buffer === 'function' && chunk instanceof Buffer) {\n        lengthFunction(chunk.length);\n        this.$hex += chunk.toString('hex');\n      } else {\n        throw new TypeError('HexWriter only accepts BinaryHex or Buffers');\n      }\n    };\n    HexWriter.prototype.result = function () {\n      if (this.finalFormat === 'buffer' && typeof Buffer === 'function') {\n        return Buffer.from(this.$hex, 'hex');\n      }\n      return new BinaryHex(this.$hex).toString(this.finalFormat);\n    };\n    HexWriter.prototype.writeString = function (string, lengthFunction) {\n      var buffer = BinaryHex.fromUtf8String(string);\n      lengthFunction(buffer.length());\n      this.$hex += buffer.$hex;\n    };\n    api.addReader(function (data, format) {\n      if (data instanceof BinaryHex || data.$hex) {\n        return new HexReader(data.$hex);\n      }\n      if (format === 'hex') {\n        return new HexReader(data);\n      }\n    });\n    api.addWriter(function (format) {\n      if (format === 'hex') {\n        return new HexWriter();\n      }\n    });\n    return api;\n  }();\n  CBOR.addSemanticEncode(0, function (data) {\n    if (data instanceof Date) {\n      return data.toISOString();\n    }\n  }).addSemanticDecode(0, function (isoString) {\n    return new Date(isoString);\n  }).addSemanticDecode(1, function (isoString) {\n    return new Date(isoString);\n  });\n  return CBOR;\n});","map":{"version":3,"names":["global","factory","define","amd","module","exports","CBOR","DataItem","require","BinaryHex","hex","$hex","prototype","length","toString","format","encoded","i","substring","decodeURIComponent","push","parseInt","String","fromCharCode","apply","Error","fromLatinString","latinString","pair","charCodeAt","fromUtf8String","utf8String","encodeURIComponent","charAt","hexPair","semanticEncoders","semanticDecoders","notImplemented","label","Reader","peekByte","readByte","readChunk","readFloat16","half","readUint16","exponent","mantissa","negative","Infinity","NaN","magnitude","Math","pow","readFloat32","intValue","readUint32","readFloat64","int1","int2","readUint64","Writer","writeByte","result","writeFloat16","writeFloat32","writeFloat64","writeUint16","value","writeUint32","writeUint64","floor","writeString","canWriteBinary","chunk","writeBinary","readHeaderRaw","reader","firstByte","majorType","type","valueFromHeader","header","writeHeaderRaw","writer","writeHeader","stopCode","decodeReader","buffer","arrayLength","item","objResult","tag","decoder","undefined","JSON","stringify","encodeWriter","data","replacement","fn","toCBOR","api","config","useToJSON","toJSON","Array","isArray","keys","Object","number","isNaN","readerFunctions","writerFunctions","addWriter","writerFunction","f","addReader","readerFunction","encode","func","encodeDataItem","getTag","getData","decode","decodeToDataItem","addSemanticEncode","addSemanticDecode","BufferReader","pos","create","readUInt16BE","readUInt32BE","readFloatBE","readDoubleBE","Buffer","alloc","copy","BufferWriter","stringFormat","byteLength","defaultBufferLength","latestBuffer","latestBufferOffset","completeBuffers","writeFloatBE","writeBuffer","writeDoubleBE","string","lengthFunc","from","TypeError","slice","offset","isBuffer","HexReader","HexWriter","finalFormat","lengthFunction","Date","toISOString","isoString"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@keystonehq\\bc-ur-registry-sol\\node_modules\\@keystonehq\\bc-ur-registry\\src\\lib\\cbor-sync.js"],"sourcesContent":["(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = factory();\n  } else {\n    global.CBOR = factory();\n  }\n})(this, function () {\n  const { DataItem } = require('./DataItem');\n  var CBOR = (function () {\n    function BinaryHex(hex) {\n      this.$hex = hex;\n    }\n    BinaryHex.prototype = {\n      length: function () {\n        return this.$hex.length / 2;\n      },\n      toString: function (format) {\n        if (!format || format === 'hex' || format === 16) return this.$hex;\n        if (format === 'utf-8') {\n          var encoded = '';\n          for (var i = 0; i < this.$hex.length; i += 2) {\n            encoded += '%' + this.$hex.substring(i, i + 2);\n          }\n          return decodeURIComponent(encoded);\n        }\n        if (format === 'latin') {\n          var encoded = [];\n          for (var i = 0; i < this.$hex.length; i += 2) {\n            encoded.push(parseInt(this.$hex.substring(i, i + 2), 16));\n          }\n          return String.fromCharCode.apply(String, encoded);\n        }\n        throw new Error('Unrecognised format: ' + format);\n      },\n    };\n    BinaryHex.fromLatinString = function (latinString) {\n      var hex = '';\n      for (var i = 0; i < latinString.length; i++) {\n        var pair = latinString.charCodeAt(i).toString(16);\n        if (pair.length === 1) pair = '0' + pair;\n        hex += pair;\n      }\n      return new BinaryHex(hex);\n    };\n    BinaryHex.fromUtf8String = function (utf8String) {\n      var encoded = encodeURIComponent(utf8String);\n      var hex = '';\n      for (var i = 0; i < encoded.length; i++) {\n        if (encoded.charAt(i) === '%') {\n          hex += encoded.substring(i + 1, i + 3);\n          i += 2;\n        } else {\n          var hexPair = encoded.charCodeAt(i).toString(16);\n          if (hexPair.length < 2) hexPair = '0' + hexPair;\n          hex += hexPair;\n        }\n      }\n      return new BinaryHex(hex);\n    };\n\n    var semanticEncoders = [];\n    var semanticDecoders = {};\n\n    var notImplemented = function (label) {\n      return function () {\n        throw new Error(label + ' not implemented');\n      };\n    };\n\n    function Reader() {}\n    Reader.prototype = {\n      peekByte: notImplemented('peekByte'),\n      readByte: notImplemented('readByte'),\n      readChunk: notImplemented('readChunk'),\n      readFloat16: function () {\n        var half = this.readUint16();\n        var exponent = (half & 0x7fff) >> 10;\n        var mantissa = half & 0x3ff;\n        var negative = half & 0x8000;\n        if (exponent === 0x1f) {\n          if (mantissa === 0) {\n            return negative ? -Infinity : Infinity;\n          }\n          return NaN;\n        }\n        var magnitude = exponent\n          ? Math.pow(2, exponent - 25) * (1024 + mantissa)\n          : Math.pow(2, -24) * mantissa;\n        return negative ? -magnitude : magnitude;\n      },\n      readFloat32: function () {\n        var intValue = this.readUint32();\n        var exponent = (intValue & 0x7fffffff) >> 23;\n        var mantissa = intValue & 0x7fffff;\n        var negative = intValue & 0x80000000;\n        if (exponent === 0xff) {\n          if (mantissa === 0) {\n            return negative ? -Infinity : Infinity;\n          }\n          return NaN;\n        }\n        var magnitude = exponent\n          ? Math.pow(2, exponent - 23 - 127) * (8388608 + mantissa)\n          : Math.pow(2, -23 - 126) * mantissa;\n        return negative ? -magnitude : magnitude;\n      },\n      readFloat64: function () {\n        var int1 = this.readUint32(),\n          int2 = this.readUint32();\n        var exponent = (int1 >> 20) & 0x7ff;\n        var mantissa = (int1 & 0xfffff) * 4294967296 + int2;\n        var negative = int1 & 0x80000000;\n        if (exponent === 0x7ff) {\n          if (mantissa === 0) {\n            return negative ? -Infinity : Infinity;\n          }\n          return NaN;\n        }\n        var magnitude = exponent\n          ? Math.pow(2, exponent - 52 - 1023) * (4503599627370496 + mantissa)\n          : Math.pow(2, -52 - 1022) * mantissa;\n        return negative ? -magnitude : magnitude;\n      },\n      readUint16: function () {\n        return this.readByte() * 256 + this.readByte();\n      },\n      readUint32: function () {\n        return this.readUint16() * 65536 + this.readUint16();\n      },\n      readUint64: function () {\n        return this.readUint32() * 4294967296 + this.readUint32();\n      },\n    };\n    function Writer() {}\n    Writer.prototype = {\n      writeByte: notImplemented('writeByte'),\n      result: notImplemented('result'),\n      writeFloat16: notImplemented('writeFloat16'),\n      writeFloat32: notImplemented('writeFloat32'),\n      writeFloat64: notImplemented('writeFloat64'),\n      writeUint16: function (value) {\n        this.writeByte((value >> 8) & 0xff);\n        this.writeByte(value & 0xff);\n      },\n      writeUint32: function (value) {\n        this.writeUint16((value >> 16) & 0xffff);\n        this.writeUint16(value & 0xffff);\n      },\n      writeUint64: function (value) {\n        if (value >= 9007199254740992 || value <= -9007199254740992) {\n          throw new Error(\n            'Cannot encode Uint64 of: ' +\n              value +\n              ' magnitude to big (floating point errors)',\n          );\n        }\n        this.writeUint32(Math.floor(value / 4294967296));\n        this.writeUint32(value % 4294967296);\n      },\n      writeString: notImplemented('writeString'),\n      canWriteBinary: function (chunk) {\n        return false;\n      },\n      writeBinary: notImplemented('writeChunk'),\n    };\n\n    function readHeaderRaw(reader) {\n      var firstByte = reader.readByte();\n      var majorType = firstByte >> 5,\n        value = firstByte & 0x1f;\n      return { type: majorType, value: value };\n    }\n\n    function valueFromHeader(header, reader) {\n      var value = header.value;\n      if (value < 24) {\n        return value;\n      } else if (value == 24) {\n        return reader.readByte();\n      } else if (value == 25) {\n        return reader.readUint16();\n      } else if (value == 26) {\n        return reader.readUint32();\n      } else if (value == 27) {\n        return reader.readUint64();\n      } else if (value == 31) {\n        // special value for non-terminating arrays/objects\n        return null;\n      }\n      notImplemented('Additional info: ' + value)();\n    }\n\n    function writeHeaderRaw(type, value, writer) {\n      writer.writeByte((type << 5) | value);\n    }\n\n    function writeHeader(type, value, writer) {\n      var firstByte = type << 5;\n      if (value < 24) {\n        writer.writeByte(firstByte | value);\n      } else if (value < 256) {\n        writer.writeByte(firstByte | 24);\n        writer.writeByte(value);\n      } else if (value < 65536) {\n        writer.writeByte(firstByte | 25);\n        writer.writeUint16(value);\n      } else if (value < 4294967296) {\n        writer.writeByte(firstByte | 26);\n        writer.writeUint32(value);\n      } else {\n        writer.writeByte(firstByte | 27);\n        writer.writeUint64(value);\n      }\n    }\n\n    var stopCode = new Error(); // Just a unique object, that won't compare strictly equal to anything else\n\n    function decodeReader(reader) {\n      var header = readHeaderRaw(reader);\n      switch (header.type) {\n        case 0:\n          return valueFromHeader(header, reader);\n        case 1:\n          return -1 - valueFromHeader(header, reader);\n        case 2:\n          return reader.readChunk(valueFromHeader(header, reader));\n        case 3:\n          var buffer = reader.readChunk(valueFromHeader(header, reader));\n          return buffer.toString('utf-8');\n        case 4:\n        case 5:\n          var arrayLength = valueFromHeader(header, reader);\n          var result = [];\n          if (arrayLength !== null) {\n            if (header.type === 5) {\n              arrayLength *= 2;\n            }\n            for (var i = 0; i < arrayLength; i++) {\n              result[i] = decodeReader(reader);\n            }\n          } else {\n            var item;\n            while ((item = decodeReader(reader)) !== stopCode) {\n              result.push(item);\n            }\n          }\n          if (header.type === 5) {\n            var objResult = {};\n            for (var i = 0; i < result.length; i += 2) {\n              objResult[result[i]] = result[i + 1];\n            }\n            return objResult;\n          } else {\n            return result;\n          }\n        case 6:\n          var tag = valueFromHeader(header, reader);\n          var decoder = semanticDecoders[tag];\n          var result = decodeReader(reader);\n          return decoder ? decoder(result) : result;\n        case 7:\n          if (header.value === 25) {\n            return reader.readFloat16();\n          } else if (header.value === 26) {\n            return reader.readFloat32();\n          } else if (header.value === 27) {\n            return reader.readFloat64();\n          }\n          switch (valueFromHeader(header, reader)) {\n            case 20:\n              return false;\n            case 21:\n              return true;\n            case 22:\n              return null;\n            case 23:\n              return undefined;\n            case null:\n              return stopCode;\n            default:\n              throw new Error('Unknown fixed value: ' + header.value);\n          }\n        default:\n          throw new Error('Unsupported header: ' + JSON.stringify(header));\n      }\n      throw new Error('not implemented yet');\n    }\n\n    function encodeWriter(data, writer) {\n      for (var i = 0; i < semanticEncoders.length; i++) {\n        var replacement = semanticEncoders[i].fn(data);\n        if (replacement !== undefined) {\n          writeHeader(6, semanticEncoders[i].tag, writer);\n          return encodeWriter(replacement, writer);\n        }\n      }\n\n      if (data && typeof data.toCBOR === 'function') {\n        data = data.toCBOR();\n      }\n\n      if (data === false) {\n        writeHeader(7, 20, writer);\n      } else if (data === true) {\n        writeHeader(7, 21, writer);\n      } else if (data === null) {\n        writeHeader(7, 22, writer);\n      } else if (data === undefined) {\n        writeHeader(7, 23, writer);\n      } else if (typeof data === 'number') {\n        if (\n          Math.floor(data) === data &&\n          data < 9007199254740992 &&\n          data > -9007199254740992\n        ) {\n          // Integer\n          if (data < 0) {\n            writeHeader(1, -1 - data, writer);\n          } else {\n            writeHeader(0, data, writer);\n          }\n        } else {\n          writeHeaderRaw(7, 27, writer);\n          writer.writeFloat64(data);\n        }\n      } else if (typeof data === 'string') {\n        writer.writeString(data, function (length) {\n          writeHeader(3, length, writer);\n        });\n      } else if (writer.canWriteBinary(data)) {\n        writer.writeBinary(data, function (length) {\n          writeHeader(2, length, writer);\n        });\n      } else if (typeof data === 'object') {\n        if (api.config.useToJSON && typeof data.toJSON === 'function') {\n          data = data.toJSON();\n        }\n        if (Array.isArray(data)) {\n          writeHeader(4, data.length, writer);\n          for (var i = 0; i < data.length; i++) {\n            encodeWriter(data[i], writer);\n          }\n        } else {\n          var keys = Object.keys(data);\n          writeHeader(5, keys.length, writer);\n          for (var i = 0; i < keys.length; i++) {\n            const number = parseInt(keys[i]);\n            if (isNaN(number)) {\n              encodeWriter(keys[i], writer);\n              encodeWriter(data[keys[i]], writer);\n            } else {\n              encodeWriter(number, writer);\n              encodeWriter(data[keys[i]], writer);\n            }\n          }\n        }\n      } else {\n        throw new Error('CBOR encoding not supported: ' + data);\n      }\n    }\n\n    var readerFunctions = [];\n    var writerFunctions = [];\n\n    var api = {\n      config: {\n        useToJSON: true,\n      },\n      addWriter: function (format, writerFunction) {\n        if (typeof format === 'string') {\n          writerFunctions.push(function (f) {\n            if (format === f) return writerFunction(f);\n          });\n        } else {\n          writerFunctions.push(format);\n        }\n      },\n      addReader: function (format, readerFunction) {\n        if (typeof format === 'string') {\n          readerFunctions.push(function (data, f) {\n            if (format === f) return readerFunction(data, f);\n          });\n        } else {\n          readerFunctions.push(format);\n        }\n      },\n      encode: function (data, format) {\n        for (var i = 0; i < writerFunctions.length; i++) {\n          var func = writerFunctions[i];\n          var writer = func(format);\n          if (writer) {\n            encodeWriter(data, writer);\n            return writer.result();\n          }\n        }\n        throw new Error('Unsupported output format: ' + format);\n      },\n      // DataItem: {getData: () => any}\n      encodeDataItem: function (data, format) {\n        for (var i = 0; i < writerFunctions.length; i++) {\n          var func = writerFunctions[i];\n          var writer = func(format);\n          if (writer) {\n            if (data.getTag() !== undefined) {\n              encodeWriter(data, writer);\n              return writer.result();\n            } else {\n              encodeWriter(data.getData(), writer);\n              return writer.result();\n            }\n          }\n        }\n        throw new Error('Unsupported output format: ' + format);\n      },\n      decode: function (data, format) {\n        for (var i = 0; i < readerFunctions.length; i++) {\n          var func = readerFunctions[i];\n          var reader = func(data, format);\n          if (reader) {\n            return decodeReader(reader);\n          }\n        }\n        throw new Error('Unsupported input format: ' + format);\n      },\n      decodeToDataItem: function (data, format) {\n        for (var i = 0; i < readerFunctions.length; i++) {\n          var func = readerFunctions[i];\n          var reader = func(data, format);\n          if (reader) {\n            const result = decodeReader(reader);\n            if (result instanceof DataItem) {\n              return result;\n            } else {\n              return new DataItem(result);\n            }\n          }\n        }\n        throw new Error('Unsupported input format: ' + format);\n      },\n      addSemanticEncode: function (tag, fn) {\n        if (typeof tag !== 'number' || tag % 1 !== 0 || tag < 0) {\n          throw new Error('Tag must be a positive integer');\n        }\n        semanticEncoders.push({ tag: tag, fn: fn });\n        return this;\n      },\n      addSemanticDecode: function (tag, fn) {\n        if (typeof tag !== 'number' || tag % 1 !== 0 || tag < 0) {\n          throw new Error('Tag must be a positive integer');\n        }\n        semanticDecoders[tag] = fn;\n        return this;\n      },\n    };\n\n    /** Node.js Buffers **/\n    function BufferReader(buffer) {\n      this.buffer = buffer;\n      this.pos = 0;\n    }\n    BufferReader.prototype = Object.create(Reader.prototype);\n    BufferReader.prototype.peekByte = function () {\n      return this.buffer[this.pos];\n    };\n    BufferReader.prototype.readByte = function () {\n      return this.buffer[this.pos++];\n    };\n    BufferReader.prototype.readUint16 = function () {\n      var result = this.buffer.readUInt16BE(this.pos);\n      this.pos += 2;\n      return result;\n    };\n    BufferReader.prototype.readUint32 = function () {\n      var result = this.buffer.readUInt32BE(this.pos);\n      this.pos += 4;\n      return result;\n    };\n    BufferReader.prototype.readFloat32 = function () {\n      var result = this.buffer.readFloatBE(this.pos);\n      this.pos += 4;\n      return result;\n    };\n    BufferReader.prototype.readFloat64 = function () {\n      var result = this.buffer.readDoubleBE(this.pos);\n      this.pos += 8;\n      return result;\n    };\n    BufferReader.prototype.readChunk = function (length) {\n      var result = Buffer.alloc(length);\n      this.buffer.copy(result, 0, this.pos, (this.pos += length));\n      return result;\n    };\n\n    function BufferWriter(stringFormat) {\n      this.byteLength = 0;\n      this.defaultBufferLength = 16384; // 16k\n      this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n      this.latestBufferOffset = 0;\n      this.completeBuffers = [];\n      this.stringFormat = stringFormat;\n    }\n    BufferWriter.prototype = Object.create(Writer.prototype);\n    BufferWriter.prototype.writeByte = function (value) {\n      this.latestBuffer[this.latestBufferOffset++] = value;\n      if (this.latestBufferOffset >= this.latestBuffer.length) {\n        this.completeBuffers.push(this.latestBuffer);\n        this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n        this.latestBufferOffset = 0;\n      }\n      this.byteLength++;\n    };\n    BufferWriter.prototype.writeFloat32 = function (value) {\n      var buffer = Buffer.alloc(4);\n      buffer.writeFloatBE(value, 0);\n      this.writeBuffer(buffer);\n    };\n    BufferWriter.prototype.writeFloat64 = function (value) {\n      var buffer = Buffer.alloc(8);\n      buffer.writeDoubleBE(value, 0);\n      this.writeBuffer(buffer);\n    };\n    BufferWriter.prototype.writeString = function (string, lengthFunc) {\n      var buffer = Buffer.from(string, 'utf-8');\n      lengthFunc(buffer.length);\n      this.writeBuffer(buffer);\n    };\n    BufferWriter.prototype.canWriteBinary = function (data) {\n      return data instanceof Buffer;\n    };\n    BufferWriter.prototype.writeBinary = function (buffer, lengthFunc) {\n      lengthFunc(buffer.length);\n      this.writeBuffer(buffer);\n    };\n    BufferWriter.prototype.writeBuffer = function (chunk) {\n      if (!(chunk instanceof Buffer))\n        throw new TypeError('BufferWriter only accepts Buffers');\n      if (!this.latestBufferOffset) {\n        this.completeBuffers.push(chunk);\n      } else if (\n        this.latestBuffer.length - this.latestBufferOffset >=\n        chunk.length\n      ) {\n        chunk.copy(this.latestBuffer, this.latestBufferOffset);\n        this.latestBufferOffset += chunk.length;\n        if (this.latestBufferOffset >= this.latestBuffer.length) {\n          this.completeBuffers.push(this.latestBuffer);\n          this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n          this.latestBufferOffset = 0;\n        }\n      } else {\n        this.completeBuffers.push(\n          this.latestBuffer.slice(0, this.latestBufferOffset),\n        );\n        this.completeBuffers.push(chunk);\n        this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n        this.latestBufferOffset = 0;\n      }\n      this.byteLength += chunk.length;\n    };\n    BufferWriter.prototype.result = function () {\n      // Copies them all into a single Buffer\n      var result = Buffer.alloc(this.byteLength);\n      var offset = 0;\n      for (var i = 0; i < this.completeBuffers.length; i++) {\n        var buffer = this.completeBuffers[i];\n        buffer.copy(result, offset, 0, buffer.length);\n        offset += buffer.length;\n      }\n      if (this.latestBufferOffset) {\n        this.latestBuffer.copy(result, offset, 0, this.latestBufferOffset);\n      }\n\n      if (this.stringFormat) return result.toString(this.stringFormat);\n      return result;\n    };\n\n    if (typeof Buffer === 'function') {\n      api.addReader(function (data, format) {\n        if (Buffer.isBuffer(data)) {\n          return new BufferReader(data);\n        }\n        if (format === 'hex' || format === 'base64') {\n          var buffer = Buffer.from(data, format);\n          return new BufferReader(buffer);\n        }\n      });\n      api.addWriter(function (format) {\n        if (!format || format === 'buffer') {\n          return new BufferWriter();\n        } else if (format === 'hex' || format === 'base64') {\n          return new BufferWriter(format);\n        }\n      });\n    }\n\n    /** Hex-encoding (and Latin1) for browser **/\n    function HexReader(hex) {\n      this.hex = hex;\n      this.pos = 0;\n    }\n    HexReader.prototype = Object.create(Reader.prototype);\n    HexReader.prototype.peekByte = function () {\n      var pair = this.hex.substring(this.pos, 2);\n      return parseInt(pair, 16);\n    };\n    HexReader.prototype.readByte = function () {\n      var pair = this.hex.substring(this.pos, this.pos + 2);\n      this.pos += 2;\n      return parseInt(pair, 16);\n    };\n    HexReader.prototype.readChunk = function (length) {\n      var hex = this.hex.substring(this.pos, this.pos + length * 2);\n      this.pos += length * 2;\n      if (typeof Buffer === 'function') return Buffer.from(hex, 'hex');\n      return new BinaryHex(hex);\n    };\n\n    function HexWriter(finalFormat) {\n      this.$hex = '';\n      this.finalFormat = finalFormat || 'hex';\n    }\n    HexWriter.prototype = Object.create(Writer.prototype);\n    HexWriter.prototype.writeByte = function (value) {\n      if (value < 0 || value > 255)\n        throw new Error('Byte value out of range: ' + value);\n      var hex = value.toString(16);\n      if (hex.length == 1) {\n        hex = '0' + hex;\n      }\n      this.$hex += hex;\n    };\n    HexWriter.prototype.canWriteBinary = function (chunk) {\n      return (\n        chunk instanceof BinaryHex ||\n        (typeof Buffer === 'function' && chunk instanceof Buffer)\n      );\n    };\n    HexWriter.prototype.writeBinary = function (chunk, lengthFunction) {\n      if (chunk instanceof BinaryHex) {\n        lengthFunction(chunk.length());\n        this.$hex += chunk.$hex;\n      } else if (typeof Buffer === 'function' && chunk instanceof Buffer) {\n        lengthFunction(chunk.length);\n        this.$hex += chunk.toString('hex');\n      } else {\n        throw new TypeError('HexWriter only accepts BinaryHex or Buffers');\n      }\n    };\n    HexWriter.prototype.result = function () {\n      if (this.finalFormat === 'buffer' && typeof Buffer === 'function') {\n        return Buffer.from(this.$hex, 'hex');\n      }\n      return new BinaryHex(this.$hex).toString(this.finalFormat);\n    };\n    HexWriter.prototype.writeString = function (string, lengthFunction) {\n      var buffer = BinaryHex.fromUtf8String(string);\n      lengthFunction(buffer.length());\n      this.$hex += buffer.$hex;\n    };\n\n    api.addReader(function (data, format) {\n      if (data instanceof BinaryHex || data.$hex) {\n        return new HexReader(data.$hex);\n      }\n      if (format === 'hex') {\n        return new HexReader(data);\n      }\n    });\n    api.addWriter(function (format) {\n      if (format === 'hex') {\n        return new HexWriter();\n      }\n    });\n\n    return api;\n  })();\n\n  CBOR.addSemanticEncode(0, function (data) {\n    if (data instanceof Date) {\n      return data.toISOString();\n    }\n  })\n    .addSemanticDecode(0, function (isoString) {\n      return new Date(isoString);\n    })\n    .addSemanticDecode(1, function (isoString) {\n      return new Date(isoString);\n    });\n\n  return CBOR;\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}