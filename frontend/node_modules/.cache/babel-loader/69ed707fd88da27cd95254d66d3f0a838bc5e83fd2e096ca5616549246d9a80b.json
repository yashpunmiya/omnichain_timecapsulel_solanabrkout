{"ast":null,"code":"import { getAction } from '../../utils/getAction.js';\nimport { getBlockNumber } from './getBlockNumber.js';\nimport { getTransaction } from './getTransaction.js';\n/**\n * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionConfirmationsParameters}\n * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionConfirmations } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const confirmations = await getTransactionConfirmations(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionConfirmations(client, {\n  hash,\n  transactionReceipt\n}) {\n  const [blockNumber, transaction] = await Promise.all([getAction(client, getBlockNumber, 'getBlockNumber')({}), hash ? getAction(client, getTransaction, 'getTransaction')({\n    hash\n  }) : undefined]);\n  const transactionBlockNumber = transactionReceipt?.blockNumber || transaction?.blockNumber;\n  if (!transactionBlockNumber) return 0n;\n  return blockNumber - transactionBlockNumber + 1n;\n}\n//# sourceMappingURL=getTransactionConfirmations.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}