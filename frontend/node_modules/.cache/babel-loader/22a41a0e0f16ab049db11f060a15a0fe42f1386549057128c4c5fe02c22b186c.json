{"ast":null,"code":"import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}","map":{"version":3,"names":["bases","toString","array","encoding","base","Error","globalThis","Buffer","from","buffer","byteOffset","byteLength","encoder","encode","substring"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/uint8arrays/esm/src/to-string.js"],"sourcesContent":["import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AACnC,OAAO,SAASC,QAAQA,CAACC,KAAK,EAAEC,QAAQ,GAAG,MAAM,EAAE;EACjD,MAAMC,IAAI,GAAGJ,KAAK,CAACG,QAAQ,CAAC;EAC5B,IAAI,CAACC,IAAI,EAAE;IACT,MAAM,IAAIC,KAAK,CAAC,yBAA0BF,QAAQ,GAAI,CAAC;EACzD;EACA,IAAI,CAACA,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,OAAO,KAAKG,UAAU,CAACC,MAAM,IAAI,IAAI,IAAID,UAAU,CAACC,MAAM,CAACC,IAAI,IAAI,IAAI,EAAE;IAChH,OAAOF,UAAU,CAACC,MAAM,CAACC,IAAI,CAACN,KAAK,CAACO,MAAM,EAAEP,KAAK,CAACQ,UAAU,EAAER,KAAK,CAACS,UAAU,CAAC,CAACV,QAAQ,CAAC,MAAM,CAAC;EAClG;EACA,OAAOG,IAAI,CAACQ,OAAO,CAACC,MAAM,CAACX,KAAK,CAAC,CAACY,SAAS,CAAC,CAAC,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}