{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CryptoAccount = void 0;\nconst _1 = require(\".\");\nconst lib_1 = require(\"./lib\");\nconst RegistryItem_1 = require(\"./RegistryItem\");\nconst RegistryType_1 = require(\"./RegistryType\");\nvar Keys;\n(function (Keys) {\n  Keys[Keys[\"masterFingerprint\"] = 1] = \"masterFingerprint\";\n  Keys[Keys[\"outputDescriptors\"] = 2] = \"outputDescriptors\";\n})(Keys || (Keys = {}));\nclass CryptoAccount extends RegistryItem_1.RegistryItem {\n  constructor(masterFingerprint, outputDescriptors) {\n    super();\n    this.masterFingerprint = masterFingerprint;\n    this.outputDescriptors = outputDescriptors;\n    this.getRegistryType = () => {\n      return RegistryType_1.RegistryTypes.CRYPTO_ACCOUNT;\n    };\n    this.getMasterFingerprint = () => this.masterFingerprint;\n    this.getOutputDescriptors = () => this.outputDescriptors;\n    this.toDataItem = () => {\n      const map = {};\n      if (this.masterFingerprint) {\n        map[Keys.masterFingerprint] = this.masterFingerprint.readUInt32BE(0);\n      }\n      if (this.outputDescriptors) {\n        map[Keys.outputDescriptors] = this.outputDescriptors.map(item => item.toDataItem());\n      }\n      return new lib_1.DataItem(map);\n    };\n  }\n}\nexports.CryptoAccount = CryptoAccount;\nCryptoAccount.fromDataItem = dataItem => {\n  const map = dataItem.getData();\n  const masterFingerprint = Buffer.alloc(4);\n  const _masterFingerprint = map[Keys.masterFingerprint];\n  if (_masterFingerprint) {\n    masterFingerprint.writeUInt32BE(_masterFingerprint, 0);\n  }\n  const outputDescriptors = map[Keys.outputDescriptors];\n  const cryptoOutputs = outputDescriptors.map(item => _1.CryptoOutput.fromDataItem(item));\n  return new CryptoAccount(masterFingerprint, cryptoOutputs);\n};\nCryptoAccount.fromCBOR = _cborPayload => {\n  const dataItem = (0, lib_1.decodeToDataItem)(_cborPayload);\n  return CryptoAccount.fromDataItem(dataItem);\n};\n//# sourceMappingURL=CryptoAccount.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}