{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ConnectionController, ConstantsUtil, CoreHelperUtil, EventsController } from '@reown/appkit-controllers';\nimport { customElement } from '@reown/appkit-ui';\nimport { W3mConnectingWidget } from '../../utils/w3m-connecting-widget/index.js';\nlet W3mConnectingWcMobile = class W3mConnectingWcMobile extends W3mConnectingWidget {\n  constructor() {\n    super();\n    this.btnLabelTimeout = undefined;\n    this.labelTimeout = undefined;\n    this.onRender = () => {\n      if (!this.ready && this.uri) {\n        this.ready = true;\n        this.onConnect?.();\n      }\n    };\n    this.onConnect = () => {\n      if (this.wallet?.mobile_link && this.uri) {\n        try {\n          this.error = false;\n          const {\n            mobile_link,\n            name\n          } = this.wallet;\n          const {\n            redirect,\n            href\n          } = CoreHelperUtil.formatNativeUrl(mobile_link, this.uri);\n          ConnectionController.setWcLinking({\n            name,\n            href\n          });\n          ConnectionController.setRecentWallet(this.wallet);\n          const target = CoreHelperUtil.isIframe() ? '_top' : '_self';\n          CoreHelperUtil.openHref(redirect, target);\n          clearTimeout(this.labelTimeout);\n          this.secondaryLabel = ConstantsUtil.CONNECT_LABELS.MOBILE;\n        } catch (e) {\n          EventsController.sendEvent({\n            type: 'track',\n            event: 'CONNECT_PROXY_ERROR',\n            properties: {\n              message: e instanceof Error ? e.message : 'Error parsing the deeplink',\n              uri: this.uri,\n              mobile_link: this.wallet.mobile_link,\n              name: this.wallet.name\n            }\n          });\n          this.error = true;\n        }\n      }\n    };\n    if (!this.wallet) {\n      throw new Error('w3m-connecting-wc-mobile: No wallet provided');\n    }\n    this.secondaryBtnLabel = undefined;\n    this.secondaryLabel = ConstantsUtil.CONNECT_LABELS.MOBILE;\n    document.addEventListener('visibilitychange', this.onBuffering.bind(this));\n    EventsController.sendEvent({\n      type: 'track',\n      event: 'SELECT_WALLET',\n      properties: {\n        name: this.wallet.name,\n        platform: 'mobile'\n      }\n    });\n    this.btnLabelTimeout = setTimeout(() => {\n      this.secondaryBtnLabel = 'Try again';\n      this.secondaryLabel = ConstantsUtil.CONNECT_LABELS.MOBILE;\n    }, ConstantsUtil.FIVE_SEC_MS);\n    this.labelTimeout = setTimeout(() => {\n      this.secondaryLabel = `Hold tight... it's taking longer than expected`;\n    }, ConstantsUtil.THREE_SEC_MS);\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    document.removeEventListener('visibilitychange', this.onBuffering.bind(this));\n    clearTimeout(this.btnLabelTimeout);\n    clearTimeout(this.labelTimeout);\n  }\n  onBuffering() {\n    const isIos = CoreHelperUtil.isIos();\n    if (document?.visibilityState === 'visible' && !this.error && isIos) {\n      ConnectionController.setBuffering(true);\n      setTimeout(() => {\n        ConnectionController.setBuffering(false);\n      }, 5000);\n    }\n  }\n  onTryAgain() {\n    if (!this.buffering) {\n      ConnectionController.setWcError(false);\n      this.onConnect();\n    }\n  }\n};\nW3mConnectingWcMobile = __decorate([customElement('w3m-connecting-wc-mobile')], W3mConnectingWcMobile);\nexport { W3mConnectingWcMobile };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}