{"ast":null,"code":"/**\n * @internal\n *\n * Efficiently compare {@link Indexed} arrays (e.g. `Array` and `Uint8Array`).\n *\n * @param a An array.\n * @param b Another array.\n *\n * @return `true` if the arrays have the same length and elements, `false` otherwise.\n *\n * @group Internal\n */\nexport function arraysEqual(a, b) {\n  if (a === b) return true;\n  const length = a.length;\n  if (length !== b.length) return false;\n  for (let i = 0; i < length; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n/**\n * @internal\n *\n * Efficiently compare byte arrays, using {@link arraysEqual}.\n *\n * @param a A byte array.\n * @param b Another byte array.\n *\n * @return `true` if the byte arrays have the same length and bytes, `false` otherwise.\n *\n * @group Internal\n */\nexport function bytesEqual(a, b) {\n  return arraysEqual(a, b);\n}\n//# sourceMappingURL=util.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}