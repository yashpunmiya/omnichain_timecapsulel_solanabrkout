{"ast":null,"code":"import { LruMap } from '../lru.js';\nimport { checksumAddress } from './getAddress.js';\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\n/** @internal */\nexport const isAddressCache = /*#__PURE__*/new LruMap(8192);\nexport function isAddress(address, options) {\n  const {\n    strict = true\n  } = options ?? {};\n  const cacheKey = `${address}.${strict}`;\n  if (isAddressCache.has(cacheKey)) return isAddressCache.get(cacheKey);\n  const result = (() => {\n    if (!addressRegex.test(address)) return false;\n    if (address.toLowerCase() === address) return true;\n    if (strict) return checksumAddress(address) === address;\n    return true;\n  })();\n  isAddressCache.set(cacheKey, result);\n  return result;\n}\n//# sourceMappingURL=isAddress.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}