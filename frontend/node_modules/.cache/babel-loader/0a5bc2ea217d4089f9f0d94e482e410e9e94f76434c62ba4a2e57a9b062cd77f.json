{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WindowWindowChannel = void 0;\nconst connect_common_1 = require(\"@trezor/connect-common\");\nclass WindowWindowChannel extends connect_common_1.AbstractMessageChannel {\n  _windowHere;\n  _listener;\n  constructor({\n    windowHere,\n    windowPeer,\n    channel,\n    logger,\n    origin,\n    legacyMode\n  }) {\n    super({\n      channel,\n      sendFn: message => {\n        windowPeer()?.postMessage(message, origin);\n      },\n      logger,\n      legacyMode\n    });\n    this._listener = this.listener.bind(this);\n    this._windowHere = windowHere;\n    this.connect();\n  }\n  listener(event) {\n    const message = {\n      ...event.data,\n      success: true,\n      origin: event.origin,\n      payload: event.data.payload || {},\n      channel: event.data.channel || {\n        peer: this.channel.here,\n        here: this.channel.peer\n      }\n    };\n    this.onMessage(message);\n  }\n  connect() {\n    this._windowHere.addEventListener('message', this._listener);\n    this.isConnected = true;\n  }\n  disconnect() {\n    if (!this.isConnected) return;\n    this._windowHere.removeEventListener('message', this._listener);\n    this.isConnected = false;\n  }\n}\nexports.WindowWindowChannel = WindowWindowChannel;\n//# sourceMappingURL=window-window.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}