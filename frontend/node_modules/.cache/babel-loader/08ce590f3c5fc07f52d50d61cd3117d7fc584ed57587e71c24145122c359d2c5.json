{"ast":null,"code":"import { BaseError } from './base.js';\nexport class InvalidAddressError extends BaseError {\n  constructor({\n    address\n  }) {\n    super(`Address \"${address}\" is invalid.`, {\n      metaMessages: ['- Address must be a hex value of 20 bytes (40 hex characters).', '- Address must match its checksum counterpart.'],\n      name: 'InvalidAddressError'\n    });\n  }\n}","map":{"version":3,"names":["BaseError","InvalidAddressError","constructor","address","metaMessages","name"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\errors\\address.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type InvalidAddressErrorType = InvalidAddressError & {\n  name: 'InvalidAddressError'\n}\nexport class InvalidAddressError extends BaseError {\n  constructor({ address }: { address: string }) {\n    super(`Address \"${address}\" is invalid.`, {\n      metaMessages: [\n        '- Address must be a hex value of 20 bytes (40 hex characters).',\n        '- Address must match its checksum counterpart.',\n      ],\n      name: 'InvalidAddressError',\n    })\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AAKrC,OAAM,MAAOC,mBAAoB,SAAQD,SAAS;EAChDE,YAAY;IAAEC;EAAO,CAAuB;IAC1C,KAAK,CAAC,YAAYA,OAAO,eAAe,EAAE;MACxCC,YAAY,EAAE,CACZ,gEAAgE,EAChE,gDAAgD,CACjD;MACDC,IAAI,EAAE;KACP,CAAC;EACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}