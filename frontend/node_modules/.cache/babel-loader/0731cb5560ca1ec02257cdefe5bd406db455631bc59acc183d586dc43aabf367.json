{"ast":null,"code":"/**\n * Resets fork back to its original state.\n *\n * - Docs: https://viem.sh/docs/actions/test/reset\n *\n * @param client - Client to use\n * @param parameters â€“ {@link ResetParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { reset } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await reset(client, { blockNumber: 69420n })\n */\nexport async function reset(client, {\n  blockNumber,\n  jsonRpcUrl\n} = {}) {\n  await client.request({\n    method: `${client.mode}_reset`,\n    params: [{\n      forking: {\n        blockNumber: Number(blockNumber),\n        jsonRpcUrl\n      }\n    }]\n  });\n}\n//# sourceMappingURL=reset.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}