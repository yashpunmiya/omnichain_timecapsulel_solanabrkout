{"ast":null,"code":"import { BaseError } from './base.js';\nexport class EnsAvatarInvalidMetadataError extends BaseError {\n  constructor({\n    data\n  }) {\n    super('Unable to extract image from metadata. The metadata may be malformed or invalid.', {\n      metaMessages: ['- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.', '', `Provided data: ${JSON.stringify(data)}`],\n      name: 'EnsAvatarInvalidMetadataError'\n    });\n  }\n}\nexport class EnsAvatarInvalidNftUriError extends BaseError {\n  constructor({\n    reason\n  }) {\n    super(`ENS NFT avatar URI is invalid. ${reason}`, {\n      name: 'EnsAvatarInvalidNftUriError'\n    });\n  }\n}\nexport class EnsAvatarUriResolutionError extends BaseError {\n  constructor({\n    uri\n  }) {\n    super(`Unable to resolve ENS avatar URI \"${uri}\". The URI may be malformed, invalid, or does not respond with a valid image.`, {\n      name: 'EnsAvatarUriResolutionError'\n    });\n  }\n}\nexport class EnsAvatarUnsupportedNamespaceError extends BaseError {\n  constructor({\n    namespace\n  }) {\n    super(`ENS NFT avatar namespace \"${namespace}\" is not supported. Must be \"erc721\" or \"erc1155\".`, {\n      name: 'EnsAvatarUnsupportedNamespaceError'\n    });\n  }\n}\n//# sourceMappingURL=ens.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}