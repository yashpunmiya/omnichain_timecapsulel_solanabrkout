{"ast":null,"code":"import { bytesToHex } from '../encoding/toHex.js';\nimport { sha256 } from '../hash/sha256.js';\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash(parameters) {\n  const {\n    commitment,\n    version = 1\n  } = parameters;\n  const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes');\n  const versionedHash = sha256(commitment, 'bytes');\n  versionedHash.set([version], 0);\n  return to === 'bytes' ? versionedHash : bytesToHex(versionedHash);\n}\n//# sourceMappingURL=commitmentToVersionedHash.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}