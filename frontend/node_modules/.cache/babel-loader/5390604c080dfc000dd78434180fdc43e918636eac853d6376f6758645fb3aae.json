{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LIBUSB_ERROR_MESSAGE = exports.serializeError = exports.TypedError = exports.TrezorError = exports.ERROR_CODES = void 0;\nexports.ERROR_CODES = {\n  Init_NotInitialized: 'TrezorConnect not initialized',\n  Init_AlreadyInitialized: 'TrezorConnect has been already initialized',\n  Init_IframeBlocked: 'Iframe blocked',\n  Init_IframeTimeout: 'Iframe timeout',\n  Init_ManifestMissing: 'Manifest not set. Read more at https://github.com/trezor/trezor-suite/blob/develop/docs/packages/connect/index.md',\n  Popup_ConnectionMissing: 'Unable to establish connection with iframe',\n  Desktop_ConnectionMissing: 'Unable to establish connection with Suite',\n  Transport_Missing: 'Transport is missing',\n  Method_InvalidPackage: 'This package is not suitable to work with browser. Use @trezor/connect-web package instead',\n  Method_InvalidParameter: '',\n  Method_NotAllowed: 'Method not allowed for this configuration',\n  Method_PermissionsNotGranted: 'Permissions not granted',\n  Method_Cancel: 'Cancelled',\n  Method_Interrupted: 'Popup closed',\n  Method_UnknownCoin: 'Coin not found',\n  Method_AddressNotMatch: 'Addresses do not match',\n  Method_Discovery_BundleException: '',\n  Method_Override: 'override',\n  Method_NoResponse: 'Call resolved without response',\n  Backend_NotSupported: 'BlockchainLink settings not found in coins.json',\n  Backend_WorkerMissing: '',\n  Backend_Disconnected: 'Backend disconnected',\n  Backend_Invalid: 'Invalid backend',\n  Backend_Error: '',\n  Runtime: '',\n  Device_NotFound: 'Device not found',\n  Device_InitializeFailed: '',\n  Device_FwException: '',\n  Device_ModeException: '',\n  Device_Disconnected: 'Device disconnected',\n  Device_UsedElsewhere: 'Device is used in another window',\n  Device_InvalidState: 'Passphrase is incorrect',\n  Device_CallInProgress: 'Device call in progress',\n  Device_MultipleNotSupported: 'Multiple devices are not supported',\n  Device_MissingCapability: 'Device is missing capability',\n  Device_MissingCapabilityBtcOnly: 'Device is missing capability (BTC only)',\n  Failure_ActionCancelled: 'Action cancelled by user',\n  Failure_FirmwareError: 'Firmware installation failed',\n  Failure_UnknownCode: 'Unknown error',\n  Failure_PinCancelled: 'PIN cancelled',\n  Failure_PinInvalid: 'PIN invalid',\n  Failure_PinMismatch: 'PIN mismatch',\n  Failure_WipeCodeMismatch: 'Wipe code mismatch',\n  Failure_EntropyCheck: '',\n  Deeplink_VersionMismatch: 'Not compatible with current version of the app'\n};\nclass TrezorError extends Error {\n  code;\n  message;\n  constructor(code, message) {\n    super(message);\n    this.code = code;\n    this.message = message;\n  }\n  toString() {\n    return `${this.name} (code: ${this.code}): ${this.message}`;\n  }\n}\nexports.TrezorError = TrezorError;\nconst TypedError = (id, message) => new TrezorError(id, message || exports.ERROR_CODES[id]);\nexports.TypedError = TypedError;\nconst serializeError = payload => {\n  if (payload && payload.error instanceof Error) {\n    return {\n      error: payload.error.message,\n      code: payload.error.code\n    };\n  }\n  if (payload instanceof TrezorError) {\n    return {\n      error: payload.message,\n      code: payload.code\n    };\n  }\n  if (payload instanceof Error) {\n    return {\n      error: payload.message,\n      code: 'code' in payload ? payload.code : 'Failure_UnknownCode'\n    };\n  }\n  return {\n    ...payload\n  };\n};\nexports.serializeError = serializeError;\nexports.LIBUSB_ERROR_MESSAGE = 'LIBUSB_ERROR';","map":{"version":3,"names":["Object","defineProperty","exports","value","LIBUSB_ERROR_MESSAGE","serializeError","TypedError","TrezorError","ERROR_CODES","Init_NotInitialized","Init_AlreadyInitialized","Init_IframeBlocked","Init_IframeTimeout","Init_ManifestMissing","Popup_ConnectionMissing","Desktop_ConnectionMissing","Transport_Missing","Method_InvalidPackage","Method_InvalidParameter","Method_NotAllowed","Method_PermissionsNotGranted","Method_Cancel","Method_Interrupted","Method_UnknownCoin","Method_AddressNotMatch","Method_Discovery_BundleException","Method_Override","Method_NoResponse","Backend_NotSupported","Backend_WorkerMissing","Backend_Disconnected","Backend_Invalid","Backend_Error","Runtime","Device_NotFound","Device_InitializeFailed","Device_FwException","Device_ModeException","Device_Disconnected","Device_UsedElsewhere","Device_InvalidState","Device_CallInProgress","Device_MultipleNotSupported","Device_MissingCapability","Device_MissingCapabilityBtcOnly","Failure_ActionCancelled","Failure_FirmwareError","Failure_UnknownCode","Failure_PinCancelled","Failure_PinInvalid","Failure_PinMismatch","Failure_WipeCodeMismatch","Failure_EntropyCheck","Deeplink_VersionMismatch","Error","code","message","constructor","toString","name","id","payload","error"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@trezor/connect/lib/constants/errors.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LIBUSB_ERROR_MESSAGE = exports.serializeError = exports.TypedError = exports.TrezorError = exports.ERROR_CODES = void 0;\nexports.ERROR_CODES = {\n    Init_NotInitialized: 'TrezorConnect not initialized',\n    Init_AlreadyInitialized: 'TrezorConnect has been already initialized',\n    Init_IframeBlocked: 'Iframe blocked',\n    Init_IframeTimeout: 'Iframe timeout',\n    Init_ManifestMissing: 'Manifest not set. Read more at https://github.com/trezor/trezor-suite/blob/develop/docs/packages/connect/index.md',\n    Popup_ConnectionMissing: 'Unable to establish connection with iframe',\n    Desktop_ConnectionMissing: 'Unable to establish connection with Suite',\n    Transport_Missing: 'Transport is missing',\n    Method_InvalidPackage: 'This package is not suitable to work with browser. Use @trezor/connect-web package instead',\n    Method_InvalidParameter: '',\n    Method_NotAllowed: 'Method not allowed for this configuration',\n    Method_PermissionsNotGranted: 'Permissions not granted',\n    Method_Cancel: 'Cancelled',\n    Method_Interrupted: 'Popup closed',\n    Method_UnknownCoin: 'Coin not found',\n    Method_AddressNotMatch: 'Addresses do not match',\n    Method_Discovery_BundleException: '',\n    Method_Override: 'override',\n    Method_NoResponse: 'Call resolved without response',\n    Backend_NotSupported: 'BlockchainLink settings not found in coins.json',\n    Backend_WorkerMissing: '',\n    Backend_Disconnected: 'Backend disconnected',\n    Backend_Invalid: 'Invalid backend',\n    Backend_Error: '',\n    Runtime: '',\n    Device_NotFound: 'Device not found',\n    Device_InitializeFailed: '',\n    Device_FwException: '',\n    Device_ModeException: '',\n    Device_Disconnected: 'Device disconnected',\n    Device_UsedElsewhere: 'Device is used in another window',\n    Device_InvalidState: 'Passphrase is incorrect',\n    Device_CallInProgress: 'Device call in progress',\n    Device_MultipleNotSupported: 'Multiple devices are not supported',\n    Device_MissingCapability: 'Device is missing capability',\n    Device_MissingCapabilityBtcOnly: 'Device is missing capability (BTC only)',\n    Failure_ActionCancelled: 'Action cancelled by user',\n    Failure_FirmwareError: 'Firmware installation failed',\n    Failure_UnknownCode: 'Unknown error',\n    Failure_PinCancelled: 'PIN cancelled',\n    Failure_PinInvalid: 'PIN invalid',\n    Failure_PinMismatch: 'PIN mismatch',\n    Failure_WipeCodeMismatch: 'Wipe code mismatch',\n    Failure_EntropyCheck: '',\n    Deeplink_VersionMismatch: 'Not compatible with current version of the app',\n};\nclass TrezorError extends Error {\n    code;\n    message;\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n        this.message = message;\n    }\n    toString() {\n        return `${this.name} (code: ${this.code}): ${this.message}`;\n    }\n}\nexports.TrezorError = TrezorError;\nconst TypedError = (id, message) => new TrezorError(id, message || exports.ERROR_CODES[id]);\nexports.TypedError = TypedError;\nconst serializeError = (payload) => {\n    if (payload && payload.error instanceof Error) {\n        return { error: payload.error.message, code: payload.error.code };\n    }\n    if (payload instanceof TrezorError) {\n        return { error: payload.message, code: payload.code };\n    }\n    if (payload instanceof Error) {\n        return {\n            error: payload.message,\n            code: 'code' in payload ? payload.code : 'Failure_UnknownCode',\n        };\n    }\n    return { ...payload };\n};\nexports.serializeError = serializeError;\nexports.LIBUSB_ERROR_MESSAGE = 'LIBUSB_ERROR';\n//# sourceMappingURL=errors.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}