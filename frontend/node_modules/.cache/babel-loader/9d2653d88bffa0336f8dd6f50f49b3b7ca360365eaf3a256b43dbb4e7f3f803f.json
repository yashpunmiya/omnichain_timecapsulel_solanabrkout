{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BinanceSignTransaction = exports.BinancePreparedTransaction = exports.BinancePreparedMessage = exports.BinanceSDKTransaction = void 0;\nconst schema_utils_1 = require(\"@trezor/schema-utils\");\nconst constants_1 = require(\"../../../constants\");\nconst params_1 = require(\"../../params\");\nexports.BinanceSDKTransaction = schema_utils_1.Type.Object({\n  chain_id: schema_utils_1.Type.String(),\n  account_number: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  memo: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  sequence: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  source: schema_utils_1.Type.Optional(schema_utils_1.Type.Number()),\n  transfer: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceTransferMsg),\n  placeOrder: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceOrderMsg),\n  cancelOrder: schema_utils_1.Type.Optional(constants_1.PROTO.BinanceCancelMsg)\n});\nexports.BinancePreparedMessage = schema_utils_1.Type.Union([schema_utils_1.Type.Intersect([constants_1.PROTO.BinanceTransferMsg, schema_utils_1.Type.Object({\n  type: schema_utils_1.Type.Literal('BinanceTransferMsg')\n})]), schema_utils_1.Type.Intersect([constants_1.PROTO.BinanceOrderMsg, schema_utils_1.Type.Object({\n  type: schema_utils_1.Type.Literal('BinanceOrderMsg')\n})]), schema_utils_1.Type.Intersect([constants_1.PROTO.BinanceCancelMsg, schema_utils_1.Type.Object({\n  type: schema_utils_1.Type.Literal('BinanceCancelMsg')\n})])]);\nexports.BinancePreparedTransaction = schema_utils_1.Type.Intersect([exports.BinanceSDKTransaction, schema_utils_1.Type.Object({\n  messages: schema_utils_1.Type.Array(exports.BinancePreparedMessage),\n  account_number: schema_utils_1.Type.Number(),\n  sequence: schema_utils_1.Type.Number(),\n  source: schema_utils_1.Type.Number()\n})]);\nexports.BinanceSignTransaction = schema_utils_1.Type.Object({\n  path: params_1.DerivationPath,\n  transaction: exports.BinanceSDKTransaction,\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n});\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}