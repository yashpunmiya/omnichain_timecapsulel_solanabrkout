{"ast":null,"code":"import { proxy } from 'valtio/vanilla';\nimport { ConstantsUtil } from '../utils/ConstantsUtil.js';\nimport { CoreHelperUtil } from '../utils/CoreHelperUtil.js';\nimport { FetchUtil } from '../utils/FetchUtil.js';\nimport { StorageUtil } from '../utils/StorageUtil.js';\nimport { AccountController } from './AccountController.js';\nimport { ChainController } from './ChainController.js';\nimport { OptionsController } from './OptionsController.js';\nimport { SnackController } from './SnackController.js';\nconst DEFAULT_OPTIONS = {\n  purchaseCurrencies: [{\n    id: '2b92315d-eab7-5bef-84fa-089a131333f5',\n    name: 'USD Coin',\n    symbol: 'USDC',\n    networks: [{\n      name: 'ethereum-mainnet',\n      display_name: 'Ethereum',\n      chain_id: '1',\n      contract_address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'\n    }, {\n      name: 'polygon-mainnet',\n      display_name: 'Polygon',\n      chain_id: '137',\n      contract_address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174'\n    }]\n  }, {\n    id: '2b92315d-eab7-5bef-84fa-089a131333f5',\n    name: 'Ether',\n    symbol: 'ETH',\n    networks: [{\n      name: 'ethereum-mainnet',\n      display_name: 'Ethereum',\n      chain_id: '1',\n      contract_address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'\n    }, {\n      name: 'polygon-mainnet',\n      display_name: 'Polygon',\n      chain_id: '137',\n      contract_address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174'\n    }]\n  }],\n  paymentCurrencies: [{\n    id: 'USD',\n    payment_method_limits: [{\n      id: 'card',\n      min: '10.00',\n      max: '7500.00'\n    }, {\n      id: 'ach_bank_account',\n      min: '10.00',\n      max: '25000.00'\n    }]\n  }, {\n    id: 'EUR',\n    payment_method_limits: [{\n      id: 'card',\n      min: '10.00',\n      max: '7500.00'\n    }, {\n      id: 'ach_bank_account',\n      min: '10.00',\n      max: '25000.00'\n    }]\n  }]\n};\n// -- Helpers ------------------------------------------- //\nconst baseUrl = CoreHelperUtil.getBlockchainApiUrl();\n// -- State --------------------------------------------- //\nconst state = proxy({\n  clientId: null,\n  api: new FetchUtil({\n    baseUrl,\n    clientId: null\n  }),\n  supportedChains: {\n    http: [],\n    ws: []\n  }\n});\n// -- Controller ---------------------------------------- //\nexport const BlockchainApiController = {\n  state,\n  async get(request) {\n    const {\n      st,\n      sv\n    } = BlockchainApiController.getSdkProperties();\n    const projectId = OptionsController.state.projectId;\n    const params = {\n      ...(request.params || {}),\n      st,\n      sv,\n      projectId\n    };\n    return state.api.get({\n      ...request,\n      params\n    });\n  },\n  getSdkProperties() {\n    const {\n      sdkType,\n      sdkVersion\n    } = OptionsController.state;\n    return {\n      st: sdkType || 'unknown',\n      sv: sdkVersion || 'unknown'\n    };\n  },\n  async isNetworkSupported(networkId) {\n    if (!networkId) {\n      return false;\n    }\n    try {\n      if (!state.supportedChains.http.length) {\n        await BlockchainApiController.getSupportedNetworks();\n      }\n    } catch (e) {\n      return false;\n    }\n    return state.supportedChains.http.includes(networkId);\n  },\n  async getSupportedNetworks() {\n    const supportedChains = await BlockchainApiController.get({\n      path: 'v1/supported-chains'\n    });\n    state.supportedChains = supportedChains;\n    return supportedChains;\n  },\n  async fetchIdentity({\n    address,\n    caipNetworkId\n  }) {\n    const isSupported = await BlockchainApiController.isNetworkSupported(caipNetworkId);\n    if (!isSupported) {\n      return {\n        avatar: '',\n        name: ''\n      };\n    }\n    const identityCache = StorageUtil.getIdentityFromCacheForAddress(address);\n    if (identityCache) {\n      return identityCache;\n    }\n    const result = await BlockchainApiController.get({\n      path: `/v1/identity/${address}`,\n      params: {\n        sender: ChainController.state.activeCaipAddress ? CoreHelperUtil.getPlainAddress(ChainController.state.activeCaipAddress) : undefined\n      }\n    });\n    StorageUtil.updateIdentityCache({\n      address,\n      identity: result,\n      timestamp: Date.now()\n    });\n    return result;\n  },\n  async fetchTransactions({\n    account,\n    cursor,\n    onramp,\n    signal,\n    cache,\n    chainId\n  }) {\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      return {\n        data: [],\n        next: undefined\n      };\n    }\n    return BlockchainApiController.get({\n      path: `/v1/account/${account}/history`,\n      params: {\n        cursor,\n        onramp,\n        chainId\n      },\n      signal,\n      cache\n    });\n  },\n  async fetchSwapQuote({\n    amount,\n    userAddress,\n    from,\n    to,\n    gasPrice\n  }) {\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      return {\n        quotes: []\n      };\n    }\n    return BlockchainApiController.get({\n      path: `/v1/convert/quotes`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      params: {\n        amount,\n        userAddress,\n        from,\n        to,\n        gasPrice\n      }\n    });\n  },\n  async fetchSwapTokens({\n    chainId\n  }) {\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      return {\n        tokens: []\n      };\n    }\n    return BlockchainApiController.get({\n      path: `/v1/convert/tokens`,\n      params: {\n        chainId\n      }\n    });\n  },\n  async fetchTokenPrice({\n    addresses\n  }) {\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      return {\n        fungibles: []\n      };\n    }\n    return state.api.post({\n      path: '/v1/fungible/price',\n      body: {\n        currency: 'usd',\n        addresses,\n        projectId: OptionsController.state.projectId\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  },\n  async fetchSwapAllowance({\n    tokenAddress,\n    userAddress\n  }) {\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      return {\n        allowance: '0'\n      };\n    }\n    return BlockchainApiController.get({\n      path: `/v1/convert/allowance`,\n      params: {\n        tokenAddress,\n        userAddress\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  },\n  async fetchGasPrice({\n    chainId\n  }) {\n    const {\n      st,\n      sv\n    } = BlockchainApiController.getSdkProperties();\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      throw new Error('Network not supported for Gas Price');\n    }\n    return BlockchainApiController.get({\n      path: `/v1/convert/gas-price`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      params: {\n        chainId,\n        st,\n        sv\n      }\n    });\n  },\n  async generateSwapCalldata({\n    amount,\n    from,\n    to,\n    userAddress,\n    disableEstimate\n  }) {\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      throw new Error('Network not supported for Swaps');\n    }\n    return state.api.post({\n      path: '/v1/convert/build-transaction',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        amount,\n        eip155: {\n          slippage: ConstantsUtil.CONVERT_SLIPPAGE_TOLERANCE\n        },\n        projectId: OptionsController.state.projectId,\n        from,\n        to,\n        userAddress,\n        disableEstimate\n      }\n    });\n  },\n  async generateApproveCalldata({\n    from,\n    to,\n    userAddress\n  }) {\n    const {\n      st,\n      sv\n    } = BlockchainApiController.getSdkProperties();\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      throw new Error('Network not supported for Swaps');\n    }\n    return BlockchainApiController.get({\n      path: `/v1/convert/build-approve`,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      params: {\n        userAddress,\n        from,\n        to,\n        st,\n        sv\n      }\n    });\n  },\n  async getBalance(address, chainId, forceUpdate) {\n    const {\n      st,\n      sv\n    } = BlockchainApiController.getSdkProperties();\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      SnackController.showError('Token Balance Unavailable');\n      return {\n        balances: []\n      };\n    }\n    const caipAddress = `${chainId}:${address}`;\n    const cachedBalance = StorageUtil.getBalanceCacheForCaipAddress(caipAddress);\n    if (cachedBalance) {\n      return cachedBalance;\n    }\n    const balance = await BlockchainApiController.get({\n      path: `/v1/account/${address}/balance`,\n      params: {\n        currency: 'usd',\n        chainId,\n        forceUpdate,\n        st,\n        sv\n      }\n    });\n    StorageUtil.updateBalanceCache({\n      caipAddress,\n      balance,\n      timestamp: Date.now()\n    });\n    return balance;\n  },\n  async lookupEnsName(name) {\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      return {\n        addresses: {},\n        attributes: []\n      };\n    }\n    return BlockchainApiController.get({\n      path: `/v1/profile/account/${name}`,\n      params: {\n        apiVersion: '2'\n      }\n    });\n  },\n  async reverseLookupEnsName({\n    address\n  }) {\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      return [];\n    }\n    return BlockchainApiController.get({\n      path: `/v1/profile/reverse/${address}`,\n      params: {\n        sender: AccountController.state.address,\n        apiVersion: '2'\n      }\n    });\n  },\n  async getEnsNameSuggestions(name) {\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      return {\n        suggestions: []\n      };\n    }\n    return BlockchainApiController.get({\n      path: `/v1/profile/suggestions/${name}`,\n      params: {\n        zone: 'reown.id'\n      }\n    });\n  },\n  async registerEnsName({\n    coinType,\n    address,\n    message,\n    signature\n  }) {\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      return {\n        success: false\n      };\n    }\n    return state.api.post({\n      path: `/v1/profile/account`,\n      body: {\n        coin_type: coinType,\n        address,\n        message,\n        signature\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  },\n  async generateOnRampURL({\n    destinationWallets,\n    partnerUserId,\n    defaultNetwork,\n    purchaseAmount,\n    paymentAmount\n  }) {\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      return '';\n    }\n    const response = await state.api.post({\n      path: `/v1/generators/onrampurl`,\n      params: {\n        projectId: OptionsController.state.projectId\n      },\n      body: {\n        destinationWallets,\n        defaultNetwork,\n        partnerUserId,\n        defaultExperience: 'buy',\n        presetCryptoAmount: purchaseAmount,\n        presetFiatAmount: paymentAmount\n      }\n    });\n    return response.url;\n  },\n  async getOnrampOptions() {\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      return {\n        paymentCurrencies: [],\n        purchaseCurrencies: []\n      };\n    }\n    try {\n      const response = await BlockchainApiController.get({\n        path: `/v1/onramp/options`\n      });\n      return response;\n    } catch (e) {\n      return DEFAULT_OPTIONS;\n    }\n  },\n  async getOnrampQuote({\n    purchaseCurrency,\n    paymentCurrency,\n    amount,\n    network\n  }) {\n    try {\n      const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n      if (!isSupported) {\n        return null;\n      }\n      const response = await state.api.post({\n        path: `/v1/onramp/quote`,\n        params: {\n          projectId: OptionsController.state.projectId\n        },\n        body: {\n          purchaseCurrency,\n          paymentCurrency,\n          amount,\n          network\n        }\n      });\n      return response;\n    } catch (e) {\n      // Mocking response as 1:1 until endpoint is ready\n      return {\n        coinbaseFee: {\n          amount,\n          currency: paymentCurrency.id\n        },\n        networkFee: {\n          amount,\n          currency: paymentCurrency.id\n        },\n        paymentSubtotal: {\n          amount,\n          currency: paymentCurrency.id\n        },\n        paymentTotal: {\n          amount,\n          currency: paymentCurrency.id\n        },\n        purchaseAmount: {\n          amount,\n          currency: paymentCurrency.id\n        },\n        quoteId: 'mocked-quote-id'\n      };\n    }\n  },\n  async getSmartSessions(caipAddress) {\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      return [];\n    }\n    return BlockchainApiController.get({\n      path: `/v1/sessions/${caipAddress}`\n    });\n  },\n  async revokeSmartSession(address, pci, signature) {\n    const isSupported = await BlockchainApiController.isNetworkSupported(ChainController.state.activeCaipNetwork?.caipNetworkId);\n    if (!isSupported) {\n      return {\n        success: false\n      };\n    }\n    return state.api.post({\n      path: `/v1/sessions/${address}/revoke`,\n      params: {\n        projectId: OptionsController.state.projectId\n      },\n      body: {\n        pci,\n        signature\n      }\n    });\n  },\n  setClientId(clientId) {\n    state.clientId = clientId;\n    state.api = new FetchUtil({\n      baseUrl,\n      clientId\n    });\n  }\n};","map":{"version":3,"names":["proxy","ConstantsUtil","CoreHelperUtil","FetchUtil","StorageUtil","AccountController","ChainController","OptionsController","SnackController","DEFAULT_OPTIONS","purchaseCurrencies","id","name","symbol","networks","display_name","chain_id","contract_address","paymentCurrencies","payment_method_limits","min","max","baseUrl","getBlockchainApiUrl","state","clientId","api","supportedChains","http","ws","BlockchainApiController","get","request","st","sv","getSdkProperties","projectId","params","sdkType","sdkVersion","isNetworkSupported","networkId","length","getSupportedNetworks","e","includes","path","fetchIdentity","address","caipNetworkId","isSupported","avatar","identityCache","getIdentityFromCacheForAddress","result","sender","activeCaipAddress","getPlainAddress","undefined","updateIdentityCache","identity","timestamp","Date","now","fetchTransactions","account","cursor","onramp","signal","cache","chainId","activeCaipNetwork","data","next","fetchSwapQuote","amount","userAddress","from","to","gasPrice","quotes","headers","fetchSwapTokens","tokens","fetchTokenPrice","addresses","fungibles","post","body","currency","fetchSwapAllowance","tokenAddress","allowance","fetchGasPrice","Error","generateSwapCalldata","disableEstimate","eip155","slippage","CONVERT_SLIPPAGE_TOLERANCE","generateApproveCalldata","getBalance","forceUpdate","showError","balances","caipAddress","cachedBalance","getBalanceCacheForCaipAddress","balance","updateBalanceCache","lookupEnsName","attributes","apiVersion","reverseLookupEnsName","getEnsNameSuggestions","suggestions","zone","registerEnsName","coinType","message","signature","success","coin_type","generateOnRampURL","destinationWallets","partnerUserId","defaultNetwork","purchaseAmount","paymentAmount","response","defaultExperience","presetCryptoAmount","presetFiatAmount","url","getOnrampOptions","getOnrampQuote","purchaseCurrency","paymentCurrency","network","coinbaseFee","networkFee","paymentSubtotal","paymentTotal","quoteId","getSmartSessions","revokeSmartSession","pci","setClientId"],"sources":["../../../../src/controllers/BlockchainApiController.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}