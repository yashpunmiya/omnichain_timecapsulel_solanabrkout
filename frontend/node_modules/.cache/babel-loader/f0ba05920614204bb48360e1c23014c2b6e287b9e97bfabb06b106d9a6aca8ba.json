{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PopupManager = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = tslib_1.__importDefault(require(\"events\"));\nconst version_1 = require(\"@trezor/connect/lib/data/version\");\nconst events_2 = require(\"@trezor/connect/lib/events\");\nconst urlUtils_1 = require(\"@trezor/connect/lib/utils/urlUtils\");\nconst utils_1 = require(\"@trezor/utils\");\nconst showPopupRequest_1 = require(\"./showPopupRequest\");\nconst serviceworker_window_1 = require(\"../channels/serviceworker-window\");\nconst window_window_1 = require(\"../channels/window-window\");\nconst checkIfTabExists = tabId => new Promise(resolve => {\n  if (!tabId) return resolve(false);\n  function callback() {\n    if (chrome.runtime.lastError) {\n      resolve(false);\n    } else {\n      resolve(true);\n    }\n  }\n  chrome.tabs.get(tabId, callback);\n});\nconst POPUP_REQUEST_TIMEOUT = 850;\nconst POPUP_CLOSE_INTERVAL = 500;\nconst POPUP_OPEN_TIMEOUT = 5000;\nclass PopupManager extends events_1.default {\n  popupWindow;\n  settings;\n  origin;\n  locked = false;\n  channel;\n  channelIframe;\n  handshakePromise;\n  iframeHandshakePromise;\n  popupPromise;\n  requestTimeout;\n  openTimeout;\n  closeInterval;\n  extensionTabId = 0;\n  logger;\n  constructor(settings, {\n    logger\n  }) {\n    super();\n    this.settings = settings;\n    this.origin = (0, urlUtils_1.getOrigin)(settings.popupSrc);\n    this.logger = logger;\n    if (this.isWebExtensionWithTab()) {\n      this.channel = new serviceworker_window_1.ServiceWorkerWindowChannel({\n        name: 'trezor-connect',\n        channel: {\n          here: '@trezor/connect-webextension',\n          peer: '@trezor/connect-content-script'\n        },\n        logger,\n        currentId: () => {\n          if (this.popupWindow?.mode === 'tab') return this.popupWindow?.tab.id;\n        },\n        legacyMode: !this.settings.useCoreInPopup\n      });\n    } else {\n      this.channel = new window_window_1.WindowWindowChannel({\n        windowHere: window,\n        windowPeer: () => {\n          if (this.popupWindow?.mode === 'window') return this.popupWindow?.window;\n        },\n        channel: {\n          here: '@trezor/connect-web',\n          peer: '@trezor/connect-popup'\n        },\n        logger,\n        origin: this.origin,\n        legacyMode: !this.settings.useCoreInPopup\n      });\n    }\n    if (!this.settings.useCoreInPopup) {\n      this.iframeHandshakePromise = (0, utils_1.createDeferred)(events_2.IFRAME.LOADED);\n      this.channelIframe = new window_window_1.WindowWindowChannel({\n        windowHere: window,\n        windowPeer: () => window,\n        channel: {\n          here: '@trezor/connect-web',\n          peer: '@trezor/connect-iframe'\n        },\n        logger,\n        origin: this.origin\n      });\n      this.channelIframe?.on('message', this.handleMessage.bind(this));\n    }\n    if (this.settings.useCoreInPopup) {\n      this.handshakePromise = (0, utils_1.createDeferred)();\n      this.channel.on('message', this.handleCoreMessage.bind(this));\n      return;\n    } else if (this.isWebExtensionWithTab()) {\n      this.channel.on('message', this.handleExtensionMessage.bind(this));\n    } else {\n      this.channel.on('message', this.handleMessage.bind(this));\n    }\n    this.channel.init();\n  }\n  async request() {\n    if (this.settings.useCoreInPopup && this.popupWindow?.mode === 'tab') {\n      const currentPopupExists = await checkIfTabExists(this.popupWindow?.tab?.id);\n      if (!currentPopupExists) {\n        this.clear();\n      }\n    }\n    if (this.locked) {\n      if (this.popupWindow?.mode === 'tab' && this.popupWindow.tab.id) {\n        chrome.tabs.update(this.popupWindow.tab.id, {\n          active: true\n        });\n      } else if (this.popupWindow?.mode === 'window') {\n        this.popupWindow.window.focus();\n      }\n      return;\n    }\n    if (this.popupWindow && !this.locked) {\n      this.close();\n    }\n    const openFn = this.open.bind(this);\n    this.locked = true;\n    const timeout = this.settings.env === 'webextension' ? 1 : POPUP_REQUEST_TIMEOUT;\n    this.requestTimeout = setTimeout(() => {\n      this.requestTimeout = undefined;\n      openFn();\n    }, timeout);\n  }\n  unlock() {\n    this.locked = false;\n  }\n  open() {\n    const src = this.settings.popupSrc;\n    this.popupPromise = (0, utils_1.createDeferred)(events_2.POPUP.LOADED);\n    const url = this.buildPopupUrl(src);\n    this.openWrapper(url);\n    this.closeInterval = setInterval(() => {\n      if (!this.popupWindow) return;\n      if (this.popupWindow.mode === 'tab' && this.popupWindow.tab.id) {\n        chrome.tabs.get(this.popupWindow.tab.id, tab => {\n          if (!tab) {\n            this.emitClosed();\n            this.clear();\n          }\n        });\n      } else if (this.popupWindow.mode === 'window' && this.popupWindow.window.closed) {\n        this.clear();\n        this.emitClosed();\n      }\n    }, POPUP_CLOSE_INTERVAL);\n    if (this.settings.useCoreInPopup) {\n      return;\n    }\n    this.openTimeout = setTimeout(() => {\n      this.clear();\n      (0, showPopupRequest_1.showPopupRequest)(this.open.bind(this), () => {\n        this.emitClosed();\n      });\n    }, POPUP_OPEN_TIMEOUT);\n  }\n  buildPopupUrl(src) {\n    const params = new URLSearchParams();\n    params.set('version', version_1.VERSION);\n    params.set('env', this.settings.env);\n    if (this.settings.env === 'webextension' && chrome?.runtime?.id) {\n      params.set('extension-id', chrome.runtime.id);\n      params.set('cs-ver', version_1.CONTENT_SCRIPT_VERSION.toString());\n    }\n    return src + '?' + params.toString();\n  }\n  openWrapper(url) {\n    if (this.isWebExtensionWithTab()) {\n      chrome.windows.getCurrent(currentWindow => {\n        this.logger.debug('opening popup. currentWindow: ', currentWindow);\n        if (currentWindow.type !== 'normal') {\n          chrome.windows.create({\n            url\n          }, newWindow => {\n            chrome.tabs.query({\n              windowId: newWindow?.id,\n              active: true\n            }, tabs => {\n              this.popupWindow = {\n                mode: 'tab',\n                tab: tabs[0]\n              };\n              this.injectContentScript(tabs[0].id);\n            });\n          });\n        } else {\n          chrome.tabs.query({\n            currentWindow: true,\n            active: true\n          }, tabs => {\n            this.extensionTabId = tabs[0].id;\n            chrome.tabs.create({\n              url,\n              index: tabs[0].index + 1\n            }, tab => {\n              this.popupWindow = {\n                mode: 'tab',\n                tab\n              };\n              this.injectContentScript(tab.id);\n            });\n          });\n        }\n      });\n    } else {\n      const windowResult = window.open(url, 'modal');\n      if (!windowResult) return;\n      this.popupWindow = {\n        mode: 'window',\n        window: windowResult\n      };\n    }\n    if (!this.channel.isConnected) {\n      this.channel.connect();\n    }\n  }\n  injectContentScript = tabId => {\n    chrome.permissions.getAll(permissions => {\n      if (permissions.permissions?.includes('scripting')) {\n        (0, utils_1.scheduleAction)(() => chrome.scripting.executeScript({\n          target: {\n            tabId\n          },\n          func: () => {}\n        }).then(() => {\n          this.logger.debug('content script injected');\n        }).catch(error => {\n          this.logger.error('content script injection error', error);\n          throw error;\n        }), {\n          attempts: new Array(3).fill({\n            timeout: 100\n          })\n        });\n      } else {}\n    });\n  };\n  handleCoreMessage(message) {\n    if (message.type === events_2.POPUP.BOOTSTRAP) {\n      this.channel.init();\n    } else if (message.type === events_2.POPUP.LOADED) {\n      this.handleMessage(message);\n      this.channel.postMessage({\n        type: events_2.POPUP.INIT,\n        payload: {\n          settings: this.settings,\n          useCore: true\n        }\n      });\n    } else if (message.type === events_2.POPUP.CORE_LOADED) {\n      this.channel.postMessage({\n        type: events_2.POPUP.HANDSHAKE,\n        payload: {\n          settings: this.settings\n        }\n      });\n      this.handshakePromise?.resolve();\n    } else if (message.type === events_2.POPUP.CLOSED) {\n      this.emitClosed();\n    } else if (message.type === events_2.POPUP.CONTENT_SCRIPT_LOADED) {\n      const {\n        contentScriptVersion\n      } = message.payload;\n      if (contentScriptVersion !== version_1.CONTENT_SCRIPT_VERSION) {\n        console.warn(`Content script version mismatch. Expected ${version_1.CONTENT_SCRIPT_VERSION}, got ${contentScriptVersion}`);\n      }\n    } else if (message.event === events_2.DEVICE_EVENT) {\n      this.emit(events_2.DEVICE_EVENT, message);\n    }\n  }\n  handleExtensionMessage(data) {\n    if (data.type === events_2.POPUP.ERROR || data.type === events_2.POPUP.LOADED || data.type === events_2.POPUP.BOOTSTRAP) {\n      this.handleMessage(data);\n    } else if (data.type === events_2.POPUP.EXTENSION_USB_PERMISSIONS) {\n      chrome.tabs.query({\n        currentWindow: true,\n        active: true\n      }, tabs => {\n        chrome.tabs.create({\n          url: 'trezor-usb-permissions.html',\n          index: tabs[0].index + 1\n        }, _tab => {});\n      });\n    } else if (data.type === events_2.POPUP.CLOSE_WINDOW) {\n      this.clear();\n    }\n  }\n  handleMessage(data) {\n    if (data.type === events_2.IFRAME.LOADED) {\n      this.iframeHandshakePromise?.resolve(data.payload);\n    } else if (data.type === events_2.POPUP.BOOTSTRAP) {\n      if (this.openTimeout) clearTimeout(this.openTimeout);\n    } else if (data.type === events_2.POPUP.ERROR && this.popupWindow) {\n      const errorMessage = data.payload && typeof data.payload.error === 'string' ? data.payload.error : null;\n      this.emit(events_2.POPUP.CLOSED, errorMessage ? `Popup error: ${errorMessage}` : null);\n      this.clear();\n    } else if (data.type === events_2.POPUP.LOADED) {\n      if (this.openTimeout) clearTimeout(this.openTimeout);\n      if (this.popupPromise) {\n        this.popupPromise.resolve();\n        this.popupPromise = undefined;\n      }\n      this.iframeHandshakePromise?.promise.then(payload => {\n        this.channel.postMessage({\n          type: events_2.POPUP.INIT,\n          payload: {\n            ...payload,\n            settings: this.settings\n          }\n        });\n      });\n    } else if (data.type === events_2.POPUP.CANCEL_POPUP_REQUEST) {\n      clearTimeout(this.requestTimeout);\n      if (this.popupPromise) {\n        this.close();\n      }\n      this.unlock();\n    } else if (data.type === events_2.UI.CLOSE_UI_WINDOW) {\n      this.clear(false);\n    }\n  }\n  clear(focus = true) {\n    this.locked = false;\n    this.popupPromise = undefined;\n    this.handshakePromise = (0, utils_1.createDeferred)();\n    if (this.channel) {\n      this.channel.disconnect();\n    }\n    if (this.requestTimeout) {\n      clearTimeout(this.requestTimeout);\n      this.requestTimeout = undefined;\n    }\n    if (this.openTimeout) {\n      clearTimeout(this.openTimeout);\n      this.openTimeout = undefined;\n    }\n    if (this.closeInterval) {\n      clearInterval(this.closeInterval);\n      this.closeInterval = undefined;\n    }\n    if (focus && this.extensionTabId) {\n      chrome.tabs.update(this.extensionTabId, {\n        active: true\n      });\n      this.extensionTabId = 0;\n    }\n  }\n  close() {\n    if (!this.popupWindow) return;\n    this.logger.debug('closing popup');\n    if (this.popupWindow.mode === 'tab') {\n      let _e = chrome.runtime.lastError;\n      if (this.popupWindow.tab.id) {\n        chrome.tabs.remove(this.popupWindow.tab.id, () => {\n          _e = chrome.runtime.lastError;\n          if (_e) {\n            this.logger.error('closed with error', _e);\n          }\n        });\n      }\n    } else if (this.popupWindow.mode === 'window') {\n      this.popupWindow.window.close();\n    }\n    this.popupWindow = undefined;\n    if (this.settings?.useCoreInPopup) {\n      this.channel.clear();\n    }\n  }\n  async postMessage(message) {\n    if (!this.popupWindow && message.type !== events_2.UI.REQUEST_UI_WINDOW && this.openTimeout) {\n      this.clear();\n      (0, showPopupRequest_1.showPopupRequest)(this.open.bind(this), () => {\n        this.emitClosed();\n      });\n      return;\n    }\n    if (this.popupPromise) {\n      await this.popupPromise.promise;\n    }\n    if (this.popupWindow?.mode === 'window') {\n      this.popupWindow.window.postMessage(message, this.origin);\n    } else if (this.popupWindow?.mode === 'tab') {\n      this.channel.postMessage(message);\n    }\n  }\n  isWebExtensionWithTab() {\n    return this.settings?.env === 'webextension' && typeof chrome !== 'undefined' && typeof chrome?.tabs !== 'undefined';\n  }\n  emitClosed() {\n    if (this.settings?.useCoreInPopup) {\n      this.channel.resolveMessagePromises({\n        code: 'Method_Interrupted',\n        error: events_2.POPUP.CLOSED\n      });\n    }\n    this.emit(events_2.POPUP.CLOSED);\n  }\n}\nexports.PopupManager = PopupManager;","map":{"version":3,"names":["Object","defineProperty","exports","value","PopupManager","tslib_1","require","events_1","__importDefault","version_1","events_2","urlUtils_1","utils_1","showPopupRequest_1","serviceworker_window_1","window_window_1","checkIfTabExists","tabId","Promise","resolve","callback","chrome","runtime","lastError","tabs","get","POPUP_REQUEST_TIMEOUT","POPUP_CLOSE_INTERVAL","POPUP_OPEN_TIMEOUT","default","popupWindow","settings","origin","locked","channel","channelIframe","handshakePromise","iframeHandshakePromise","popupPromise","requestTimeout","openTimeout","closeInterval","extensionTabId","logger","constructor","getOrigin","popupSrc","isWebExtensionWithTab","ServiceWorkerWindowChannel","name","here","peer","currentId","mode","tab","id","legacyMode","useCoreInPopup","WindowWindowChannel","windowHere","window","windowPeer","createDeferred","IFRAME","LOADED","on","handleMessage","bind","handleCoreMessage","handleExtensionMessage","init","request","currentPopupExists","clear","update","active","focus","close","openFn","open","timeout","env","setTimeout","undefined","unlock","src","POPUP","url","buildPopupUrl","openWrapper","setInterval","emitClosed","closed","showPopupRequest","params","URLSearchParams","set","VERSION","CONTENT_SCRIPT_VERSION","toString","windows","getCurrent","currentWindow","debug","type","create","newWindow","query","windowId","injectContentScript","index","windowResult","isConnected","connect","permissions","getAll","includes","scheduleAction","scripting","executeScript","target","func","then","catch","error","attempts","Array","fill","message","BOOTSTRAP","postMessage","INIT","payload","useCore","CORE_LOADED","HANDSHAKE","CLOSED","CONTENT_SCRIPT_LOADED","contentScriptVersion","console","warn","event","DEVICE_EVENT","emit","data","ERROR","EXTENSION_USB_PERMISSIONS","_tab","CLOSE_WINDOW","clearTimeout","errorMessage","promise","CANCEL_POPUP_REQUEST","UI","CLOSE_UI_WINDOW","disconnect","clearInterval","_e","remove","REQUEST_UI_WINDOW","resolveMessagePromises","code"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@trezor/connect-web/lib/popup/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PopupManager = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = tslib_1.__importDefault(require(\"events\"));\nconst version_1 = require(\"@trezor/connect/lib/data/version\");\nconst events_2 = require(\"@trezor/connect/lib/events\");\nconst urlUtils_1 = require(\"@trezor/connect/lib/utils/urlUtils\");\nconst utils_1 = require(\"@trezor/utils\");\nconst showPopupRequest_1 = require(\"./showPopupRequest\");\nconst serviceworker_window_1 = require(\"../channels/serviceworker-window\");\nconst window_window_1 = require(\"../channels/window-window\");\nconst checkIfTabExists = (tabId) => new Promise(resolve => {\n    if (!tabId)\n        return resolve(false);\n    function callback() {\n        if (chrome.runtime.lastError) {\n            resolve(false);\n        }\n        else {\n            resolve(true);\n        }\n    }\n    chrome.tabs.get(tabId, callback);\n});\nconst POPUP_REQUEST_TIMEOUT = 850;\nconst POPUP_CLOSE_INTERVAL = 500;\nconst POPUP_OPEN_TIMEOUT = 5000;\nclass PopupManager extends events_1.default {\n    popupWindow;\n    settings;\n    origin;\n    locked = false;\n    channel;\n    channelIframe;\n    handshakePromise;\n    iframeHandshakePromise;\n    popupPromise;\n    requestTimeout;\n    openTimeout;\n    closeInterval;\n    extensionTabId = 0;\n    logger;\n    constructor(settings, { logger }) {\n        super();\n        this.settings = settings;\n        this.origin = (0, urlUtils_1.getOrigin)(settings.popupSrc);\n        this.logger = logger;\n        if (this.isWebExtensionWithTab()) {\n            this.channel = new serviceworker_window_1.ServiceWorkerWindowChannel({\n                name: 'trezor-connect',\n                channel: {\n                    here: '@trezor/connect-webextension',\n                    peer: '@trezor/connect-content-script',\n                },\n                logger,\n                currentId: () => {\n                    if (this.popupWindow?.mode === 'tab')\n                        return this.popupWindow?.tab.id;\n                },\n                legacyMode: !this.settings.useCoreInPopup,\n            });\n        }\n        else {\n            this.channel = new window_window_1.WindowWindowChannel({\n                windowHere: window,\n                windowPeer: () => {\n                    if (this.popupWindow?.mode === 'window')\n                        return this.popupWindow?.window;\n                },\n                channel: {\n                    here: '@trezor/connect-web',\n                    peer: '@trezor/connect-popup',\n                },\n                logger,\n                origin: this.origin,\n                legacyMode: !this.settings.useCoreInPopup,\n            });\n        }\n        if (!this.settings.useCoreInPopup) {\n            this.iframeHandshakePromise = (0, utils_1.createDeferred)(events_2.IFRAME.LOADED);\n            this.channelIframe = new window_window_1.WindowWindowChannel({\n                windowHere: window,\n                windowPeer: () => window,\n                channel: {\n                    here: '@trezor/connect-web',\n                    peer: '@trezor/connect-iframe',\n                },\n                logger,\n                origin: this.origin,\n            });\n            this.channelIframe?.on('message', this.handleMessage.bind(this));\n        }\n        if (this.settings.useCoreInPopup) {\n            this.handshakePromise = (0, utils_1.createDeferred)();\n            this.channel.on('message', this.handleCoreMessage.bind(this));\n            return;\n        }\n        else if (this.isWebExtensionWithTab()) {\n            this.channel.on('message', this.handleExtensionMessage.bind(this));\n        }\n        else {\n            this.channel.on('message', this.handleMessage.bind(this));\n        }\n        this.channel.init();\n    }\n    async request() {\n        if (this.settings.useCoreInPopup && this.popupWindow?.mode === 'tab') {\n            const currentPopupExists = await checkIfTabExists(this.popupWindow?.tab?.id);\n            if (!currentPopupExists) {\n                this.clear();\n            }\n        }\n        if (this.locked) {\n            if (this.popupWindow?.mode === 'tab' && this.popupWindow.tab.id) {\n                chrome.tabs.update(this.popupWindow.tab.id, { active: true });\n            }\n            else if (this.popupWindow?.mode === 'window') {\n                this.popupWindow.window.focus();\n            }\n            return;\n        }\n        if (this.popupWindow && !this.locked) {\n            this.close();\n        }\n        const openFn = this.open.bind(this);\n        this.locked = true;\n        const timeout = this.settings.env === 'webextension' ? 1 : POPUP_REQUEST_TIMEOUT;\n        this.requestTimeout = setTimeout(() => {\n            this.requestTimeout = undefined;\n            openFn();\n        }, timeout);\n    }\n    unlock() {\n        this.locked = false;\n    }\n    open() {\n        const src = this.settings.popupSrc;\n        this.popupPromise = (0, utils_1.createDeferred)(events_2.POPUP.LOADED);\n        const url = this.buildPopupUrl(src);\n        this.openWrapper(url);\n        this.closeInterval = setInterval(() => {\n            if (!this.popupWindow)\n                return;\n            if (this.popupWindow.mode === 'tab' && this.popupWindow.tab.id) {\n                chrome.tabs.get(this.popupWindow.tab.id, tab => {\n                    if (!tab) {\n                        this.emitClosed();\n                        this.clear();\n                    }\n                });\n            }\n            else if (this.popupWindow.mode === 'window' && this.popupWindow.window.closed) {\n                this.clear();\n                this.emitClosed();\n            }\n        }, POPUP_CLOSE_INTERVAL);\n        if (this.settings.useCoreInPopup) {\n            return;\n        }\n        this.openTimeout = setTimeout(() => {\n            this.clear();\n            (0, showPopupRequest_1.showPopupRequest)(this.open.bind(this), () => {\n                this.emitClosed();\n            });\n        }, POPUP_OPEN_TIMEOUT);\n    }\n    buildPopupUrl(src) {\n        const params = new URLSearchParams();\n        params.set('version', version_1.VERSION);\n        params.set('env', this.settings.env);\n        if (this.settings.env === 'webextension' && chrome?.runtime?.id) {\n            params.set('extension-id', chrome.runtime.id);\n            params.set('cs-ver', version_1.CONTENT_SCRIPT_VERSION.toString());\n        }\n        return src + '?' + params.toString();\n    }\n    openWrapper(url) {\n        if (this.isWebExtensionWithTab()) {\n            chrome.windows.getCurrent(currentWindow => {\n                this.logger.debug('opening popup. currentWindow: ', currentWindow);\n                if (currentWindow.type !== 'normal') {\n                    chrome.windows.create({ url }, newWindow => {\n                        chrome.tabs.query({\n                            windowId: newWindow?.id,\n                            active: true,\n                        }, tabs => {\n                            this.popupWindow = { mode: 'tab', tab: tabs[0] };\n                            this.injectContentScript(tabs[0].id);\n                        });\n                    });\n                }\n                else {\n                    chrome.tabs.query({\n                        currentWindow: true,\n                        active: true,\n                    }, tabs => {\n                        this.extensionTabId = tabs[0].id;\n                        chrome.tabs.create({\n                            url,\n                            index: tabs[0].index + 1,\n                        }, tab => {\n                            this.popupWindow = { mode: 'tab', tab };\n                            this.injectContentScript(tab.id);\n                        });\n                    });\n                }\n            });\n        }\n        else {\n            const windowResult = window.open(url, 'modal');\n            if (!windowResult)\n                return;\n            this.popupWindow = { mode: 'window', window: windowResult };\n        }\n        if (!this.channel.isConnected) {\n            this.channel.connect();\n        }\n    }\n    injectContentScript = (tabId) => {\n        chrome.permissions.getAll(permissions => {\n            if (permissions.permissions?.includes('scripting')) {\n                (0, utils_1.scheduleAction)(() => chrome.scripting\n                    .executeScript({\n                    target: { tabId },\n                    func: () => {\n                    },\n                })\n                    .then(() => {\n                    this.logger.debug('content script injected');\n                })\n                    .catch(error => {\n                    this.logger.error('content script injection error', error);\n                    throw error;\n                }), { attempts: new Array(3).fill({ timeout: 100 }) });\n            }\n            else {\n            }\n        });\n    };\n    handleCoreMessage(message) {\n        if (message.type === events_2.POPUP.BOOTSTRAP) {\n            this.channel.init();\n        }\n        else if (message.type === events_2.POPUP.LOADED) {\n            this.handleMessage(message);\n            this.channel.postMessage({\n                type: events_2.POPUP.INIT,\n                payload: {\n                    settings: this.settings,\n                    useCore: true,\n                },\n            });\n        }\n        else if (message.type === events_2.POPUP.CORE_LOADED) {\n            this.channel.postMessage({\n                type: events_2.POPUP.HANDSHAKE,\n                payload: { settings: this.settings },\n            });\n            this.handshakePromise?.resolve();\n        }\n        else if (message.type === events_2.POPUP.CLOSED) {\n            this.emitClosed();\n        }\n        else if (message.type === events_2.POPUP.CONTENT_SCRIPT_LOADED) {\n            const { contentScriptVersion } = message.payload;\n            if (contentScriptVersion !== version_1.CONTENT_SCRIPT_VERSION) {\n                console.warn(`Content script version mismatch. Expected ${version_1.CONTENT_SCRIPT_VERSION}, got ${contentScriptVersion}`);\n            }\n        }\n        else if (message.event === events_2.DEVICE_EVENT) {\n            this.emit(events_2.DEVICE_EVENT, message);\n        }\n    }\n    handleExtensionMessage(data) {\n        if (data.type === events_2.POPUP.ERROR ||\n            data.type === events_2.POPUP.LOADED ||\n            data.type === events_2.POPUP.BOOTSTRAP) {\n            this.handleMessage(data);\n        }\n        else if (data.type === events_2.POPUP.EXTENSION_USB_PERMISSIONS) {\n            chrome.tabs.query({\n                currentWindow: true,\n                active: true,\n            }, tabs => {\n                chrome.tabs.create({\n                    url: 'trezor-usb-permissions.html',\n                    index: tabs[0].index + 1,\n                }, _tab => {\n                });\n            });\n        }\n        else if (data.type === events_2.POPUP.CLOSE_WINDOW) {\n            this.clear();\n        }\n    }\n    handleMessage(data) {\n        if (data.type === events_2.IFRAME.LOADED) {\n            this.iframeHandshakePromise?.resolve(data.payload);\n        }\n        else if (data.type === events_2.POPUP.BOOTSTRAP) {\n            if (this.openTimeout)\n                clearTimeout(this.openTimeout);\n        }\n        else if (data.type === events_2.POPUP.ERROR && this.popupWindow) {\n            const errorMessage = data.payload && typeof data.payload.error === 'string' ? data.payload.error : null;\n            this.emit(events_2.POPUP.CLOSED, errorMessage ? `Popup error: ${errorMessage}` : null);\n            this.clear();\n        }\n        else if (data.type === events_2.POPUP.LOADED) {\n            if (this.openTimeout)\n                clearTimeout(this.openTimeout);\n            if (this.popupPromise) {\n                this.popupPromise.resolve();\n                this.popupPromise = undefined;\n            }\n            this.iframeHandshakePromise?.promise.then(payload => {\n                this.channel.postMessage({\n                    type: events_2.POPUP.INIT,\n                    payload: {\n                        ...payload,\n                        settings: this.settings,\n                    },\n                });\n            });\n        }\n        else if (data.type === events_2.POPUP.CANCEL_POPUP_REQUEST) {\n            clearTimeout(this.requestTimeout);\n            if (this.popupPromise) {\n                this.close();\n            }\n            this.unlock();\n        }\n        else if (data.type === events_2.UI.CLOSE_UI_WINDOW) {\n            this.clear(false);\n        }\n    }\n    clear(focus = true) {\n        this.locked = false;\n        this.popupPromise = undefined;\n        this.handshakePromise = (0, utils_1.createDeferred)();\n        if (this.channel) {\n            this.channel.disconnect();\n        }\n        if (this.requestTimeout) {\n            clearTimeout(this.requestTimeout);\n            this.requestTimeout = undefined;\n        }\n        if (this.openTimeout) {\n            clearTimeout(this.openTimeout);\n            this.openTimeout = undefined;\n        }\n        if (this.closeInterval) {\n            clearInterval(this.closeInterval);\n            this.closeInterval = undefined;\n        }\n        if (focus && this.extensionTabId) {\n            chrome.tabs.update(this.extensionTabId, { active: true });\n            this.extensionTabId = 0;\n        }\n    }\n    close() {\n        if (!this.popupWindow)\n            return;\n        this.logger.debug('closing popup');\n        if (this.popupWindow.mode === 'tab') {\n            let _e = chrome.runtime.lastError;\n            if (this.popupWindow.tab.id) {\n                chrome.tabs.remove(this.popupWindow.tab.id, () => {\n                    _e = chrome.runtime.lastError;\n                    if (_e) {\n                        this.logger.error('closed with error', _e);\n                    }\n                });\n            }\n        }\n        else if (this.popupWindow.mode === 'window') {\n            this.popupWindow.window.close();\n        }\n        this.popupWindow = undefined;\n        if (this.settings?.useCoreInPopup) {\n            this.channel.clear();\n        }\n    }\n    async postMessage(message) {\n        if (!this.popupWindow && message.type !== events_2.UI.REQUEST_UI_WINDOW && this.openTimeout) {\n            this.clear();\n            (0, showPopupRequest_1.showPopupRequest)(this.open.bind(this), () => {\n                this.emitClosed();\n            });\n            return;\n        }\n        if (this.popupPromise) {\n            await this.popupPromise.promise;\n        }\n        if (this.popupWindow?.mode === 'window') {\n            this.popupWindow.window.postMessage(message, this.origin);\n        }\n        else if (this.popupWindow?.mode === 'tab') {\n            this.channel.postMessage(message);\n        }\n    }\n    isWebExtensionWithTab() {\n        return (this.settings?.env === 'webextension' &&\n            typeof chrome !== 'undefined' &&\n            typeof chrome?.tabs !== 'undefined');\n    }\n    emitClosed() {\n        if (this.settings?.useCoreInPopup) {\n            this.channel.resolveMessagePromises({\n                code: 'Method_Interrupted',\n                error: events_2.POPUP.CLOSED,\n            });\n        }\n        this.emit(events_2.POPUP.CLOSED);\n    }\n}\nexports.PopupManager = PopupManager;\n//# sourceMappingURL=index.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAO,CAAC;AAChC,MAAMC,QAAQ,GAAGF,OAAO,CAACG,eAAe,CAACF,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC3D,MAAMG,SAAS,GAAGH,OAAO,CAAC,kCAAkC,CAAC;AAC7D,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,4BAA4B,CAAC;AACtD,MAAMK,UAAU,GAAGL,OAAO,CAAC,oCAAoC,CAAC;AAChE,MAAMM,OAAO,GAAGN,OAAO,CAAC,eAAe,CAAC;AACxC,MAAMO,kBAAkB,GAAGP,OAAO,CAAC,oBAAoB,CAAC;AACxD,MAAMQ,sBAAsB,GAAGR,OAAO,CAAC,kCAAkC,CAAC;AAC1E,MAAMS,eAAe,GAAGT,OAAO,CAAC,2BAA2B,CAAC;AAC5D,MAAMU,gBAAgB,GAAIC,KAAK,IAAK,IAAIC,OAAO,CAACC,OAAO,IAAI;EACvD,IAAI,CAACF,KAAK,EACN,OAAOE,OAAO,CAAC,KAAK,CAAC;EACzB,SAASC,QAAQA,CAAA,EAAG;IAChB,IAAIC,MAAM,CAACC,OAAO,CAACC,SAAS,EAAE;MAC1BJ,OAAO,CAAC,KAAK,CAAC;IAClB,CAAC,MACI;MACDA,OAAO,CAAC,IAAI,CAAC;IACjB;EACJ;EACAE,MAAM,CAACG,IAAI,CAACC,GAAG,CAACR,KAAK,EAAEG,QAAQ,CAAC;AACpC,CAAC,CAAC;AACF,MAAMM,qBAAqB,GAAG,GAAG;AACjC,MAAMC,oBAAoB,GAAG,GAAG;AAChC,MAAMC,kBAAkB,GAAG,IAAI;AAC/B,MAAMxB,YAAY,SAASG,QAAQ,CAACsB,OAAO,CAAC;EACxCC,WAAW;EACXC,QAAQ;EACRC,MAAM;EACNC,MAAM,GAAG,KAAK;EACdC,OAAO;EACPC,aAAa;EACbC,gBAAgB;EAChBC,sBAAsB;EACtBC,YAAY;EACZC,cAAc;EACdC,WAAW;EACXC,aAAa;EACbC,cAAc,GAAG,CAAC;EAClBC,MAAM;EACNC,WAAWA,CAACb,QAAQ,EAAE;IAAEY;EAAO,CAAC,EAAE;IAC9B,KAAK,CAAC,CAAC;IACP,IAAI,CAACZ,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,EAAErB,UAAU,CAACkC,SAAS,EAAEd,QAAQ,CAACe,QAAQ,CAAC;IAC1D,IAAI,CAACH,MAAM,GAAGA,MAAM;IACpB,IAAI,IAAI,CAACI,qBAAqB,CAAC,CAAC,EAAE;MAC9B,IAAI,CAACb,OAAO,GAAG,IAAIpB,sBAAsB,CAACkC,0BAA0B,CAAC;QACjEC,IAAI,EAAE,gBAAgB;QACtBf,OAAO,EAAE;UACLgB,IAAI,EAAE,8BAA8B;UACpCC,IAAI,EAAE;QACV,CAAC;QACDR,MAAM;QACNS,SAAS,EAAEA,CAAA,KAAM;UACb,IAAI,IAAI,CAACtB,WAAW,EAAEuB,IAAI,KAAK,KAAK,EAChC,OAAO,IAAI,CAACvB,WAAW,EAAEwB,GAAG,CAACC,EAAE;QACvC,CAAC;QACDC,UAAU,EAAE,CAAC,IAAI,CAACzB,QAAQ,CAAC0B;MAC/B,CAAC,CAAC;IACN,CAAC,MACI;MACD,IAAI,CAACvB,OAAO,GAAG,IAAInB,eAAe,CAAC2C,mBAAmB,CAAC;QACnDC,UAAU,EAAEC,MAAM;QAClBC,UAAU,EAAEA,CAAA,KAAM;UACd,IAAI,IAAI,CAAC/B,WAAW,EAAEuB,IAAI,KAAK,QAAQ,EACnC,OAAO,IAAI,CAACvB,WAAW,EAAE8B,MAAM;QACvC,CAAC;QACD1B,OAAO,EAAE;UACLgB,IAAI,EAAE,qBAAqB;UAC3BC,IAAI,EAAE;QACV,CAAC;QACDR,MAAM;QACNX,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBwB,UAAU,EAAE,CAAC,IAAI,CAACzB,QAAQ,CAAC0B;MAC/B,CAAC,CAAC;IACN;IACA,IAAI,CAAC,IAAI,CAAC1B,QAAQ,CAAC0B,cAAc,EAAE;MAC/B,IAAI,CAACpB,sBAAsB,GAAG,CAAC,CAAC,EAAEzB,OAAO,CAACkD,cAAc,EAAEpD,QAAQ,CAACqD,MAAM,CAACC,MAAM,CAAC;MACjF,IAAI,CAAC7B,aAAa,GAAG,IAAIpB,eAAe,CAAC2C,mBAAmB,CAAC;QACzDC,UAAU,EAAEC,MAAM;QAClBC,UAAU,EAAEA,CAAA,KAAMD,MAAM;QACxB1B,OAAO,EAAE;UACLgB,IAAI,EAAE,qBAAqB;UAC3BC,IAAI,EAAE;QACV,CAAC;QACDR,MAAM;QACNX,MAAM,EAAE,IAAI,CAACA;MACjB,CAAC,CAAC;MACF,IAAI,CAACG,aAAa,EAAE8B,EAAE,CAAC,SAAS,EAAE,IAAI,CAACC,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpE;IACA,IAAI,IAAI,CAACpC,QAAQ,CAAC0B,cAAc,EAAE;MAC9B,IAAI,CAACrB,gBAAgB,GAAG,CAAC,CAAC,EAAExB,OAAO,CAACkD,cAAc,EAAE,CAAC;MACrD,IAAI,CAAC5B,OAAO,CAAC+B,EAAE,CAAC,SAAS,EAAE,IAAI,CAACG,iBAAiB,CAACD,IAAI,CAAC,IAAI,CAAC,CAAC;MAC7D;IACJ,CAAC,MACI,IAAI,IAAI,CAACpB,qBAAqB,CAAC,CAAC,EAAE;MACnC,IAAI,CAACb,OAAO,CAAC+B,EAAE,CAAC,SAAS,EAAE,IAAI,CAACI,sBAAsB,CAACF,IAAI,CAAC,IAAI,CAAC,CAAC;IACtE,CAAC,MACI;MACD,IAAI,CAACjC,OAAO,CAAC+B,EAAE,CAAC,SAAS,EAAE,IAAI,CAACC,aAAa,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7D;IACA,IAAI,CAACjC,OAAO,CAACoC,IAAI,CAAC,CAAC;EACvB;EACA,MAAMC,OAAOA,CAAA,EAAG;IACZ,IAAI,IAAI,CAACxC,QAAQ,CAAC0B,cAAc,IAAI,IAAI,CAAC3B,WAAW,EAAEuB,IAAI,KAAK,KAAK,EAAE;MAClE,MAAMmB,kBAAkB,GAAG,MAAMxD,gBAAgB,CAAC,IAAI,CAACc,WAAW,EAAEwB,GAAG,EAAEC,EAAE,CAAC;MAC5E,IAAI,CAACiB,kBAAkB,EAAE;QACrB,IAAI,CAACC,KAAK,CAAC,CAAC;MAChB;IACJ;IACA,IAAI,IAAI,CAACxC,MAAM,EAAE;MACb,IAAI,IAAI,CAACH,WAAW,EAAEuB,IAAI,KAAK,KAAK,IAAI,IAAI,CAACvB,WAAW,CAACwB,GAAG,CAACC,EAAE,EAAE;QAC7DlC,MAAM,CAACG,IAAI,CAACkD,MAAM,CAAC,IAAI,CAAC5C,WAAW,CAACwB,GAAG,CAACC,EAAE,EAAE;UAAEoB,MAAM,EAAE;QAAK,CAAC,CAAC;MACjE,CAAC,MACI,IAAI,IAAI,CAAC7C,WAAW,EAAEuB,IAAI,KAAK,QAAQ,EAAE;QAC1C,IAAI,CAACvB,WAAW,CAAC8B,MAAM,CAACgB,KAAK,CAAC,CAAC;MACnC;MACA;IACJ;IACA,IAAI,IAAI,CAAC9C,WAAW,IAAI,CAAC,IAAI,CAACG,MAAM,EAAE;MAClC,IAAI,CAAC4C,KAAK,CAAC,CAAC;IAChB;IACA,MAAMC,MAAM,GAAG,IAAI,CAACC,IAAI,CAACZ,IAAI,CAAC,IAAI,CAAC;IACnC,IAAI,CAAClC,MAAM,GAAG,IAAI;IAClB,MAAM+C,OAAO,GAAG,IAAI,CAACjD,QAAQ,CAACkD,GAAG,KAAK,cAAc,GAAG,CAAC,GAAGvD,qBAAqB;IAChF,IAAI,CAACa,cAAc,GAAG2C,UAAU,CAAC,MAAM;MACnC,IAAI,CAAC3C,cAAc,GAAG4C,SAAS;MAC/BL,MAAM,CAAC,CAAC;IACZ,CAAC,EAAEE,OAAO,CAAC;EACf;EACAI,MAAMA,CAAA,EAAG;IACL,IAAI,CAACnD,MAAM,GAAG,KAAK;EACvB;EACA8C,IAAIA,CAAA,EAAG;IACH,MAAMM,GAAG,GAAG,IAAI,CAACtD,QAAQ,CAACe,QAAQ;IAClC,IAAI,CAACR,YAAY,GAAG,CAAC,CAAC,EAAE1B,OAAO,CAACkD,cAAc,EAAEpD,QAAQ,CAAC4E,KAAK,CAACtB,MAAM,CAAC;IACtE,MAAMuB,GAAG,GAAG,IAAI,CAACC,aAAa,CAACH,GAAG,CAAC;IACnC,IAAI,CAACI,WAAW,CAACF,GAAG,CAAC;IACrB,IAAI,CAAC9C,aAAa,GAAGiD,WAAW,CAAC,MAAM;MACnC,IAAI,CAAC,IAAI,CAAC5D,WAAW,EACjB;MACJ,IAAI,IAAI,CAACA,WAAW,CAACuB,IAAI,KAAK,KAAK,IAAI,IAAI,CAACvB,WAAW,CAACwB,GAAG,CAACC,EAAE,EAAE;QAC5DlC,MAAM,CAACG,IAAI,CAACC,GAAG,CAAC,IAAI,CAACK,WAAW,CAACwB,GAAG,CAACC,EAAE,EAAED,GAAG,IAAI;UAC5C,IAAI,CAACA,GAAG,EAAE;YACN,IAAI,CAACqC,UAAU,CAAC,CAAC;YACjB,IAAI,CAAClB,KAAK,CAAC,CAAC;UAChB;QACJ,CAAC,CAAC;MACN,CAAC,MACI,IAAI,IAAI,CAAC3C,WAAW,CAACuB,IAAI,KAAK,QAAQ,IAAI,IAAI,CAACvB,WAAW,CAAC8B,MAAM,CAACgC,MAAM,EAAE;QAC3E,IAAI,CAACnB,KAAK,CAAC,CAAC;QACZ,IAAI,CAACkB,UAAU,CAAC,CAAC;MACrB;IACJ,CAAC,EAAEhE,oBAAoB,CAAC;IACxB,IAAI,IAAI,CAACI,QAAQ,CAAC0B,cAAc,EAAE;MAC9B;IACJ;IACA,IAAI,CAACjB,WAAW,GAAG0C,UAAU,CAAC,MAAM;MAChC,IAAI,CAACT,KAAK,CAAC,CAAC;MACZ,CAAC,CAAC,EAAE5D,kBAAkB,CAACgF,gBAAgB,EAAE,IAAI,CAACd,IAAI,CAACZ,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM;QACjE,IAAI,CAACwB,UAAU,CAAC,CAAC;MACrB,CAAC,CAAC;IACN,CAAC,EAAE/D,kBAAkB,CAAC;EAC1B;EACA4D,aAAaA,CAACH,GAAG,EAAE;IACf,MAAMS,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpCD,MAAM,CAACE,GAAG,CAAC,SAAS,EAAEvF,SAAS,CAACwF,OAAO,CAAC;IACxCH,MAAM,CAACE,GAAG,CAAC,KAAK,EAAE,IAAI,CAACjE,QAAQ,CAACkD,GAAG,CAAC;IACpC,IAAI,IAAI,CAAClD,QAAQ,CAACkD,GAAG,KAAK,cAAc,IAAI5D,MAAM,EAAEC,OAAO,EAAEiC,EAAE,EAAE;MAC7DuC,MAAM,CAACE,GAAG,CAAC,cAAc,EAAE3E,MAAM,CAACC,OAAO,CAACiC,EAAE,CAAC;MAC7CuC,MAAM,CAACE,GAAG,CAAC,QAAQ,EAAEvF,SAAS,CAACyF,sBAAsB,CAACC,QAAQ,CAAC,CAAC,CAAC;IACrE;IACA,OAAOd,GAAG,GAAG,GAAG,GAAGS,MAAM,CAACK,QAAQ,CAAC,CAAC;EACxC;EACAV,WAAWA,CAACF,GAAG,EAAE;IACb,IAAI,IAAI,CAACxC,qBAAqB,CAAC,CAAC,EAAE;MAC9B1B,MAAM,CAAC+E,OAAO,CAACC,UAAU,CAACC,aAAa,IAAI;QACvC,IAAI,CAAC3D,MAAM,CAAC4D,KAAK,CAAC,gCAAgC,EAAED,aAAa,CAAC;QAClE,IAAIA,aAAa,CAACE,IAAI,KAAK,QAAQ,EAAE;UACjCnF,MAAM,CAAC+E,OAAO,CAACK,MAAM,CAAC;YAAElB;UAAI,CAAC,EAAEmB,SAAS,IAAI;YACxCrF,MAAM,CAACG,IAAI,CAACmF,KAAK,CAAC;cACdC,QAAQ,EAAEF,SAAS,EAAEnD,EAAE;cACvBoB,MAAM,EAAE;YACZ,CAAC,EAAEnD,IAAI,IAAI;cACP,IAAI,CAACM,WAAW,GAAG;gBAAEuB,IAAI,EAAE,KAAK;gBAAEC,GAAG,EAAE9B,IAAI,CAAC,CAAC;cAAE,CAAC;cAChD,IAAI,CAACqF,mBAAmB,CAACrF,IAAI,CAAC,CAAC,CAAC,CAAC+B,EAAE,CAAC;YACxC,CAAC,CAAC;UACN,CAAC,CAAC;QACN,CAAC,MACI;UACDlC,MAAM,CAACG,IAAI,CAACmF,KAAK,CAAC;YACdL,aAAa,EAAE,IAAI;YACnB3B,MAAM,EAAE;UACZ,CAAC,EAAEnD,IAAI,IAAI;YACP,IAAI,CAACkB,cAAc,GAAGlB,IAAI,CAAC,CAAC,CAAC,CAAC+B,EAAE;YAChClC,MAAM,CAACG,IAAI,CAACiF,MAAM,CAAC;cACflB,GAAG;cACHuB,KAAK,EAAEtF,IAAI,CAAC,CAAC,CAAC,CAACsF,KAAK,GAAG;YAC3B,CAAC,EAAExD,GAAG,IAAI;cACN,IAAI,CAACxB,WAAW,GAAG;gBAAEuB,IAAI,EAAE,KAAK;gBAAEC;cAAI,CAAC;cACvC,IAAI,CAACuD,mBAAmB,CAACvD,GAAG,CAACC,EAAE,CAAC;YACpC,CAAC,CAAC;UACN,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACN,CAAC,MACI;MACD,MAAMwD,YAAY,GAAGnD,MAAM,CAACmB,IAAI,CAACQ,GAAG,EAAE,OAAO,CAAC;MAC9C,IAAI,CAACwB,YAAY,EACb;MACJ,IAAI,CAACjF,WAAW,GAAG;QAAEuB,IAAI,EAAE,QAAQ;QAAEO,MAAM,EAAEmD;MAAa,CAAC;IAC/D;IACA,IAAI,CAAC,IAAI,CAAC7E,OAAO,CAAC8E,WAAW,EAAE;MAC3B,IAAI,CAAC9E,OAAO,CAAC+E,OAAO,CAAC,CAAC;IAC1B;EACJ;EACAJ,mBAAmB,GAAI5F,KAAK,IAAK;IAC7BI,MAAM,CAAC6F,WAAW,CAACC,MAAM,CAACD,WAAW,IAAI;MACrC,IAAIA,WAAW,CAACA,WAAW,EAAEE,QAAQ,CAAC,WAAW,CAAC,EAAE;QAChD,CAAC,CAAC,EAAExG,OAAO,CAACyG,cAAc,EAAE,MAAMhG,MAAM,CAACiG,SAAS,CAC7CC,aAAa,CAAC;UACfC,MAAM,EAAE;YAAEvG;UAAM,CAAC;UACjBwG,IAAI,EAAEA,CAAA,KAAM,CACZ;QACJ,CAAC,CAAC,CACGC,IAAI,CAAC,MAAM;UACZ,IAAI,CAAC/E,MAAM,CAAC4D,KAAK,CAAC,yBAAyB,CAAC;QAChD,CAAC,CAAC,CACGoB,KAAK,CAACC,KAAK,IAAI;UAChB,IAAI,CAACjF,MAAM,CAACiF,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;UAC1D,MAAMA,KAAK;QACf,CAAC,CAAC,EAAE;UAAEC,QAAQ,EAAE,IAAIC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;YAAE/C,OAAO,EAAE;UAAI,CAAC;QAAE,CAAC,CAAC;MAC1D,CAAC,MACI,CACL;IACJ,CAAC,CAAC;EACN,CAAC;EACDZ,iBAAiBA,CAAC4D,OAAO,EAAE;IACvB,IAAIA,OAAO,CAACxB,IAAI,KAAK9F,QAAQ,CAAC4E,KAAK,CAAC2C,SAAS,EAAE;MAC3C,IAAI,CAAC/F,OAAO,CAACoC,IAAI,CAAC,CAAC;IACvB,CAAC,MACI,IAAI0D,OAAO,CAACxB,IAAI,KAAK9F,QAAQ,CAAC4E,KAAK,CAACtB,MAAM,EAAE;MAC7C,IAAI,CAACE,aAAa,CAAC8D,OAAO,CAAC;MAC3B,IAAI,CAAC9F,OAAO,CAACgG,WAAW,CAAC;QACrB1B,IAAI,EAAE9F,QAAQ,CAAC4E,KAAK,CAAC6C,IAAI;QACzBC,OAAO,EAAE;UACLrG,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBsG,OAAO,EAAE;QACb;MACJ,CAAC,CAAC;IACN,CAAC,MACI,IAAIL,OAAO,CAACxB,IAAI,KAAK9F,QAAQ,CAAC4E,KAAK,CAACgD,WAAW,EAAE;MAClD,IAAI,CAACpG,OAAO,CAACgG,WAAW,CAAC;QACrB1B,IAAI,EAAE9F,QAAQ,CAAC4E,KAAK,CAACiD,SAAS;QAC9BH,OAAO,EAAE;UAAErG,QAAQ,EAAE,IAAI,CAACA;QAAS;MACvC,CAAC,CAAC;MACF,IAAI,CAACK,gBAAgB,EAAEjB,OAAO,CAAC,CAAC;IACpC,CAAC,MACI,IAAI6G,OAAO,CAACxB,IAAI,KAAK9F,QAAQ,CAAC4E,KAAK,CAACkD,MAAM,EAAE;MAC7C,IAAI,CAAC7C,UAAU,CAAC,CAAC;IACrB,CAAC,MACI,IAAIqC,OAAO,CAACxB,IAAI,KAAK9F,QAAQ,CAAC4E,KAAK,CAACmD,qBAAqB,EAAE;MAC5D,MAAM;QAAEC;MAAqB,CAAC,GAAGV,OAAO,CAACI,OAAO;MAChD,IAAIM,oBAAoB,KAAKjI,SAAS,CAACyF,sBAAsB,EAAE;QAC3DyC,OAAO,CAACC,IAAI,CAAC,6CAA6CnI,SAAS,CAACyF,sBAAsB,SAASwC,oBAAoB,EAAE,CAAC;MAC9H;IACJ,CAAC,MACI,IAAIV,OAAO,CAACa,KAAK,KAAKnI,QAAQ,CAACoI,YAAY,EAAE;MAC9C,IAAI,CAACC,IAAI,CAACrI,QAAQ,CAACoI,YAAY,EAAEd,OAAO,CAAC;IAC7C;EACJ;EACA3D,sBAAsBA,CAAC2E,IAAI,EAAE;IACzB,IAAIA,IAAI,CAACxC,IAAI,KAAK9F,QAAQ,CAAC4E,KAAK,CAAC2D,KAAK,IAClCD,IAAI,CAACxC,IAAI,KAAK9F,QAAQ,CAAC4E,KAAK,CAACtB,MAAM,IACnCgF,IAAI,CAACxC,IAAI,KAAK9F,QAAQ,CAAC4E,KAAK,CAAC2C,SAAS,EAAE;MACxC,IAAI,CAAC/D,aAAa,CAAC8E,IAAI,CAAC;IAC5B,CAAC,MACI,IAAIA,IAAI,CAACxC,IAAI,KAAK9F,QAAQ,CAAC4E,KAAK,CAAC4D,yBAAyB,EAAE;MAC7D7H,MAAM,CAACG,IAAI,CAACmF,KAAK,CAAC;QACdL,aAAa,EAAE,IAAI;QACnB3B,MAAM,EAAE;MACZ,CAAC,EAAEnD,IAAI,IAAI;QACPH,MAAM,CAACG,IAAI,CAACiF,MAAM,CAAC;UACflB,GAAG,EAAE,6BAA6B;UAClCuB,KAAK,EAAEtF,IAAI,CAAC,CAAC,CAAC,CAACsF,KAAK,GAAG;QAC3B,CAAC,EAAEqC,IAAI,IAAI,CACX,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,MACI,IAAIH,IAAI,CAACxC,IAAI,KAAK9F,QAAQ,CAAC4E,KAAK,CAAC8D,YAAY,EAAE;MAChD,IAAI,CAAC3E,KAAK,CAAC,CAAC;IAChB;EACJ;EACAP,aAAaA,CAAC8E,IAAI,EAAE;IAChB,IAAIA,IAAI,CAACxC,IAAI,KAAK9F,QAAQ,CAACqD,MAAM,CAACC,MAAM,EAAE;MACtC,IAAI,CAAC3B,sBAAsB,EAAElB,OAAO,CAAC6H,IAAI,CAACZ,OAAO,CAAC;IACtD,CAAC,MACI,IAAIY,IAAI,CAACxC,IAAI,KAAK9F,QAAQ,CAAC4E,KAAK,CAAC2C,SAAS,EAAE;MAC7C,IAAI,IAAI,CAACzF,WAAW,EAChB6G,YAAY,CAAC,IAAI,CAAC7G,WAAW,CAAC;IACtC,CAAC,MACI,IAAIwG,IAAI,CAACxC,IAAI,KAAK9F,QAAQ,CAAC4E,KAAK,CAAC2D,KAAK,IAAI,IAAI,CAACnH,WAAW,EAAE;MAC7D,MAAMwH,YAAY,GAAGN,IAAI,CAACZ,OAAO,IAAI,OAAOY,IAAI,CAACZ,OAAO,CAACR,KAAK,KAAK,QAAQ,GAAGoB,IAAI,CAACZ,OAAO,CAACR,KAAK,GAAG,IAAI;MACvG,IAAI,CAACmB,IAAI,CAACrI,QAAQ,CAAC4E,KAAK,CAACkD,MAAM,EAAEc,YAAY,GAAG,gBAAgBA,YAAY,EAAE,GAAG,IAAI,CAAC;MACtF,IAAI,CAAC7E,KAAK,CAAC,CAAC;IAChB,CAAC,MACI,IAAIuE,IAAI,CAACxC,IAAI,KAAK9F,QAAQ,CAAC4E,KAAK,CAACtB,MAAM,EAAE;MAC1C,IAAI,IAAI,CAACxB,WAAW,EAChB6G,YAAY,CAAC,IAAI,CAAC7G,WAAW,CAAC;MAClC,IAAI,IAAI,CAACF,YAAY,EAAE;QACnB,IAAI,CAACA,YAAY,CAACnB,OAAO,CAAC,CAAC;QAC3B,IAAI,CAACmB,YAAY,GAAG6C,SAAS;MACjC;MACA,IAAI,CAAC9C,sBAAsB,EAAEkH,OAAO,CAAC7B,IAAI,CAACU,OAAO,IAAI;QACjD,IAAI,CAAClG,OAAO,CAACgG,WAAW,CAAC;UACrB1B,IAAI,EAAE9F,QAAQ,CAAC4E,KAAK,CAAC6C,IAAI;UACzBC,OAAO,EAAE;YACL,GAAGA,OAAO;YACVrG,QAAQ,EAAE,IAAI,CAACA;UACnB;QACJ,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,MACI,IAAIiH,IAAI,CAACxC,IAAI,KAAK9F,QAAQ,CAAC4E,KAAK,CAACkE,oBAAoB,EAAE;MACxDH,YAAY,CAAC,IAAI,CAAC9G,cAAc,CAAC;MACjC,IAAI,IAAI,CAACD,YAAY,EAAE;QACnB,IAAI,CAACuC,KAAK,CAAC,CAAC;MAChB;MACA,IAAI,CAACO,MAAM,CAAC,CAAC;IACjB,CAAC,MACI,IAAI4D,IAAI,CAACxC,IAAI,KAAK9F,QAAQ,CAAC+I,EAAE,CAACC,eAAe,EAAE;MAChD,IAAI,CAACjF,KAAK,CAAC,KAAK,CAAC;IACrB;EACJ;EACAA,KAAKA,CAACG,KAAK,GAAG,IAAI,EAAE;IAChB,IAAI,CAAC3C,MAAM,GAAG,KAAK;IACnB,IAAI,CAACK,YAAY,GAAG6C,SAAS;IAC7B,IAAI,CAAC/C,gBAAgB,GAAG,CAAC,CAAC,EAAExB,OAAO,CAACkD,cAAc,EAAE,CAAC;IACrD,IAAI,IAAI,CAAC5B,OAAO,EAAE;MACd,IAAI,CAACA,OAAO,CAACyH,UAAU,CAAC,CAAC;IAC7B;IACA,IAAI,IAAI,CAACpH,cAAc,EAAE;MACrB8G,YAAY,CAAC,IAAI,CAAC9G,cAAc,CAAC;MACjC,IAAI,CAACA,cAAc,GAAG4C,SAAS;IACnC;IACA,IAAI,IAAI,CAAC3C,WAAW,EAAE;MAClB6G,YAAY,CAAC,IAAI,CAAC7G,WAAW,CAAC;MAC9B,IAAI,CAACA,WAAW,GAAG2C,SAAS;IAChC;IACA,IAAI,IAAI,CAAC1C,aAAa,EAAE;MACpBmH,aAAa,CAAC,IAAI,CAACnH,aAAa,CAAC;MACjC,IAAI,CAACA,aAAa,GAAG0C,SAAS;IAClC;IACA,IAAIP,KAAK,IAAI,IAAI,CAAClC,cAAc,EAAE;MAC9BrB,MAAM,CAACG,IAAI,CAACkD,MAAM,CAAC,IAAI,CAAChC,cAAc,EAAE;QAAEiC,MAAM,EAAE;MAAK,CAAC,CAAC;MACzD,IAAI,CAACjC,cAAc,GAAG,CAAC;IAC3B;EACJ;EACAmC,KAAKA,CAAA,EAAG;IACJ,IAAI,CAAC,IAAI,CAAC/C,WAAW,EACjB;IACJ,IAAI,CAACa,MAAM,CAAC4D,KAAK,CAAC,eAAe,CAAC;IAClC,IAAI,IAAI,CAACzE,WAAW,CAACuB,IAAI,KAAK,KAAK,EAAE;MACjC,IAAIwG,EAAE,GAAGxI,MAAM,CAACC,OAAO,CAACC,SAAS;MACjC,IAAI,IAAI,CAACO,WAAW,CAACwB,GAAG,CAACC,EAAE,EAAE;QACzBlC,MAAM,CAACG,IAAI,CAACsI,MAAM,CAAC,IAAI,CAAChI,WAAW,CAACwB,GAAG,CAACC,EAAE,EAAE,MAAM;UAC9CsG,EAAE,GAAGxI,MAAM,CAACC,OAAO,CAACC,SAAS;UAC7B,IAAIsI,EAAE,EAAE;YACJ,IAAI,CAAClH,MAAM,CAACiF,KAAK,CAAC,mBAAmB,EAAEiC,EAAE,CAAC;UAC9C;QACJ,CAAC,CAAC;MACN;IACJ,CAAC,MACI,IAAI,IAAI,CAAC/H,WAAW,CAACuB,IAAI,KAAK,QAAQ,EAAE;MACzC,IAAI,CAACvB,WAAW,CAAC8B,MAAM,CAACiB,KAAK,CAAC,CAAC;IACnC;IACA,IAAI,CAAC/C,WAAW,GAAGqD,SAAS;IAC5B,IAAI,IAAI,CAACpD,QAAQ,EAAE0B,cAAc,EAAE;MAC/B,IAAI,CAACvB,OAAO,CAACuC,KAAK,CAAC,CAAC;IACxB;EACJ;EACA,MAAMyD,WAAWA,CAACF,OAAO,EAAE;IACvB,IAAI,CAAC,IAAI,CAAClG,WAAW,IAAIkG,OAAO,CAACxB,IAAI,KAAK9F,QAAQ,CAAC+I,EAAE,CAACM,iBAAiB,IAAI,IAAI,CAACvH,WAAW,EAAE;MACzF,IAAI,CAACiC,KAAK,CAAC,CAAC;MACZ,CAAC,CAAC,EAAE5D,kBAAkB,CAACgF,gBAAgB,EAAE,IAAI,CAACd,IAAI,CAACZ,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM;QACjE,IAAI,CAACwB,UAAU,CAAC,CAAC;MACrB,CAAC,CAAC;MACF;IACJ;IACA,IAAI,IAAI,CAACrD,YAAY,EAAE;MACnB,MAAM,IAAI,CAACA,YAAY,CAACiH,OAAO;IACnC;IACA,IAAI,IAAI,CAACzH,WAAW,EAAEuB,IAAI,KAAK,QAAQ,EAAE;MACrC,IAAI,CAACvB,WAAW,CAAC8B,MAAM,CAACsE,WAAW,CAACF,OAAO,EAAE,IAAI,CAAChG,MAAM,CAAC;IAC7D,CAAC,MACI,IAAI,IAAI,CAACF,WAAW,EAAEuB,IAAI,KAAK,KAAK,EAAE;MACvC,IAAI,CAACnB,OAAO,CAACgG,WAAW,CAACF,OAAO,CAAC;IACrC;EACJ;EACAjF,qBAAqBA,CAAA,EAAG;IACpB,OAAQ,IAAI,CAAChB,QAAQ,EAAEkD,GAAG,KAAK,cAAc,IACzC,OAAO5D,MAAM,KAAK,WAAW,IAC7B,OAAOA,MAAM,EAAEG,IAAI,KAAK,WAAW;EAC3C;EACAmE,UAAUA,CAAA,EAAG;IACT,IAAI,IAAI,CAAC5D,QAAQ,EAAE0B,cAAc,EAAE;MAC/B,IAAI,CAACvB,OAAO,CAAC8H,sBAAsB,CAAC;QAChCC,IAAI,EAAE,oBAAoB;QAC1BrC,KAAK,EAAElH,QAAQ,CAAC4E,KAAK,CAACkD;MAC1B,CAAC,CAAC;IACN;IACA,IAAI,CAACO,IAAI,CAACrI,QAAQ,CAAC4E,KAAK,CAACkD,MAAM,CAAC;EACpC;AACJ;AACAtI,OAAO,CAACE,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}