{"ast":null,"code":"function wrapToPromise(value) {\n  if (!value || typeof value.then !== \"function\") {\n    return Promise.resolve(value);\n  }\n  return value;\n}\nfunction asyncCall(function_, ...arguments_) {\n  try {\n    return wrapToPromise(function_(...arguments_));\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\nfunction isPrimitive(value) {\n  const type = typeof value;\n  return value === null || type !== \"object\" && type !== \"function\";\n}\nfunction isPureObject(value) {\n  const proto = Object.getPrototypeOf(value);\n  return !proto || proto.isPrototypeOf(Object);\n}\nfunction stringify(value) {\n  if (isPrimitive(value)) {\n    return String(value);\n  }\n  if (isPureObject(value) || Array.isArray(value)) {\n    return JSON.stringify(value);\n  }\n  if (typeof value.toJSON === \"function\") {\n    return stringify(value.toJSON());\n  }\n  throw new Error(\"[unstorage] Cannot stringify value!\");\n}\nconst BASE64_PREFIX = \"base64:\";\nfunction serializeRaw(value) {\n  if (typeof value === \"string\") {\n    return value;\n  }\n  return BASE64_PREFIX + base64Encode(value);\n}\nfunction deserializeRaw(value) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  if (!value.startsWith(BASE64_PREFIX)) {\n    return value;\n  }\n  return base64Decode(value.slice(BASE64_PREFIX.length));\n}\nfunction base64Decode(input) {\n  if (globalThis.Buffer) {\n    return Buffer.from(input, \"base64\");\n  }\n  return Uint8Array.from(globalThis.atob(input), c => c.codePointAt(0));\n}\nfunction base64Encode(input) {\n  if (globalThis.Buffer) {\n    return Buffer.from(input).toString(\"base64\");\n  }\n  return globalThis.btoa(String.fromCodePoint(...input));\n}\nconst storageKeyProperties = [\"has\", \"hasItem\", \"get\", \"getItem\", \"getItemRaw\", \"set\", \"setItem\", \"setItemRaw\", \"del\", \"remove\", \"removeItem\", \"getMeta\", \"setMeta\", \"removeMeta\", \"getKeys\", \"clear\", \"mount\", \"unmount\"];\nfunction prefixStorage(storage, base) {\n  base = normalizeBaseKey(base);\n  if (!base) {\n    return storage;\n  }\n  const nsStorage = {\n    ...storage\n  };\n  for (const property of storageKeyProperties) {\n    nsStorage[property] = (key = \"\", ...args) =>\n    // @ts-ignore\n    storage[property](base + key, ...args);\n  }\n  nsStorage.getKeys = (key = \"\", ...arguments_) => storage.getKeys(base + key, ...arguments_).then(keys => keys.map(key2 => key2.slice(base.length)));\n  nsStorage.getItems = async (items, commonOptions) => {\n    const prefixedItems = items.map(item => typeof item === \"string\" ? base + item : {\n      ...item,\n      key: base + item.key\n    });\n    const results = await storage.getItems(prefixedItems, commonOptions);\n    return results.map(entry => ({\n      key: entry.key.slice(base.length),\n      value: entry.value\n    }));\n  };\n  nsStorage.setItems = async (items, commonOptions) => {\n    const prefixedItems = items.map(item => ({\n      key: base + item.key,\n      value: item.value,\n      options: item.options\n    }));\n    return storage.setItems(prefixedItems, commonOptions);\n  };\n  return nsStorage;\n}\nfunction normalizeKey(key) {\n  if (!key) {\n    return \"\";\n  }\n  return key.split(\"?\")[0]?.replace(/[/\\\\]/g, \":\").replace(/:+/g, \":\").replace(/^:|:$/g, \"\") || \"\";\n}\nfunction joinKeys(...keys) {\n  return normalizeKey(keys.join(\":\"));\n}\nfunction normalizeBaseKey(base) {\n  base = normalizeKey(base);\n  return base ? base + \":\" : \"\";\n}\nfunction filterKeyByDepth(key, depth) {\n  if (depth === void 0) {\n    return true;\n  }\n  let substrCount = 0;\n  let index = key.indexOf(\":\");\n  while (index > -1) {\n    substrCount++;\n    index = key.indexOf(\":\", index + 1);\n  }\n  return substrCount <= depth;\n}\nfunction filterKeyByBase(key, base) {\n  if (base) {\n    return key.startsWith(base) && key[key.length - 1] !== \"$\";\n  }\n  return key[key.length - 1] !== \"$\";\n}\nexport { normalizeKey as a, asyncCall as b, filterKeyByBase as c, stringify as d, deserializeRaw as e, filterKeyByDepth as f, joinKeys as j, normalizeBaseKey as n, prefixStorage as p, serializeRaw as s };","map":{"version":3,"names":["wrapToPromise","value","then","Promise","resolve","asyncCall","function_","arguments_","error","reject","isPrimitive","type","isPureObject","proto","Object","getPrototypeOf","isPrototypeOf","stringify","String","Array","isArray","JSON","toJSON","Error","BASE64_PREFIX","serializeRaw","base64Encode","deserializeRaw","startsWith","base64Decode","slice","length","input","globalThis","Buffer","from","Uint8Array","atob","c","codePointAt","toString","btoa","fromCodePoint","storageKeyProperties","prefixStorage","storage","base","normalizeBaseKey","nsStorage","property","key","args","getKeys","keys","map","key2","getItems","items","commonOptions","prefixedItems","item","results","entry","setItems","options","normalizeKey","split","replace","joinKeys","join","filterKeyByDepth","depth","substrCount","index","indexOf","filterKeyByBase","a","b","d","e","f","j","n","p","s"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/unstorage/dist/shared/unstorage.CoCt7NXC.mjs"],"sourcesContent":["function wrapToPromise(value) {\n  if (!value || typeof value.then !== \"function\") {\n    return Promise.resolve(value);\n  }\n  return value;\n}\nfunction asyncCall(function_, ...arguments_) {\n  try {\n    return wrapToPromise(function_(...arguments_));\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\nfunction isPrimitive(value) {\n  const type = typeof value;\n  return value === null || type !== \"object\" && type !== \"function\";\n}\nfunction isPureObject(value) {\n  const proto = Object.getPrototypeOf(value);\n  return !proto || proto.isPrototypeOf(Object);\n}\nfunction stringify(value) {\n  if (isPrimitive(value)) {\n    return String(value);\n  }\n  if (isPureObject(value) || Array.isArray(value)) {\n    return JSON.stringify(value);\n  }\n  if (typeof value.toJSON === \"function\") {\n    return stringify(value.toJSON());\n  }\n  throw new Error(\"[unstorage] Cannot stringify value!\");\n}\nconst BASE64_PREFIX = \"base64:\";\nfunction serializeRaw(value) {\n  if (typeof value === \"string\") {\n    return value;\n  }\n  return BASE64_PREFIX + base64Encode(value);\n}\nfunction deserializeRaw(value) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  if (!value.startsWith(BASE64_PREFIX)) {\n    return value;\n  }\n  return base64Decode(value.slice(BASE64_PREFIX.length));\n}\nfunction base64Decode(input) {\n  if (globalThis.Buffer) {\n    return Buffer.from(input, \"base64\");\n  }\n  return Uint8Array.from(\n    globalThis.atob(input),\n    (c) => c.codePointAt(0)\n  );\n}\nfunction base64Encode(input) {\n  if (globalThis.Buffer) {\n    return Buffer.from(input).toString(\"base64\");\n  }\n  return globalThis.btoa(String.fromCodePoint(...input));\n}\n\nconst storageKeyProperties = [\n  \"has\",\n  \"hasItem\",\n  \"get\",\n  \"getItem\",\n  \"getItemRaw\",\n  \"set\",\n  \"setItem\",\n  \"setItemRaw\",\n  \"del\",\n  \"remove\",\n  \"removeItem\",\n  \"getMeta\",\n  \"setMeta\",\n  \"removeMeta\",\n  \"getKeys\",\n  \"clear\",\n  \"mount\",\n  \"unmount\"\n];\nfunction prefixStorage(storage, base) {\n  base = normalizeBaseKey(base);\n  if (!base) {\n    return storage;\n  }\n  const nsStorage = { ...storage };\n  for (const property of storageKeyProperties) {\n    nsStorage[property] = (key = \"\", ...args) => (\n      // @ts-ignore\n      storage[property](base + key, ...args)\n    );\n  }\n  nsStorage.getKeys = (key = \"\", ...arguments_) => storage.getKeys(base + key, ...arguments_).then((keys) => keys.map((key2) => key2.slice(base.length)));\n  nsStorage.getItems = async (items, commonOptions) => {\n    const prefixedItems = items.map(\n      (item) => typeof item === \"string\" ? base + item : { ...item, key: base + item.key }\n    );\n    const results = await storage.getItems(prefixedItems, commonOptions);\n    return results.map((entry) => ({\n      key: entry.key.slice(base.length),\n      value: entry.value\n    }));\n  };\n  nsStorage.setItems = async (items, commonOptions) => {\n    const prefixedItems = items.map((item) => ({\n      key: base + item.key,\n      value: item.value,\n      options: item.options\n    }));\n    return storage.setItems(prefixedItems, commonOptions);\n  };\n  return nsStorage;\n}\nfunction normalizeKey(key) {\n  if (!key) {\n    return \"\";\n  }\n  return key.split(\"?\")[0]?.replace(/[/\\\\]/g, \":\").replace(/:+/g, \":\").replace(/^:|:$/g, \"\") || \"\";\n}\nfunction joinKeys(...keys) {\n  return normalizeKey(keys.join(\":\"));\n}\nfunction normalizeBaseKey(base) {\n  base = normalizeKey(base);\n  return base ? base + \":\" : \"\";\n}\nfunction filterKeyByDepth(key, depth) {\n  if (depth === void 0) {\n    return true;\n  }\n  let substrCount = 0;\n  let index = key.indexOf(\":\");\n  while (index > -1) {\n    substrCount++;\n    index = key.indexOf(\":\", index + 1);\n  }\n  return substrCount <= depth;\n}\nfunction filterKeyByBase(key, base) {\n  if (base) {\n    return key.startsWith(base) && key[key.length - 1] !== \"$\";\n  }\n  return key[key.length - 1] !== \"$\";\n}\n\nexport { normalizeKey as a, asyncCall as b, filterKeyByBase as c, stringify as d, deserializeRaw as e, filterKeyByDepth as f, joinKeys as j, normalizeBaseKey as n, prefixStorage as p, serializeRaw as s };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}