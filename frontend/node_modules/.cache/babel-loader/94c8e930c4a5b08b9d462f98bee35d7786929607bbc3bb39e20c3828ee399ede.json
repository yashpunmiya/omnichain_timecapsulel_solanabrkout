{"ast":null,"code":"import { proxy } from 'valtio/vanilla';\nimport { subscribeKey as subKey } from 'valtio/vanilla/utils';\nimport { CoreHelperUtil } from '../utils/CoreHelperUtil.js';\n// -- Constants ----------------------------------------- //\nconst DEFAULT_STATE = Object.freeze({\n  message: '',\n  variant: 'success',\n  svg: undefined,\n  open: false,\n  autoClose: true\n});\n// -- State --------------------------------------------- //\nconst state = proxy({\n  ...DEFAULT_STATE\n});\n// -- Controller ---------------------------------------- //\nexport const SnackController = {\n  state,\n  subscribeKey(key, callback) {\n    return subKey(state, key, callback);\n  },\n  showLoading(message, options = {}) {\n    this._showMessage({\n      message,\n      variant: 'loading',\n      ...options\n    });\n  },\n  showSuccess(message) {\n    this._showMessage({\n      message,\n      variant: 'success'\n    });\n  },\n  showSvg(message, svg) {\n    this._showMessage({\n      message,\n      svg\n    });\n  },\n  showError(message) {\n    const errorMessage = CoreHelperUtil.parseError(message);\n    this._showMessage({\n      message: errorMessage,\n      variant: 'error'\n    });\n  },\n  hide() {\n    state.message = DEFAULT_STATE.message;\n    state.variant = DEFAULT_STATE.variant;\n    state.svg = DEFAULT_STATE.svg;\n    state.open = DEFAULT_STATE.open;\n    state.autoClose = DEFAULT_STATE.autoClose;\n  },\n  _showMessage({\n    message,\n    svg,\n    variant = 'success',\n    autoClose = DEFAULT_STATE.autoClose\n  }) {\n    if (state.open) {\n      state.open = false;\n      setTimeout(() => {\n        state.message = message;\n        state.variant = variant;\n        state.svg = svg;\n        state.open = true;\n        state.autoClose = autoClose;\n      }, 150);\n    } else {\n      state.message = message;\n      state.variant = variant;\n      state.svg = svg;\n      state.open = true;\n      state.autoClose = autoClose;\n    }\n  }\n};","map":{"version":3,"names":["proxy","subscribeKey","subKey","CoreHelperUtil","DEFAULT_STATE","Object","freeze","message","variant","svg","undefined","open","autoClose","state","SnackController","key","callback","showLoading","options","_showMessage","showSuccess","showSvg","showError","errorMessage","parseError","hide","setTimeout"],"sources":["../../../../src/controllers/SnackController.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,YAAY,IAAIC,MAAM,QAAQ,sBAAsB;AAE7D,SAASC,cAAc,QAAQ,4BAA4B;AAE3D;AACA,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAAuB;EACxDC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,SAAS;EAClBC,GAAG,EAAEC,SAAS;EACdC,IAAI,EAAE,KAAK;EACXC,SAAS,EAAE;CACZ,CAAC;AAmBF;AACA,MAAMC,KAAK,GAAGb,KAAK,CAAuB;EACxC,GAAGI;CACJ,CAAC;AAEF;AACA,OAAO,MAAMU,eAAe,GAAG;EAC7BD,KAAK;EAELZ,YAAYA,CAAqBc,GAAM,EAAEC,QAAkD;IACzF,OAAOd,MAAM,CAACW,KAAK,EAAEE,GAAG,EAAEC,QAAQ,CAAC;EACrC,CAAC;EAEDC,WAAWA,CAACV,OAAwC,EAAEW,OAAA,GAAsC,EAAE;IAC5F,IAAI,CAACC,YAAY,CAAC;MAAEZ,OAAO;MAAEC,OAAO,EAAE,SAAS;MAAE,GAAGU;IAAO,CAAE,CAAC;EAChE,CAAC;EAEDE,WAAWA,CAACb,OAAwC;IAClD,IAAI,CAACY,YAAY,CAAC;MAAEZ,OAAO;MAAEC,OAAO,EAAE;IAAS,CAAE,CAAC;EACpD,CAAC;EAEDa,OAAOA,CAACd,OAAwC,EAAEE,GAA6C;IAC7F,IAAI,CAACU,YAAY,CAAC;MAAEZ,OAAO;MAAEE;IAAG,CAAE,CAAC;EACrC,CAAC;EAEDa,SAASA,CAACf,OAAgB;IACxB,MAAMgB,YAAY,GAAGpB,cAAc,CAACqB,UAAU,CAACjB,OAAO,CAAC;IACvD,IAAI,CAACY,YAAY,CAAC;MAAEZ,OAAO,EAAEgB,YAAY;MAAEf,OAAO,EAAE;IAAO,CAAE,CAAC;EAChE,CAAC;EAEDiB,IAAIA,CAAA;IACFZ,KAAK,CAACN,OAAO,GAAGH,aAAa,CAACG,OAAO;IACrCM,KAAK,CAACL,OAAO,GAAGJ,aAAa,CAACI,OAAO;IACrCK,KAAK,CAACJ,GAAG,GAAGL,aAAa,CAACK,GAAG;IAC7BI,KAAK,CAACF,IAAI,GAAGP,aAAa,CAACO,IAAI;IAC/BE,KAAK,CAACD,SAAS,GAAGR,aAAa,CAACQ,SAAS;EAC3C,CAAC;EAEDO,YAAYA,CAAC;IACXZ,OAAO;IACPE,GAAG;IACHD,OAAO,GAAG,SAAS;IACnBI,SAAS,GAAGR,aAAa,CAACQ;EAAS,CACc;IACjD,IAAIC,KAAK,CAACF,IAAI,EAAE;MACdE,KAAK,CAACF,IAAI,GAAG,KAAK;MAClBe,UAAU,CAAC,MAAK;QACdb,KAAK,CAACN,OAAO,GAAGA,OAAO;QACvBM,KAAK,CAACL,OAAO,GAAGA,OAAO;QACvBK,KAAK,CAACJ,GAAG,GAAGA,GAAG;QACfI,KAAK,CAACF,IAAI,GAAG,IAAI;QACjBE,KAAK,CAACD,SAAS,GAAGA,SAAS;MAC7B,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,MAAM;MACLC,KAAK,CAACN,OAAO,GAAGA,OAAO;MACvBM,KAAK,CAACL,OAAO,GAAGA,OAAO;MACvBK,KAAK,CAACJ,GAAG,GAAGA,GAAG;MACfI,KAAK,CAACF,IAAI,GAAG,IAAI;MACjBE,KAAK,CAACD,SAAS,GAAGA,SAAS;IAC7B;EACF;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}