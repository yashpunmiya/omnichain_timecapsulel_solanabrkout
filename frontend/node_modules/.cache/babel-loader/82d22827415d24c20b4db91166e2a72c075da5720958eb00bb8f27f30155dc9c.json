{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = factory();\n  } else {\n    global.CBOR = factory();\n  }\n})(this, function () {\n  var CBOR = function () {\n    function BinaryHex(hex) {\n      this.$hex = hex;\n    }\n    BinaryHex.prototype = {\n      length: function () {\n        return this.$hex.length / 2;\n      },\n      toString: function (format) {\n        if (!format || format === 'hex' || format === 16) return this.$hex;\n        if (format === 'utf-8') {\n          var encoded = '';\n          for (var i = 0; i < this.$hex.length; i += 2) {\n            encoded += '%' + this.$hex.substring(i, i + 2);\n          }\n          return decodeURIComponent(encoded);\n        }\n        if (format === 'latin') {\n          var encoded = [];\n          for (var i = 0; i < this.$hex.length; i += 2) {\n            encoded.push(parseInt(this.$hex.substring(i, i + 2), 16));\n          }\n          return String.fromCharCode.apply(String, encoded);\n        }\n        throw new Error('Unrecognised format: ' + format);\n      }\n    };\n    BinaryHex.fromLatinString = function (latinString) {\n      var hex = '';\n      for (var i = 0; i < latinString.length; i++) {\n        var pair = latinString.charCodeAt(i).toString(16);\n        if (pair.length === 1) pair = \"0\" + pair;\n        hex += pair;\n      }\n      return new BinaryHex(hex);\n    };\n    BinaryHex.fromUtf8String = function (utf8String) {\n      var encoded = encodeURIComponent(utf8String);\n      var hex = '';\n      for (var i = 0; i < encoded.length; i++) {\n        if (encoded.charAt(i) === '%') {\n          hex += encoded.substring(i + 1, i + 3);\n          i += 2;\n        } else {\n          var hexPair = encoded.charCodeAt(i).toString(16);\n          if (hexPair.length < 2) hexPair = \"0\" + hexPair;\n          hex += hexPair;\n        }\n      }\n      return new BinaryHex(hex);\n    };\n    var semanticEncoders = [];\n    var semanticDecoders = {};\n    var notImplemented = function (label) {\n      return function () {\n        throw new Error(label + ' not implemented');\n      };\n    };\n    function Reader() {}\n    Reader.prototype = {\n      peekByte: notImplemented('peekByte'),\n      readByte: notImplemented('readByte'),\n      readChunk: notImplemented('readChunk'),\n      readFloat16: function () {\n        var half = this.readUint16();\n        var exponent = (half & 0x7fff) >> 10;\n        var mantissa = half & 0x3ff;\n        var negative = half & 0x8000;\n        if (exponent === 0x1f) {\n          if (mantissa === 0) {\n            return negative ? -Infinity : Infinity;\n          }\n          return NaN;\n        }\n        var magnitude = exponent ? Math.pow(2, exponent - 25) * (1024 + mantissa) : Math.pow(2, -24) * mantissa;\n        return negative ? -magnitude : magnitude;\n      },\n      readFloat32: function () {\n        var intValue = this.readUint32();\n        var exponent = (intValue & 0x7fffffff) >> 23;\n        var mantissa = intValue & 0x7fffff;\n        var negative = intValue & 0x80000000;\n        if (exponent === 0xff) {\n          if (mantissa === 0) {\n            return negative ? -Infinity : Infinity;\n          }\n          return NaN;\n        }\n        var magnitude = exponent ? Math.pow(2, exponent - 23 - 127) * (8388608 + mantissa) : Math.pow(2, -23 - 126) * mantissa;\n        return negative ? -magnitude : magnitude;\n      },\n      readFloat64: function () {\n        var int1 = this.readUint32(),\n          int2 = this.readUint32();\n        var exponent = int1 >> 20 & 0x7ff;\n        var mantissa = (int1 & 0xfffff) * 4294967296 + int2;\n        var negative = int1 & 0x80000000;\n        if (exponent === 0x7ff) {\n          if (mantissa === 0) {\n            return negative ? -Infinity : Infinity;\n          }\n          return NaN;\n        }\n        var magnitude = exponent ? Math.pow(2, exponent - 52 - 1023) * (4503599627370496 + mantissa) : Math.pow(2, -52 - 1022) * mantissa;\n        return negative ? -magnitude : magnitude;\n      },\n      readUint16: function () {\n        return this.readByte() * 256 + this.readByte();\n      },\n      readUint32: function () {\n        return this.readUint16() * 65536 + this.readUint16();\n      },\n      readUint64: function () {\n        return this.readUint32() * 4294967296 + this.readUint32();\n      }\n    };\n    function Writer() {}\n    Writer.prototype = {\n      writeByte: notImplemented('writeByte'),\n      result: notImplemented('result'),\n      writeFloat16: notImplemented('writeFloat16'),\n      writeFloat32: notImplemented('writeFloat32'),\n      writeFloat64: notImplemented('writeFloat64'),\n      writeUint16: function (value) {\n        this.writeByte(value >> 8 & 0xff);\n        this.writeByte(value & 0xff);\n      },\n      writeUint32: function (value) {\n        this.writeUint16(value >> 16 & 0xffff);\n        this.writeUint16(value & 0xffff);\n      },\n      writeUint64: function (value) {\n        if (value >= 9007199254740992 || value <= -9007199254740992) {\n          throw new Error('Cannot encode Uint64 of: ' + value + ' magnitude to big (floating point errors)');\n        }\n        this.writeUint32(Math.floor(value / 4294967296));\n        this.writeUint32(value % 4294967296);\n      },\n      writeString: notImplemented('writeString'),\n      canWriteBinary: function (chunk) {\n        return false;\n      },\n      writeBinary: notImplemented('writeChunk')\n    };\n    function readHeaderRaw(reader) {\n      var firstByte = reader.readByte();\n      var majorType = firstByte >> 5,\n        value = firstByte & 0x1f;\n      return {\n        type: majorType,\n        value: value\n      };\n    }\n    function valueFromHeader(header, reader) {\n      var value = header.value;\n      if (value < 24) {\n        return value;\n      } else if (value == 24) {\n        return reader.readByte();\n      } else if (value == 25) {\n        return reader.readUint16();\n      } else if (value == 26) {\n        return reader.readUint32();\n      } else if (value == 27) {\n        return reader.readUint64();\n      } else if (value == 31) {\n        // special value for non-terminating arrays/objects\n        return null;\n      }\n      notImplemented('Additional info: ' + value)();\n    }\n    function writeHeaderRaw(type, value, writer) {\n      writer.writeByte(type << 5 | value);\n    }\n    function writeHeader(type, value, writer) {\n      var firstByte = type << 5;\n      if (value < 24) {\n        writer.writeByte(firstByte | value);\n      } else if (value < 256) {\n        writer.writeByte(firstByte | 24);\n        writer.writeByte(value);\n      } else if (value < 65536) {\n        writer.writeByte(firstByte | 25);\n        writer.writeUint16(value);\n      } else if (value < 4294967296) {\n        writer.writeByte(firstByte | 26);\n        writer.writeUint32(value);\n      } else {\n        writer.writeByte(firstByte | 27);\n        writer.writeUint64(value);\n      }\n    }\n    var stopCode = new Error(); // Just a unique object, that won't compare strictly equal to anything else\n\n    function decodeReader(reader) {\n      var header = readHeaderRaw(reader);\n      switch (header.type) {\n        case 0:\n          return valueFromHeader(header, reader);\n        case 1:\n          return -1 - valueFromHeader(header, reader);\n        case 2:\n          return reader.readChunk(valueFromHeader(header, reader));\n        case 3:\n          var buffer = reader.readChunk(valueFromHeader(header, reader));\n          return buffer.toString('utf-8');\n        case 4:\n        case 5:\n          var arrayLength = valueFromHeader(header, reader);\n          var result = [];\n          if (arrayLength !== null) {\n            if (header.type === 5) {\n              arrayLength *= 2;\n            }\n            for (var i = 0; i < arrayLength; i++) {\n              result[i] = decodeReader(reader);\n            }\n          } else {\n            var item;\n            while ((item = decodeReader(reader)) !== stopCode) {\n              result.push(item);\n            }\n          }\n          if (header.type === 5) {\n            var objResult = {};\n            for (var i = 0; i < result.length; i += 2) {\n              objResult[result[i]] = result[i + 1];\n            }\n            return objResult;\n          } else {\n            return result;\n          }\n        case 6:\n          var tag = valueFromHeader(header, reader);\n          var decoder = semanticDecoders[tag];\n          var result = decodeReader(reader);\n          return decoder ? decoder(result) : result;\n        case 7:\n          if (header.value === 25) {\n            return reader.readFloat16();\n          } else if (header.value === 26) {\n            return reader.readFloat32();\n          } else if (header.value === 27) {\n            return reader.readFloat64();\n          }\n          switch (valueFromHeader(header, reader)) {\n            case 20:\n              return false;\n            case 21:\n              return true;\n            case 22:\n              return null;\n            case 23:\n              return undefined;\n            case null:\n              return stopCode;\n            default:\n              throw new Error('Unknown fixed value: ' + header.value);\n          }\n        default:\n          throw new Error('Unsupported header: ' + JSON.stringify(header));\n      }\n      throw new Error('not implemented yet');\n    }\n    function encodeWriter(data, writer) {\n      for (var i = 0; i < semanticEncoders.length; i++) {\n        var replacement = semanticEncoders[i].fn(data);\n        if (replacement !== undefined) {\n          writeHeader(6, semanticEncoders[i].tag, writer);\n          return encodeWriter(replacement, writer);\n        }\n      }\n      if (data && typeof data.toCBOR === 'function') {\n        data = data.toCBOR();\n      }\n      if (data === false) {\n        writeHeader(7, 20, writer);\n      } else if (data === true) {\n        writeHeader(7, 21, writer);\n      } else if (data === null) {\n        writeHeader(7, 22, writer);\n      } else if (data === undefined) {\n        writeHeader(7, 23, writer);\n      } else if (typeof data === 'number') {\n        if (Math.floor(data) === data && data < 9007199254740992 && data > -9007199254740992) {\n          // Integer\n          if (data < 0) {\n            writeHeader(1, -1 - data, writer);\n          } else {\n            writeHeader(0, data, writer);\n          }\n        } else {\n          writeHeaderRaw(7, 27, writer);\n          writer.writeFloat64(data);\n        }\n      } else if (typeof data === 'string') {\n        writer.writeString(data, function (length) {\n          writeHeader(3, length, writer);\n        });\n      } else if (writer.canWriteBinary(data)) {\n        writer.writeBinary(data, function (length) {\n          writeHeader(2, length, writer);\n        });\n      } else if (typeof data === 'object') {\n        if (api.config.useToJSON && typeof data.toJSON === 'function') {\n          data = data.toJSON();\n        }\n        if (Array.isArray(data)) {\n          writeHeader(4, data.length, writer);\n          for (var i = 0; i < data.length; i++) {\n            encodeWriter(data[i], writer);\n          }\n        } else {\n          var keys = Object.keys(data);\n          writeHeader(5, keys.length, writer);\n          for (var i = 0; i < keys.length; i++) {\n            encodeWriter(keys[i], writer);\n            encodeWriter(data[keys[i]], writer);\n          }\n        }\n      } else {\n        throw new Error('CBOR encoding not supported: ' + data);\n      }\n    }\n    var readerFunctions = [];\n    var writerFunctions = [];\n    var api = {\n      config: {\n        useToJSON: true\n      },\n      addWriter: function (format, writerFunction) {\n        if (typeof format === 'string') {\n          writerFunctions.push(function (f) {\n            if (format === f) return writerFunction(f);\n          });\n        } else {\n          writerFunctions.push(format);\n        }\n      },\n      addReader: function (format, readerFunction) {\n        if (typeof format === 'string') {\n          readerFunctions.push(function (data, f) {\n            if (format === f) return readerFunction(data, f);\n          });\n        } else {\n          readerFunctions.push(format);\n        }\n      },\n      encode: function (data, format) {\n        for (var i = 0; i < writerFunctions.length; i++) {\n          var func = writerFunctions[i];\n          var writer = func(format);\n          if (writer) {\n            encodeWriter(data, writer);\n            return writer.result();\n          }\n        }\n        throw new Error('Unsupported output format: ' + format);\n      },\n      decode: function (data, format) {\n        for (var i = 0; i < readerFunctions.length; i++) {\n          var func = readerFunctions[i];\n          var reader = func(data, format);\n          if (reader) {\n            return decodeReader(reader);\n          }\n        }\n        throw new Error('Unsupported input format: ' + format);\n      },\n      addSemanticEncode: function (tag, fn) {\n        if (typeof tag !== 'number' || tag % 1 !== 0 || tag < 0) {\n          throw new Error('Tag must be a positive integer');\n        }\n        semanticEncoders.push({\n          tag: tag,\n          fn: fn\n        });\n        return this;\n      },\n      addSemanticDecode: function (tag, fn) {\n        if (typeof tag !== 'number' || tag % 1 !== 0 || tag < 0) {\n          throw new Error('Tag must be a positive integer');\n        }\n        semanticDecoders[tag] = fn;\n        return this;\n      },\n      Reader: Reader,\n      Writer: Writer\n    };\n\n    /** Node.js Buffers **/\n    function BufferReader(buffer) {\n      this.buffer = buffer;\n      this.pos = 0;\n    }\n    BufferReader.prototype = Object.create(Reader.prototype);\n    BufferReader.prototype.peekByte = function () {\n      return this.buffer[this.pos];\n    };\n    BufferReader.prototype.readByte = function () {\n      return this.buffer[this.pos++];\n    };\n    BufferReader.prototype.readUint16 = function () {\n      var result = this.buffer.readUInt16BE(this.pos);\n      this.pos += 2;\n      return result;\n    };\n    BufferReader.prototype.readUint32 = function () {\n      var result = this.buffer.readUInt32BE(this.pos);\n      this.pos += 4;\n      return result;\n    };\n    BufferReader.prototype.readFloat32 = function () {\n      var result = this.buffer.readFloatBE(this.pos);\n      this.pos += 4;\n      return result;\n    };\n    BufferReader.prototype.readFloat64 = function () {\n      var result = this.buffer.readDoubleBE(this.pos);\n      this.pos += 8;\n      return result;\n    };\n    BufferReader.prototype.readChunk = function (length) {\n      var result = Buffer.alloc(length);\n      this.buffer.copy(result, 0, this.pos, this.pos += length);\n      return result;\n    };\n    function BufferWriter(stringFormat) {\n      this.byteLength = 0;\n      this.defaultBufferLength = 16384; // 16k\n      this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n      this.latestBufferOffset = 0;\n      this.completeBuffers = [];\n      this.stringFormat = stringFormat;\n    }\n    BufferWriter.prototype = Object.create(Writer.prototype);\n    BufferWriter.prototype.writeByte = function (value) {\n      this.latestBuffer[this.latestBufferOffset++] = value;\n      if (this.latestBufferOffset >= this.latestBuffer.length) {\n        this.completeBuffers.push(this.latestBuffer);\n        this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n        this.latestBufferOffset = 0;\n      }\n      this.byteLength++;\n    };\n    BufferWriter.prototype.writeFloat32 = function (value) {\n      var buffer = Buffer.alloc(4);\n      buffer.writeFloatBE(value, 0);\n      this.writeBuffer(buffer);\n    };\n    BufferWriter.prototype.writeFloat64 = function (value) {\n      var buffer = Buffer.alloc(8);\n      buffer.writeDoubleBE(value, 0);\n      this.writeBuffer(buffer);\n    };\n    BufferWriter.prototype.writeString = function (string, lengthFunc) {\n      var buffer = Buffer.from(string, 'utf-8');\n      lengthFunc(buffer.length);\n      this.writeBuffer(buffer);\n    };\n    BufferWriter.prototype.canWriteBinary = function (data) {\n      return data instanceof Buffer;\n    };\n    BufferWriter.prototype.writeBinary = function (buffer, lengthFunc) {\n      lengthFunc(buffer.length);\n      this.writeBuffer(buffer);\n    };\n    BufferWriter.prototype.writeBuffer = function (chunk) {\n      if (!(chunk instanceof Buffer)) throw new TypeError('BufferWriter only accepts Buffers');\n      if (!this.latestBufferOffset) {\n        this.completeBuffers.push(chunk);\n      } else if (this.latestBuffer.length - this.latestBufferOffset >= chunk.length) {\n        chunk.copy(this.latestBuffer, this.latestBufferOffset);\n        this.latestBufferOffset += chunk.length;\n        if (this.latestBufferOffset >= this.latestBuffer.length) {\n          this.completeBuffers.push(this.latestBuffer);\n          this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n          this.latestBufferOffset = 0;\n        }\n      } else {\n        this.completeBuffers.push(this.latestBuffer.slice(0, this.latestBufferOffset));\n        this.completeBuffers.push(chunk);\n        this.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n        this.latestBufferOffset = 0;\n      }\n      this.byteLength += chunk.length;\n    };\n    BufferWriter.prototype.result = function () {\n      // Copies them all into a single Buffer\n      var result = Buffer.alloc(this.byteLength);\n      var offset = 0;\n      for (var i = 0; i < this.completeBuffers.length; i++) {\n        var buffer = this.completeBuffers[i];\n        buffer.copy(result, offset, 0, buffer.length);\n        offset += buffer.length;\n      }\n      if (this.latestBufferOffset) {\n        this.latestBuffer.copy(result, offset, 0, this.latestBufferOffset);\n      }\n      if (this.stringFormat) return result.toString(this.stringFormat);\n      return result;\n    };\n    if (typeof Buffer === 'function') {\n      api.addReader(function (data, format) {\n        if (data instanceof Buffer) {\n          return new BufferReader(data);\n        }\n        if (format === 'hex' || format === 'base64') {\n          var buffer = Buffer.from(data, format);\n          return new BufferReader(buffer);\n        }\n      });\n      api.addWriter(function (format) {\n        if (!format || format === 'buffer') {\n          return new BufferWriter();\n        } else if (format === 'hex' || format === 'base64') {\n          return new BufferWriter(format);\n        }\n      });\n    }\n\n    /** Hex-encoding (and Latin1) for browser **/\n    function HexReader(hex) {\n      this.hex = hex;\n      this.pos = 0;\n    }\n    HexReader.prototype = Object.create(Reader.prototype);\n    HexReader.prototype.peekByte = function () {\n      var pair = this.hex.substring(this.pos, 2);\n      return parseInt(pair, 16);\n    };\n    HexReader.prototype.readByte = function () {\n      var pair = this.hex.substring(this.pos, this.pos + 2);\n      this.pos += 2;\n      return parseInt(pair, 16);\n    };\n    HexReader.prototype.readChunk = function (length) {\n      var hex = this.hex.substring(this.pos, this.pos + length * 2);\n      this.pos += length * 2;\n      if (typeof Buffer === 'function') return Buffer.from(hex, 'hex');\n      return new BinaryHex(hex);\n    };\n    function HexWriter(finalFormat) {\n      this.$hex = '';\n      this.finalFormat = finalFormat || 'hex';\n    }\n    HexWriter.prototype = Object.create(Writer.prototype);\n    HexWriter.prototype.writeByte = function (value) {\n      if (value < 0 || value > 255) throw new Error('Byte value out of range: ' + value);\n      var hex = value.toString(16);\n      if (hex.length == 1) {\n        hex = '0' + hex;\n      }\n      this.$hex += hex;\n    };\n    HexWriter.prototype.canWriteBinary = function (chunk) {\n      return chunk instanceof BinaryHex || typeof Buffer === 'function' && chunk instanceof Buffer;\n    };\n    HexWriter.prototype.writeBinary = function (chunk, lengthFunction) {\n      if (chunk instanceof BinaryHex) {\n        lengthFunction(chunk.length());\n        this.$hex += chunk.$hex;\n      } else if (typeof Buffer === 'function' && chunk instanceof Buffer) {\n        lengthFunction(chunk.length);\n        this.$hex += chunk.toString('hex');\n      } else {\n        throw new TypeError('HexWriter only accepts BinaryHex or Buffers');\n      }\n    };\n    HexWriter.prototype.result = function () {\n      if (this.finalFormat === 'buffer' && typeof Buffer === 'function') {\n        return Buffer.from(this.$hex, 'hex');\n      }\n      return new BinaryHex(this.$hex).toString(this.finalFormat);\n    };\n    HexWriter.prototype.writeString = function (string, lengthFunction) {\n      var buffer = BinaryHex.fromUtf8String(string);\n      lengthFunction(buffer.length());\n      this.$hex += buffer.$hex;\n    };\n    api.addReader(function (data, format) {\n      if (data instanceof BinaryHex || data.$hex) {\n        return new HexReader(data.$hex);\n      }\n      if (format === 'hex') {\n        return new HexReader(data);\n      }\n    });\n    api.addWriter(function (format) {\n      if (format === 'hex') {\n        return new HexWriter();\n      }\n    });\n    return api;\n  }();\n  CBOR.addSemanticEncode(0, function (data) {\n    if (data instanceof Date) {\n      return data.toISOString();\n    }\n  }).addSemanticDecode(0, function (isoString) {\n    return new Date(isoString);\n  }).addSemanticDecode(1, function (isoString) {\n    return new Date(isoString);\n  });\n  return CBOR;\n});","map":{"version":3,"names":["global","factory","define","amd","module","exports","CBOR","BinaryHex","hex","$hex","prototype","length","toString","format","encoded","i","substring","decodeURIComponent","push","parseInt","String","fromCharCode","apply","Error","fromLatinString","latinString","pair","charCodeAt","fromUtf8String","utf8String","encodeURIComponent","charAt","hexPair","semanticEncoders","semanticDecoders","notImplemented","label","Reader","peekByte","readByte","readChunk","readFloat16","half","readUint16","exponent","mantissa","negative","Infinity","NaN","magnitude","Math","pow","readFloat32","intValue","readUint32","readFloat64","int1","int2","readUint64","Writer","writeByte","result","writeFloat16","writeFloat32","writeFloat64","writeUint16","value","writeUint32","writeUint64","floor","writeString","canWriteBinary","chunk","writeBinary","readHeaderRaw","reader","firstByte","majorType","type","valueFromHeader","header","writeHeaderRaw","writer","writeHeader","stopCode","decodeReader","buffer","arrayLength","item","objResult","tag","decoder","undefined","JSON","stringify","encodeWriter","data","replacement","fn","toCBOR","api","config","useToJSON","toJSON","Array","isArray","keys","Object","readerFunctions","writerFunctions","addWriter","writerFunction","f","addReader","readerFunction","encode","func","decode","addSemanticEncode","addSemanticDecode","BufferReader","pos","create","readUInt16BE","readUInt32BE","readFloatBE","readDoubleBE","Buffer","alloc","copy","BufferWriter","stringFormat","byteLength","defaultBufferLength","latestBuffer","latestBufferOffset","completeBuffers","writeFloatBE","writeBuffer","writeDoubleBE","string","lengthFunc","from","TypeError","slice","offset","HexReader","HexWriter","finalFormat","lengthFunction","Date","toISOString","isoString"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/cbor-sync/main.js"],"sourcesContent":["(function (global, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine([], factory);\n\t} else if (typeof module !== 'undefined' && module.exports){\n\t\tmodule.exports = factory();\n\t} else {\n\t\tglobal.CBOR = factory();\n\t}\n})(this, function () {\n\tvar CBOR = (function () {\n\t\tfunction BinaryHex(hex) {\n\t\t\tthis.$hex = hex;\n\t\t}\n\t\tBinaryHex.prototype = {\n\t\t\tlength: function () {\n\t\t\t\treturn this.$hex.length/2;\n\t\t\t},\n\t\t\ttoString: function (format) {\n\t\t\t\tif (!format || format === 'hex' || format === 16) return this.$hex;\n\t\t\t\tif (format === 'utf-8') {\n\t\t\t\t\tvar encoded = '';\n\t\t\t\t\tfor (var i = 0; i < this.$hex.length; i += 2) {\n\t\t\t\t\t\tencoded += '%' + this.$hex.substring(i, i + 2);\n\t\t\t\t\t}\n\t\t\t\t\treturn decodeURIComponent(encoded);\n\t\t\t\t}\n\t\t\t\tif (format === 'latin') {\n\t\t\t\t\tvar encoded = [];\n\t\t\t\t\tfor (var i = 0; i < this.$hex.length; i += 2) {\n\t\t\t\t\t\tencoded.push(parseInt(this.$hex.substring(i, i + 2), 16));\n\t\t\t\t\t}\n\t\t\t\t\treturn String.fromCharCode.apply(String, encoded);\n\t\t\t\t}\n\t\t\t\tthrow new Error('Unrecognised format: ' + format);\n\t\t\t}\n\t\t};\n\t\tBinaryHex.fromLatinString = function (latinString) {\n\t\t\tvar hex = '';\n\t\t\tfor (var i = 0; i < latinString.length; i++) {\n\t\t\t\tvar pair = latinString.charCodeAt(i).toString(16);\n\t\t\t\tif (pair.length === 1) pair = \"0\" + pair;\n\t\t\t\thex += pair;\n\t\t\t}\n\t\t\treturn new BinaryHex(hex);\n\t\t};\n\t\tBinaryHex.fromUtf8String = function (utf8String) {\n\t\t\tvar encoded = encodeURIComponent(utf8String);\n\t\t\tvar hex = '';\n\t\t\tfor (var i = 0; i < encoded.length; i++) {\n\t\t\t\tif (encoded.charAt(i) === '%') {\n\t\t\t\t\thex += encoded.substring(i + 1, i + 3);\n\t\t\t\t\ti += 2;\n\t\t\t\t} else {\n\t\t\t\t\tvar hexPair = encoded.charCodeAt(i).toString(16);\n\t\t\t\t\tif (hexPair.length < 2) hexPair = \"0\" + hexPair;\n\t\t\t\t\thex += hexPair;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn new BinaryHex(hex);\n\t\t};\n\n\t\tvar semanticEncoders = [];\n\t\tvar semanticDecoders = {};\n\t\n\t\tvar notImplemented = function (label) {\n\t\t\treturn function () {\n\t\t\t\tthrow new Error(label + ' not implemented');\n\t\t\t};\n\t\t};\n\t\n\t\tfunction Reader() {\n\t\t}\n\t\tReader.prototype = {\n\t\t\tpeekByte: notImplemented('peekByte'),\n\t\t\treadByte: notImplemented('readByte'),\n\t\t\treadChunk: notImplemented('readChunk'),\n\t\t\treadFloat16: function () {\n\t\t\t\tvar half = this.readUint16();\n\t\t\t\tvar exponent = (half&0x7fff) >> 10;\n\t\t\t\tvar mantissa = half&0x3ff;\n\t\t\t\tvar negative = half&0x8000;\n\t\t\t\tif (exponent === 0x1f) {\n\t\t\t\t\tif (mantissa === 0) {\n\t\t\t\t\t\treturn negative ? -Infinity : Infinity;\n\t\t\t\t\t}\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tvar magnitude = exponent ? Math.pow(2, exponent - 25)*(1024 + mantissa) : Math.pow(2, -24)*mantissa;\n\t\t\t\treturn negative ? -magnitude : magnitude;\n\t\t\t},\n\t\t\treadFloat32: function () {\n\t\t\t\tvar intValue = this.readUint32();\n\t\t\t\tvar exponent = (intValue&0x7fffffff) >> 23;\n\t\t\t\tvar mantissa = intValue&0x7fffff;\n\t\t\t\tvar negative = intValue&0x80000000;\n\t\t\t\tif (exponent === 0xff) {\n\t\t\t\t\tif (mantissa === 0) {\n\t\t\t\t\t\treturn negative ? -Infinity : Infinity;\n\t\t\t\t\t}\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tvar magnitude = exponent ? Math.pow(2, exponent - 23 - 127)*(8388608 + mantissa) : Math.pow(2, -23 - 126)*mantissa;\n\t\t\t\treturn negative ? -magnitude : magnitude;\n\t\t\t},\n\t\t\treadFloat64: function () {\n\t\t\t\tvar int1 = this.readUint32(), int2 = this.readUint32();\n\t\t\t\tvar exponent = (int1 >> 20)&0x7ff;\n\t\t\t\tvar mantissa = (int1&0xfffff)*4294967296 + int2;\n\t\t\t\tvar negative = int1&0x80000000;\n\t\t\t\tif (exponent === 0x7ff) {\n\t\t\t\t\tif (mantissa === 0) {\n\t\t\t\t\t\treturn negative ? -Infinity : Infinity;\n\t\t\t\t\t}\n\t\t\t\t\treturn NaN;\n\t\t\t\t}\n\t\t\t\tvar magnitude = exponent ? Math.pow(2, exponent - 52 - 1023)*(4503599627370496 + mantissa) : Math.pow(2, -52 - 1022)*mantissa;\n\t\t\t\treturn negative ? -magnitude : magnitude;\n\t\t\t},\n\t\t\treadUint16: function () {\n\t\t\t\treturn this.readByte()*256 + this.readByte();\n\t\t\t},\n\t\t\treadUint32: function () {\n\t\t\t\treturn this.readUint16()*65536 + this.readUint16();\n\t\t\t},\n\t\t\treadUint64: function () {\n\t\t\t\treturn this.readUint32()*4294967296 + this.readUint32();\n\t\t\t}\n\t\t};\n\t\tfunction Writer() {\n\t\t}\n\t\tWriter.prototype = {\n\t\t\twriteByte: notImplemented('writeByte'),\n\t\t\tresult: notImplemented('result'),\n\t\t\twriteFloat16: notImplemented('writeFloat16'),\n\t\t\twriteFloat32: notImplemented('writeFloat32'),\n\t\t\twriteFloat64: notImplemented('writeFloat64'),\n\t\t\twriteUint16: function (value) {\n\t\t\t\tthis.writeByte((value >> 8)&0xff);\n\t\t\t\tthis.writeByte(value&0xff);\n\t\t\t},\n\t\t\twriteUint32: function (value) {\n\t\t\t\tthis.writeUint16((value>>16)&0xffff);\n\t\t\t\tthis.writeUint16(value&0xffff);\n\t\t\t},\n\t\t\twriteUint64: function (value) {\n\t\t\t\tif (value >= 9007199254740992 || value <= -9007199254740992) {\n\t\t\t\t\tthrow new Error('Cannot encode Uint64 of: ' + value + ' magnitude to big (floating point errors)');\n\t\t\t\t}\n\t\t\t\tthis.writeUint32(Math.floor(value/4294967296));\n\t\t\t\tthis.writeUint32(value%4294967296);\n\t\t\t},\n\t\t\twriteString: notImplemented('writeString'),\n\t\t\tcanWriteBinary: function (chunk) {\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\twriteBinary: notImplemented('writeChunk')\n\t\t};\n\n\t\tfunction readHeaderRaw(reader) {\n\t\t\tvar firstByte = reader.readByte();\n\t\t\tvar majorType = firstByte >> 5, value = firstByte&0x1f;\n\t\t\treturn {type: majorType, value: value};\n\t\t}\n\t\n\t\tfunction valueFromHeader(header, reader) {\n\t\t\tvar value = header.value;\n\t\t\tif (value < 24) {\n\t\t\t\treturn value;\n\t\t\t} else if (value == 24) {\n\t\t\t\treturn reader.readByte();\n\t\t\t} else if (value == 25) {\n\t\t\t\treturn reader.readUint16();\n\t\t\t} else if (value == 26) {\n\t\t\t\treturn reader.readUint32();\n\t\t\t} else if (value == 27) {\n\t\t\t\treturn reader.readUint64();\n\t\t\t} else if (value == 31) {\n\t\t\t\t// special value for non-terminating arrays/objects\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tnotImplemented('Additional info: ' + value)();\n\t\t}\n\t\n\t\tfunction writeHeaderRaw(type, value, writer) {\n\t\t\twriter.writeByte((type<<5)|value);\n\t\t}\n\t\n\t\tfunction writeHeader(type, value, writer) {\n\t\t\tvar firstByte = type<<5;\n\t\t\tif (value < 24) {\n\t\t\t\twriter.writeByte(firstByte|value);\n\t\t\t} else if (value < 256) {\n\t\t\t\twriter.writeByte(firstByte|24);\n\t\t\t\twriter.writeByte(value);\n\t\t\t} else if (value < 65536) {\n\t\t\t\twriter.writeByte(firstByte|25);\n\t\t\t\twriter.writeUint16(value);\n\t\t\t} else if (value < 4294967296) {\n\t\t\t\twriter.writeByte(firstByte|26);\n\t\t\t\twriter.writeUint32(value);\n\t\t\t} else {\n\t\t\t\twriter.writeByte(firstByte|27);\n\t\t\t\twriter.writeUint64(value);\n\t\t\t}\n\t\t}\n\t\n\t\tvar stopCode = new Error(); // Just a unique object, that won't compare strictly equal to anything else\n\t\n\t\tfunction decodeReader(reader) {\n\t\t\tvar header = readHeaderRaw(reader);\n\t\t\tswitch (header.type) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn valueFromHeader(header, reader);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn -1 -valueFromHeader(header, reader);\n\t\t\t\tcase 2:\n\t\t\t\t\treturn reader.readChunk(valueFromHeader(header, reader));\n\t\t\t\tcase 3:\n\t\t\t\t\tvar buffer = reader.readChunk(valueFromHeader(header, reader));\n\t\t\t\t\treturn buffer.toString('utf-8');\n\t\t\t\tcase 4:\n\t\t\t\tcase 5:\n\t\t\t\t\tvar arrayLength = valueFromHeader(header, reader);\n\t\t\t\t\tvar result = [];\n\t\t\t\t\tif (arrayLength !== null) {\n\t\t\t\t\t\tif (header.type === 5) {\n\t\t\t\t\t\t\tarrayLength *= 2;\n\t\t\t\t\t\t} \n\t\t\t\t\t\tfor (var i = 0; i < arrayLength; i++) {\n\t\t\t\t\t\t\tresult[i] = decodeReader(reader);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar item;\n\t\t\t\t\t\twhile ((item = decodeReader(reader)) !== stopCode) {\n\t\t\t\t\t\t\tresult.push(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (header.type === 5) {\n\t\t\t\t\t\tvar objResult = {};\n\t\t\t\t\t\tfor (var i = 0; i < result.length; i += 2) {\n\t\t\t\t\t\t\tobjResult[result[i]] = result[i + 1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn objResult;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\tcase 6:\n\t\t\t\t\tvar tag = valueFromHeader(header, reader);\n\t\t\t\t\tvar decoder = semanticDecoders[tag];\n\t\t\t\t\tvar result = decodeReader(reader);\n\t\t\t\t\treturn decoder ? decoder(result) : result;\n\t\t\t\tcase 7:\n\t\t\t\t\tif (header.value === 25) {\n\t\t\t\t\t\treturn reader.readFloat16();\n\t\t\t\t\t} else if (header.value === 26) {\n\t\t\t\t\t\treturn reader.readFloat32();\n\t\t\t\t\t} else if (header.value === 27) {\n\t\t\t\t\t\treturn reader.readFloat64();\n\t\t\t\t\t}\n\t\t\t\t\tswitch (valueFromHeader(header, reader)) {\n\t\t\t\t\t\tcase 20:\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tcase 21:\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\tcase 22:\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\tcase 23:\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\tcase null:\n\t\t\t\t\t\t\treturn stopCode;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Unknown fixed value: ' + header.value);\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Unsupported header: ' + JSON.stringify(header));\n\t\t\t}\n\t\t\tthrow new Error('not implemented yet');\n\t\t}\n\t\n\t\tfunction encodeWriter(data, writer) {\n\t\t\tfor (var i = 0; i < semanticEncoders.length; i++) {\n\t\t\t\tvar replacement = semanticEncoders[i].fn(data);\n\t\t\t\tif (replacement !== undefined) {\n\t\t\t\t\twriteHeader(6, semanticEncoders[i].tag, writer);\n\t\t\t\t\treturn encodeWriter(replacement, writer);\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tif (data && typeof data.toCBOR === 'function') {\n\t\t\t\tdata = data.toCBOR();\n\t\t\t}\n\t\t\n\t\t\tif (data === false) {\n\t\t\t\twriteHeader(7, 20, writer);\n\t\t\t} else if (data === true) {\n\t\t\t\twriteHeader(7, 21, writer);\n\t\t\t} else if (data === null) {\n\t\t\t\twriteHeader(7, 22, writer);\n\t\t\t} else if (data === undefined) {\n\t\t\t\twriteHeader(7, 23, writer);\n\t\t\t} else if (typeof data === 'number') {\n\t\t\t\tif (Math.floor(data) === data && data < 9007199254740992 && data > -9007199254740992) {\n\t\t\t\t\t// Integer\n\t\t\t\t\tif (data < 0) {\n\t\t\t\t\t\twriteHeader(1, -1 - data, writer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriteHeader(0, data, writer);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twriteHeaderRaw(7, 27, writer);\n\t\t\t\t\twriter.writeFloat64(data);\n\t\t\t\t}\n\t\t\t} else if (typeof data === 'string') {\n\t\t\t\twriter.writeString(data, function (length) {\n\t\t\t\t\twriteHeader(3, length, writer);\n\t\t\t\t});\n\t\t\t} else if (writer.canWriteBinary(data)) {\n\t\t\t\twriter.writeBinary(data, function (length) {\n\t\t\t\t\twriteHeader(2, length, writer);\n\t\t\t\t});\n\t\t\t} else if (typeof data === 'object') {\n\t\t\t\tif (api.config.useToJSON && typeof data.toJSON === 'function') {\n\t\t\t   \t\tdata = data.toJSON();\n\t\t\t   \t}\n\t\t\t\tif (Array.isArray(data)) {\n\t\t\t\t\twriteHeader(4, data.length, writer);\n\t\t\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\t\t\tencodeWriter(data[i], writer);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar keys = Object.keys(data);\n\t\t\t\t\twriteHeader(5, keys.length, writer);\n\t\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\t\tencodeWriter(keys[i], writer);\n\t\t\t\t\t\tencodeWriter(data[keys[i]], writer);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error('CBOR encoding not supported: ' + data);\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar readerFunctions = [];\n\t\tvar writerFunctions = [];\n\t\n\t\tvar api = {\n\t\t\tconfig: {\n\t\t\t\tuseToJSON: true\n\t\t\t},\n\t\t\taddWriter: function (format, writerFunction) {\n\t\t\t\tif (typeof format === 'string') {\n\t\t\t\t\twriterFunctions.push(function (f) {\n\t\t\t\t\t\tif (format === f) return writerFunction(f);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twriterFunctions.push(format);\n\t\t\t\t}\n\t\t\t},\n\t\t\taddReader: function (format, readerFunction) {\n\t\t\t\tif (typeof format === 'string') {\n\t\t\t\t\treaderFunctions.push(function (data, f) {\n\t\t\t\t\t\tif (format === f) return readerFunction(data, f);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treaderFunctions.push(format);\n\t\t\t\t}\n\t\t\t},\n\t\t\tencode: function (data, format) {\n\t\t\t\tfor (var i = 0; i < writerFunctions.length; i++) {\n\t\t\t\t\tvar func = writerFunctions[i];\n\t\t\t\t\tvar writer = func(format);\n\t\t\t\t\tif (writer) {\n\t\t\t\t\t\tencodeWriter(data, writer);\n\t\t\t\t\t\treturn writer.result();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new Error('Unsupported output format: ' + format);\n\t\t\t},\n\t\t\tdecode: function (data, format) {\n\t\t\t\tfor (var i = 0; i < readerFunctions.length; i++) {\n\t\t\t\t\tvar func = readerFunctions[i];\n\t\t\t\t\tvar reader = func(data, format);\n\t\t\t\t\tif (reader) {\n\t\t\t\t\t\treturn decodeReader(reader);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new Error('Unsupported input format: ' + format);\n\t\t\t},\n\t\t\taddSemanticEncode: function (tag, fn) {\n\t\t\t\tif (typeof tag !== 'number' || tag%1 !== 0 || tag < 0) {\n\t\t\t\t\tthrow new Error('Tag must be a positive integer');\n\t\t\t\t}\n\t\t\t\tsemanticEncoders.push({tag: tag, fn: fn});\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\taddSemanticDecode: function (tag, fn) {\n\t\t\t\tif (typeof tag !== 'number' || tag%1 !== 0 || tag < 0) {\n\t\t\t\t\tthrow new Error('Tag must be a positive integer');\n\t\t\t\t}\n\t\t\t\tsemanticDecoders[tag] = fn;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tReader: Reader,\n\t\t\tWriter: Writer\n\t\t};\n\t\t\n\t\t/** Node.js Buffers **/\n\t\tfunction BufferReader(buffer) {\n\t\t\tthis.buffer = buffer;\n\t\t\tthis.pos = 0;\n\t\t}\n\t\tBufferReader.prototype = Object.create(Reader.prototype);\n\t\tBufferReader.prototype.peekByte = function () {\n\t\t\treturn this.buffer[this.pos];\n\t\t};\n\t\tBufferReader.prototype.readByte = function () {\n\t\t\treturn this.buffer[this.pos++];\n\t\t};\n\t\tBufferReader.prototype.readUint16 = function () {\n\t\t\tvar result = this.buffer.readUInt16BE(this.pos);\n\t\t\tthis.pos += 2;\n\t\t\treturn result;\n\t\t};\n\t\tBufferReader.prototype.readUint32 = function () {\n\t\t\tvar result = this.buffer.readUInt32BE(this.pos);\n\t\t\tthis.pos += 4;\n\t\t\treturn result;\n\t\t};\n\t\tBufferReader.prototype.readFloat32 = function () {\n\t\t\tvar result = this.buffer.readFloatBE(this.pos);\n\t\t\tthis.pos += 4;\n\t\t\treturn result;\n\t\t};\n\t\tBufferReader.prototype.readFloat64 = function () {\n\t\t\tvar result = this.buffer.readDoubleBE(this.pos);\n\t\t\tthis.pos += 8;\n\t\t\treturn result;\n\t\t};\n\t\tBufferReader.prototype.readChunk = function (length) {\n\t\t\tvar result = Buffer.alloc(length);\n\t\t\tthis.buffer.copy(result, 0, this.pos, this.pos += length);\n\t\t\treturn result;\n\t\t};\n\t\n\t\tfunction BufferWriter(stringFormat) {\n\t\t\tthis.byteLength = 0;\n\t\t\tthis.defaultBufferLength = 16384; // 16k\n\t\t\tthis.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n\t\t\tthis.latestBufferOffset = 0;\n\t\t\tthis.completeBuffers = [];\n\t\t\tthis.stringFormat = stringFormat;\n\t\t}\n\t\tBufferWriter.prototype = Object.create(Writer.prototype);\n\t\tBufferWriter.prototype.writeByte = function (value) {\n\t\t\tthis.latestBuffer[this.latestBufferOffset++] = value;\n\t\t\tif (this.latestBufferOffset >= this.latestBuffer.length) {\n\t\t\t\tthis.completeBuffers.push(this.latestBuffer);\n\t\t\t\tthis.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n\t\t\t\tthis.latestBufferOffset = 0;\n\t\t\t}\n\t\t\tthis.byteLength++;\n\t\t}\n\t\tBufferWriter.prototype.writeFloat32 = function (value) {\n\t\t\tvar buffer = Buffer.alloc(4);\n\t\t\tbuffer.writeFloatBE(value, 0);\n\t\t\tthis.writeBuffer(buffer);\n\t\t};\n\t\tBufferWriter.prototype.writeFloat64 = function (value) {\n\t\t\tvar buffer = Buffer.alloc(8);\n\t\t\tbuffer.writeDoubleBE(value, 0);\n\t\t\tthis.writeBuffer(buffer);\n\t\t};\n\t\tBufferWriter.prototype.writeString = function (string, lengthFunc) {\n\t\t\tvar buffer = Buffer.from(string, 'utf-8');\n\t\t\tlengthFunc(buffer.length);\n\t\t\tthis.writeBuffer(buffer);\n\t\t};\n\t\tBufferWriter.prototype.canWriteBinary = function (data) {\n\t\t\treturn data instanceof Buffer;\n\t\t};\n\t\tBufferWriter.prototype.writeBinary = function (buffer, lengthFunc) {\n\t\t\tlengthFunc(buffer.length);\n\t\t\tthis.writeBuffer(buffer);\n\t\t};\n\t\tBufferWriter.prototype.writeBuffer = function (chunk) {\n\t\t\tif (!(chunk instanceof Buffer)) throw new TypeError('BufferWriter only accepts Buffers');\n\t\t\tif (!this.latestBufferOffset) {\n\t\t\t\tthis.completeBuffers.push(chunk);\n\t\t\t} else if (this.latestBuffer.length - this.latestBufferOffset >= chunk.length) {\n\t\t\t\tchunk.copy(this.latestBuffer, this.latestBufferOffset);\n\t\t\t\tthis.latestBufferOffset += chunk.length;\n\t\t\t\tif (this.latestBufferOffset >= this.latestBuffer.length) {\n\t\t\t\t\tthis.completeBuffers.push(this.latestBuffer);\n\t\t\t\t\tthis.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n\t\t\t\t\tthis.latestBufferOffset = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.completeBuffers.push(this.latestBuffer.slice(0, this.latestBufferOffset));\n\t\t\t\tthis.completeBuffers.push(chunk);\n\t\t\t\tthis.latestBuffer = Buffer.alloc(this.defaultBufferLength);\n\t\t\t\tthis.latestBufferOffset = 0;\n\t\t\t}\n\t\t\tthis.byteLength += chunk.length;\n\t\t}\n\t\tBufferWriter.prototype.result = function () {\n\t\t\t// Copies them all into a single Buffer\n\t\t\tvar result = Buffer.alloc(this.byteLength);\n\t\t\tvar offset = 0;\n\t\t\tfor (var i = 0; i < this.completeBuffers.length; i++) {\n\t\t\t\tvar buffer = this.completeBuffers[i];\n\t\t\t\tbuffer.copy(result, offset, 0, buffer.length);\n\t\t\t\toffset += buffer.length;\n\t\t\t}\n\t\t\tif (this.latestBufferOffset) {\n\t\t\t\tthis.latestBuffer.copy(result, offset, 0, this.latestBufferOffset);\n\t\t\t}\n\t\t\t\n\t\t\tif (this.stringFormat) return result.toString(this.stringFormat);\n\t\t\treturn result;\n\t\t}\n\t\t\n\t\tif (typeof Buffer === 'function') {\n\t\t\tapi.addReader(function (data, format) {\n\t\t\t\tif (data instanceof Buffer) {\n\t\t\t\t\treturn new BufferReader(data);\n\t\t\t\t}\n\t\t\t\tif (format === 'hex' || format === 'base64') {\n\t\t\t\t\tvar buffer = Buffer.from(data, format);\n\t\t\t\t\treturn new BufferReader(buffer);\n\t\t\t\t}\n\t\t\t});\n\t\t\tapi.addWriter(function (format) {\n\t\t\t\tif (!format || format === 'buffer') {\n\t\t\t\t\treturn new BufferWriter();\n\t\t\t\t} else if (format === 'hex' || format === 'base64') {\n\t\t\t\t\treturn new BufferWriter(format);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\t/** Hex-encoding (and Latin1) for browser **/\n\t\tfunction HexReader(hex) {\n\t\t\tthis.hex = hex;\n\t\t\tthis.pos = 0;\n\t\t}\n\t\tHexReader.prototype = Object.create(Reader.prototype);\n\t\tHexReader.prototype.peekByte = function () {\n\t\t\tvar pair = this.hex.substring(this.pos, 2);\n\t\t\treturn parseInt(pair, 16);\n\t\t};\n\t\tHexReader.prototype.readByte = function () {\n\t\t\tvar pair = this.hex.substring(this.pos, this.pos + 2);\n\t\t\tthis.pos += 2;\n\t\t\treturn parseInt(pair, 16);\n\t\t};\n\t\tHexReader.prototype.readChunk = function (length) {\n\t\t\tvar hex = this.hex.substring(this.pos, this.pos + length*2);\n\t\t\tthis.pos += length*2;\n\t\t\tif (typeof Buffer === 'function') return Buffer.from(hex, 'hex');\n\t\t\treturn new BinaryHex(hex);\n\t\t};\n\t\n\t\tfunction HexWriter(finalFormat) {\n\t\t\tthis.$hex = '';\n\t\t\tthis.finalFormat = finalFormat || 'hex'\n\t\t}\n\t\tHexWriter.prototype = Object.create(Writer.prototype);\n\t\tHexWriter.prototype.writeByte = function (value) {\n\t\t\tif (value < 0 || value > 255) throw new Error('Byte value out of range: ' + value);\n\t\t\tvar hex = value.toString(16);\n\t\t\tif (hex.length == 1) {\n\t\t\t\thex = '0' + hex;\n\t\t\t}\n\t\t\tthis.$hex += hex;\n\t\t}\n\t\tHexWriter.prototype.canWriteBinary = function (chunk) {\n\t\t\treturn chunk instanceof BinaryHex || (typeof Buffer === 'function' && chunk instanceof Buffer);\n\t\t}\n\t\tHexWriter.prototype.writeBinary = function (chunk, lengthFunction) {\n\t\t\tif (chunk instanceof BinaryHex) {\n\t\t\t\tlengthFunction(chunk.length());\n\t\t\t\tthis.$hex += chunk.$hex;\n\t\t\t} else if (typeof Buffer === 'function' && chunk instanceof Buffer) {\n\t\t\t\tlengthFunction(chunk.length);\n\t\t\t\tthis.$hex += chunk.toString('hex');\n\t\t\t} else {\n\t\t\t\tthrow new TypeError('HexWriter only accepts BinaryHex or Buffers');\n\t\t\t}\n\t\t}\n\t\tHexWriter.prototype.result = function () {\n\t\t\tif (this.finalFormat === 'buffer' && typeof Buffer === 'function') {\n\t\t\t\treturn Buffer.from(this.$hex, 'hex');\n\t\t\t}\n\t\t\treturn new BinaryHex(this.$hex).toString(this.finalFormat);\n\t\t}\n\t\tHexWriter.prototype.writeString = function (string, lengthFunction) {\n\t\t\tvar buffer = BinaryHex.fromUtf8String(string);\n\t\t\tlengthFunction(buffer.length());\n\t\t\tthis.$hex += buffer.$hex;\n\t\t}\n\n\t\tapi.addReader(function (data, format) {\n\t\t\tif (data instanceof BinaryHex || data.$hex) {\n\t\t\t\treturn new HexReader(data.$hex);\n\t\t\t}\n\t\t\tif (format === 'hex') {\n\t\t\t\treturn new HexReader(data)\n\t\t\t}\n\t\t});\n\t\tapi.addWriter(function (format) {\n\t\t\tif (format === 'hex') {\n\t\t\t\treturn new HexWriter();\n\t\t\t}\n\t\t});\n\n\t\treturn api;\n\t})();\n\n\tCBOR.addSemanticEncode(0, function (data) {\n\t\tif (data instanceof Date) {\n\t\t\treturn data.toISOString();\n\t\t}\n\t}).addSemanticDecode(0, function (isoString) {\n\t\treturn new Date(isoString);\n\t}).addSemanticDecode(1, function (isoString) {\n\t\treturn new Date(isoString);\n\t});\n\n\treturn CBOR;\n});"],"mappings":"AAAA,CAAC,UAAUA,MAAM,EAAEC,OAAO,EAAE;EAC3B,IAAI,OAAOC,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,EAAE;IAC/CD,MAAM,CAAC,EAAE,EAAED,OAAO,CAAC;EACpB,CAAC,MAAM,IAAI,OAAOG,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,OAAO,EAAC;IAC1DD,MAAM,CAACC,OAAO,GAAGJ,OAAO,CAAC,CAAC;EAC3B,CAAC,MAAM;IACND,MAAM,CAACM,IAAI,GAAGL,OAAO,CAAC,CAAC;EACxB;AACD,CAAC,EAAE,IAAI,EAAE,YAAY;EACpB,IAAIK,IAAI,GAAI,YAAY;IACvB,SAASC,SAASA,CAACC,GAAG,EAAE;MACvB,IAAI,CAACC,IAAI,GAAGD,GAAG;IAChB;IACAD,SAAS,CAACG,SAAS,GAAG;MACrBC,MAAM,EAAE,SAAAA,CAAA,EAAY;QACnB,OAAO,IAAI,CAACF,IAAI,CAACE,MAAM,GAAC,CAAC;MAC1B,CAAC;MACDC,QAAQ,EAAE,SAAAA,CAAUC,MAAM,EAAE;QAC3B,IAAI,CAACA,MAAM,IAAIA,MAAM,KAAK,KAAK,IAAIA,MAAM,KAAK,EAAE,EAAE,OAAO,IAAI,CAACJ,IAAI;QAClE,IAAII,MAAM,KAAK,OAAO,EAAE;UACvB,IAAIC,OAAO,GAAG,EAAE;UAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACN,IAAI,CAACE,MAAM,EAAEI,CAAC,IAAI,CAAC,EAAE;YAC7CD,OAAO,IAAI,GAAG,GAAG,IAAI,CAACL,IAAI,CAACO,SAAS,CAACD,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;UAC/C;UACA,OAAOE,kBAAkB,CAACH,OAAO,CAAC;QACnC;QACA,IAAID,MAAM,KAAK,OAAO,EAAE;UACvB,IAAIC,OAAO,GAAG,EAAE;UAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACN,IAAI,CAACE,MAAM,EAAEI,CAAC,IAAI,CAAC,EAAE;YAC7CD,OAAO,CAACI,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACV,IAAI,CAACO,SAAS,CAACD,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;UAC1D;UACA,OAAOK,MAAM,CAACC,YAAY,CAACC,KAAK,CAACF,MAAM,EAAEN,OAAO,CAAC;QAClD;QACA,MAAM,IAAIS,KAAK,CAAC,uBAAuB,GAAGV,MAAM,CAAC;MAClD;IACD,CAAC;IACDN,SAAS,CAACiB,eAAe,GAAG,UAAUC,WAAW,EAAE;MAClD,IAAIjB,GAAG,GAAG,EAAE;MACZ,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGU,WAAW,CAACd,MAAM,EAAEI,CAAC,EAAE,EAAE;QAC5C,IAAIW,IAAI,GAAGD,WAAW,CAACE,UAAU,CAACZ,CAAC,CAAC,CAACH,QAAQ,CAAC,EAAE,CAAC;QACjD,IAAIc,IAAI,CAACf,MAAM,KAAK,CAAC,EAAEe,IAAI,GAAG,GAAG,GAAGA,IAAI;QACxClB,GAAG,IAAIkB,IAAI;MACZ;MACA,OAAO,IAAInB,SAAS,CAACC,GAAG,CAAC;IAC1B,CAAC;IACDD,SAAS,CAACqB,cAAc,GAAG,UAAUC,UAAU,EAAE;MAChD,IAAIf,OAAO,GAAGgB,kBAAkB,CAACD,UAAU,CAAC;MAC5C,IAAIrB,GAAG,GAAG,EAAE;MACZ,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,OAAO,CAACH,MAAM,EAAEI,CAAC,EAAE,EAAE;QACxC,IAAID,OAAO,CAACiB,MAAM,CAAChB,CAAC,CAAC,KAAK,GAAG,EAAE;UAC9BP,GAAG,IAAIM,OAAO,CAACE,SAAS,CAACD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAC;UACtCA,CAAC,IAAI,CAAC;QACP,CAAC,MAAM;UACN,IAAIiB,OAAO,GAAGlB,OAAO,CAACa,UAAU,CAACZ,CAAC,CAAC,CAACH,QAAQ,CAAC,EAAE,CAAC;UAChD,IAAIoB,OAAO,CAACrB,MAAM,GAAG,CAAC,EAAEqB,OAAO,GAAG,GAAG,GAAGA,OAAO;UAC/CxB,GAAG,IAAIwB,OAAO;QACf;MACD;MACA,OAAO,IAAIzB,SAAS,CAACC,GAAG,CAAC;IAC1B,CAAC;IAED,IAAIyB,gBAAgB,GAAG,EAAE;IACzB,IAAIC,gBAAgB,GAAG,CAAC,CAAC;IAEzB,IAAIC,cAAc,GAAG,SAAAA,CAAUC,KAAK,EAAE;MACrC,OAAO,YAAY;QAClB,MAAM,IAAIb,KAAK,CAACa,KAAK,GAAG,kBAAkB,CAAC;MAC5C,CAAC;IACF,CAAC;IAED,SAASC,MAAMA,CAAA,EAAG,CAClB;IACAA,MAAM,CAAC3B,SAAS,GAAG;MAClB4B,QAAQ,EAAEH,cAAc,CAAC,UAAU,CAAC;MACpCI,QAAQ,EAAEJ,cAAc,CAAC,UAAU,CAAC;MACpCK,SAAS,EAAEL,cAAc,CAAC,WAAW,CAAC;MACtCM,WAAW,EAAE,SAAAA,CAAA,EAAY;QACxB,IAAIC,IAAI,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;QAC5B,IAAIC,QAAQ,GAAG,CAACF,IAAI,GAAC,MAAM,KAAK,EAAE;QAClC,IAAIG,QAAQ,GAAGH,IAAI,GAAC,KAAK;QACzB,IAAII,QAAQ,GAAGJ,IAAI,GAAC,MAAM;QAC1B,IAAIE,QAAQ,KAAK,IAAI,EAAE;UACtB,IAAIC,QAAQ,KAAK,CAAC,EAAE;YACnB,OAAOC,QAAQ,GAAG,CAACC,QAAQ,GAAGA,QAAQ;UACvC;UACA,OAAOC,GAAG;QACX;QACA,IAAIC,SAAS,GAAGL,QAAQ,GAAGM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEP,QAAQ,GAAG,EAAE,CAAC,IAAE,IAAI,GAAGC,QAAQ,CAAC,GAAGK,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAACN,QAAQ;QACnG,OAAOC,QAAQ,GAAG,CAACG,SAAS,GAAGA,SAAS;MACzC,CAAC;MACDG,WAAW,EAAE,SAAAA,CAAA,EAAY;QACxB,IAAIC,QAAQ,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;QAChC,IAAIV,QAAQ,GAAG,CAACS,QAAQ,GAAC,UAAU,KAAK,EAAE;QAC1C,IAAIR,QAAQ,GAAGQ,QAAQ,GAAC,QAAQ;QAChC,IAAIP,QAAQ,GAAGO,QAAQ,GAAC,UAAU;QAClC,IAAIT,QAAQ,KAAK,IAAI,EAAE;UACtB,IAAIC,QAAQ,KAAK,CAAC,EAAE;YACnB,OAAOC,QAAQ,GAAG,CAACC,QAAQ,GAAGA,QAAQ;UACvC;UACA,OAAOC,GAAG;QACX;QACA,IAAIC,SAAS,GAAGL,QAAQ,GAAGM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEP,QAAQ,GAAG,EAAE,GAAG,GAAG,CAAC,IAAE,OAAO,GAAGC,QAAQ,CAAC,GAAGK,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,GAACN,QAAQ;QAClH,OAAOC,QAAQ,GAAG,CAACG,SAAS,GAAGA,SAAS;MACzC,CAAC;MACDM,WAAW,EAAE,SAAAA,CAAA,EAAY;QACxB,IAAIC,IAAI,GAAG,IAAI,CAACF,UAAU,CAAC,CAAC;UAAEG,IAAI,GAAG,IAAI,CAACH,UAAU,CAAC,CAAC;QACtD,IAAIV,QAAQ,GAAIY,IAAI,IAAI,EAAE,GAAE,KAAK;QACjC,IAAIX,QAAQ,GAAG,CAACW,IAAI,GAAC,OAAO,IAAE,UAAU,GAAGC,IAAI;QAC/C,IAAIX,QAAQ,GAAGU,IAAI,GAAC,UAAU;QAC9B,IAAIZ,QAAQ,KAAK,KAAK,EAAE;UACvB,IAAIC,QAAQ,KAAK,CAAC,EAAE;YACnB,OAAOC,QAAQ,GAAG,CAACC,QAAQ,GAAGA,QAAQ;UACvC;UACA,OAAOC,GAAG;QACX;QACA,IAAIC,SAAS,GAAGL,QAAQ,GAAGM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEP,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC,IAAE,gBAAgB,GAAGC,QAAQ,CAAC,GAAGK,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,GAACN,QAAQ;QAC7H,OAAOC,QAAQ,GAAG,CAACG,SAAS,GAAGA,SAAS;MACzC,CAAC;MACDN,UAAU,EAAE,SAAAA,CAAA,EAAY;QACvB,OAAO,IAAI,CAACJ,QAAQ,CAAC,CAAC,GAAC,GAAG,GAAG,IAAI,CAACA,QAAQ,CAAC,CAAC;MAC7C,CAAC;MACDe,UAAU,EAAE,SAAAA,CAAA,EAAY;QACvB,OAAO,IAAI,CAACX,UAAU,CAAC,CAAC,GAAC,KAAK,GAAG,IAAI,CAACA,UAAU,CAAC,CAAC;MACnD,CAAC;MACDe,UAAU,EAAE,SAAAA,CAAA,EAAY;QACvB,OAAO,IAAI,CAACJ,UAAU,CAAC,CAAC,GAAC,UAAU,GAAG,IAAI,CAACA,UAAU,CAAC,CAAC;MACxD;IACD,CAAC;IACD,SAASK,MAAMA,CAAA,EAAG,CAClB;IACAA,MAAM,CAACjD,SAAS,GAAG;MAClBkD,SAAS,EAAEzB,cAAc,CAAC,WAAW,CAAC;MACtC0B,MAAM,EAAE1B,cAAc,CAAC,QAAQ,CAAC;MAChC2B,YAAY,EAAE3B,cAAc,CAAC,cAAc,CAAC;MAC5C4B,YAAY,EAAE5B,cAAc,CAAC,cAAc,CAAC;MAC5C6B,YAAY,EAAE7B,cAAc,CAAC,cAAc,CAAC;MAC5C8B,WAAW,EAAE,SAAAA,CAAUC,KAAK,EAAE;QAC7B,IAAI,CAACN,SAAS,CAAEM,KAAK,IAAI,CAAC,GAAE,IAAI,CAAC;QACjC,IAAI,CAACN,SAAS,CAACM,KAAK,GAAC,IAAI,CAAC;MAC3B,CAAC;MACDC,WAAW,EAAE,SAAAA,CAAUD,KAAK,EAAE;QAC7B,IAAI,CAACD,WAAW,CAAEC,KAAK,IAAE,EAAE,GAAE,MAAM,CAAC;QACpC,IAAI,CAACD,WAAW,CAACC,KAAK,GAAC,MAAM,CAAC;MAC/B,CAAC;MACDE,WAAW,EAAE,SAAAA,CAAUF,KAAK,EAAE;QAC7B,IAAIA,KAAK,IAAI,gBAAgB,IAAIA,KAAK,IAAI,CAAC,gBAAgB,EAAE;UAC5D,MAAM,IAAI3C,KAAK,CAAC,2BAA2B,GAAG2C,KAAK,GAAG,2CAA2C,CAAC;QACnG;QACA,IAAI,CAACC,WAAW,CAACjB,IAAI,CAACmB,KAAK,CAACH,KAAK,GAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,CAACC,WAAW,CAACD,KAAK,GAAC,UAAU,CAAC;MACnC,CAAC;MACDI,WAAW,EAAEnC,cAAc,CAAC,aAAa,CAAC;MAC1CoC,cAAc,EAAE,SAAAA,CAAUC,KAAK,EAAE;QAChC,OAAO,KAAK;MACb,CAAC;MACDC,WAAW,EAAEtC,cAAc,CAAC,YAAY;IACzC,CAAC;IAED,SAASuC,aAAaA,CAACC,MAAM,EAAE;MAC9B,IAAIC,SAAS,GAAGD,MAAM,CAACpC,QAAQ,CAAC,CAAC;MACjC,IAAIsC,SAAS,GAAGD,SAAS,IAAI,CAAC;QAAEV,KAAK,GAAGU,SAAS,GAAC,IAAI;MACtD,OAAO;QAACE,IAAI,EAAED,SAAS;QAAEX,KAAK,EAAEA;MAAK,CAAC;IACvC;IAEA,SAASa,eAAeA,CAACC,MAAM,EAAEL,MAAM,EAAE;MACxC,IAAIT,KAAK,GAAGc,MAAM,CAACd,KAAK;MACxB,IAAIA,KAAK,GAAG,EAAE,EAAE;QACf,OAAOA,KAAK;MACb,CAAC,MAAM,IAAIA,KAAK,IAAI,EAAE,EAAE;QACvB,OAAOS,MAAM,CAACpC,QAAQ,CAAC,CAAC;MACzB,CAAC,MAAM,IAAI2B,KAAK,IAAI,EAAE,EAAE;QACvB,OAAOS,MAAM,CAAChC,UAAU,CAAC,CAAC;MAC3B,CAAC,MAAM,IAAIuB,KAAK,IAAI,EAAE,EAAE;QACvB,OAAOS,MAAM,CAACrB,UAAU,CAAC,CAAC;MAC3B,CAAC,MAAM,IAAIY,KAAK,IAAI,EAAE,EAAE;QACvB,OAAOS,MAAM,CAACjB,UAAU,CAAC,CAAC;MAC3B,CAAC,MAAM,IAAIQ,KAAK,IAAI,EAAE,EAAE;QACvB;QACA,OAAO,IAAI;MACZ;MACA/B,cAAc,CAAC,mBAAmB,GAAG+B,KAAK,CAAC,CAAC,CAAC;IAC9C;IAEA,SAASe,cAAcA,CAACH,IAAI,EAAEZ,KAAK,EAAEgB,MAAM,EAAE;MAC5CA,MAAM,CAACtB,SAAS,CAAEkB,IAAI,IAAE,CAAC,GAAEZ,KAAK,CAAC;IAClC;IAEA,SAASiB,WAAWA,CAACL,IAAI,EAAEZ,KAAK,EAAEgB,MAAM,EAAE;MACzC,IAAIN,SAAS,GAAGE,IAAI,IAAE,CAAC;MACvB,IAAIZ,KAAK,GAAG,EAAE,EAAE;QACfgB,MAAM,CAACtB,SAAS,CAACgB,SAAS,GAACV,KAAK,CAAC;MAClC,CAAC,MAAM,IAAIA,KAAK,GAAG,GAAG,EAAE;QACvBgB,MAAM,CAACtB,SAAS,CAACgB,SAAS,GAAC,EAAE,CAAC;QAC9BM,MAAM,CAACtB,SAAS,CAACM,KAAK,CAAC;MACxB,CAAC,MAAM,IAAIA,KAAK,GAAG,KAAK,EAAE;QACzBgB,MAAM,CAACtB,SAAS,CAACgB,SAAS,GAAC,EAAE,CAAC;QAC9BM,MAAM,CAACjB,WAAW,CAACC,KAAK,CAAC;MAC1B,CAAC,MAAM,IAAIA,KAAK,GAAG,UAAU,EAAE;QAC9BgB,MAAM,CAACtB,SAAS,CAACgB,SAAS,GAAC,EAAE,CAAC;QAC9BM,MAAM,CAACf,WAAW,CAACD,KAAK,CAAC;MAC1B,CAAC,MAAM;QACNgB,MAAM,CAACtB,SAAS,CAACgB,SAAS,GAAC,EAAE,CAAC;QAC9BM,MAAM,CAACd,WAAW,CAACF,KAAK,CAAC;MAC1B;IACD;IAEA,IAAIkB,QAAQ,GAAG,IAAI7D,KAAK,CAAC,CAAC,CAAC,CAAC;;IAE5B,SAAS8D,YAAYA,CAACV,MAAM,EAAE;MAC7B,IAAIK,MAAM,GAAGN,aAAa,CAACC,MAAM,CAAC;MAClC,QAAQK,MAAM,CAACF,IAAI;QAClB,KAAK,CAAC;UACL,OAAOC,eAAe,CAACC,MAAM,EAAEL,MAAM,CAAC;QACvC,KAAK,CAAC;UACL,OAAO,CAAC,CAAC,GAAEI,eAAe,CAACC,MAAM,EAAEL,MAAM,CAAC;QAC3C,KAAK,CAAC;UACL,OAAOA,MAAM,CAACnC,SAAS,CAACuC,eAAe,CAACC,MAAM,EAAEL,MAAM,CAAC,CAAC;QACzD,KAAK,CAAC;UACL,IAAIW,MAAM,GAAGX,MAAM,CAACnC,SAAS,CAACuC,eAAe,CAACC,MAAM,EAAEL,MAAM,CAAC,CAAC;UAC9D,OAAOW,MAAM,CAAC1E,QAAQ,CAAC,OAAO,CAAC;QAChC,KAAK,CAAC;QACN,KAAK,CAAC;UACL,IAAI2E,WAAW,GAAGR,eAAe,CAACC,MAAM,EAAEL,MAAM,CAAC;UACjD,IAAId,MAAM,GAAG,EAAE;UACf,IAAI0B,WAAW,KAAK,IAAI,EAAE;YACzB,IAAIP,MAAM,CAACF,IAAI,KAAK,CAAC,EAAE;cACtBS,WAAW,IAAI,CAAC;YACjB;YACA,KAAK,IAAIxE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwE,WAAW,EAAExE,CAAC,EAAE,EAAE;cACrC8C,MAAM,CAAC9C,CAAC,CAAC,GAAGsE,YAAY,CAACV,MAAM,CAAC;YACjC;UACD,CAAC,MAAM;YACN,IAAIa,IAAI;YACR,OAAO,CAACA,IAAI,GAAGH,YAAY,CAACV,MAAM,CAAC,MAAMS,QAAQ,EAAE;cAClDvB,MAAM,CAAC3C,IAAI,CAACsE,IAAI,CAAC;YAClB;UACD;UACA,IAAIR,MAAM,CAACF,IAAI,KAAK,CAAC,EAAE;YACtB,IAAIW,SAAS,GAAG,CAAC,CAAC;YAClB,KAAK,IAAI1E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8C,MAAM,CAAClD,MAAM,EAAEI,CAAC,IAAI,CAAC,EAAE;cAC1C0E,SAAS,CAAC5B,MAAM,CAAC9C,CAAC,CAAC,CAAC,GAAG8C,MAAM,CAAC9C,CAAC,GAAG,CAAC,CAAC;YACrC;YACA,OAAO0E,SAAS;UACjB,CAAC,MAAM;YACN,OAAO5B,MAAM;UACd;QACD,KAAK,CAAC;UACL,IAAI6B,GAAG,GAAGX,eAAe,CAACC,MAAM,EAAEL,MAAM,CAAC;UACzC,IAAIgB,OAAO,GAAGzD,gBAAgB,CAACwD,GAAG,CAAC;UACnC,IAAI7B,MAAM,GAAGwB,YAAY,CAACV,MAAM,CAAC;UACjC,OAAOgB,OAAO,GAAGA,OAAO,CAAC9B,MAAM,CAAC,GAAGA,MAAM;QAC1C,KAAK,CAAC;UACL,IAAImB,MAAM,CAACd,KAAK,KAAK,EAAE,EAAE;YACxB,OAAOS,MAAM,CAAClC,WAAW,CAAC,CAAC;UAC5B,CAAC,MAAM,IAAIuC,MAAM,CAACd,KAAK,KAAK,EAAE,EAAE;YAC/B,OAAOS,MAAM,CAACvB,WAAW,CAAC,CAAC;UAC5B,CAAC,MAAM,IAAI4B,MAAM,CAACd,KAAK,KAAK,EAAE,EAAE;YAC/B,OAAOS,MAAM,CAACpB,WAAW,CAAC,CAAC;UAC5B;UACA,QAAQwB,eAAe,CAACC,MAAM,EAAEL,MAAM,CAAC;YACtC,KAAK,EAAE;cACN,OAAO,KAAK;YACb,KAAK,EAAE;cACN,OAAO,IAAI;YACZ,KAAK,EAAE;cACN,OAAO,IAAI;YACZ,KAAK,EAAE;cACN,OAAOiB,SAAS;YACjB,KAAK,IAAI;cACR,OAAOR,QAAQ;YAChB;cACC,MAAM,IAAI7D,KAAK,CAAC,uBAAuB,GAAGyD,MAAM,CAACd,KAAK,CAAC;UACzD;QACD;UACC,MAAM,IAAI3C,KAAK,CAAC,sBAAsB,GAAGsE,IAAI,CAACC,SAAS,CAACd,MAAM,CAAC,CAAC;MAClE;MACA,MAAM,IAAIzD,KAAK,CAAC,qBAAqB,CAAC;IACvC;IAEA,SAASwE,YAAYA,CAACC,IAAI,EAAEd,MAAM,EAAE;MACnC,KAAK,IAAInE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkB,gBAAgB,CAACtB,MAAM,EAAEI,CAAC,EAAE,EAAE;QACjD,IAAIkF,WAAW,GAAGhE,gBAAgB,CAAClB,CAAC,CAAC,CAACmF,EAAE,CAACF,IAAI,CAAC;QAC9C,IAAIC,WAAW,KAAKL,SAAS,EAAE;UAC9BT,WAAW,CAAC,CAAC,EAAElD,gBAAgB,CAAClB,CAAC,CAAC,CAAC2E,GAAG,EAAER,MAAM,CAAC;UAC/C,OAAOa,YAAY,CAACE,WAAW,EAAEf,MAAM,CAAC;QACzC;MACD;MAEA,IAAIc,IAAI,IAAI,OAAOA,IAAI,CAACG,MAAM,KAAK,UAAU,EAAE;QAC9CH,IAAI,GAAGA,IAAI,CAACG,MAAM,CAAC,CAAC;MACrB;MAEA,IAAIH,IAAI,KAAK,KAAK,EAAE;QACnBb,WAAW,CAAC,CAAC,EAAE,EAAE,EAAED,MAAM,CAAC;MAC3B,CAAC,MAAM,IAAIc,IAAI,KAAK,IAAI,EAAE;QACzBb,WAAW,CAAC,CAAC,EAAE,EAAE,EAAED,MAAM,CAAC;MAC3B,CAAC,MAAM,IAAIc,IAAI,KAAK,IAAI,EAAE;QACzBb,WAAW,CAAC,CAAC,EAAE,EAAE,EAAED,MAAM,CAAC;MAC3B,CAAC,MAAM,IAAIc,IAAI,KAAKJ,SAAS,EAAE;QAC9BT,WAAW,CAAC,CAAC,EAAE,EAAE,EAAED,MAAM,CAAC;MAC3B,CAAC,MAAM,IAAI,OAAOc,IAAI,KAAK,QAAQ,EAAE;QACpC,IAAI9C,IAAI,CAACmB,KAAK,CAAC2B,IAAI,CAAC,KAAKA,IAAI,IAAIA,IAAI,GAAG,gBAAgB,IAAIA,IAAI,GAAG,CAAC,gBAAgB,EAAE;UACrF;UACA,IAAIA,IAAI,GAAG,CAAC,EAAE;YACbb,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGa,IAAI,EAAEd,MAAM,CAAC;UAClC,CAAC,MAAM;YACNC,WAAW,CAAC,CAAC,EAAEa,IAAI,EAAEd,MAAM,CAAC;UAC7B;QACD,CAAC,MAAM;UACND,cAAc,CAAC,CAAC,EAAE,EAAE,EAAEC,MAAM,CAAC;UAC7BA,MAAM,CAAClB,YAAY,CAACgC,IAAI,CAAC;QAC1B;MACD,CAAC,MAAM,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;QACpCd,MAAM,CAACZ,WAAW,CAAC0B,IAAI,EAAE,UAAUrF,MAAM,EAAE;UAC1CwE,WAAW,CAAC,CAAC,EAAExE,MAAM,EAAEuE,MAAM,CAAC;QAC/B,CAAC,CAAC;MACH,CAAC,MAAM,IAAIA,MAAM,CAACX,cAAc,CAACyB,IAAI,CAAC,EAAE;QACvCd,MAAM,CAACT,WAAW,CAACuB,IAAI,EAAE,UAAUrF,MAAM,EAAE;UAC1CwE,WAAW,CAAC,CAAC,EAAExE,MAAM,EAAEuE,MAAM,CAAC;QAC/B,CAAC,CAAC;MACH,CAAC,MAAM,IAAI,OAAOc,IAAI,KAAK,QAAQ,EAAE;QACpC,IAAII,GAAG,CAACC,MAAM,CAACC,SAAS,IAAI,OAAON,IAAI,CAACO,MAAM,KAAK,UAAU,EAAE;UAC3DP,IAAI,GAAGA,IAAI,CAACO,MAAM,CAAC,CAAC;QACrB;QACH,IAAIC,KAAK,CAACC,OAAO,CAACT,IAAI,CAAC,EAAE;UACxBb,WAAW,CAAC,CAAC,EAAEa,IAAI,CAACrF,MAAM,EAAEuE,MAAM,CAAC;UACnC,KAAK,IAAInE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiF,IAAI,CAACrF,MAAM,EAAEI,CAAC,EAAE,EAAE;YACrCgF,YAAY,CAACC,IAAI,CAACjF,CAAC,CAAC,EAAEmE,MAAM,CAAC;UAC9B;QACD,CAAC,MAAM;UACN,IAAIwB,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACV,IAAI,CAAC;UAC5Bb,WAAW,CAAC,CAAC,EAAEuB,IAAI,CAAC/F,MAAM,EAAEuE,MAAM,CAAC;UACnC,KAAK,IAAInE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2F,IAAI,CAAC/F,MAAM,EAAEI,CAAC,EAAE,EAAE;YACrCgF,YAAY,CAACW,IAAI,CAAC3F,CAAC,CAAC,EAAEmE,MAAM,CAAC;YAC7Ba,YAAY,CAACC,IAAI,CAACU,IAAI,CAAC3F,CAAC,CAAC,CAAC,EAAEmE,MAAM,CAAC;UACpC;QACD;MACD,CAAC,MAAM;QACN,MAAM,IAAI3D,KAAK,CAAC,+BAA+B,GAAGyE,IAAI,CAAC;MACxD;IACD;IAEA,IAAIY,eAAe,GAAG,EAAE;IACxB,IAAIC,eAAe,GAAG,EAAE;IAExB,IAAIT,GAAG,GAAG;MACTC,MAAM,EAAE;QACPC,SAAS,EAAE;MACZ,CAAC;MACDQ,SAAS,EAAE,SAAAA,CAAUjG,MAAM,EAAEkG,cAAc,EAAE;QAC5C,IAAI,OAAOlG,MAAM,KAAK,QAAQ,EAAE;UAC/BgG,eAAe,CAAC3F,IAAI,CAAC,UAAU8F,CAAC,EAAE;YACjC,IAAInG,MAAM,KAAKmG,CAAC,EAAE,OAAOD,cAAc,CAACC,CAAC,CAAC;UAC3C,CAAC,CAAC;QACH,CAAC,MAAM;UACNH,eAAe,CAAC3F,IAAI,CAACL,MAAM,CAAC;QAC7B;MACD,CAAC;MACDoG,SAAS,EAAE,SAAAA,CAAUpG,MAAM,EAAEqG,cAAc,EAAE;QAC5C,IAAI,OAAOrG,MAAM,KAAK,QAAQ,EAAE;UAC/B+F,eAAe,CAAC1F,IAAI,CAAC,UAAU8E,IAAI,EAAEgB,CAAC,EAAE;YACvC,IAAInG,MAAM,KAAKmG,CAAC,EAAE,OAAOE,cAAc,CAAClB,IAAI,EAAEgB,CAAC,CAAC;UACjD,CAAC,CAAC;QACH,CAAC,MAAM;UACNJ,eAAe,CAAC1F,IAAI,CAACL,MAAM,CAAC;QAC7B;MACD,CAAC;MACDsG,MAAM,EAAE,SAAAA,CAAUnB,IAAI,EAAEnF,MAAM,EAAE;QAC/B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8F,eAAe,CAAClG,MAAM,EAAEI,CAAC,EAAE,EAAE;UAChD,IAAIqG,IAAI,GAAGP,eAAe,CAAC9F,CAAC,CAAC;UAC7B,IAAImE,MAAM,GAAGkC,IAAI,CAACvG,MAAM,CAAC;UACzB,IAAIqE,MAAM,EAAE;YACXa,YAAY,CAACC,IAAI,EAAEd,MAAM,CAAC;YAC1B,OAAOA,MAAM,CAACrB,MAAM,CAAC,CAAC;UACvB;QACD;QACA,MAAM,IAAItC,KAAK,CAAC,6BAA6B,GAAGV,MAAM,CAAC;MACxD,CAAC;MACDwG,MAAM,EAAE,SAAAA,CAAUrB,IAAI,EAAEnF,MAAM,EAAE;QAC/B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6F,eAAe,CAACjG,MAAM,EAAEI,CAAC,EAAE,EAAE;UAChD,IAAIqG,IAAI,GAAGR,eAAe,CAAC7F,CAAC,CAAC;UAC7B,IAAI4D,MAAM,GAAGyC,IAAI,CAACpB,IAAI,EAAEnF,MAAM,CAAC;UAC/B,IAAI8D,MAAM,EAAE;YACX,OAAOU,YAAY,CAACV,MAAM,CAAC;UAC5B;QACD;QACA,MAAM,IAAIpD,KAAK,CAAC,4BAA4B,GAAGV,MAAM,CAAC;MACvD,CAAC;MACDyG,iBAAiB,EAAE,SAAAA,CAAU5B,GAAG,EAAEQ,EAAE,EAAE;QACrC,IAAI,OAAOR,GAAG,KAAK,QAAQ,IAAIA,GAAG,GAAC,CAAC,KAAK,CAAC,IAAIA,GAAG,GAAG,CAAC,EAAE;UACtD,MAAM,IAAInE,KAAK,CAAC,gCAAgC,CAAC;QAClD;QACAU,gBAAgB,CAACf,IAAI,CAAC;UAACwE,GAAG,EAAEA,GAAG;UAAEQ,EAAE,EAAEA;QAAE,CAAC,CAAC;QACzC,OAAO,IAAI;MACZ,CAAC;MACDqB,iBAAiB,EAAE,SAAAA,CAAU7B,GAAG,EAAEQ,EAAE,EAAE;QACrC,IAAI,OAAOR,GAAG,KAAK,QAAQ,IAAIA,GAAG,GAAC,CAAC,KAAK,CAAC,IAAIA,GAAG,GAAG,CAAC,EAAE;UACtD,MAAM,IAAInE,KAAK,CAAC,gCAAgC,CAAC;QAClD;QACAW,gBAAgB,CAACwD,GAAG,CAAC,GAAGQ,EAAE;QAC1B,OAAO,IAAI;MACZ,CAAC;MACD7D,MAAM,EAAEA,MAAM;MACdsB,MAAM,EAAEA;IACT,CAAC;;IAED;IACA,SAAS6D,YAAYA,CAAClC,MAAM,EAAE;MAC7B,IAAI,CAACA,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACmC,GAAG,GAAG,CAAC;IACb;IACAD,YAAY,CAAC9G,SAAS,GAAGiG,MAAM,CAACe,MAAM,CAACrF,MAAM,CAAC3B,SAAS,CAAC;IACxD8G,YAAY,CAAC9G,SAAS,CAAC4B,QAAQ,GAAG,YAAY;MAC7C,OAAO,IAAI,CAACgD,MAAM,CAAC,IAAI,CAACmC,GAAG,CAAC;IAC7B,CAAC;IACDD,YAAY,CAAC9G,SAAS,CAAC6B,QAAQ,GAAG,YAAY;MAC7C,OAAO,IAAI,CAAC+C,MAAM,CAAC,IAAI,CAACmC,GAAG,EAAE,CAAC;IAC/B,CAAC;IACDD,YAAY,CAAC9G,SAAS,CAACiC,UAAU,GAAG,YAAY;MAC/C,IAAIkB,MAAM,GAAG,IAAI,CAACyB,MAAM,CAACqC,YAAY,CAAC,IAAI,CAACF,GAAG,CAAC;MAC/C,IAAI,CAACA,GAAG,IAAI,CAAC;MACb,OAAO5D,MAAM;IACd,CAAC;IACD2D,YAAY,CAAC9G,SAAS,CAAC4C,UAAU,GAAG,YAAY;MAC/C,IAAIO,MAAM,GAAG,IAAI,CAACyB,MAAM,CAACsC,YAAY,CAAC,IAAI,CAACH,GAAG,CAAC;MAC/C,IAAI,CAACA,GAAG,IAAI,CAAC;MACb,OAAO5D,MAAM;IACd,CAAC;IACD2D,YAAY,CAAC9G,SAAS,CAAC0C,WAAW,GAAG,YAAY;MAChD,IAAIS,MAAM,GAAG,IAAI,CAACyB,MAAM,CAACuC,WAAW,CAAC,IAAI,CAACJ,GAAG,CAAC;MAC9C,IAAI,CAACA,GAAG,IAAI,CAAC;MACb,OAAO5D,MAAM;IACd,CAAC;IACD2D,YAAY,CAAC9G,SAAS,CAAC6C,WAAW,GAAG,YAAY;MAChD,IAAIM,MAAM,GAAG,IAAI,CAACyB,MAAM,CAACwC,YAAY,CAAC,IAAI,CAACL,GAAG,CAAC;MAC/C,IAAI,CAACA,GAAG,IAAI,CAAC;MACb,OAAO5D,MAAM;IACd,CAAC;IACD2D,YAAY,CAAC9G,SAAS,CAAC8B,SAAS,GAAG,UAAU7B,MAAM,EAAE;MACpD,IAAIkD,MAAM,GAAGkE,MAAM,CAACC,KAAK,CAACrH,MAAM,CAAC;MACjC,IAAI,CAAC2E,MAAM,CAAC2C,IAAI,CAACpE,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC4D,GAAG,EAAE,IAAI,CAACA,GAAG,IAAI9G,MAAM,CAAC;MACzD,OAAOkD,MAAM;IACd,CAAC;IAED,SAASqE,YAAYA,CAACC,YAAY,EAAE;MACnC,IAAI,CAACC,UAAU,GAAG,CAAC;MACnB,IAAI,CAACC,mBAAmB,GAAG,KAAK,CAAC,CAAC;MAClC,IAAI,CAACC,YAAY,GAAGP,MAAM,CAACC,KAAK,CAAC,IAAI,CAACK,mBAAmB,CAAC;MAC1D,IAAI,CAACE,kBAAkB,GAAG,CAAC;MAC3B,IAAI,CAACC,eAAe,GAAG,EAAE;MACzB,IAAI,CAACL,YAAY,GAAGA,YAAY;IACjC;IACAD,YAAY,CAACxH,SAAS,GAAGiG,MAAM,CAACe,MAAM,CAAC/D,MAAM,CAACjD,SAAS,CAAC;IACxDwH,YAAY,CAACxH,SAAS,CAACkD,SAAS,GAAG,UAAUM,KAAK,EAAE;MACnD,IAAI,CAACoE,YAAY,CAAC,IAAI,CAACC,kBAAkB,EAAE,CAAC,GAAGrE,KAAK;MACpD,IAAI,IAAI,CAACqE,kBAAkB,IAAI,IAAI,CAACD,YAAY,CAAC3H,MAAM,EAAE;QACxD,IAAI,CAAC6H,eAAe,CAACtH,IAAI,CAAC,IAAI,CAACoH,YAAY,CAAC;QAC5C,IAAI,CAACA,YAAY,GAAGP,MAAM,CAACC,KAAK,CAAC,IAAI,CAACK,mBAAmB,CAAC;QAC1D,IAAI,CAACE,kBAAkB,GAAG,CAAC;MAC5B;MACA,IAAI,CAACH,UAAU,EAAE;IAClB,CAAC;IACDF,YAAY,CAACxH,SAAS,CAACqD,YAAY,GAAG,UAAUG,KAAK,EAAE;MACtD,IAAIoB,MAAM,GAAGyC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAC5B1C,MAAM,CAACmD,YAAY,CAACvE,KAAK,EAAE,CAAC,CAAC;MAC7B,IAAI,CAACwE,WAAW,CAACpD,MAAM,CAAC;IACzB,CAAC;IACD4C,YAAY,CAACxH,SAAS,CAACsD,YAAY,GAAG,UAAUE,KAAK,EAAE;MACtD,IAAIoB,MAAM,GAAGyC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAC5B1C,MAAM,CAACqD,aAAa,CAACzE,KAAK,EAAE,CAAC,CAAC;MAC9B,IAAI,CAACwE,WAAW,CAACpD,MAAM,CAAC;IACzB,CAAC;IACD4C,YAAY,CAACxH,SAAS,CAAC4D,WAAW,GAAG,UAAUsE,MAAM,EAAEC,UAAU,EAAE;MAClE,IAAIvD,MAAM,GAAGyC,MAAM,CAACe,IAAI,CAACF,MAAM,EAAE,OAAO,CAAC;MACzCC,UAAU,CAACvD,MAAM,CAAC3E,MAAM,CAAC;MACzB,IAAI,CAAC+H,WAAW,CAACpD,MAAM,CAAC;IACzB,CAAC;IACD4C,YAAY,CAACxH,SAAS,CAAC6D,cAAc,GAAG,UAAUyB,IAAI,EAAE;MACvD,OAAOA,IAAI,YAAY+B,MAAM;IAC9B,CAAC;IACDG,YAAY,CAACxH,SAAS,CAAC+D,WAAW,GAAG,UAAUa,MAAM,EAAEuD,UAAU,EAAE;MAClEA,UAAU,CAACvD,MAAM,CAAC3E,MAAM,CAAC;MACzB,IAAI,CAAC+H,WAAW,CAACpD,MAAM,CAAC;IACzB,CAAC;IACD4C,YAAY,CAACxH,SAAS,CAACgI,WAAW,GAAG,UAAUlE,KAAK,EAAE;MACrD,IAAI,EAAEA,KAAK,YAAYuD,MAAM,CAAC,EAAE,MAAM,IAAIgB,SAAS,CAAC,mCAAmC,CAAC;MACxF,IAAI,CAAC,IAAI,CAACR,kBAAkB,EAAE;QAC7B,IAAI,CAACC,eAAe,CAACtH,IAAI,CAACsD,KAAK,CAAC;MACjC,CAAC,MAAM,IAAI,IAAI,CAAC8D,YAAY,CAAC3H,MAAM,GAAG,IAAI,CAAC4H,kBAAkB,IAAI/D,KAAK,CAAC7D,MAAM,EAAE;QAC9E6D,KAAK,CAACyD,IAAI,CAAC,IAAI,CAACK,YAAY,EAAE,IAAI,CAACC,kBAAkB,CAAC;QACtD,IAAI,CAACA,kBAAkB,IAAI/D,KAAK,CAAC7D,MAAM;QACvC,IAAI,IAAI,CAAC4H,kBAAkB,IAAI,IAAI,CAACD,YAAY,CAAC3H,MAAM,EAAE;UACxD,IAAI,CAAC6H,eAAe,CAACtH,IAAI,CAAC,IAAI,CAACoH,YAAY,CAAC;UAC5C,IAAI,CAACA,YAAY,GAAGP,MAAM,CAACC,KAAK,CAAC,IAAI,CAACK,mBAAmB,CAAC;UAC1D,IAAI,CAACE,kBAAkB,GAAG,CAAC;QAC5B;MACD,CAAC,MAAM;QACN,IAAI,CAACC,eAAe,CAACtH,IAAI,CAAC,IAAI,CAACoH,YAAY,CAACU,KAAK,CAAC,CAAC,EAAE,IAAI,CAACT,kBAAkB,CAAC,CAAC;QAC9E,IAAI,CAACC,eAAe,CAACtH,IAAI,CAACsD,KAAK,CAAC;QAChC,IAAI,CAAC8D,YAAY,GAAGP,MAAM,CAACC,KAAK,CAAC,IAAI,CAACK,mBAAmB,CAAC;QAC1D,IAAI,CAACE,kBAAkB,GAAG,CAAC;MAC5B;MACA,IAAI,CAACH,UAAU,IAAI5D,KAAK,CAAC7D,MAAM;IAChC,CAAC;IACDuH,YAAY,CAACxH,SAAS,CAACmD,MAAM,GAAG,YAAY;MAC3C;MACA,IAAIA,MAAM,GAAGkE,MAAM,CAACC,KAAK,CAAC,IAAI,CAACI,UAAU,CAAC;MAC1C,IAAIa,MAAM,GAAG,CAAC;MACd,KAAK,IAAIlI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACyH,eAAe,CAAC7H,MAAM,EAAEI,CAAC,EAAE,EAAE;QACrD,IAAIuE,MAAM,GAAG,IAAI,CAACkD,eAAe,CAACzH,CAAC,CAAC;QACpCuE,MAAM,CAAC2C,IAAI,CAACpE,MAAM,EAAEoF,MAAM,EAAE,CAAC,EAAE3D,MAAM,CAAC3E,MAAM,CAAC;QAC7CsI,MAAM,IAAI3D,MAAM,CAAC3E,MAAM;MACxB;MACA,IAAI,IAAI,CAAC4H,kBAAkB,EAAE;QAC5B,IAAI,CAACD,YAAY,CAACL,IAAI,CAACpE,MAAM,EAAEoF,MAAM,EAAE,CAAC,EAAE,IAAI,CAACV,kBAAkB,CAAC;MACnE;MAEA,IAAI,IAAI,CAACJ,YAAY,EAAE,OAAOtE,MAAM,CAACjD,QAAQ,CAAC,IAAI,CAACuH,YAAY,CAAC;MAChE,OAAOtE,MAAM;IACd,CAAC;IAED,IAAI,OAAOkE,MAAM,KAAK,UAAU,EAAE;MACjC3B,GAAG,CAACa,SAAS,CAAC,UAAUjB,IAAI,EAAEnF,MAAM,EAAE;QACrC,IAAImF,IAAI,YAAY+B,MAAM,EAAE;UAC3B,OAAO,IAAIP,YAAY,CAACxB,IAAI,CAAC;QAC9B;QACA,IAAInF,MAAM,KAAK,KAAK,IAAIA,MAAM,KAAK,QAAQ,EAAE;UAC5C,IAAIyE,MAAM,GAAGyC,MAAM,CAACe,IAAI,CAAC9C,IAAI,EAAEnF,MAAM,CAAC;UACtC,OAAO,IAAI2G,YAAY,CAAClC,MAAM,CAAC;QAChC;MACD,CAAC,CAAC;MACFc,GAAG,CAACU,SAAS,CAAC,UAAUjG,MAAM,EAAE;QAC/B,IAAI,CAACA,MAAM,IAAIA,MAAM,KAAK,QAAQ,EAAE;UACnC,OAAO,IAAIqH,YAAY,CAAC,CAAC;QAC1B,CAAC,MAAM,IAAIrH,MAAM,KAAK,KAAK,IAAIA,MAAM,KAAK,QAAQ,EAAE;UACnD,OAAO,IAAIqH,YAAY,CAACrH,MAAM,CAAC;QAChC;MACD,CAAC,CAAC;IACH;;IAEA;IACA,SAASqI,SAASA,CAAC1I,GAAG,EAAE;MACvB,IAAI,CAACA,GAAG,GAAGA,GAAG;MACd,IAAI,CAACiH,GAAG,GAAG,CAAC;IACb;IACAyB,SAAS,CAACxI,SAAS,GAAGiG,MAAM,CAACe,MAAM,CAACrF,MAAM,CAAC3B,SAAS,CAAC;IACrDwI,SAAS,CAACxI,SAAS,CAAC4B,QAAQ,GAAG,YAAY;MAC1C,IAAIZ,IAAI,GAAG,IAAI,CAAClB,GAAG,CAACQ,SAAS,CAAC,IAAI,CAACyG,GAAG,EAAE,CAAC,CAAC;MAC1C,OAAOtG,QAAQ,CAACO,IAAI,EAAE,EAAE,CAAC;IAC1B,CAAC;IACDwH,SAAS,CAACxI,SAAS,CAAC6B,QAAQ,GAAG,YAAY;MAC1C,IAAIb,IAAI,GAAG,IAAI,CAAClB,GAAG,CAACQ,SAAS,CAAC,IAAI,CAACyG,GAAG,EAAE,IAAI,CAACA,GAAG,GAAG,CAAC,CAAC;MACrD,IAAI,CAACA,GAAG,IAAI,CAAC;MACb,OAAOtG,QAAQ,CAACO,IAAI,EAAE,EAAE,CAAC;IAC1B,CAAC;IACDwH,SAAS,CAACxI,SAAS,CAAC8B,SAAS,GAAG,UAAU7B,MAAM,EAAE;MACjD,IAAIH,GAAG,GAAG,IAAI,CAACA,GAAG,CAACQ,SAAS,CAAC,IAAI,CAACyG,GAAG,EAAE,IAAI,CAACA,GAAG,GAAG9G,MAAM,GAAC,CAAC,CAAC;MAC3D,IAAI,CAAC8G,GAAG,IAAI9G,MAAM,GAAC,CAAC;MACpB,IAAI,OAAOoH,MAAM,KAAK,UAAU,EAAE,OAAOA,MAAM,CAACe,IAAI,CAACtI,GAAG,EAAE,KAAK,CAAC;MAChE,OAAO,IAAID,SAAS,CAACC,GAAG,CAAC;IAC1B,CAAC;IAED,SAAS2I,SAASA,CAACC,WAAW,EAAE;MAC/B,IAAI,CAAC3I,IAAI,GAAG,EAAE;MACd,IAAI,CAAC2I,WAAW,GAAGA,WAAW,IAAI,KAAK;IACxC;IACAD,SAAS,CAACzI,SAAS,GAAGiG,MAAM,CAACe,MAAM,CAAC/D,MAAM,CAACjD,SAAS,CAAC;IACrDyI,SAAS,CAACzI,SAAS,CAACkD,SAAS,GAAG,UAAUM,KAAK,EAAE;MAChD,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG,GAAG,EAAE,MAAM,IAAI3C,KAAK,CAAC,2BAA2B,GAAG2C,KAAK,CAAC;MAClF,IAAI1D,GAAG,GAAG0D,KAAK,CAACtD,QAAQ,CAAC,EAAE,CAAC;MAC5B,IAAIJ,GAAG,CAACG,MAAM,IAAI,CAAC,EAAE;QACpBH,GAAG,GAAG,GAAG,GAAGA,GAAG;MAChB;MACA,IAAI,CAACC,IAAI,IAAID,GAAG;IACjB,CAAC;IACD2I,SAAS,CAACzI,SAAS,CAAC6D,cAAc,GAAG,UAAUC,KAAK,EAAE;MACrD,OAAOA,KAAK,YAAYjE,SAAS,IAAK,OAAOwH,MAAM,KAAK,UAAU,IAAIvD,KAAK,YAAYuD,MAAO;IAC/F,CAAC;IACDoB,SAAS,CAACzI,SAAS,CAAC+D,WAAW,GAAG,UAAUD,KAAK,EAAE6E,cAAc,EAAE;MAClE,IAAI7E,KAAK,YAAYjE,SAAS,EAAE;QAC/B8I,cAAc,CAAC7E,KAAK,CAAC7D,MAAM,CAAC,CAAC,CAAC;QAC9B,IAAI,CAACF,IAAI,IAAI+D,KAAK,CAAC/D,IAAI;MACxB,CAAC,MAAM,IAAI,OAAOsH,MAAM,KAAK,UAAU,IAAIvD,KAAK,YAAYuD,MAAM,EAAE;QACnEsB,cAAc,CAAC7E,KAAK,CAAC7D,MAAM,CAAC;QAC5B,IAAI,CAACF,IAAI,IAAI+D,KAAK,CAAC5D,QAAQ,CAAC,KAAK,CAAC;MACnC,CAAC,MAAM;QACN,MAAM,IAAImI,SAAS,CAAC,6CAA6C,CAAC;MACnE;IACD,CAAC;IACDI,SAAS,CAACzI,SAAS,CAACmD,MAAM,GAAG,YAAY;MACxC,IAAI,IAAI,CAACuF,WAAW,KAAK,QAAQ,IAAI,OAAOrB,MAAM,KAAK,UAAU,EAAE;QAClE,OAAOA,MAAM,CAACe,IAAI,CAAC,IAAI,CAACrI,IAAI,EAAE,KAAK,CAAC;MACrC;MACA,OAAO,IAAIF,SAAS,CAAC,IAAI,CAACE,IAAI,CAAC,CAACG,QAAQ,CAAC,IAAI,CAACwI,WAAW,CAAC;IAC3D,CAAC;IACDD,SAAS,CAACzI,SAAS,CAAC4D,WAAW,GAAG,UAAUsE,MAAM,EAAES,cAAc,EAAE;MACnE,IAAI/D,MAAM,GAAG/E,SAAS,CAACqB,cAAc,CAACgH,MAAM,CAAC;MAC7CS,cAAc,CAAC/D,MAAM,CAAC3E,MAAM,CAAC,CAAC,CAAC;MAC/B,IAAI,CAACF,IAAI,IAAI6E,MAAM,CAAC7E,IAAI;IACzB,CAAC;IAED2F,GAAG,CAACa,SAAS,CAAC,UAAUjB,IAAI,EAAEnF,MAAM,EAAE;MACrC,IAAImF,IAAI,YAAYzF,SAAS,IAAIyF,IAAI,CAACvF,IAAI,EAAE;QAC3C,OAAO,IAAIyI,SAAS,CAAClD,IAAI,CAACvF,IAAI,CAAC;MAChC;MACA,IAAII,MAAM,KAAK,KAAK,EAAE;QACrB,OAAO,IAAIqI,SAAS,CAAClD,IAAI,CAAC;MAC3B;IACD,CAAC,CAAC;IACFI,GAAG,CAACU,SAAS,CAAC,UAAUjG,MAAM,EAAE;MAC/B,IAAIA,MAAM,KAAK,KAAK,EAAE;QACrB,OAAO,IAAIsI,SAAS,CAAC,CAAC;MACvB;IACD,CAAC,CAAC;IAEF,OAAO/C,GAAG;EACX,CAAC,CAAE,CAAC;EAEJ9F,IAAI,CAACgH,iBAAiB,CAAC,CAAC,EAAE,UAAUtB,IAAI,EAAE;IACzC,IAAIA,IAAI,YAAYsD,IAAI,EAAE;MACzB,OAAOtD,IAAI,CAACuD,WAAW,CAAC,CAAC;IAC1B;EACD,CAAC,CAAC,CAAChC,iBAAiB,CAAC,CAAC,EAAE,UAAUiC,SAAS,EAAE;IAC5C,OAAO,IAAIF,IAAI,CAACE,SAAS,CAAC;EAC3B,CAAC,CAAC,CAACjC,iBAAiB,CAAC,CAAC,EAAE,UAAUiC,SAAS,EAAE;IAC5C,OAAO,IAAIF,IAAI,CAACE,SAAS,CAAC;EAC3B,CAAC,CAAC;EAEF,OAAOlJ,IAAI;AACZ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}