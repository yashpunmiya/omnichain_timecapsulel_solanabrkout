{"ast":null,"code":"'use strict';\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/util/inspect.js file defined at\n\n  https://github.com/nodejs/node/blob/main/lib/internal/util/inspect.js\n\n  Don't try to replace with the original file and keep it up to date with the upstream file.\n*/\nmodule.exports = {\n  format(format, ...args) {\n    // Simplified version of https://nodejs.org/api/util.html#utilformatformat-args\n    return format.replace(/%([sdifj])/g, function (...[_unused, type]) {\n      const replacement = args.shift();\n      if (type === 'f') {\n        return replacement.toFixed(6);\n      } else if (type === 'j') {\n        return JSON.stringify(replacement);\n      } else if (type === 's' && typeof replacement === 'object') {\n        const ctor = replacement.constructor !== Object ? replacement.constructor.name : '';\n        return `${ctor} {}`.trim();\n      } else {\n        return replacement.toString();\n      }\n    });\n  },\n  inspect(value) {\n    // Vastly simplified version of https://nodejs.org/api/util.html#utilinspectobject-options\n    switch (typeof value) {\n      case 'string':\n        if (value.includes(\"'\")) {\n          if (!value.includes('\"')) {\n            return `\"${value}\"`;\n          } else if (!value.includes('`') && !value.includes('${')) {\n            return `\\`${value}\\``;\n          }\n        }\n        return `'${value}'`;\n      case 'number':\n        if (isNaN(value)) {\n          return 'NaN';\n        } else if (Object.is(value, -0)) {\n          return String(value);\n        }\n        return value;\n      case 'bigint':\n        return `${String(value)}n`;\n      case 'boolean':\n      case 'undefined':\n        return String(value);\n      case 'object':\n        return '{}';\n    }\n  }\n};","map":{"version":3,"names":["module","exports","format","args","replace","_unused","type","replacement","shift","toFixed","JSON","stringify","ctor","constructor","Object","name","trim","toString","inspect","value","includes","isNaN","is","String"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/readable-stream/lib/ours/util/inspect.js"],"sourcesContent":["'use strict'\n\n/*\n  This file is a reduced and adapted version of the main lib/internal/util/inspect.js file defined at\n\n  https://github.com/nodejs/node/blob/main/lib/internal/util/inspect.js\n\n  Don't try to replace with the original file and keep it up to date with the upstream file.\n*/\nmodule.exports = {\n  format(format, ...args) {\n    // Simplified version of https://nodejs.org/api/util.html#utilformatformat-args\n    return format.replace(/%([sdifj])/g, function (...[_unused, type]) {\n      const replacement = args.shift()\n      if (type === 'f') {\n        return replacement.toFixed(6)\n      } else if (type === 'j') {\n        return JSON.stringify(replacement)\n      } else if (type === 's' && typeof replacement === 'object') {\n        const ctor = replacement.constructor !== Object ? replacement.constructor.name : ''\n        return `${ctor} {}`.trim()\n      } else {\n        return replacement.toString()\n      }\n    })\n  },\n  inspect(value) {\n    // Vastly simplified version of https://nodejs.org/api/util.html#utilinspectobject-options\n    switch (typeof value) {\n      case 'string':\n        if (value.includes(\"'\")) {\n          if (!value.includes('\"')) {\n            return `\"${value}\"`\n          } else if (!value.includes('`') && !value.includes('${')) {\n            return `\\`${value}\\``\n          }\n        }\n        return `'${value}'`\n      case 'number':\n        if (isNaN(value)) {\n          return 'NaN'\n        } else if (Object.is(value, -0)) {\n          return String(value)\n        }\n        return value\n      case 'bigint':\n        return `${String(value)}n`\n      case 'boolean':\n      case 'undefined':\n        return String(value)\n      case 'object':\n        return '{}'\n    }\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG;EACfC,MAAMA,CAACA,MAAM,EAAE,GAAGC,IAAI,EAAE;IACtB;IACA,OAAOD,MAAM,CAACE,OAAO,CAAC,aAAa,EAAE,UAAU,GAAG,CAACC,OAAO,EAAEC,IAAI,CAAC,EAAE;MACjE,MAAMC,WAAW,GAAGJ,IAAI,CAACK,KAAK,CAAC,CAAC;MAChC,IAAIF,IAAI,KAAK,GAAG,EAAE;QAChB,OAAOC,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM,IAAIH,IAAI,KAAK,GAAG,EAAE;QACvB,OAAOI,IAAI,CAACC,SAAS,CAACJ,WAAW,CAAC;MACpC,CAAC,MAAM,IAAID,IAAI,KAAK,GAAG,IAAI,OAAOC,WAAW,KAAK,QAAQ,EAAE;QAC1D,MAAMK,IAAI,GAAGL,WAAW,CAACM,WAAW,KAAKC,MAAM,GAAGP,WAAW,CAACM,WAAW,CAACE,IAAI,GAAG,EAAE;QACnF,OAAO,GAAGH,IAAI,KAAK,CAACI,IAAI,CAAC,CAAC;MAC5B,CAAC,MAAM;QACL,OAAOT,WAAW,CAACU,QAAQ,CAAC,CAAC;MAC/B;IACF,CAAC,CAAC;EACJ,CAAC;EACDC,OAAOA,CAACC,KAAK,EAAE;IACb;IACA,QAAQ,OAAOA,KAAK;MAClB,KAAK,QAAQ;QACX,IAAIA,KAAK,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;UACvB,IAAI,CAACD,KAAK,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACxB,OAAO,IAAID,KAAK,GAAG;UACrB,CAAC,MAAM,IAAI,CAACA,KAAK,CAACC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAACD,KAAK,CAACC,QAAQ,CAAC,IAAI,CAAC,EAAE;YACxD,OAAO,KAAKD,KAAK,IAAI;UACvB;QACF;QACA,OAAO,IAAIA,KAAK,GAAG;MACrB,KAAK,QAAQ;QACX,IAAIE,KAAK,CAACF,KAAK,CAAC,EAAE;UAChB,OAAO,KAAK;QACd,CAAC,MAAM,IAAIL,MAAM,CAACQ,EAAE,CAACH,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE;UAC/B,OAAOI,MAAM,CAACJ,KAAK,CAAC;QACtB;QACA,OAAOA,KAAK;MACd,KAAK,QAAQ;QACX,OAAO,GAAGI,MAAM,CAACJ,KAAK,CAAC,GAAG;MAC5B,KAAK,SAAS;MACd,KAAK,WAAW;QACd,OAAOI,MAAM,CAACJ,KAAK,CAAC;MACtB,KAAK,QAAQ;QACX,OAAO,IAAI;IACf;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}