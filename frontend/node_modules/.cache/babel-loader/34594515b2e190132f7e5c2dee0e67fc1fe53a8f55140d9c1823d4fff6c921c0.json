{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\nvar Wallet = /** @class */function (_super) {\n  __extends(Wallet, _super);\n  function Wallet(provider, network) {\n    var _this = _super.call(this) || this;\n    _this._handleMessage = function (e) {\n      if (_this._injectedProvider && e.source === window || e.origin === _this._providerUrl.origin && e.source === _this._popup) {\n        if (e.data.method === 'connected') {\n          var newPublicKey = new PublicKey(e.data.params.publicKey);\n          if (!_this._publicKey || !_this._publicKey.equals(newPublicKey)) {\n            if (_this._publicKey && !_this._publicKey.equals(newPublicKey)) {\n              _this._handleDisconnect();\n            }\n            _this._publicKey = newPublicKey;\n            _this._autoApprove = !!e.data.params.autoApprove;\n            _this.emit('connect', _this._publicKey);\n          }\n        } else if (e.data.method === 'disconnected') {\n          _this._handleDisconnect();\n        } else if (e.data.result || e.data.error) {\n          if (_this._responsePromises.has(e.data.id)) {\n            var _a = __read(_this._responsePromises.get(e.data.id), 2),\n              resolve = _a[0],\n              reject = _a[1];\n            if (e.data.result) {\n              resolve(e.data.result);\n            } else {\n              reject(new Error(e.data.error));\n            }\n          }\n        }\n      }\n    };\n    _this._handleConnect = function () {\n      if (!_this._handlerAdded) {\n        _this._handlerAdded = true;\n        window.addEventListener('message', _this._handleMessage);\n        window.addEventListener('beforeunload', _this.disconnect);\n      }\n      if (_this._injectedProvider) {\n        return new Promise(function (resolve) {\n          _this._sendRequest('connect', {});\n          resolve();\n        });\n      } else {\n        window.name = 'parent';\n        _this._popup = window.open(_this._providerUrl.toString(), '_blank', 'location,resizable,width=460,height=675');\n        return new Promise(function (resolve) {\n          _this.once('connect', resolve);\n        });\n      }\n    };\n    _this._handleDisconnect = function () {\n      if (_this._handlerAdded) {\n        _this._handlerAdded = false;\n        window.removeEventListener('message', _this._handleMessage);\n        window.removeEventListener('beforeunload', _this.disconnect);\n      }\n      if (_this._publicKey) {\n        _this._publicKey = null;\n        _this.emit('disconnect');\n      }\n      _this._responsePromises.forEach(function (_a, id) {\n        var _b = __read(_a, 2),\n          resolve = _b[0],\n          reject = _b[1];\n        _this._responsePromises.delete(id);\n        reject('Wallet disconnected');\n      });\n    };\n    _this._sendRequest = function (method, params) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var requestId;\n        var _this = this;\n        return __generator(this, function (_a) {\n          if (method !== 'connect' && !this.connected) {\n            throw new Error('Wallet not connected');\n          }\n          requestId = this._nextRequestId;\n          ++this._nextRequestId;\n          return [2 /*return*/, new Promise(function (resolve, reject) {\n            _this._responsePromises.set(requestId, [resolve, reject]);\n            if (_this._injectedProvider) {\n              _this._injectedProvider.postMessage({\n                jsonrpc: '2.0',\n                id: requestId,\n                method: method,\n                params: __assign({\n                  network: _this._network\n                }, params)\n              });\n            } else {\n              _this._popup.postMessage({\n                jsonrpc: '2.0',\n                id: requestId,\n                method: method,\n                params: params\n              }, _this._providerUrl.origin);\n              if (!_this.autoApprove) {\n                _this._popup.focus();\n              }\n            }\n          })];\n        });\n      });\n    };\n    _this.connect = function () {\n      if (_this._popup) {\n        _this._popup.close();\n      }\n      return _this._handleConnect();\n    };\n    _this.disconnect = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!this._injectedProvider) return [3 /*break*/, 2];\n              return [4 /*yield*/, this._sendRequest('disconnect', {})];\n            case 1:\n              _a.sent();\n              _a.label = 2;\n            case 2:\n              if (this._popup) {\n                this._popup.close();\n              }\n              this._handleDisconnect();\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n    _this.sign = function (data, display) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response, signature, publicKey;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!(data instanceof Uint8Array)) {\n                throw new Error('Data must be an instance of Uint8Array');\n              }\n              return [4 /*yield*/, this._sendRequest('sign', {\n                data: data,\n                display: display\n              })];\n            case 1:\n              response = _a.sent();\n              signature = bs58.decode(response.signature);\n              publicKey = new PublicKey(response.publicKey);\n              return [2 /*return*/, {\n                signature: signature,\n                publicKey: publicKey\n              }];\n          }\n        });\n      });\n    };\n    if (isInjectedProvider(provider)) {\n      _this._injectedProvider = provider;\n    } else if (isString(provider)) {\n      _this._providerUrl = new URL(provider);\n      _this._providerUrl.hash = new URLSearchParams({\n        origin: window.location.origin,\n        network: network\n      }).toString();\n    } else {\n      throw new Error('provider parameter must be an injected provider or a URL string.');\n    }\n    _this._network = network;\n    _this._publicKey = null;\n    _this._autoApprove = false;\n    _this._popup = null;\n    _this._handlerAdded = false;\n    _this._nextRequestId = 1;\n    _this._responsePromises = new Map();\n    return _this;\n  }\n  Object.defineProperty(Wallet.prototype, \"publicKey\", {\n    get: function () {\n      return this._publicKey;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Wallet.prototype, \"connected\", {\n    get: function () {\n      return this._publicKey !== null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Wallet.prototype, \"autoApprove\", {\n    get: function () {\n      return this._autoApprove;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Wallet;\n}(EventEmitter);\nexport default Wallet;\nfunction isString(a) {\n  return typeof a === 'string';\n}\nfunction isInjectedProvider(a) {\n  return isObject(a) && isFunction(a.postMessage);\n}\nfunction isObject(a) {\n  return typeof a === 'object' && a !== null;\n}\nfunction isFunction(a) {\n  return typeof a === 'function';\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}