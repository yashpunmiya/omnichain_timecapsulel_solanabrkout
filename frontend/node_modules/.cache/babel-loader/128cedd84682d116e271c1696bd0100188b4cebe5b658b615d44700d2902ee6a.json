{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PublicKey = exports.GetPublicKey = exports.GetAddress = exports.DerivationPath = exports.Bundle = void 0;\nconst schema_utils_1 = require(\"@trezor/schema-utils\");\nconst Bundle = type => schema_utils_1.Type.Object({\n  bundle: schema_utils_1.Type.Array(type, {\n    minItems: 1\n  })\n});\nexports.Bundle = Bundle;\nexports.DerivationPath = schema_utils_1.Type.Union([schema_utils_1.Type.String(), schema_utils_1.Type.Array(schema_utils_1.Type.Number())], {\n  description: 'Derivation Path (BIP32).',\n  $id: 'DerivationPath'\n});\nexports.GetAddress = schema_utils_1.Type.Object({\n  path: exports.DerivationPath,\n  address: schema_utils_1.Type.Optional(schema_utils_1.Type.String()),\n  showOnTrezor: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean({\n    default: true\n  })),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  useEventListener: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n});\nexports.GetPublicKey = schema_utils_1.Type.Object({\n  path: exports.DerivationPath,\n  showOnTrezor: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  suppressBackupWarning: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean()),\n  chunkify: schema_utils_1.Type.Optional(schema_utils_1.Type.Boolean())\n});\nexports.PublicKey = schema_utils_1.Type.Object({\n  publicKey: schema_utils_1.Type.String(),\n  path: schema_utils_1.Type.Array(schema_utils_1.Type.Number()),\n  serializedPath: schema_utils_1.Type.String()\n});\n//# sourceMappingURL=params.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}