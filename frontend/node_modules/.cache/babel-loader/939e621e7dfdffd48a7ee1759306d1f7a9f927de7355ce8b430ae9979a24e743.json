{"ast":null,"code":"import { assertPayloadIsMessageSignatureNeededResponsePayload, ConnectionManager, Platform, PopupEvent, assertPayloadIsSolanaWalletAdapterApproved, DEFAULT_POPUP_HEIGHT_PX, assertPayloadIsTransactionSignatureNeededResponsePayload } from '@fractalwagmi/popup-connection';\nimport { WalletError, WalletNotConnectedError, WalletSignTransactionError, WalletPublicKeyError, WalletConnectionError, WalletSignMessageError } from '@solana/wallet-adapter-base';\nimport { Transaction, PublicKey } from '@solana/web3.js';\nimport base58 from 'bs58';\nimport { createNonce } from \"./nonce.js\";\nconst UNKNOWN_ERROR_MESSAGE = 'Unknown Error';\nconst FRACTAL_DOMAIN_HTTPS = 'https://fractal.is';\nconst APPROVE_PAGE_URL = `${FRACTAL_DOMAIN_HTTPS}/wallet-adapter/approve`;\nconst SIGN_PAGE_URL = `${FRACTAL_DOMAIN_HTTPS}/wallet-adapter/sign`;\nconst SIGN_MESSAGE_PAGE_URL = `${FRACTAL_DOMAIN_HTTPS}/wallet-adapter/sign/message`;\nconst MIN_POPUP_HEIGHT_PX = DEFAULT_POPUP_HEIGHT_PX;\nconst MAX_POPUP_WIDTH_PX = 850;\nconst LOCAL_STORAGE_KEY_FOR_PUBLIC_KEY = 'RdxqNYxF';\nexport class FractalWalletAdapterImpl {\n  constructor() {\n    this.popupManager = new ConnectionManager(Platform.SOLANA_WALLET_ADAPTER);\n    this.publicKey = null;\n    this.connecting = false;\n  }\n  getPublicKey() {\n    return this.publicKey;\n  }\n  async connect() {\n    let resolve;\n    let reject;\n    const publicKeyInLocalStorage = window.localStorage.getItem(LOCAL_STORAGE_KEY_FOR_PUBLIC_KEY);\n    if (publicKeyInLocalStorage) {\n      this.publicKey = new PublicKey(publicKeyInLocalStorage);\n      return Promise.resolve();\n    }\n    const nonce = createNonce();\n    this.popupManager.open({\n      nonce,\n      url: `${APPROVE_PAGE_URL}/${nonce}`\n    });\n    const handleSolanaWalletAdapterApproved = payload => {\n      if (!assertPayloadIsSolanaWalletAdapterApproved(payload)) {\n        reject(new WalletConnectionError('Malformed payload when setting up connection. ' + 'Expected { solanaPublicKey: string } but ' + `received ${JSON.stringify(payload)}`));\n        this.popupManager.close();\n        return;\n      }\n      try {\n        this.publicKey = new PublicKey(payload.solanaPublicKey);\n        window.localStorage.setItem(LOCAL_STORAGE_KEY_FOR_PUBLIC_KEY, payload.solanaPublicKey);\n        resolve();\n      } catch (error) {\n        const publicKeyError = new WalletPublicKeyError(error instanceof Error ? error.message : UNKNOWN_ERROR_MESSAGE, error);\n        reject(publicKeyError);\n      }\n      this.popupManager.close();\n    };\n    const handleExplicitDenialByUser = () => {\n      reject(new WalletConnectionError('The user denied the connection.'));\n      this.popupManager.close();\n    };\n    const handleClosedByUser = () => {\n      reject(new WalletConnectionError('The user denied the connection.'));\n      this.popupManager.close();\n    };\n    this.popupManager.onConnectionUpdated(connection => {\n      if (!connection) {\n        return;\n      }\n      connection.on(PopupEvent.SOLANA_WALLET_ADAPTER_APPROVED, handleSolanaWalletAdapterApproved);\n      connection.on(PopupEvent.SOLANA_WALLET_ADAPTER_DENIED, handleExplicitDenialByUser);\n      connection.on(PopupEvent.POPUP_CLOSED, handleClosedByUser);\n    });\n    return new Promise((promiseResolver, promiseRejector) => {\n      resolve = promiseResolver;\n      reject = promiseRejector;\n    });\n  }\n  async disconnect() {\n    this.popupManager.tearDown();\n    this.publicKey = null;\n    window.localStorage.removeItem(LOCAL_STORAGE_KEY_FOR_PUBLIC_KEY);\n  }\n  async signTransaction(transaction) {\n    try {\n      this.checkWalletReadiness();\n      const result = await this.signTransactions([transaction]);\n      return result[0];\n    } catch (error) {\n      let errorToThrow = error;\n      if (!(error instanceof WalletError)) {\n        errorToThrow = new WalletSignTransactionError(error instanceof Error ? error.message : UNKNOWN_ERROR_MESSAGE, error);\n      }\n      throw errorToThrow;\n    }\n  }\n  async signAllTransactions(transactions) {\n    try {\n      this.checkWalletReadiness();\n      const result = await this.signTransactions(transactions);\n      return result;\n    } catch (error) {\n      let errorToThrow = error;\n      if (!(error instanceof WalletError)) {\n        errorToThrow = new WalletSignTransactionError(error instanceof Error ? error.message : UNKNOWN_ERROR_MESSAGE, error);\n      }\n      throw errorToThrow;\n    }\n  }\n  async signMessage(encodedMessage) {\n    const decodedMessage = new TextDecoder().decode(encodedMessage);\n    let resolve;\n    let reject;\n    const handleMessageSignatureNeededResponse = payload => {\n      if (!assertPayloadIsMessageSignatureNeededResponsePayload(payload)) {\n        const error = new WalletSignMessageError('Malformed payload when signing message. ' + 'Expected { decodedSignature: string } ' + `but received ${JSON.stringify(payload)}`);\n        reject(error);\n        this.popupManager.close();\n        return;\n      }\n      const encodedSignature = Uint8Array.from(payload.decodedSignature.split(',').map(n => Number(n)));\n      resolve(encodedSignature);\n      this.popupManager.close();\n    };\n    const handleClosedOrDeniedByUser = () => {\n      reject(new WalletSignMessageError('The user did not approve the message'));\n      this.popupManager.close();\n    };\n    const handleAuthLoaded = () => {\n      var _a;\n      const payload = {\n        decodedMessage\n      };\n      (_a = this.popupManager.getConnection()) === null || _a === void 0 ? void 0 : _a.send({\n        event: PopupEvent.MESSAGE_SIGNATURE_NEEDED,\n        payload\n      });\n    };\n    const nonce = createNonce();\n    this.popupManager.open({\n      heightPx: Math.max(MIN_POPUP_HEIGHT_PX, Math.floor(window.innerHeight * 0.8)),\n      nonce,\n      url: `${SIGN_MESSAGE_PAGE_URL}/${nonce}`,\n      widthPx: Math.min(MAX_POPUP_WIDTH_PX, Math.floor(window.innerWidth * 0.8))\n    });\n    this.popupManager.onConnectionUpdated(connection => {\n      if (!connection) {\n        return;\n      }\n      connection.on(PopupEvent.MESSAGE_SIGNATURE_NEEDED_RESPONSE, handleMessageSignatureNeededResponse);\n      connection.on(PopupEvent.TRANSACTION_DENIED, handleClosedOrDeniedByUser);\n      connection.on(PopupEvent.POPUP_CLOSED, handleClosedOrDeniedByUser);\n      connection.on(PopupEvent.AUTH_LOADED, handleAuthLoaded);\n    });\n    return new Promise((promiseResolver, promiseRejector) => {\n      resolve = promiseResolver;\n      reject = promiseRejector;\n    });\n  }\n  async signTransactions(transactions) {\n    let resolve;\n    let reject;\n    const handleTransactionSignatureNeededResponse = payload => {\n      if (!assertPayloadIsTransactionSignatureNeededResponsePayload(payload)) {\n        const error = new WalletSignTransactionError('Malformed payload when signing transactions. ' + 'Expected { signedB58Transactions: string[] } ' + `but received ${JSON.stringify(payload)}`);\n        reject(error);\n        this.popupManager.close();\n        return;\n      }\n      const signedTransactions = payload.signedB58Transactions.map(signedB58Transaction => {\n        return Transaction.from(base58.decode(signedB58Transaction));\n      });\n      resolve(signedTransactions);\n      this.popupManager.close();\n    };\n    const handleClosedOrDeniedByUser = () => {\n      reject(new WalletSignTransactionError('The user did not approve the transaction'));\n      this.popupManager.close();\n    };\n    const handleAuthLoaded = () => {\n      var _a;\n      const payload = {\n        unsignedB58Transactions: transactions.map(t => base58.encode(t.serializeMessage()))\n      };\n      (_a = this.popupManager.getConnection()) === null || _a === void 0 ? void 0 : _a.send({\n        event: PopupEvent.TRANSACTION_SIGNATURE_NEEDED,\n        payload\n      });\n    };\n    const nonce = createNonce();\n    this.popupManager.open({\n      heightPx: Math.max(MIN_POPUP_HEIGHT_PX, Math.floor(window.innerHeight * 0.8)),\n      nonce,\n      url: `${SIGN_PAGE_URL}/${nonce}`,\n      widthPx: Math.min(MAX_POPUP_WIDTH_PX, Math.floor(window.innerWidth * 0.8))\n    });\n    this.popupManager.onConnectionUpdated(connection => {\n      if (!connection) {\n        return;\n      }\n      connection.on(PopupEvent.TRANSACTION_SIGNATURE_NEEDED_RESPONSE, handleTransactionSignatureNeededResponse);\n      connection.on(PopupEvent.TRANSACTION_DENIED, handleClosedOrDeniedByUser);\n      connection.on(PopupEvent.POPUP_CLOSED, handleClosedOrDeniedByUser);\n      connection.on(PopupEvent.AUTH_LOADED, handleAuthLoaded);\n    });\n    return new Promise((promiseResolver, promiseRejector) => {\n      resolve = promiseResolver;\n      reject = promiseRejector;\n    });\n  }\n  checkWalletReadiness() {\n    if (this.publicKey === null) {\n      throw new WalletNotConnectedError('`publicKey` is null. Did you forget to call `.connect()`?');\n    }\n  }\n}","map":{"version":3,"names":["assertPayloadIsMessageSignatureNeededResponsePayload","ConnectionManager","Platform","PopupEvent","assertPayloadIsSolanaWalletAdapterApproved","DEFAULT_POPUP_HEIGHT_PX","assertPayloadIsTransactionSignatureNeededResponsePayload","WalletError","WalletNotConnectedError","WalletSignTransactionError","WalletPublicKeyError","WalletConnectionError","WalletSignMessageError","Transaction","PublicKey","base58","createNonce","UNKNOWN_ERROR_MESSAGE","FRACTAL_DOMAIN_HTTPS","APPROVE_PAGE_URL","SIGN_PAGE_URL","SIGN_MESSAGE_PAGE_URL","MIN_POPUP_HEIGHT_PX","MAX_POPUP_WIDTH_PX","LOCAL_STORAGE_KEY_FOR_PUBLIC_KEY","FractalWalletAdapterImpl","constructor","popupManager","SOLANA_WALLET_ADAPTER","publicKey","connecting","getPublicKey","connect","resolve","reject","publicKeyInLocalStorage","window","localStorage","getItem","Promise","nonce","open","url","handleSolanaWalletAdapterApproved","payload","JSON","stringify","close","solanaPublicKey","setItem","error","publicKeyError","Error","message","handleExplicitDenialByUser","handleClosedByUser","onConnectionUpdated","connection","on","SOLANA_WALLET_ADAPTER_APPROVED","SOLANA_WALLET_ADAPTER_DENIED","POPUP_CLOSED","promiseResolver","promiseRejector","disconnect","tearDown","removeItem","signTransaction","transaction","checkWalletReadiness","result","signTransactions","errorToThrow","signAllTransactions","transactions","signMessage","encodedMessage","decodedMessage","TextDecoder","decode","handleMessageSignatureNeededResponse","encodedSignature","Uint8Array","from","decodedSignature","split","map","n","Number","handleClosedOrDeniedByUser","handleAuthLoaded","_a","getConnection","send","event","MESSAGE_SIGNATURE_NEEDED","heightPx","Math","max","floor","innerHeight","widthPx","min","innerWidth","MESSAGE_SIGNATURE_NEEDED_RESPONSE","TRANSACTION_DENIED","AUTH_LOADED","handleTransactionSignatureNeededResponse","signedTransactions","signedB58Transactions","signedB58Transaction","unsignedB58Transactions","t","encode","serializeMessage","TRANSACTION_SIGNATURE_NEEDED","TRANSACTION_SIGNATURE_NEEDED_RESPONSE"],"sources":["../../../src/core/fractal-wallet-adapter-impl.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}