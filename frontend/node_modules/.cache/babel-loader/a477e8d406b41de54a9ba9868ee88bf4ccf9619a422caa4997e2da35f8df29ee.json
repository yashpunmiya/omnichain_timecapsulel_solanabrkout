{"ast":null,"code":"import { formatAbiItem } from './formatAbiItem.js';\n/**\n * Parses JSON ABI into human-readable ABI\n *\n * @param abi - ABI\n * @returns Human-readable ABI\n */\nexport function formatAbi(abi) {\n  const signatures = [];\n  const length = abi.length;\n  for (let i = 0; i < length; i++) {\n    const abiItem = abi[i];\n    const signature = formatAbiItem(abiItem);\n    signatures.push(signature);\n  }\n  return signatures;\n}","map":{"version":3,"names":["formatAbiItem","formatAbi","abi","signatures","length","i","abiItem","signature","push"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\abitype\\src\\human-readable\\formatAbi.ts"],"sourcesContent":["import type { Abi } from '../abi.js'\nimport { type FormatAbiItem, formatAbiItem } from './formatAbiItem.js'\n\n/**\n * Parses JSON ABI into human-readable ABI\n *\n * @param abi - ABI\n * @returns Human-readable ABI\n */\nexport type FormatAbi<abi extends Abi | readonly unknown[]> = Abi extends abi\n  ? readonly string[]\n  : abi extends readonly []\n    ? never\n    : abi extends Abi\n      ? {\n          [key in keyof abi]: FormatAbiItem<abi[key]>\n        }\n      : readonly string[]\n\n/**\n * Parses JSON ABI into human-readable ABI\n *\n * @param abi - ABI\n * @returns Human-readable ABI\n */\nexport function formatAbi<const abi extends Abi | readonly unknown[]>(\n  abi: abi,\n): FormatAbi<abi> {\n  const signatures = []\n  const length = abi.length\n  for (let i = 0; i < length; i++) {\n    const abiItem = abi[i]!\n    const signature = formatAbiItem(abiItem as Abi[number])\n    signatures.push(signature)\n  }\n  return signatures as unknown as FormatAbi<abi>\n}\n"],"mappings":"AACA,SAA6BA,aAAa,QAAQ,oBAAoB;AAkBtE;;;;;;AAMA,OAAM,SAAUC,SAASA,CACvBC,GAAQ;EAER,MAAMC,UAAU,GAAG,EAAE;EACrB,MAAMC,MAAM,GAAGF,GAAG,CAACE,MAAM;EACzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,EAAEC,CAAC,EAAE,EAAE;IAC/B,MAAMC,OAAO,GAAGJ,GAAG,CAACG,CAAC,CAAE;IACvB,MAAME,SAAS,GAAGP,aAAa,CAACM,OAAsB,CAAC;IACvDH,UAAU,CAACK,IAAI,CAACD,SAAS,CAAC;EAC5B;EACA,OAAOJ,UAAuC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}