{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JavaScriptTypeBuilder = void 0;\nconst json_1 = require(\"./json\");\nconst index_1 = require(\"../async-iterator/index\");\nconst index_2 = require(\"../awaited/index\");\nconst index_3 = require(\"../bigint/index\");\nconst index_4 = require(\"../constructor/index\");\nconst index_5 = require(\"../constructor-parameters/index\");\nconst index_6 = require(\"../date/index\");\nconst index_7 = require(\"../function/index\");\nconst index_8 = require(\"../instance-type/index\");\nconst index_9 = require(\"../iterator/index\");\nconst index_10 = require(\"../parameters/index\");\nconst index_11 = require(\"../promise/index\");\nconst index_12 = require(\"../regexp/index\");\nconst index_13 = require(\"../return-type/index\");\nconst index_14 = require(\"../symbol/index\");\nconst index_15 = require(\"../uint8array/index\");\nconst index_16 = require(\"../undefined/index\");\nconst index_17 = require(\"../void/index\");\n/** JavaScript Type Builder with Static Resolution for TypeScript */\nclass JavaScriptTypeBuilder extends json_1.JsonTypeBuilder {\n  /** `[JavaScript]` Creates a AsyncIterator type */\n  AsyncIterator(items, options) {\n    return (0, index_1.AsyncIterator)(items, options);\n  }\n  /** `[JavaScript]` Constructs a type by recursively unwrapping Promise types */\n  Awaited(schema, options) {\n    return (0, index_2.Awaited)(schema, options);\n  }\n  /** `[JavaScript]` Creates a BigInt type */\n  BigInt(options) {\n    return (0, index_3.BigInt)(options);\n  }\n  /** `[JavaScript]` Extracts the ConstructorParameters from the given Constructor type */\n  ConstructorParameters(schema, options) {\n    return (0, index_5.ConstructorParameters)(schema, options);\n  }\n  /** `[JavaScript]` Creates a Constructor type */\n  Constructor(parameters, returns, options) {\n    return (0, index_4.Constructor)(parameters, returns, options);\n  }\n  /** `[JavaScript]` Creates a Date type */\n  Date(options = {}) {\n    return (0, index_6.Date)(options);\n  }\n  /** `[JavaScript]` Creates a Function type */\n  Function(parameters, returns, options) {\n    return (0, index_7.Function)(parameters, returns, options);\n  }\n  /** `[JavaScript]` Extracts the InstanceType from the given Constructor type */\n  InstanceType(schema, options) {\n    return (0, index_8.InstanceType)(schema, options);\n  }\n  /** `[JavaScript]` Creates an Iterator type */\n  Iterator(items, options) {\n    return (0, index_9.Iterator)(items, options);\n  }\n  /** `[JavaScript]` Extracts the Parameters from the given Function type */\n  Parameters(schema, options) {\n    return (0, index_10.Parameters)(schema, options);\n  }\n  /** `[JavaScript]` Creates a Promise type */\n  Promise(item, options) {\n    return (0, index_11.Promise)(item, options);\n  }\n  /** `[JavaScript]` Creates a RegExp type */\n  RegExp(unresolved, options) {\n    return (0, index_12.RegExp)(unresolved, options);\n  }\n  /** `[JavaScript]` Extracts the ReturnType from the given Function type */\n  ReturnType(schema, options) {\n    return (0, index_13.ReturnType)(schema, options);\n  }\n  /** `[JavaScript]` Creates a Symbol type */\n  Symbol(options) {\n    return (0, index_14.Symbol)(options);\n  }\n  /** `[JavaScript]` Creates a Undefined type */\n  Undefined(options) {\n    return (0, index_16.Undefined)(options);\n  }\n  /** `[JavaScript]` Creates a Uint8Array type */\n  Uint8Array(options) {\n    return (0, index_15.Uint8Array)(options);\n  }\n  /** `[JavaScript]` Creates a Void type */\n  Void(options) {\n    return (0, index_17.Void)(options);\n  }\n}\nexports.JavaScriptTypeBuilder = JavaScriptTypeBuilder;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}