{"ast":null,"code":"import { BaseError } from '../../errors/base.js';\nexport class BytecodeLengthExceedsMaxSizeError extends BaseError {\n  constructor({\n    givenLength,\n    maxBytecodeSize\n  }) {\n    super(`Bytecode cannot be longer than ${maxBytecodeSize} bytes. Given length: ${givenLength}`, {\n      name: 'BytecodeLengthExceedsMaxSizeError'\n    });\n  }\n}\nexport class BytecodeLengthInWordsMustBeOddError extends BaseError {\n  constructor({\n    givenLengthInWords\n  }) {\n    super(`Bytecode length in 32-byte words must be odd. Given length in words: ${givenLengthInWords}`, {\n      name: 'BytecodeLengthInWordsMustBeOddError'\n    });\n  }\n}\nexport class BytecodeLengthMustBeDivisibleBy32Error extends BaseError {\n  constructor({\n    givenLength\n  }) {\n    super(`The bytecode length in bytes must be divisible by 32. Given length: ${givenLength}`, {\n      name: 'BytecodeLengthMustBeDivisibleBy32Error'\n    });\n  }\n}\n//# sourceMappingURL=bytecode.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}