{"ast":null,"code":"/** @internal */\nexport function withResolvers() {\n  let resolve = () => undefined;\n  let reject = () => undefined;\n  const promise = new Promise((resolve_, reject_) => {\n    resolve = resolve_;\n    reject = reject_;\n  });\n  return {\n    promise,\n    resolve,\n    reject\n  };\n}","map":{"version":3,"names":["withResolvers","resolve","undefined","reject","promise","Promise","resolve_","reject_"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\utils\\promise\\withResolvers.ts"],"sourcesContent":["/** @internal */\nexport type PromiseWithResolvers<type> = {\n  promise: Promise<type>\n  resolve: (value: type | PromiseLike<type>) => void\n  reject: (reason?: unknown) => void\n}\n\n/** @internal */\nexport function withResolvers<type>(): PromiseWithResolvers<type> {\n  let resolve: PromiseWithResolvers<type>['resolve'] = () => undefined\n  let reject: PromiseWithResolvers<type>['reject'] = () => undefined\n\n  const promise = new Promise<type>((resolve_, reject_) => {\n    resolve = resolve_\n    reject = reject_\n  })\n\n  return { promise, resolve, reject }\n}\n"],"mappings":"AAOA;AACA,OAAM,SAAUA,aAAaA,CAAA;EAC3B,IAAIC,OAAO,GAA0CA,CAAA,KAAMC,SAAS;EACpE,IAAIC,MAAM,GAAyCA,CAAA,KAAMD,SAAS;EAElE,MAAME,OAAO,GAAG,IAAIC,OAAO,CAAO,CAACC,QAAQ,EAAEC,OAAO,KAAI;IACtDN,OAAO,GAAGK,QAAQ;IAClBH,MAAM,GAAGI,OAAO;EAClB,CAAC,CAAC;EAEF,OAAO;IAAEH,OAAO;IAAEH,OAAO;IAAEE;EAAM,CAAE;AACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}