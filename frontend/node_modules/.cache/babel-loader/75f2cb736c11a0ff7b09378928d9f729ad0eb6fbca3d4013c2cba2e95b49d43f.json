{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProxyEventEmitter = void 0;\nclass ProxyEventEmitter {\n  eventEmitters;\n  constructor(eventEmitters) {\n    this.eventEmitters = eventEmitters;\n  }\n  emit(eventName, ...args) {\n    this.eventEmitters.forEach(emitter => emitter.emit(eventName, ...args));\n    return true;\n  }\n  on(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.on(eventName, listener));\n    return this;\n  }\n  off(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.off(eventName, listener));\n    return this;\n  }\n  once(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.once(eventName, listener));\n    return this;\n  }\n  addListener(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.addListener(eventName, listener));\n    return this;\n  }\n  prependListener(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.prependListener(eventName, listener));\n    return this;\n  }\n  prependOnceListener(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.prependOnceListener(eventName, listener));\n    return this;\n  }\n  removeAllListeners(event) {\n    this.eventEmitters.forEach(emitter => emitter.removeAllListeners(event));\n    return this;\n  }\n  removeListener(eventName, listener) {\n    this.eventEmitters.forEach(emitter => emitter.removeListener(eventName, listener));\n    return this;\n  }\n  setMaxListeners(n) {\n    this.eventEmitters.forEach(emitter => emitter.setMaxListeners(n));\n    return this;\n  }\n  eventNames() {\n    return this.eventEmitters[0].eventNames();\n  }\n  getMaxListeners() {\n    return this.eventEmitters[0].getMaxListeners();\n  }\n  listenerCount(eventName, listener) {\n    return this.eventEmitters[0].listenerCount(eventName, listener);\n  }\n  rawListeners(eventName) {\n    return this.eventEmitters[0].rawListeners(eventName);\n  }\n  listeners(eventName) {\n    return this.eventEmitters[0].listeners(eventName);\n  }\n}\nexports.ProxyEventEmitter = ProxyEventEmitter;","map":{"version":3,"names":["Object","defineProperty","exports","value","ProxyEventEmitter","eventEmitters","constructor","emit","eventName","args","forEach","emitter","on","listener","off","once","addListener","prependListener","prependOnceListener","removeAllListeners","event","removeListener","setMaxListeners","n","eventNames","getMaxListeners","listenerCount","rawListeners","listeners"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@trezor/connect/lib/utils/proxy-event-emitter.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProxyEventEmitter = void 0;\nclass ProxyEventEmitter {\n    eventEmitters;\n    constructor(eventEmitters) {\n        this.eventEmitters = eventEmitters;\n    }\n    emit(eventName, ...args) {\n        this.eventEmitters.forEach(emitter => emitter.emit(eventName, ...args));\n        return true;\n    }\n    on(eventName, listener) {\n        this.eventEmitters.forEach(emitter => emitter.on(eventName, listener));\n        return this;\n    }\n    off(eventName, listener) {\n        this.eventEmitters.forEach(emitter => emitter.off(eventName, listener));\n        return this;\n    }\n    once(eventName, listener) {\n        this.eventEmitters.forEach(emitter => emitter.once(eventName, listener));\n        return this;\n    }\n    addListener(eventName, listener) {\n        this.eventEmitters.forEach(emitter => emitter.addListener(eventName, listener));\n        return this;\n    }\n    prependListener(eventName, listener) {\n        this.eventEmitters.forEach(emitter => emitter.prependListener(eventName, listener));\n        return this;\n    }\n    prependOnceListener(eventName, listener) {\n        this.eventEmitters.forEach(emitter => emitter.prependOnceListener(eventName, listener));\n        return this;\n    }\n    removeAllListeners(event) {\n        this.eventEmitters.forEach(emitter => emitter.removeAllListeners(event));\n        return this;\n    }\n    removeListener(eventName, listener) {\n        this.eventEmitters.forEach(emitter => emitter.removeListener(eventName, listener));\n        return this;\n    }\n    setMaxListeners(n) {\n        this.eventEmitters.forEach(emitter => emitter.setMaxListeners(n));\n        return this;\n    }\n    eventNames() {\n        return this.eventEmitters[0].eventNames();\n    }\n    getMaxListeners() {\n        return this.eventEmitters[0].getMaxListeners();\n    }\n    listenerCount(eventName, listener) {\n        return this.eventEmitters[0].listenerCount(eventName, listener);\n    }\n    rawListeners(eventName) {\n        return this.eventEmitters[0].rawListeners(eventName);\n    }\n    listeners(eventName) {\n        return this.eventEmitters[0].listeners(eventName);\n    }\n}\nexports.ProxyEventEmitter = ProxyEventEmitter;\n//# sourceMappingURL=proxy-event-emitter.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}