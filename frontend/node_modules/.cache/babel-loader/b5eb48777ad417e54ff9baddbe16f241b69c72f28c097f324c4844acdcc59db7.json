{"ast":null,"code":"import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n  constructor({\n    blockNumber,\n    chain,\n    contract\n  }) {\n    super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n      metaMessages: ['This could be due to any of the following:', ...(blockNumber && contract.blockCreated && contract.blockCreated > blockNumber ? [`- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`] : [`- The chain does not have the contract \"${contract.name}\" configured.`])],\n      name: 'ChainDoesNotSupportContract'\n    });\n  }\n}\nexport class ChainMismatchError extends BaseError {\n  constructor({\n    chain,\n    currentChainId\n  }) {\n    super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n      metaMessages: [`Current Chain ID:  ${currentChainId}`, `Expected Chain ID: ${chain.id} – ${chain.name}`],\n      name: 'ChainMismatchError'\n    });\n  }\n}\nexport class ChainNotFoundError extends BaseError {\n  constructor() {\n    super(['No chain was provided to the request.', 'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.'].join('\\n'), {\n      name: 'ChainNotFoundError'\n    });\n  }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n  constructor() {\n    super('No chain was provided to the Client.', {\n      name: 'ClientChainNotConfiguredError'\n    });\n  }\n}\nexport class InvalidChainIdError extends BaseError {\n  constructor({\n    chainId\n  }) {\n    super(typeof chainId === 'number' ? `Chain ID \"${chainId}\" is invalid.` : 'Chain ID is invalid.', {\n      name: 'InvalidChainIdError'\n    });\n  }\n}","map":{"version":3,"names":["BaseError","ChainDoesNotSupportContract","constructor","blockNumber","chain","contract","name","metaMessages","blockCreated","ChainMismatchError","currentChainId","id","ChainNotFoundError","join","ClientChainNotConfiguredError","InvalidChainIdError","chainId"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@reown\\appkit\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\errors\\chain.ts"],"sourcesContent":["import type { Chain } from '../types/chain.js'\n\nimport { BaseError } from './base.js'\n\nexport type ChainDoesNotSupportContractErrorType =\n  ChainDoesNotSupportContract & {\n    name: 'ChainDoesNotSupportContract'\n  }\nexport class ChainDoesNotSupportContract extends BaseError {\n  constructor({\n    blockNumber,\n    chain,\n    contract,\n  }: {\n    blockNumber?: bigint | undefined\n    chain: Chain\n    contract: { name: string; blockCreated?: number | undefined }\n  }) {\n    super(\n      `Chain \"${chain.name}\" does not support contract \"${contract.name}\".`,\n      {\n        metaMessages: [\n          'This could be due to any of the following:',\n          ...(blockNumber &&\n          contract.blockCreated &&\n          contract.blockCreated > blockNumber\n            ? [\n                `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n              ]\n            : [\n                `- The chain does not have the contract \"${contract.name}\" configured.`,\n              ]),\n        ],\n        name: 'ChainDoesNotSupportContract',\n      },\n    )\n  }\n}\n\nexport type ChainMismatchErrorType = ChainMismatchError & {\n  name: 'ChainMismatchError'\n}\nexport class ChainMismatchError extends BaseError {\n  constructor({\n    chain,\n    currentChainId,\n  }: {\n    chain: Chain\n    currentChainId: number\n  }) {\n    super(\n      `The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`,\n      {\n        metaMessages: [\n          `Current Chain ID:  ${currentChainId}`,\n          `Expected Chain ID: ${chain.id} – ${chain.name}`,\n        ],\n        name: 'ChainMismatchError',\n      },\n    )\n  }\n}\n\nexport type ChainNotFoundErrorType = ChainNotFoundError & {\n  name: 'ChainNotFoundError'\n}\nexport class ChainNotFoundError extends BaseError {\n  constructor() {\n    super(\n      [\n        'No chain was provided to the request.',\n        'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n      ].join('\\n'),\n      {\n        name: 'ChainNotFoundError',\n      },\n    )\n  }\n}\n\nexport type ClientChainNotConfiguredErrorType =\n  ClientChainNotConfiguredError & {\n    name: 'ClientChainNotConfiguredError'\n  }\nexport class ClientChainNotConfiguredError extends BaseError {\n  constructor() {\n    super('No chain was provided to the Client.', {\n      name: 'ClientChainNotConfiguredError',\n    })\n  }\n}\n\nexport type InvalidChainIdErrorType = InvalidChainIdError & {\n  name: 'InvalidChainIdError'\n}\nexport class InvalidChainIdError extends BaseError {\n  constructor({ chainId }: { chainId?: number | undefined }) {\n    super(\n      typeof chainId === 'number'\n        ? `Chain ID \"${chainId}\" is invalid.`\n        : 'Chain ID is invalid.',\n      { name: 'InvalidChainIdError' },\n    )\n  }\n}\n"],"mappings":"AAEA,SAASA,SAAS,QAAQ,WAAW;AAMrC,OAAM,MAAOC,2BAA4B,SAAQD,SAAS;EACxDE,YAAY;IACVC,WAAW;IACXC,KAAK;IACLC;EAAQ,CAKT;IACC,KAAK,CACH,UAAUD,KAAK,CAACE,IAAI,gCAAgCD,QAAQ,CAACC,IAAI,IAAI,EACrE;MACEC,YAAY,EAAE,CACZ,4CAA4C,EAC5C,IAAIJ,WAAW,IACfE,QAAQ,CAACG,YAAY,IACrBH,QAAQ,CAACG,YAAY,GAAGL,WAAW,GAC/B,CACE,mBAAmBE,QAAQ,CAACC,IAAI,kCAAkCD,QAAQ,CAACG,YAAY,mBAAmBL,WAAW,IAAI,CAC1H,GACD,CACE,2CAA2CE,QAAQ,CAACC,IAAI,eAAe,CACxE,CAAC,CACP;MACDA,IAAI,EAAE;KACP,CACF;EACH;;AAMF,OAAM,MAAOG,kBAAmB,SAAQT,SAAS;EAC/CE,YAAY;IACVE,KAAK;IACLM;EAAc,CAIf;IACC,KAAK,CACH,wCAAwCA,cAAc,8DAA8DN,KAAK,CAACO,EAAE,MAAMP,KAAK,CAACE,IAAI,IAAI,EAChJ;MACEC,YAAY,EAAE,CACZ,sBAAsBG,cAAc,EAAE,EACtC,sBAAsBN,KAAK,CAACO,EAAE,MAAMP,KAAK,CAACE,IAAI,EAAE,CACjD;MACDA,IAAI,EAAE;KACP,CACF;EACH;;AAMF,OAAM,MAAOM,kBAAmB,SAAQZ,SAAS;EAC/CE,YAAA;IACE,KAAK,CACH,CACE,uCAAuC,EACvC,4GAA4G,CAC7G,CAACW,IAAI,CAAC,IAAI,CAAC,EACZ;MACEP,IAAI,EAAE;KACP,CACF;EACH;;AAOF,OAAM,MAAOQ,6BAA8B,SAAQd,SAAS;EAC1DE,YAAA;IACE,KAAK,CAAC,sCAAsC,EAAE;MAC5CI,IAAI,EAAE;KACP,CAAC;EACJ;;AAMF,OAAM,MAAOS,mBAAoB,SAAQf,SAAS;EAChDE,YAAY;IAAEc;EAAO,CAAoC;IACvD,KAAK,CACH,OAAOA,OAAO,KAAK,QAAQ,GACvB,aAAaA,OAAO,eAAe,GACnC,sBAAsB,EAC1B;MAAEV,IAAI,EAAE;IAAqB,CAAE,CAChC;EACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}