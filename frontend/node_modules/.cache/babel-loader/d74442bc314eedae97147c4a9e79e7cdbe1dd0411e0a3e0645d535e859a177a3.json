{"ast":null,"code":"import { proxy } from 'valtio/vanilla';\nimport { ApiController } from '../controllers/ApiController.js';\nimport { AssetController } from '../controllers/AssetController.js';\nconst namespaceImageIds = {\n  // Ethereum\n  eip155: 'ba0ba0cd-17c6-4806-ad93-f9d174f17900',\n  // Solana\n  solana: 'a1b58899-f671-4276-6a5e-56ca5bd59700',\n  // Polkadot\n  polkadot: '',\n  // Bitcoin\n  bip122: '0b4838db-0161-4ffe-022d-532bf03dba00'\n};\n// -- State --------------------------------------------- //\nconst state = proxy({\n  networkImagePromises: {}\n});\n// -- Util ---------------------------------------- //\nexport const AssetUtil = {\n  async fetchWalletImage(imageId) {\n    if (!imageId) {\n      return undefined;\n    }\n    await ApiController._fetchWalletImage(imageId);\n    return this.getWalletImageById(imageId);\n  },\n  async fetchNetworkImage(imageId) {\n    if (!imageId) {\n      return undefined;\n    }\n    const existingImage = this.getNetworkImageById(imageId);\n    // Check if the image already exists\n    if (existingImage) {\n      return existingImage;\n    }\n    // Check if the promise is already created\n    if (!state.networkImagePromises[imageId]) {\n      state.networkImagePromises[imageId] = ApiController._fetchNetworkImage(imageId);\n    }\n    await state.networkImagePromises[imageId];\n    return this.getNetworkImageById(imageId);\n  },\n  getWalletImageById(imageId) {\n    if (!imageId) {\n      return undefined;\n    }\n    return AssetController.state.walletImages[imageId];\n  },\n  getWalletImage(wallet) {\n    if (wallet?.image_url) {\n      return wallet?.image_url;\n    }\n    if (wallet?.image_id) {\n      return AssetController.state.walletImages[wallet.image_id];\n    }\n    return undefined;\n  },\n  getNetworkImage(network) {\n    if (network?.assets?.imageUrl) {\n      return network?.assets?.imageUrl;\n    }\n    if (network?.assets?.imageId) {\n      return AssetController.state.networkImages[network.assets.imageId];\n    }\n    return undefined;\n  },\n  getNetworkImageById(imageId) {\n    if (!imageId) {\n      return undefined;\n    }\n    return AssetController.state.networkImages[imageId];\n  },\n  getConnectorImage(connector) {\n    if (connector?.imageUrl) {\n      return connector.imageUrl;\n    }\n    if (connector?.imageId) {\n      return AssetController.state.connectorImages[connector.imageId];\n    }\n    return undefined;\n  },\n  getChainImage(chain) {\n    return AssetController.state.networkImages[namespaceImageIds[chain]];\n  }\n};","map":{"version":3,"names":["proxy","ApiController","AssetController","namespaceImageIds","eip155","solana","polkadot","bip122","state","networkImagePromises","AssetUtil","fetchWalletImage","imageId","undefined","_fetchWalletImage","getWalletImageById","fetchNetworkImage","existingImage","getNetworkImageById","_fetchNetworkImage","walletImages","getWalletImage","wallet","image_url","image_id","getNetworkImage","network","assets","imageUrl","networkImages","getConnectorImage","connector","connectorImages","getChainImage","chain"],"sources":["../../../../src/utils/AssetUtil.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AAItC,SAASC,aAAa,QAAQ,iCAAiC;AAC/D,SAASC,eAAe,QAAQ,mCAAmC;AAQnE,MAAMC,iBAAiB,GAAmC;EACxD;EACAC,MAAM,EAAE,sCAAsC;EAC9C;EACAC,MAAM,EAAE,sCAAsC;EAC9C;EACAC,QAAQ,EAAE,EAAE;EACZ;EACAC,MAAM,EAAE;CACT;AAED;AACA,MAAMC,KAAK,GAAGR,KAAK,CAAiB;EAClCS,oBAAoB,EAAE;CACvB,CAAC;AAEF;AACA,OAAO,MAAMC,SAAS,GAAG;EACvB,MAAMC,gBAAgBA,CAACC,OAAgB;IACrC,IAAI,CAACA,OAAO,EAAE;MACZ,OAAOC,SAAS;IAClB;IAEA,MAAMZ,aAAa,CAACa,iBAAiB,CAACF,OAAO,CAAC;IAE9C,OAAO,IAAI,CAACG,kBAAkB,CAACH,OAAO,CAAC;EACzC,CAAC;EAED,MAAMI,iBAAiBA,CAACJ,OAAgB;IACtC,IAAI,CAACA,OAAO,EAAE;MACZ,OAAOC,SAAS;IAClB;IAEA,MAAMI,aAAa,GAAG,IAAI,CAACC,mBAAmB,CAACN,OAAO,CAAC;IAEvD;IACA,IAAIK,aAAa,EAAE;MACjB,OAAOA,aAAa;IACtB;IAEA;IACA,IAAI,CAACT,KAAK,CAACC,oBAAoB,CAACG,OAAO,CAAC,EAAE;MACxCJ,KAAK,CAACC,oBAAoB,CAACG,OAAO,CAAC,GAAGX,aAAa,CAACkB,kBAAkB,CAACP,OAAO,CAAC;IACjF;IAEA,MAAMJ,KAAK,CAACC,oBAAoB,CAACG,OAAO,CAAC;IAEzC,OAAO,IAAI,CAACM,mBAAmB,CAACN,OAAO,CAAC;EAC1C,CAAC;EAEDG,kBAAkBA,CAACH,OAAgB;IACjC,IAAI,CAACA,OAAO,EAAE;MACZ,OAAOC,SAAS;IAClB;IAEA,OAAOX,eAAe,CAACM,KAAK,CAACY,YAAY,CAACR,OAAO,CAAC;EACpD,CAAC;EAEDS,cAAcA,CAACC,MAAiB;IAC9B,IAAIA,MAAM,EAAEC,SAAS,EAAE;MACrB,OAAOD,MAAM,EAAEC,SAAS;IAC1B;IAEA,IAAID,MAAM,EAAEE,QAAQ,EAAE;MACpB,OAAOtB,eAAe,CAACM,KAAK,CAACY,YAAY,CAACE,MAAM,CAACE,QAAQ,CAAC;IAC5D;IAEA,OAAOX,SAAS;EAClB,CAAC;EAEDY,eAAeA,CAACC,OAAqB;IACnC,IAAIA,OAAO,EAAEC,MAAM,EAAEC,QAAQ,EAAE;MAC7B,OAAOF,OAAO,EAAEC,MAAM,EAAEC,QAAQ;IAClC;IAEA,IAAIF,OAAO,EAAEC,MAAM,EAAEf,OAAO,EAAE;MAC5B,OAAOV,eAAe,CAACM,KAAK,CAACqB,aAAa,CAACH,OAAO,CAACC,MAAM,CAACf,OAAO,CAAC;IACpE;IAEA,OAAOC,SAAS;EAClB,CAAC;EAEDK,mBAAmBA,CAACN,OAAgB;IAClC,IAAI,CAACA,OAAO,EAAE;MACZ,OAAOC,SAAS;IAClB;IAEA,OAAOX,eAAe,CAACM,KAAK,CAACqB,aAAa,CAACjB,OAAO,CAAC;EACrD,CAAC;EAEDkB,iBAAiBA,CAACC,SAAqB;IACrC,IAAIA,SAAS,EAAEH,QAAQ,EAAE;MACvB,OAAOG,SAAS,CAACH,QAAQ;IAC3B;IAEA,IAAIG,SAAS,EAAEnB,OAAO,EAAE;MACtB,OAAOV,eAAe,CAACM,KAAK,CAACwB,eAAe,CAACD,SAAS,CAACnB,OAAO,CAAC;IACjE;IAEA,OAAOC,SAAS;EAClB,CAAC;EAEDoB,aAAaA,CAACC,KAAqB;IACjC,OAAOhC,eAAe,CAACM,KAAK,CAACqB,aAAa,CAAC1B,iBAAiB,CAAC+B,KAAK,CAAC,CAAC;EACtE;CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}