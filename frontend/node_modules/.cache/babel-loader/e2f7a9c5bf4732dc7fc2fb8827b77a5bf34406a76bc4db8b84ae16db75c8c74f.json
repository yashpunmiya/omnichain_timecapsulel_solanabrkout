{"ast":null,"code":"import { checksumAddress } from '../../utils/address/getAddress.js';\nimport { keccak256 } from '../../utils/hash/keccak256.js';\n/**\n * @description Converts an ECDSA public key to an address.\n *\n * @param publicKey The public key to convert.\n *\n * @returns The address.\n */\nexport function publicKeyToAddress(publicKey) {\n  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26);\n  return checksumAddress(`0x${address}`);\n}","map":{"version":3,"names":["checksumAddress","keccak256","publicKeyToAddress","publicKey","address","substring"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@reown\\appkit-controllers\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\accounts\\utils\\publicKeyToAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../../utils/address/getAddress.js'\nimport {\n  type Keccak256ErrorType,\n  keccak256,\n} from '../../utils/hash/keccak256.js'\n\nexport type PublicKeyToAddressErrorType =\n  | ChecksumAddressErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\n/**\n * @description Converts an ECDSA public key to an address.\n *\n * @param publicKey The public key to convert.\n *\n * @returns The address.\n */\nexport function publicKeyToAddress(publicKey: Hex): Address {\n  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26)\n  return checksumAddress(`0x${address}`) as Address\n}\n"],"mappings":"AAIA,SAEEA,eAAe,QACV,mCAAmC;AAC1C,SAEEC,SAAS,QACJ,+BAA+B;AAOtC;;;;;;;AAOA,OAAM,SAAUC,kBAAkBA,CAACC,SAAc;EAC/C,MAAMC,OAAO,GAAGH,SAAS,CAAC,KAAKE,SAAS,CAACE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAACA,SAAS,CAAC,EAAE,CAAC;EACtE,OAAOL,eAAe,CAAC,KAAKI,OAAO,EAAE,CAAY;AACnD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}