{"ast":null,"code":"import { hexToNumber } from '../index.js';\nfunction formatStorageProof(storageProof) {\n  return storageProof.map(proof => ({\n    ...proof,\n    value: BigInt(proof.value)\n  }));\n}\nexport function formatProof(proof) {\n  return {\n    ...proof,\n    balance: proof.balance ? BigInt(proof.balance) : undefined,\n    nonce: proof.nonce ? hexToNumber(proof.nonce) : undefined,\n    storageProof: proof.storageProof ? formatStorageProof(proof.storageProof) : undefined\n  };\n}","map":{"version":3,"names":["hexToNumber","formatStorageProof","storageProof","map","proof","value","BigInt","formatProof","balance","undefined","nonce"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@reown\\appkit\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\utils\\formatters\\proof.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Proof } from '../../types/proof.js'\nimport type { RpcProof } from '../../types/rpc.js'\nimport type { ExactPartial } from '../../types/utils.js'\nimport { hexToNumber } from '../index.js'\n\nexport type FormatProofErrorType = ErrorType\n\nfunction formatStorageProof(storageProof: RpcProof['storageProof']) {\n  return storageProof.map((proof) => ({\n    ...proof,\n    value: BigInt(proof.value),\n  }))\n}\n\nexport function formatProof(proof: ExactPartial<RpcProof>) {\n  return {\n    ...proof,\n    balance: proof.balance ? BigInt(proof.balance) : undefined,\n    nonce: proof.nonce ? hexToNumber(proof.nonce) : undefined,\n    storageProof: proof.storageProof\n      ? formatStorageProof(proof.storageProof)\n      : undefined,\n  } as Proof\n}\n"],"mappings":"AAIA,SAASA,WAAW,QAAQ,aAAa;AAIzC,SAASC,kBAAkBA,CAACC,YAAsC;EAChE,OAAOA,YAAY,CAACC,GAAG,CAAEC,KAAK,KAAM;IAClC,GAAGA,KAAK;IACRC,KAAK,EAAEC,MAAM,CAACF,KAAK,CAACC,KAAK;GAC1B,CAAC,CAAC;AACL;AAEA,OAAM,SAAUE,WAAWA,CAACH,KAA6B;EACvD,OAAO;IACL,GAAGA,KAAK;IACRI,OAAO,EAAEJ,KAAK,CAACI,OAAO,GAAGF,MAAM,CAACF,KAAK,CAACI,OAAO,CAAC,GAAGC,SAAS;IAC1DC,KAAK,EAAEN,KAAK,CAACM,KAAK,GAAGV,WAAW,CAACI,KAAK,CAACM,KAAK,CAAC,GAAGD,SAAS;IACzDP,YAAY,EAAEE,KAAK,CAACF,YAAY,GAC5BD,kBAAkB,CAACG,KAAK,CAACF,YAAY,CAAC,GACtCO;GACI;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}