{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ServiceWorkerWindowChannel = void 0;\nconst connect_common_1 = require(\"@trezor/connect-common\");\nclass ServiceWorkerWindowChannel extends connect_common_1.AbstractMessageChannel {\n  port;\n  name;\n  allowSelfOrigin;\n  currentId;\n  constructor({\n    name,\n    channel,\n    logger,\n    lazyHandshake,\n    legacyMode,\n    allowSelfOrigin = false,\n    currentId\n  }) {\n    super({\n      channel,\n      sendFn: message => {\n        if (!this.port) throw new Error('port not assigned');\n        this.port.postMessage(message);\n      },\n      logger,\n      lazyHandshake,\n      legacyMode\n    });\n    this.name = name;\n    this.allowSelfOrigin = allowSelfOrigin;\n    this.currentId = currentId;\n    this.connect();\n  }\n  connect() {\n    chrome.runtime.onConnect.addListener(port => {\n      if (port.name !== this.name) return;\n      if (this.currentId?.() && this.currentId?.() !== port.sender?.tab?.id) return;\n      this.port = port;\n      this.port.onMessage.addListener((message, {\n        sender\n      }) => {\n        if (!sender) {\n          this.logger?.error('service-worker-window', 'no sender');\n          return;\n        }\n        const {\n          origin\n        } = sender;\n        const whitelist = ['https://connect.trezor.io', 'https://staging-connect.trezor.io', 'https://suite.corp.sldev.cz', 'https://dev.suite.sldev.cz', 'http://localhost:8088'];\n        const webextensionId = chrome?.runtime?.id;\n        if (webextensionId) {\n          whitelist.push(`chrome-extension://${webextensionId}`);\n        }\n        const webextensionUrl = chrome?.runtime?.getURL('');\n        if (webextensionUrl) {\n          whitelist.push(webextensionUrl.slice(0, -1));\n        }\n        if (!origin) {\n          this.logger?.error('connect-webextension/messageChannel/extensionPort/onMessage', 'no origin');\n          return;\n        }\n        if (!whitelist.includes(origin)) {\n          this.logger?.error('connect-webextension/messageChannel/extensionPort/onMessage', 'origin not whitelisted', origin);\n          return;\n        }\n        if (origin === self.origin && !this.allowSelfOrigin) {\n          return;\n        }\n        this.onMessage(message);\n      });\n    });\n    this.isConnected = true;\n  }\n  disconnect() {\n    if (!this.isConnected) return;\n    this.port?.disconnect();\n    this.clear();\n    this.isConnected = false;\n  }\n}\nexports.ServiceWorkerWindowChannel = ServiceWorkerWindowChannel;\n//# sourceMappingURL=serviceworker-window.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}