{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeMessage = exports.decode = void 0;\nconst utils_1 = require(\"./utils\");\nconst transform = (field, value) => {\n  if ((0, utils_1.isPrimitiveField)(field.type)) {\n    if (field.optional && typeof value === 'undefined') {\n      return null;\n    }\n    if (field.type === 'bytes') {\n      return Buffer.from(value).toString('hex');\n    }\n    if (field.long) {\n      if (Number.isSafeInteger(value.toNumber())) {\n        return value.toNumber();\n      }\n      return value.toString();\n    }\n    return value;\n  }\n  if ('valuesById' in field.resolvedType) {\n    return field.resolvedType.valuesById[value];\n  }\n  if (field.resolvedType.fields) {\n    return messageToJSON(value, field.resolvedType.fields);\n  }\n  throw new Error(`transport: decode: case not handled: ${field}`);\n};\nfunction messageToJSON(MessageParam, fields) {\n  if (!MessageParam) {\n    return {};\n  }\n  const {\n    ...message\n  } = MessageParam;\n  const res = {};\n  Object.keys(fields).forEach(key => {\n    const field = fields[key];\n    const value = message[key];\n    if (field.repeated) {\n      res[key] = value.map(v => transform(field, v));\n    } else {\n      res[key] = transform(field, value);\n    }\n  });\n  return res;\n}\nconst decode = (MessageParam, data) => {\n  const decoded = MessageParam.decode(new Uint8Array(data));\n  return messageToJSON(decoded, decoded.$type.fields);\n};\nexports.decode = decode;\nconst decodeMessage = (messages, messageType, data) => {\n  const {\n    Message,\n    messageName\n  } = (0, utils_1.createMessageFromType)(messages, messageType);\n  const message = (0, exports.decode)(Message, data);\n  return {\n    type: messageName,\n    message\n  };\n};\nexports.decodeMessage = decodeMessage;","map":{"version":3,"names":["Object","defineProperty","exports","value","decodeMessage","decode","utils_1","require","transform","field","isPrimitiveField","type","optional","Buffer","from","toString","long","Number","isSafeInteger","toNumber","resolvedType","valuesById","fields","messageToJSON","Error","MessageParam","message","res","keys","forEach","key","repeated","map","v","data","decoded","Uint8Array","$type","messages","messageType","Message","messageName","createMessageFromType"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@trezor/protobuf/lib/decode.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeMessage = exports.decode = void 0;\nconst utils_1 = require(\"./utils\");\nconst transform = (field, value) => {\n    if ((0, utils_1.isPrimitiveField)(field.type)) {\n        if (field.optional && typeof value === 'undefined') {\n            return null;\n        }\n        if (field.type === 'bytes') {\n            return Buffer.from(value).toString('hex');\n        }\n        if (field.long) {\n            if (Number.isSafeInteger(value.toNumber())) {\n                return value.toNumber();\n            }\n            return value.toString();\n        }\n        return value;\n    }\n    if ('valuesById' in field.resolvedType) {\n        return field.resolvedType.valuesById[value];\n    }\n    if (field.resolvedType.fields) {\n        return messageToJSON(value, field.resolvedType.fields);\n    }\n    throw new Error(`transport: decode: case not handled: ${field}`);\n};\nfunction messageToJSON(MessageParam, fields) {\n    if (!MessageParam) {\n        return {};\n    }\n    const { ...message } = MessageParam;\n    const res = {};\n    Object.keys(fields).forEach(key => {\n        const field = fields[key];\n        const value = message[key];\n        if (field.repeated) {\n            res[key] = value.map((v) => transform(field, v));\n        }\n        else {\n            res[key] = transform(field, value);\n        }\n    });\n    return res;\n}\nconst decode = (MessageParam, data) => {\n    const decoded = MessageParam.decode(new Uint8Array(data));\n    return messageToJSON(decoded, decoded.$type.fields);\n};\nexports.decode = decode;\nconst decodeMessage = (messages, messageType, data) => {\n    const { Message, messageName } = (0, utils_1.createMessageFromType)(messages, messageType);\n    const message = (0, exports.decode)(Message, data);\n    return { type: messageName, message };\n};\nexports.decodeMessage = decodeMessage;\n//# sourceMappingURL=decode.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}