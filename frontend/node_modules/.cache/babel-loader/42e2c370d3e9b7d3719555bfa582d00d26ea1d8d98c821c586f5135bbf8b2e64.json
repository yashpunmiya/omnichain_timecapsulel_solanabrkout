{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDeviceMode = exports.isDeviceInBootloaderMode = void 0;\nconst isDeviceInBootloaderMode = device => !!device?.features?.bootloader_mode;\nexports.isDeviceInBootloaderMode = isDeviceInBootloaderMode;\nconst getDeviceMode = device => {\n  if (device?.features?.bootloader_mode) return 'bootloader';\n  if (!device?.features?.initialized) return 'initialize';\n  if (device?.features?.no_backup) return 'seedless';\n  return 'normal';\n};\nexports.getDeviceMode = getDeviceMode;","map":{"version":3,"names":["Object","defineProperty","exports","value","getDeviceMode","isDeviceInBootloaderMode","device","features","bootloader_mode","initialized","no_backup"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@trezor/device-utils/lib/modeUtils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDeviceMode = exports.isDeviceInBootloaderMode = void 0;\nconst isDeviceInBootloaderMode = (device) => !!device?.features?.bootloader_mode;\nexports.isDeviceInBootloaderMode = isDeviceInBootloaderMode;\nconst getDeviceMode = (device) => {\n    if (device?.features?.bootloader_mode)\n        return 'bootloader';\n    if (!device?.features?.initialized)\n        return 'initialize';\n    if (device?.features?.no_backup)\n        return 'seedless';\n    return 'normal';\n};\nexports.getDeviceMode = getDeviceMode;\n//# sourceMappingURL=modeUtils.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAGF,OAAO,CAACG,wBAAwB,GAAG,KAAK,CAAC;AACjE,MAAMA,wBAAwB,GAAIC,MAAM,IAAK,CAAC,CAACA,MAAM,EAAEC,QAAQ,EAAEC,eAAe;AAChFN,OAAO,CAACG,wBAAwB,GAAGA,wBAAwB;AAC3D,MAAMD,aAAa,GAAIE,MAAM,IAAK;EAC9B,IAAIA,MAAM,EAAEC,QAAQ,EAAEC,eAAe,EACjC,OAAO,YAAY;EACvB,IAAI,CAACF,MAAM,EAAEC,QAAQ,EAAEE,WAAW,EAC9B,OAAO,YAAY;EACvB,IAAIH,MAAM,EAAEC,QAAQ,EAAEG,SAAS,EAC3B,OAAO,UAAU;EACrB,OAAO,QAAQ;AACnB,CAAC;AACDR,OAAO,CAACE,aAAa,GAAGA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}