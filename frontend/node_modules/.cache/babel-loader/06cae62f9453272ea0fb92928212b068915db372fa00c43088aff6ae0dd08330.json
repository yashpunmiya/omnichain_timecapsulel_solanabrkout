{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { property, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { ApiController, ConnectorController, CoreHelperUtil, EventsController, OptionsController, RouterController } from '@reown/appkit-controllers';\nimport { customElement } from '@reown/appkit-ui';\nimport '@reown/appkit-ui/wui-list-wallet';\nlet W3mAllWalletsWidget = class W3mAllWalletsWidget extends LitElement {\n  constructor() {\n    super();\n    this.unsubscribe = [];\n    this.tabIdx = undefined;\n    this.connectors = ConnectorController.state.connectors;\n    this.count = ApiController.state.count;\n    this.isFetchingRecommendedWallets = ApiController.state.isFetchingRecommendedWallets;\n    this.unsubscribe.push(ConnectorController.subscribeKey('connectors', val => this.connectors = val), ApiController.subscribeKey('count', val => this.count = val), ApiController.subscribeKey('isFetchingRecommendedWallets', val => this.isFetchingRecommendedWallets = val));\n  }\n  disconnectedCallback() {\n    this.unsubscribe.forEach(unsubscribe => unsubscribe());\n  }\n  render() {\n    const wcConnector = this.connectors.find(c => c.id === 'walletConnect');\n    const {\n      allWallets\n    } = OptionsController.state;\n    if (!wcConnector || allWallets === 'HIDE') {\n      return null;\n    }\n    if (allWallets === 'ONLY_MOBILE' && !CoreHelperUtil.isMobile()) {\n      return null;\n    }\n    const featuredCount = ApiController.state.featured.length;\n    const rawCount = this.count + featuredCount;\n    const roundedCount = rawCount < 10 ? rawCount : Math.floor(rawCount / 10) * 10;\n    const tagLabel = roundedCount < rawCount ? `${roundedCount}+` : `${roundedCount}`;\n    return html`\n      <wui-list-wallet\n        name=\"All Wallets\"\n        walletIcon=\"allWallets\"\n        showAllWallets\n        @click=${this.onAllWallets.bind(this)}\n        tagLabel=${tagLabel}\n        tagVariant=\"shade\"\n        data-testid=\"all-wallets\"\n        tabIdx=${ifDefined(this.tabIdx)}\n        .loading=${this.isFetchingRecommendedWallets}\n        loadingSpinnerColor=${this.isFetchingRecommendedWallets ? 'fg-300' : 'accent-100'}\n      ></wui-list-wallet>\n    `;\n  }\n  onAllWallets() {\n    EventsController.sendEvent({\n      type: 'track',\n      event: 'CLICK_ALL_WALLETS'\n    });\n    RouterController.push('AllWallets');\n  }\n};\n__decorate([property()], W3mAllWalletsWidget.prototype, \"tabIdx\", void 0);\n__decorate([state()], W3mAllWalletsWidget.prototype, \"connectors\", void 0);\n__decorate([state()], W3mAllWalletsWidget.prototype, \"count\", void 0);\n__decorate([state()], W3mAllWalletsWidget.prototype, \"isFetchingRecommendedWallets\", void 0);\nW3mAllWalletsWidget = __decorate([customElement('w3m-all-wallets-widget')], W3mAllWalletsWidget);\nexport { W3mAllWalletsWidget };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}