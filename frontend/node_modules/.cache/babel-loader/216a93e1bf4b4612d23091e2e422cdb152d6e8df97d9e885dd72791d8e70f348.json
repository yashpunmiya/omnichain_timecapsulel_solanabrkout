{"ast":null,"code":"// src/bi.ts\nimport { v4 } from \"uuid\";\nvar AcitveLoginType = /* @__PURE__ */(AcitveLoginType2 => {\n  AcitveLoginType2[\"PARTICLE\"] = \"particle\";\n  AcitveLoginType2[\"PRIVATE_KEY\"] = \"private_key\";\n  AcitveLoginType2[\"METAMASK\"] = \"metamask\";\n  AcitveLoginType2[\"RAINBOW\"] = \"rainbow\";\n  AcitveLoginType2[\"TRUST\"] = \"trust\";\n  AcitveLoginType2[\"IM_TOKEN\"] = \"im_token\";\n  AcitveLoginType2[\"BIT_KEEP\"] = \"bit_keep\";\n  AcitveLoginType2[\"PHANTOM\"] = \"phantom\";\n  AcitveLoginType2[\"OTHER\"] = \"other\";\n  return AcitveLoginType2;\n})(AcitveLoginType || {});\nvar ActiveAction = /* @__PURE__ */(ActiveAction2 => {\n  ActiveAction2[\"SIGN\"] = \"sign\";\n  ActiveAction2[\"LOGIN\"] = \"login\";\n  ActiveAction2[\"OPEN\"] = \"open\";\n  ActiveAction2[\"OPEN_WALLET\"] = \"open_wallet\";\n  return ActiveAction2;\n})(ActiveAction || {});\nvar RecordType = /* @__PURE__ */(RecordType2 => {\n  RecordType2[\"PAGE_LOGIN_BUTTON_CLICK\"] = \"page_login_button_click\";\n  RecordType2[\"PAGE_LOGIN_BUTTON_CLICK_SUCCESS\"] = \"page_login_button_click_success\";\n  RecordType2[\"PAGE_LOGIN_BUTTON_CLICK_FAILURE\"] = \"page_login_button_click_failure\";\n  RecordType2[\"PAGE_LOGIN_SUCCESS_BACK\"] = \"page_login_success_back\";\n  RecordType2[\"PAGE_SIGN_CONFIRM_BUTTON_CLICK\"] = \"page_sign_confirm_button_click\";\n  RecordType2[\"PAGE_SIGN_CONFIRM_BUTTON_CLICK_SUCCESS\"] = \"page_sign_confirm_button_click_success\";\n  RecordType2[\"PAGE_SIGN_CONFIRM_BUTTON_CLICK_FAILURE\"] = \"page_sign_confirm_button_click_failure\";\n  RecordType2[\"PAGE_SETTING_MASTER_PASSWORD_ENTER\"] = \"page_setting_master_password_enter\";\n  RecordType2[\"PAGE_SETTING_MASTER_PASSWORD_SET\"] = \"page_setting_master_password_set\";\n  RecordType2[\"PAGE_SETTING_MASTER_PASSWORD_CHANGE\"] = \"page_setting_master_password_change\";\n  RecordType2[\"PAGE_MASTER_PASSWORD_VERIFY\"] = \"page_master_password_verify\";\n  RecordType2[\"PAGE_MASTER_PASSWORD_VERIFY_SUCCESS\"] = \"page_master_password_verify_success\";\n  return RecordType2;\n})(RecordType || {});\nvar BI = class {\n  constructor(options) {\n    this.options = options;\n  }\n  active(params) {\n    const timestamp = Math.round(new Date().getTime() / 1e3);\n    const randomStr = v4();\n    const {\n      project_uuid,\n      project_key,\n      project_app_uuid\n    } = this.options.project_config;\n    const queryParams = {\n      timestamp,\n      random_str: randomStr,\n      project_app_uuid,\n      projectUuid: project_uuid,\n      projectKey: project_key\n    };\n    let url = this.options.sdk_api_domain + \"/active?\";\n    Object.keys(queryParams).forEach(key => {\n      url += `${key}=${encodeURI(queryParams[key])}&`;\n    });\n    url = url.slice(0, -1);\n    navigator.sendBeacon(url, new Blob([new URLSearchParams(params).toString()], {\n      type: \"application/x-www-form-urlencoded\"\n    }));\n  }\n  records(params) {\n    try {\n      const timestamp = Math.round(new Date().getTime() / 1e3);\n      const randomStr = v4();\n      const {\n        project_uuid,\n        project_key,\n        project_app_uuid\n      } = this.options.project_config;\n      const queryParams = {\n        timestamp,\n        random_str: randomStr,\n        project_app_uuid,\n        projectUuid: project_uuid,\n        projectKey: project_key\n      };\n      let url = this.options.sdk_api_domain + \"/records?\";\n      Object.keys(queryParams).forEach(key => {\n        url += `${key}=${encodeURI(queryParams[key])}&`;\n      });\n      url = url.slice(0, -1);\n      navigator.sendBeacon(url, new Blob([new URLSearchParams(params).toString()], {\n        type: \"application/x-www-form-urlencoded\"\n      }));\n    } catch (error) {}\n  }\n};\nexport { AcitveLoginType, ActiveAction, BI, RecordType };","map":{"version":3,"names":["v4","AcitveLoginType","AcitveLoginType2","ActiveAction","ActiveAction2","RecordType","RecordType2","BI","constructor","options","active","params","timestamp","Math","round","Date","getTime","randomStr","project_uuid","project_key","project_app_uuid","project_config","queryParams","random_str","projectUuid","projectKey","url","sdk_api_domain","Object","keys","forEach","key","encodeURI","slice","navigator","sendBeacon","Blob","URLSearchParams","toString","type","records","error"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@particle-network\\analytics\\src\\bi.ts"],"sourcesContent":["import { v4 } from 'uuid';\n\nexport enum AcitveLoginType {\n    PARTICLE = 'particle',\n    PRIVATE_KEY = 'private_key',\n    METAMASK = 'metamask',\n    RAINBOW = 'rainbow',\n    TRUST = 'trust',\n    IM_TOKEN = 'im_token',\n    BIT_KEEP = 'bit_keep',\n    PHANTOM = 'phantom',\n    OTHER = 'other',\n}\n\nexport enum ActiveAction {\n    SIGN = 'sign',\n    LOGIN = 'login',\n    OPEN = 'open',\n    OPEN_WALLET = 'open_wallet',\n}\nexport interface BiOptions {\n    sdk_api_domain: string;\n    device_id: string;\n    sdk_version: string;\n    project_config: {\n        project_uuid: string;\n        project_key: string;\n        project_app_uuid: string;\n    };\n}\n\nexport interface SendActiveParams {\n    chain_id: number;\n    identity: string;\n    login_type: AcitveLoginType;\n    action: ActiveAction;\n    wallet_address: string;\n    user_info?: string;\n}\n\nexport enum RecordType {\n    PAGE_LOGIN_BUTTON_CLICK = 'page_login_button_click', // 登录按钮点击\n    PAGE_LOGIN_BUTTON_CLICK_SUCCESS = 'page_login_button_click_success', // 登录成功\n    PAGE_LOGIN_BUTTON_CLICK_FAILURE = 'page_login_button_click_failure', // 登录失败\n    PAGE_LOGIN_SUCCESS_BACK = 'page_login_success_back', // 登录成功后返回app\n    PAGE_SIGN_CONFIRM_BUTTON_CLICK = 'page_sign_confirm_button_click', // confirm按钮点击\n    PAGE_SIGN_CONFIRM_BUTTON_CLICK_SUCCESS = 'page_sign_confirm_button_click_success', // confirm成功\n    PAGE_SIGN_CONFIRM_BUTTON_CLICK_FAILURE = 'page_sign_confirm_button_click_failure', // confirm失败\n    PAGE_SETTING_MASTER_PASSWORD_ENTER = 'page_setting_master_password_enter', // 进入主密码设置页面\n    PAGE_SETTING_MASTER_PASSWORD_SET = 'page_setting_master_password_set', // 主密码设置成功\n    PAGE_SETTING_MASTER_PASSWORD_CHANGE = 'page_setting_master_password_change', // 主密码修改成功\n    PAGE_MASTER_PASSWORD_VERIFY = 'page_master_password_verify', // 主密码验证\n    PAGE_MASTER_PASSWORD_VERIFY_SUCCESS = 'page_master_password_verify_success', // 主密码验证成功\n}\nexport interface SendRecordsParams {\n    record_type: RecordType;\n    reason?: string;\n}\n\nexport class BI {\n    private options: BiOptions;\n\n    constructor(options: BiOptions) {\n        this.options = options;\n    }\n\n    active(params: SendActiveParams) {\n        const timestamp: number = Math.round(new Date().getTime() / 1000);\n        const randomStr: string = v4();\n        const { project_uuid, project_key, project_app_uuid } = this.options.project_config;\n\n        const queryParams = {\n            timestamp,\n            random_str: randomStr,\n            project_app_uuid: project_app_uuid,\n            projectUuid: project_uuid,\n            projectKey: project_key,\n        };\n\n        let url = this.options.sdk_api_domain + '/active?';\n        Object.keys(queryParams).forEach((key) => {\n            //  @ts-ignore\n            url += `${key}=${encodeURI(queryParams[key])}&`;\n        });\n        url = url.slice(0, -1);\n\n        navigator.sendBeacon(\n            url,\n            new Blob([new URLSearchParams(params as any).toString()], {\n                type: 'application/x-www-form-urlencoded',\n            })\n        );\n    }\n\n    records(params: SendRecordsParams) {\n        try {\n            console.log('>>>>>send records', params);\n            const timestamp: number = Math.round(new Date().getTime() / 1000);\n            const randomStr: string = v4();\n            const { project_uuid, project_key, project_app_uuid } = this.options.project_config;\n\n            const queryParams = {\n                timestamp,\n                random_str: randomStr,\n                project_app_uuid: project_app_uuid,\n                projectUuid: project_uuid,\n                projectKey: project_key,\n            };\n\n            let url = this.options.sdk_api_domain + '/records?';\n            Object.keys(queryParams).forEach((key) => {\n                //  @ts-ignore\n                url += `${key}=${encodeURI(queryParams[key])}&`;\n            });\n            url = url.slice(0, -1);\n\n            navigator.sendBeacon(\n                url,\n                new Blob([new URLSearchParams(params as any).toString()], {\n                    type: 'application/x-www-form-urlencoded',\n                })\n            );\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}