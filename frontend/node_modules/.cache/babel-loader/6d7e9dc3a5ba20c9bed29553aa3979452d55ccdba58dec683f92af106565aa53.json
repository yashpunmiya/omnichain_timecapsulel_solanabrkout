{"ast":null,"code":"async function fetchData(...args) {\n  const response = await fetch(...args);\n  if (!response.ok) {\n    // Create error object and reject if not a 2xx response code\n    const err = new Error(`HTTP status code: ${response.status}`, {\n      cause: response\n    });\n    throw err;\n  }\n  return response;\n}\n// -- Utility --------------------------------------------------------------------\nexport class FetchUtil {\n  constructor({\n    baseUrl,\n    clientId\n  }) {\n    this.baseUrl = baseUrl;\n    this.clientId = clientId;\n  }\n  async get({\n    headers,\n    signal,\n    cache,\n    ...args\n  }) {\n    const url = this.createUrl(args);\n    const response = await fetchData(url, {\n      method: 'GET',\n      headers,\n      signal,\n      cache\n    });\n    return response.json();\n  }\n  async getBlob({\n    headers,\n    signal,\n    ...args\n  }) {\n    const url = this.createUrl(args);\n    const response = await fetchData(url, {\n      method: 'GET',\n      headers,\n      signal\n    });\n    return response.blob();\n  }\n  async post({\n    body,\n    headers,\n    signal,\n    ...args\n  }) {\n    const url = this.createUrl(args);\n    const response = await fetchData(url, {\n      method: 'POST',\n      headers,\n      body: body ? JSON.stringify(body) : undefined,\n      signal\n    });\n    return response.json();\n  }\n  async put({\n    body,\n    headers,\n    signal,\n    ...args\n  }) {\n    const url = this.createUrl(args);\n    const response = await fetchData(url, {\n      method: 'PUT',\n      headers,\n      body: body ? JSON.stringify(body) : undefined,\n      signal\n    });\n    return response.json();\n  }\n  async delete({\n    body,\n    headers,\n    signal,\n    ...args\n  }) {\n    const url = this.createUrl(args);\n    const response = await fetchData(url, {\n      method: 'DELETE',\n      headers,\n      body: body ? JSON.stringify(body) : undefined,\n      signal\n    });\n    return response.json();\n  }\n  createUrl({\n    path,\n    params\n  }) {\n    const url = new URL(path, this.baseUrl);\n    if (params) {\n      Object.entries(params).forEach(([key, value]) => {\n        if (value) {\n          url.searchParams.append(key, value);\n        }\n      });\n    }\n    if (this.clientId) {\n      url.searchParams.append('clientId', this.clientId);\n    }\n    return url;\n  }\n}","map":{"version":3,"names":["fetchData","args","response","fetch","ok","err","Error","status","cause","FetchUtil","constructor","baseUrl","clientId","get","headers","signal","cache","url","createUrl","method","json","getBlob","blob","post","body","JSON","stringify","undefined","put","delete","path","params","URL","Object","entries","forEach","key","value","searchParams","append"],"sources":["../../../../src/utils/FetchUtil.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}