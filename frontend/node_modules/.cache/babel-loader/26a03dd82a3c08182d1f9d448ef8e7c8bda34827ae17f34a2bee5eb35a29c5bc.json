{"ast":null,"code":"import { useMemo } from 'react';\nimport { useWallet } from './useWallet.js';\nexport function useAnchorWallet() {\n  const {\n    publicKey,\n    signTransaction,\n    signAllTransactions\n  } = useWallet();\n  return useMemo(() => publicKey && signTransaction && signAllTransactions ? {\n    publicKey,\n    signTransaction,\n    signAllTransactions\n  } : undefined, [publicKey, signTransaction, signAllTransactions]);\n}","map":{"version":3,"names":["useMemo","useWallet","useAnchorWallet","publicKey","signTransaction","signAllTransactions","undefined"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@solana\\wallet-adapter-react\\src\\useAnchorWallet.ts"],"sourcesContent":["import { type PublicKey, type Transaction, type VersionedTransaction } from '@solana/web3.js';\nimport { useMemo } from 'react';\nimport { useWallet } from './useWallet.js';\n\nexport interface AnchorWallet {\n    publicKey: PublicKey;\n    signTransaction<T extends Transaction | VersionedTransaction>(transaction: T): Promise<T>;\n    signAllTransactions<T extends Transaction | VersionedTransaction>(transactions: T[]): Promise<T[]>;\n}\n\nexport function useAnchorWallet(): AnchorWallet | undefined {\n    const { publicKey, signTransaction, signAllTransactions } = useWallet();\n    return useMemo(\n        () =>\n            publicKey && signTransaction && signAllTransactions\n                ? { publicKey, signTransaction, signAllTransactions }\n                : undefined,\n        [publicKey, signTransaction, signAllTransactions]\n    );\n}\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,SAAS,QAAQ,gBAAgB;AAQ1C,OAAM,SAAUC,eAAeA,CAAA;EAC3B,MAAM;IAAEC,SAAS;IAAEC,eAAe;IAAEC;EAAmB,CAAE,GAAGJ,SAAS,EAAE;EACvE,OAAOD,OAAO,CACV,MACIG,SAAS,IAAIC,eAAe,IAAIC,mBAAmB,GAC7C;IAAEF,SAAS;IAAEC,eAAe;IAAEC;EAAmB,CAAE,GACnDC,SAAS,EACnB,CAACH,SAAS,EAAEC,eAAe,EAAEC,mBAAmB,CAAC,CACpD;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}