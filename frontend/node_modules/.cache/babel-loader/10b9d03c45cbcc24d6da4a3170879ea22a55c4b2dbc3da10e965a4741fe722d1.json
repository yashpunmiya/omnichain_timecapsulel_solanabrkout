{"ast":null,"code":"import { hashSignature } from './hashSignature.js';\nimport { toSignature } from './toSignature.js';\n/**\n * Returns the hash (of the function/event signature) for a given event or function definition.\n */\nexport function toSignatureHash(fn) {\n  return hashSignature(toSignature(fn));\n}","map":{"version":3,"names":["hashSignature","toSignature","toSignatureHash","fn"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@reown\\appkit\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\utils\\hash\\toSignatureHash.ts"],"sourcesContent":["import type { AbiEvent, AbiFunction } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type HashSignatureErrorType, hashSignature } from './hashSignature.js'\nimport { type ToSignatureErrorType, toSignature } from './toSignature.js'\n\nexport type ToSignatureHashErrorType =\n  | HashSignatureErrorType\n  | ToSignatureErrorType\n  | ErrorType\n\n/**\n * Returns the hash (of the function/event signature) for a given event or function definition.\n */\nexport function toSignatureHash(fn: string | AbiFunction | AbiEvent) {\n  return hashSignature(toSignature(fn))\n}\n"],"mappings":"AAGA,SAAsCA,aAAa,QAAQ,oBAAoB;AAC/E,SAAoCC,WAAW,QAAQ,kBAAkB;AAOzE;;;AAGA,OAAM,SAAUC,eAAeA,CAACC,EAAmC;EACjE,OAAOH,aAAa,CAACC,WAAW,CAACE,EAAE,CAAC,CAAC;AACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}