{"ast":null,"code":"var precomputeAlias = function (p, n) {\n  var sum = p.reduce(function (acc, val) {\n    if (val < 0) {\n      throw new Error('Probability must be a positive: p[' + p.indexOf(val) + ']=' + val);\n    }\n    return acc + val;\n  }, 0);\n  if (sum === 0) {\n    throw new Error('Probability sum must be greater than zero.');\n  }\n  var scaledProbabilities = p.map(function (prob) {\n    return prob * n / sum;\n  });\n  var aliasData = {\n    prob: new Array(n),\n    alias: new Array(n)\n  };\n  var small = [];\n  var large = [];\n  for (var i = n - 1; i >= 0; i--) {\n    if (scaledProbabilities[i] < 1) {\n      small.push(i);\n    } else {\n      large.push(i);\n    }\n  }\n  while (small.length > 0 && large.length > 0) {\n    var less = small.pop();\n    var more = large.pop();\n    aliasData.prob[less] = scaledProbabilities[less];\n    aliasData.alias[less] = more;\n    scaledProbabilities[more] = scaledProbabilities[more] + scaledProbabilities[less] - 1;\n    if (scaledProbabilities[more] < 1) {\n      small.push(more);\n    } else {\n      large.push(more);\n    }\n  }\n  while (large.length > 0) {\n    aliasData.prob[large.pop()] = 1;\n  }\n  while (small.length > 0) {\n    aliasData.prob[small.pop()] = 1;\n  }\n  return aliasData;\n};\nvar draw = function (aliasData, outcomes, rng) {\n  var c = Math.floor(rng() * aliasData.prob.length);\n  return outcomes[rng() < aliasData.prob[c] ? c : aliasData.alias[c]];\n};\nvar next = function (aliasData, outcomes, rng, numOfSamples) {\n  if (numOfSamples === void 0) {\n    numOfSamples = 1;\n  }\n  if (numOfSamples === 1) {\n    return draw(aliasData, outcomes, rng);\n  }\n  var samples = [];\n  for (var i = 0; i < numOfSamples; i++) {\n    samples.push(draw(aliasData, outcomes, rng));\n  }\n  return samples;\n};\nvar sample = function (probabilities, outcomes, rng) {\n  if (rng === void 0) {\n    rng = Math.random;\n  }\n  if (!Array.isArray(probabilities)) {\n    throw new Error('Probabilities must be an array.');\n  }\n  if (probabilities.length === 0) {\n    throw new Error('Probabilities array must not be empty.');\n  }\n  var n = probabilities.length;\n  var indexedOutcomes = outcomes !== null && outcomes !== void 0 ? outcomes : Array.from({\n    length: n\n  }, function (_, i) {\n    return i;\n  });\n  var aliasData = precomputeAlias(probabilities, n);\n  return {\n    next: function (numOfSamples) {\n      if (numOfSamples === void 0) {\n        numOfSamples = 1;\n      }\n      return next(aliasData, indexedOutcomes, rng, numOfSamples);\n    }\n  };\n};\nexport default sample;","map":{"version":3,"names":["precomputeAlias","p","n","sum","reduce","acc","val","Error","indexOf","scaledProbabilities","map","prob","aliasData","Array","alias","small","large","i","push","length","less","pop","more","draw","outcomes","rng","c","Math","floor","next","numOfSamples","samples","sample","probabilities","random","isArray","indexedOutcomes","from","_"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@keystonehq/alias-sampling/dist/esm/index.js"],"sourcesContent":["var precomputeAlias = function (p, n) {\n    var sum = p.reduce(function (acc, val) {\n        if (val < 0) {\n            throw new Error('Probability must be a positive: p[' + p.indexOf(val) + ']=' + val);\n        }\n        return acc + val;\n    }, 0);\n    if (sum === 0) {\n        throw new Error('Probability sum must be greater than zero.');\n    }\n    var scaledProbabilities = p.map(function (prob) { return (prob * n) / sum; });\n    var aliasData = { prob: new Array(n), alias: new Array(n) };\n    var small = [];\n    var large = [];\n    for (var i = n - 1; i >= 0; i--) {\n        if (scaledProbabilities[i] < 1) {\n            small.push(i);\n        }\n        else {\n            large.push(i);\n        }\n    }\n    while (small.length > 0 && large.length > 0) {\n        var less = small.pop();\n        var more = large.pop();\n        aliasData.prob[less] = scaledProbabilities[less];\n        aliasData.alias[less] = more;\n        scaledProbabilities[more] = (scaledProbabilities[more] + scaledProbabilities[less]) - 1;\n        if (scaledProbabilities[more] < 1) {\n            small.push(more);\n        }\n        else {\n            large.push(more);\n        }\n    }\n    while (large.length > 0) {\n        aliasData.prob[large.pop()] = 1;\n    }\n    while (small.length > 0) {\n        aliasData.prob[small.pop()] = 1;\n    }\n    return aliasData;\n};\nvar draw = function (aliasData, outcomes, rng) {\n    var c = Math.floor(rng() * aliasData.prob.length);\n    return outcomes[(rng() < aliasData.prob[c]) ? c : aliasData.alias[c]];\n};\nvar next = function (aliasData, outcomes, rng, numOfSamples) {\n    if (numOfSamples === void 0) { numOfSamples = 1; }\n    if (numOfSamples === 1) {\n        return draw(aliasData, outcomes, rng);\n    }\n    var samples = [];\n    for (var i = 0; i < numOfSamples; i++) {\n        samples.push(draw(aliasData, outcomes, rng));\n    }\n    return samples;\n};\nvar sample = function (probabilities, outcomes, rng) {\n    if (rng === void 0) { rng = Math.random; }\n    if (!Array.isArray(probabilities)) {\n        throw new Error('Probabilities must be an array.');\n    }\n    if (probabilities.length === 0) {\n        throw new Error('Probabilities array must not be empty.');\n    }\n    var n = probabilities.length;\n    var indexedOutcomes = outcomes !== null && outcomes !== void 0 ? outcomes : Array.from({ length: n }, function (_, i) { return i; });\n    var aliasData = precomputeAlias(probabilities, n);\n    return {\n        next: function (numOfSamples) {\n            if (numOfSamples === void 0) { numOfSamples = 1; }\n            return next(aliasData, indexedOutcomes, rng, numOfSamples);\n        }\n    };\n};\nexport default sample;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}