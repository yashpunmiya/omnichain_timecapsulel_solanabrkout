{"ast":null,"code":"import { toHex } from '../../utils/encoding/toHex.js';\nimport { gasPerPubdataDefault } from '../constants/number.js';\nimport { assertEip712Transaction } from './assertEip712Transaction.js';\nimport { hashBytecode } from './hashBytecode.js';\nexport const getEip712Domain = transaction => {\n  assertEip712Transaction(transaction);\n  const message = transactionToMessage(transaction);\n  return {\n    domain: {\n      name: 'zkSync',\n      version: '2',\n      chainId: transaction.chainId\n    },\n    types: {\n      Transaction: [{\n        name: 'txType',\n        type: 'uint256'\n      }, {\n        name: 'from',\n        type: 'uint256'\n      }, {\n        name: 'to',\n        type: 'uint256'\n      }, {\n        name: 'gasLimit',\n        type: 'uint256'\n      }, {\n        name: 'gasPerPubdataByteLimit',\n        type: 'uint256'\n      }, {\n        name: 'maxFeePerGas',\n        type: 'uint256'\n      }, {\n        name: 'maxPriorityFeePerGas',\n        type: 'uint256'\n      }, {\n        name: 'paymaster',\n        type: 'uint256'\n      }, {\n        name: 'nonce',\n        type: 'uint256'\n      }, {\n        name: 'value',\n        type: 'uint256'\n      }, {\n        name: 'data',\n        type: 'bytes'\n      }, {\n        name: 'factoryDeps',\n        type: 'bytes32[]'\n      }, {\n        name: 'paymasterInput',\n        type: 'bytes'\n      }]\n    },\n    primaryType: 'Transaction',\n    message: message\n  };\n};\n//////////////////////////////////////////////////////////////////////////////\n// Utilities\nfunction transactionToMessage(transaction) {\n  const {\n    gas,\n    nonce,\n    to,\n    from,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    factoryDeps,\n    paymaster,\n    paymasterInput,\n    gasPerPubdata,\n    data\n  } = transaction;\n  return {\n    txType: 113n,\n    from: BigInt(from),\n    to: to ? BigInt(to) : 0n,\n    gasLimit: gas ?? 0n,\n    gasPerPubdataByteLimit: gasPerPubdata ?? gasPerPubdataDefault,\n    maxFeePerGas: maxFeePerGas ?? 0n,\n    maxPriorityFeePerGas: maxPriorityFeePerGas ?? 0n,\n    paymaster: paymaster ? BigInt(paymaster) : 0n,\n    nonce: nonce ? BigInt(nonce) : 0n,\n    value: value ?? 0n,\n    data: data ? data : '0x0',\n    factoryDeps: factoryDeps?.map(dep => toHex(hashBytecode(dep))) ?? [],\n    paymasterInput: paymasterInput ? paymasterInput : '0x'\n  };\n}\n//# sourceMappingURL=getEip712Domain.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}