{"ast":null,"code":"/**\n * @description Parses EIP-4361 formatted message into message fields object.\n *\n * @see https://eips.ethereum.org/EIPS/eip-4361\n *\n * @returns EIP-4361 fields object\n */\nexport function parseSiweMessage(message) {\n  const {\n    scheme,\n    statement,\n    ...prefix\n  } = message.match(prefixRegex)?.groups ?? {};\n  const {\n    chainId,\n    expirationTime,\n    issuedAt,\n    notBefore,\n    requestId,\n    ...suffix\n  } = message.match(suffixRegex)?.groups ?? {};\n  const resources = message.split('Resources:')[1]?.split('\\n- ').slice(1);\n  return {\n    ...prefix,\n    ...suffix,\n    ...(chainId ? {\n      chainId: Number(chainId)\n    } : {}),\n    ...(expirationTime ? {\n      expirationTime: new Date(expirationTime)\n    } : {}),\n    ...(issuedAt ? {\n      issuedAt: new Date(issuedAt)\n    } : {}),\n    ...(notBefore ? {\n      notBefore: new Date(notBefore)\n    } : {}),\n    ...(requestId ? {\n      requestId\n    } : {}),\n    ...(resources ? {\n      resources\n    } : {}),\n    ...(scheme ? {\n      scheme\n    } : {}),\n    ...(statement ? {\n      statement\n    } : {})\n  };\n}\n// https://regexr.com/80gdj\nconst prefixRegex = /^(?:(?<scheme>[a-zA-Z][a-zA-Z0-9+-.]*):\\/\\/)?(?<domain>[a-zA-Z0-9+-.]*(?::[0-9]{1,5})?) (?:wants you to sign in with your Ethereum account:\\n)(?<address>0x[a-fA-F0-9]{40})\\n\\n(?:(?<statement>.*)\\n\\n)?/;\n// https://regexr.com/80gf9\nconst suffixRegex = /(?:URI: (?<uri>.+))\\n(?:Version: (?<version>.+))\\n(?:Chain ID: (?<chainId>\\d+))\\n(?:Nonce: (?<nonce>[a-zA-Z0-9]+))\\n(?:Issued At: (?<issuedAt>.+))(?:\\nExpiration Time: (?<expirationTime>.+))?(?:\\nNot Before: (?<notBefore>.+))?(?:\\nRequest ID: (?<requestId>.+))?/;","map":{"version":3,"names":["parseSiweMessage","message","scheme","statement","prefix","match","prefixRegex","groups","chainId","expirationTime","issuedAt","notBefore","requestId","suffix","suffixRegex","resources","split","slice","Number","Date"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@reown\\appkit-controllers\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\utils\\siwe\\parseSiweMessage.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { ExactPartial, Prettify } from '../../types/utils.js'\nimport type { SiweMessage } from './types.js'\n\n/**\n * @description Parses EIP-4361 formatted message into message fields object.\n *\n * @see https://eips.ethereum.org/EIPS/eip-4361\n *\n * @returns EIP-4361 fields object\n */\nexport function parseSiweMessage(\n  message: string,\n): Prettify<ExactPartial<SiweMessage>> {\n  const { scheme, statement, ...prefix } = (message.match(prefixRegex)\n    ?.groups ?? {}) as {\n    address: Address\n    domain: string\n    scheme?: string\n    statement?: string\n  }\n  const { chainId, expirationTime, issuedAt, notBefore, requestId, ...suffix } =\n    (message.match(suffixRegex)?.groups ?? {}) as {\n      chainId: string\n      expirationTime?: string\n      issuedAt?: string\n      nonce: string\n      notBefore?: string\n      requestId?: string\n      uri: string\n      version: '1'\n    }\n  const resources = message.split('Resources:')[1]?.split('\\n- ').slice(1)\n  return {\n    ...prefix,\n    ...suffix,\n    ...(chainId ? { chainId: Number(chainId) } : {}),\n    ...(expirationTime ? { expirationTime: new Date(expirationTime) } : {}),\n    ...(issuedAt ? { issuedAt: new Date(issuedAt) } : {}),\n    ...(notBefore ? { notBefore: new Date(notBefore) } : {}),\n    ...(requestId ? { requestId } : {}),\n    ...(resources ? { resources } : {}),\n    ...(scheme ? { scheme } : {}),\n    ...(statement ? { statement } : {}),\n  }\n}\n\n// https://regexr.com/80gdj\nconst prefixRegex =\n  /^(?:(?<scheme>[a-zA-Z][a-zA-Z0-9+-.]*):\\/\\/)?(?<domain>[a-zA-Z0-9+-.]*(?::[0-9]{1,5})?) (?:wants you to sign in with your Ethereum account:\\n)(?<address>0x[a-fA-F0-9]{40})\\n\\n(?:(?<statement>.*)\\n\\n)?/\n\n// https://regexr.com/80gf9\nconst suffixRegex =\n  /(?:URI: (?<uri>.+))\\n(?:Version: (?<version>.+))\\n(?:Chain ID: (?<chainId>\\d+))\\n(?:Nonce: (?<nonce>[a-zA-Z0-9]+))\\n(?:Issued At: (?<issuedAt>.+))(?:\\nExpiration Time: (?<expirationTime>.+))?(?:\\nNot Before: (?<notBefore>.+))?(?:\\nRequest ID: (?<requestId>.+))?/\n"],"mappings":"AAKA;;;;;;;AAOA,OAAM,SAAUA,gBAAgBA,CAC9BC,OAAe;EAEf,MAAM;IAAEC,MAAM;IAAEC,SAAS;IAAE,GAAGC;EAAM,CAAE,GAAIH,OAAO,CAACI,KAAK,CAACC,WAAW,CAAC,EAChEC,MAAM,IAAI,EAKb;EACD,MAAM;IAAEC,OAAO;IAAEC,cAAc;IAAEC,QAAQ;IAAEC,SAAS;IAAEC,SAAS;IAAE,GAAGC;EAAM,CAAE,GACzEZ,OAAO,CAACI,KAAK,CAACS,WAAW,CAAC,EAAEP,MAAM,IAAI,EAStC;EACH,MAAMQ,SAAS,GAAGd,OAAO,CAACe,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,MAAM,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EACxE,OAAO;IACL,GAAGb,MAAM;IACT,GAAGS,MAAM;IACT,IAAIL,OAAO,GAAG;MAAEA,OAAO,EAAEU,MAAM,CAACV,OAAO;IAAC,CAAE,GAAG,EAAE,CAAC;IAChD,IAAIC,cAAc,GAAG;MAAEA,cAAc,EAAE,IAAIU,IAAI,CAACV,cAAc;IAAC,CAAE,GAAG,EAAE,CAAC;IACvE,IAAIC,QAAQ,GAAG;MAAEA,QAAQ,EAAE,IAAIS,IAAI,CAACT,QAAQ;IAAC,CAAE,GAAG,EAAE,CAAC;IACrD,IAAIC,SAAS,GAAG;MAAEA,SAAS,EAAE,IAAIQ,IAAI,CAACR,SAAS;IAAC,CAAE,GAAG,EAAE,CAAC;IACxD,IAAIC,SAAS,GAAG;MAAEA;IAAS,CAAE,GAAG,EAAE,CAAC;IACnC,IAAIG,SAAS,GAAG;MAAEA;IAAS,CAAE,GAAG,EAAE,CAAC;IACnC,IAAIb,MAAM,GAAG;MAAEA;IAAM,CAAE,GAAG,EAAE,CAAC;IAC7B,IAAIC,SAAS,GAAG;MAAEA;IAAS,CAAE,GAAG,EAAE;GACnC;AACH;AAEA;AACA,MAAMG,WAAW,GACf,0MAA0M;AAE5M;AACA,MAAMQ,WAAW,GACf,uQAAuQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}