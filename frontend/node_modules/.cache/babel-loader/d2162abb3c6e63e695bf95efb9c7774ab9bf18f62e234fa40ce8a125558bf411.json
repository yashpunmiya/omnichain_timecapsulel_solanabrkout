{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Extract = Extract;\nconst type_1 = require(\"../create/type\");\nconst index_1 = require(\"../union/index\");\nconst index_2 = require(\"../never/index\");\nconst index_3 = require(\"../extends/index\");\nconst extract_from_mapped_result_1 = require(\"./extract-from-mapped-result\");\nconst extract_from_template_literal_1 = require(\"./extract-from-template-literal\");\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nconst kind_1 = require(\"../guard/kind\");\nfunction ExtractRest(L, R) {\n  const extracted = L.filter(inner => (0, index_3.ExtendsCheck)(inner, R) !== index_3.ExtendsResult.False);\n  return extracted.length === 1 ? extracted[0] : (0, index_1.Union)(extracted);\n}\n/** `[Json]` Constructs a type by extracting from type all union members that are assignable to union */\nfunction Extract(L, R, options) {\n  // overloads\n  if ((0, kind_1.IsTemplateLiteral)(L)) return (0, type_1.CreateType)((0, extract_from_template_literal_1.ExtractFromTemplateLiteral)(L, R), options);\n  if ((0, kind_1.IsMappedResult)(L)) return (0, type_1.CreateType)((0, extract_from_mapped_result_1.ExtractFromMappedResult)(L, R), options);\n  // prettier-ignore\n  return (0, type_1.CreateType)((0, kind_1.IsUnion)(L) ? ExtractRest(L.anyOf, R) : (0, index_3.ExtendsCheck)(L, R) !== index_3.ExtendsResult.False ? L : (0, index_2.Never)(), options);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","Extract","type_1","require","index_1","index_2","index_3","extract_from_mapped_result_1","extract_from_template_literal_1","kind_1","ExtractRest","L","R","extracted","filter","inner","ExtendsCheck","ExtendsResult","False","length","Union","options","IsTemplateLiteral","CreateType","ExtractFromTemplateLiteral","IsMappedResult","ExtractFromMappedResult","IsUnion","anyOf","Never"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@sinclair/typebox/build/cjs/type/extract/extract.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Extract = Extract;\nconst type_1 = require(\"../create/type\");\nconst index_1 = require(\"../union/index\");\nconst index_2 = require(\"../never/index\");\nconst index_3 = require(\"../extends/index\");\nconst extract_from_mapped_result_1 = require(\"./extract-from-mapped-result\");\nconst extract_from_template_literal_1 = require(\"./extract-from-template-literal\");\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nconst kind_1 = require(\"../guard/kind\");\nfunction ExtractRest(L, R) {\n    const extracted = L.filter((inner) => (0, index_3.ExtendsCheck)(inner, R) !== index_3.ExtendsResult.False);\n    return extracted.length === 1 ? extracted[0] : (0, index_1.Union)(extracted);\n}\n/** `[Json]` Constructs a type by extracting from type all union members that are assignable to union */\nfunction Extract(L, R, options) {\n    // overloads\n    if ((0, kind_1.IsTemplateLiteral)(L))\n        return (0, type_1.CreateType)((0, extract_from_template_literal_1.ExtractFromTemplateLiteral)(L, R), options);\n    if ((0, kind_1.IsMappedResult)(L))\n        return (0, type_1.CreateType)((0, extract_from_mapped_result_1.ExtractFromMappedResult)(L, R), options);\n    // prettier-ignore\n    return (0, type_1.CreateType)((0, kind_1.IsUnion)(L) ? ExtractRest(L.anyOf, R) :\n        (0, index_3.ExtendsCheck)(L, R) !== index_3.ExtendsResult.False ? L : (0, index_2.Never)(), options);\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAGA,OAAO;AACzB,MAAMC,MAAM,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACxC,MAAMC,OAAO,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACzC,MAAME,OAAO,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AACzC,MAAMG,OAAO,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAMI,4BAA4B,GAAGJ,OAAO,CAAC,8BAA8B,CAAC;AAC5E,MAAMK,+BAA+B,GAAGL,OAAO,CAAC,iCAAiC,CAAC;AAClF;AACA;AACA;AACA,MAAMM,MAAM,GAAGN,OAAO,CAAC,eAAe,CAAC;AACvC,SAASO,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAE;EACvB,MAAMC,SAAS,GAAGF,CAAC,CAACG,MAAM,CAAEC,KAAK,IAAK,CAAC,CAAC,EAAET,OAAO,CAACU,YAAY,EAAED,KAAK,EAAEH,CAAC,CAAC,KAAKN,OAAO,CAACW,aAAa,CAACC,KAAK,CAAC;EAC1G,OAAOL,SAAS,CAACM,MAAM,KAAK,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAET,OAAO,CAACgB,KAAK,EAAEP,SAAS,CAAC;AAChF;AACA;AACA,SAASZ,OAAOA,CAACU,CAAC,EAAEC,CAAC,EAAES,OAAO,EAAE;EAC5B;EACA,IAAI,CAAC,CAAC,EAAEZ,MAAM,CAACa,iBAAiB,EAAEX,CAAC,CAAC,EAChC,OAAO,CAAC,CAAC,EAAET,MAAM,CAACqB,UAAU,EAAE,CAAC,CAAC,EAAEf,+BAA+B,CAACgB,0BAA0B,EAAEb,CAAC,EAAEC,CAAC,CAAC,EAAES,OAAO,CAAC;EACjH,IAAI,CAAC,CAAC,EAAEZ,MAAM,CAACgB,cAAc,EAAEd,CAAC,CAAC,EAC7B,OAAO,CAAC,CAAC,EAAET,MAAM,CAACqB,UAAU,EAAE,CAAC,CAAC,EAAEhB,4BAA4B,CAACmB,uBAAuB,EAAEf,CAAC,EAAEC,CAAC,CAAC,EAAES,OAAO,CAAC;EAC3G;EACA,OAAO,CAAC,CAAC,EAAEnB,MAAM,CAACqB,UAAU,EAAE,CAAC,CAAC,EAAEd,MAAM,CAACkB,OAAO,EAAEhB,CAAC,CAAC,GAAGD,WAAW,CAACC,CAAC,CAACiB,KAAK,EAAEhB,CAAC,CAAC,GAC1E,CAAC,CAAC,EAAEN,OAAO,CAACU,YAAY,EAAEL,CAAC,EAAEC,CAAC,CAAC,KAAKN,OAAO,CAACW,aAAa,CAACC,KAAK,GAAGP,CAAC,GAAG,CAAC,CAAC,EAAEN,OAAO,CAACwB,KAAK,EAAE,CAAC,EAAER,OAAO,CAAC;AAC5G","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}