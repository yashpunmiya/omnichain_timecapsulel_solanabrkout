{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Record = Record;\nconst type_1 = require(\"../create/type\");\nconst index_1 = require(\"../object/index\");\nconst index_2 = require(\"../never/index\");\nconst index_3 = require(\"../union/index\");\nconst index_4 = require(\"../template-literal/index\");\nconst index_5 = require(\"../patterns/index\");\nconst index_6 = require(\"../indexed/index\");\nconst index_7 = require(\"../symbols/index\");\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nconst value_1 = require(\"../guard/value\");\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nconst kind_1 = require(\"../guard/kind\");\n// ------------------------------------------------------------------\n// RecordCreateFromPattern\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordCreateFromPattern(pattern, T, options) {\n  return (0, type_1.CreateType)({\n    [index_7.Kind]: 'Record',\n    type: 'object',\n    patternProperties: {\n      [pattern]: T\n    }\n  }, options);\n}\n// ------------------------------------------------------------------\n// RecordCreateFromKeys\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordCreateFromKeys(K, T, options) {\n  const Acc = {};\n  for (const K2 of K) Acc[K2] = T;\n  return (0, index_1.Object)(Acc, {\n    ...options,\n    [index_7.Hint]: 'Record'\n  });\n}\n// prettier-ignore\nfunction FromTemplateLiteralKey(K, T, options) {\n  return (0, index_4.IsTemplateLiteralFinite)(K) ? RecordCreateFromKeys((0, index_6.IndexPropertyKeys)(K), T, options) : RecordCreateFromPattern(K.pattern, T, options);\n}\n// prettier-ignore\nfunction FromUnionKey(K, T, options) {\n  return RecordCreateFromKeys((0, index_6.IndexPropertyKeys)((0, index_3.Union)(K)), T, options);\n}\n// prettier-ignore\nfunction FromLiteralKey(K, T, options) {\n  return RecordCreateFromKeys([K.toString()], T, options);\n}\n// prettier-ignore\nfunction FromRegExpKey(K, T, options) {\n  return RecordCreateFromPattern(K.source, T, options);\n}\n// prettier-ignore\nfunction FromStringKey(K, T, options) {\n  const pattern = (0, value_1.IsUndefined)(K.pattern) ? index_5.PatternStringExact : K.pattern;\n  return RecordCreateFromPattern(pattern, T, options);\n}\n// prettier-ignore\nfunction FromAnyKey(K, T, options) {\n  return RecordCreateFromPattern(index_5.PatternStringExact, T, options);\n}\n// prettier-ignore\nfunction FromNeverKey(K, T, options) {\n  return RecordCreateFromPattern(index_5.PatternNeverExact, T, options);\n}\n// prettier-ignore\nfunction FromIntegerKey(_, T, options) {\n  return RecordCreateFromPattern(index_5.PatternNumberExact, T, options);\n}\n// prettier-ignore\nfunction FromNumberKey(_, T, options) {\n  return RecordCreateFromPattern(index_5.PatternNumberExact, T, options);\n}\n// ------------------------------------------------------------------\n// TRecordOrObject\n// ------------------------------------------------------------------\n/** `[Json]` Creates a Record type */\nfunction Record(K, T, options = {}) {\n  // prettier-ignore\n  return (0, kind_1.IsUnion)(K) ? FromUnionKey(K.anyOf, T, options) : (0, kind_1.IsTemplateLiteral)(K) ? FromTemplateLiteralKey(K, T, options) : (0, kind_1.IsLiteral)(K) ? FromLiteralKey(K.const, T, options) : (0, kind_1.IsInteger)(K) ? FromIntegerKey(K, T, options) : (0, kind_1.IsNumber)(K) ? FromNumberKey(K, T, options) : (0, kind_1.IsRegExp)(K) ? FromRegExpKey(K, T, options) : (0, kind_1.IsString)(K) ? FromStringKey(K, T, options) : (0, kind_1.IsAny)(K) ? FromAnyKey(K, T, options) : (0, kind_1.IsNever)(K) ? FromNeverKey(K, T, options) : (0, index_2.Never)(options);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","Record","type_1","require","index_1","index_2","index_3","index_4","index_5","index_6","index_7","value_1","kind_1","RecordCreateFromPattern","pattern","T","options","CreateType","Kind","type","patternProperties","RecordCreateFromKeys","K","Acc","K2","Hint","FromTemplateLiteralKey","IsTemplateLiteralFinite","IndexPropertyKeys","FromUnionKey","Union","FromLiteralKey","toString","FromRegExpKey","source","FromStringKey","IsUndefined","PatternStringExact","FromAnyKey","FromNeverKey","PatternNeverExact","FromIntegerKey","_","PatternNumberExact","FromNumberKey","IsUnion","anyOf","IsTemplateLiteral","IsLiteral","const","IsInteger","IsNumber","IsRegExp","IsString","IsAny","IsNever","Never"],"sources":["C:/Users/yyash/Coding/solana-brkout/frontend/node_modules/@sinclair/typebox/build/cjs/type/record/record.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Record = Record;\nconst type_1 = require(\"../create/type\");\nconst index_1 = require(\"../object/index\");\nconst index_2 = require(\"../never/index\");\nconst index_3 = require(\"../union/index\");\nconst index_4 = require(\"../template-literal/index\");\nconst index_5 = require(\"../patterns/index\");\nconst index_6 = require(\"../indexed/index\");\nconst index_7 = require(\"../symbols/index\");\n// ------------------------------------------------------------------\n// ValueGuard\n// ------------------------------------------------------------------\nconst value_1 = require(\"../guard/value\");\n// ------------------------------------------------------------------\n// TypeGuard\n// ------------------------------------------------------------------\nconst kind_1 = require(\"../guard/kind\");\n// ------------------------------------------------------------------\n// RecordCreateFromPattern\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordCreateFromPattern(pattern, T, options) {\n    return (0, type_1.CreateType)({\n        [index_7.Kind]: 'Record',\n        type: 'object',\n        patternProperties: { [pattern]: T }\n    }, options);\n}\n// ------------------------------------------------------------------\n// RecordCreateFromKeys\n// ------------------------------------------------------------------\n// prettier-ignore\nfunction RecordCreateFromKeys(K, T, options) {\n    const Acc = {};\n    for (const K2 of K)\n        Acc[K2] = T;\n    return (0, index_1.Object)(Acc, { ...options, [index_7.Hint]: 'Record' });\n}\n// prettier-ignore\nfunction FromTemplateLiteralKey(K, T, options) {\n    return ((0, index_4.IsTemplateLiteralFinite)(K)\n        ? RecordCreateFromKeys((0, index_6.IndexPropertyKeys)(K), T, options)\n        : RecordCreateFromPattern(K.pattern, T, options));\n}\n// prettier-ignore\nfunction FromUnionKey(K, T, options) {\n    return RecordCreateFromKeys((0, index_6.IndexPropertyKeys)((0, index_3.Union)(K)), T, options);\n}\n// prettier-ignore\nfunction FromLiteralKey(K, T, options) {\n    return RecordCreateFromKeys([K.toString()], T, options);\n}\n// prettier-ignore\nfunction FromRegExpKey(K, T, options) {\n    return RecordCreateFromPattern(K.source, T, options);\n}\n// prettier-ignore\nfunction FromStringKey(K, T, options) {\n    const pattern = (0, value_1.IsUndefined)(K.pattern) ? index_5.PatternStringExact : K.pattern;\n    return RecordCreateFromPattern(pattern, T, options);\n}\n// prettier-ignore\nfunction FromAnyKey(K, T, options) {\n    return RecordCreateFromPattern(index_5.PatternStringExact, T, options);\n}\n// prettier-ignore\nfunction FromNeverKey(K, T, options) {\n    return RecordCreateFromPattern(index_5.PatternNeverExact, T, options);\n}\n// prettier-ignore\nfunction FromIntegerKey(_, T, options) {\n    return RecordCreateFromPattern(index_5.PatternNumberExact, T, options);\n}\n// prettier-ignore\nfunction FromNumberKey(_, T, options) {\n    return RecordCreateFromPattern(index_5.PatternNumberExact, T, options);\n}\n// ------------------------------------------------------------------\n// TRecordOrObject\n// ------------------------------------------------------------------\n/** `[Json]` Creates a Record type */\nfunction Record(K, T, options = {}) {\n    // prettier-ignore\n    return ((0, kind_1.IsUnion)(K) ? FromUnionKey(K.anyOf, T, options) :\n        (0, kind_1.IsTemplateLiteral)(K) ? FromTemplateLiteralKey(K, T, options) :\n            (0, kind_1.IsLiteral)(K) ? FromLiteralKey(K.const, T, options) :\n                (0, kind_1.IsInteger)(K) ? FromIntegerKey(K, T, options) :\n                    (0, kind_1.IsNumber)(K) ? FromNumberKey(K, T, options) :\n                        (0, kind_1.IsRegExp)(K) ? FromRegExpKey(K, T, options) :\n                            (0, kind_1.IsString)(K) ? FromStringKey(K, T, options) :\n                                (0, kind_1.IsAny)(K) ? FromAnyKey(K, T, options) :\n                                    (0, kind_1.IsNever)(K) ? FromNeverKey(K, T, options) :\n                                        (0, index_2.Never)(options));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}