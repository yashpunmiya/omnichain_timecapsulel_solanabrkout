{"ast":null,"code":"import { AccountController } from '../controllers/AccountController.js';\nimport { BlockchainApiController } from '../controllers/BlockchainApiController.js';\nimport { ChainController } from '../controllers/ChainController.js';\nimport { ConnectionController } from '../controllers/ConnectionController.js';\n// -- Controller ---------------------------------------- //\nexport const SwapApiUtil = {\n  async getTokenList() {\n    const caipNetwork = ChainController.state.activeCaipNetwork;\n    const response = await BlockchainApiController.fetchSwapTokens({\n      chainId: caipNetwork?.caipNetworkId\n    });\n    const tokens = response?.tokens?.map(token => ({\n      ...token,\n      eip2612: false,\n      quantity: {\n        decimals: '0',\n        numeric: '0'\n      },\n      price: 0,\n      value: 0\n    })) || [];\n    return tokens;\n  },\n  async fetchGasPrice() {\n    const caipNetwork = ChainController.state.activeCaipNetwork;\n    if (!caipNetwork) {\n      return null;\n    }\n    try {\n      switch (caipNetwork.chainNamespace) {\n        case 'solana':\n          // eslint-disable-next-line no-case-declarations\n          const lamportsPerSignature = (await ConnectionController?.estimateGas({\n            chainNamespace: 'solana'\n          }))?.toString();\n          return {\n            standard: lamportsPerSignature,\n            fast: lamportsPerSignature,\n            instant: lamportsPerSignature\n          };\n        case 'eip155':\n        default:\n          return await BlockchainApiController.fetchGasPrice({\n            chainId: caipNetwork.caipNetworkId\n          });\n      }\n    } catch {\n      return null;\n    }\n  },\n  async fetchSwapAllowance({\n    tokenAddress,\n    userAddress,\n    sourceTokenAmount,\n    sourceTokenDecimals\n  }) {\n    const response = await BlockchainApiController.fetchSwapAllowance({\n      tokenAddress,\n      userAddress\n    });\n    if (response?.allowance && sourceTokenAmount && sourceTokenDecimals) {\n      const parsedValue = ConnectionController.parseUnits(sourceTokenAmount, sourceTokenDecimals) || 0;\n      const hasAllowance = BigInt(response.allowance) >= parsedValue;\n      return hasAllowance;\n    }\n    return false;\n  },\n  async getMyTokensWithBalance(forceUpdate) {\n    const address = AccountController.state.address;\n    const caipNetwork = ChainController.state.activeCaipNetwork;\n    if (!address || !caipNetwork) {\n      return [];\n    }\n    const response = await BlockchainApiController.getBalance(address, caipNetwork.caipNetworkId, forceUpdate);\n    /*\n     * The 1Inch API includes many low-quality tokens in the balance response,\n     * which appear inconsistently. This filter prevents them from being displayed.\n     */\n    const balances = response.balances.filter(balance => balance.quantity.decimals !== '0');\n    AccountController.setTokenBalance(balances, ChainController.state.activeChain);\n    return this.mapBalancesToSwapTokens(balances);\n  },\n  mapBalancesToSwapTokens(balances) {\n    return balances?.map(token => ({\n      ...token,\n      address: token?.address ? token.address : ChainController.getActiveNetworkTokenAddress(),\n      decimals: parseInt(token.quantity.decimals, 10),\n      logoUri: token.iconUrl,\n      eip2612: false\n    })) || [];\n  }\n};","map":{"version":3,"names":["AccountController","BlockchainApiController","ChainController","ConnectionController","SwapApiUtil","getTokenList","caipNetwork","state","activeCaipNetwork","response","fetchSwapTokens","chainId","caipNetworkId","tokens","map","token","eip2612","quantity","decimals","numeric","price","value","fetchGasPrice","chainNamespace","lamportsPerSignature","estimateGas","toString","standard","fast","instant","fetchSwapAllowance","tokenAddress","userAddress","sourceTokenAmount","sourceTokenDecimals","allowance","parsedValue","parseUnits","hasAllowance","BigInt","getMyTokensWithBalance","forceUpdate","address","getBalance","balances","filter","balance","setTokenBalance","activeChain","mapBalancesToSwapTokens","getActiveNetworkTokenAddress","parseInt","logoUri","iconUrl"],"sources":["../../../../src/utils/SwapApiUtil.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}