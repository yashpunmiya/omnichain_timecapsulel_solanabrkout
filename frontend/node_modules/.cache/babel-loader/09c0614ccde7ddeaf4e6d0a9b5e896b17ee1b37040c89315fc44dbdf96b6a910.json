{"ast":null,"code":"import { AbiDecodingDataSizeTooSmallError, AbiEventSignatureEmptyTopicsError, AbiEventSignatureNotFoundError, DecodeLogDataMismatch, DecodeLogTopicsMismatch } from '../../errors/abi.js';\nimport { size } from '../data/size.js';\nimport { toEventSelector } from '../hash/toEventSelector.js';\nimport { PositionOutOfBoundsError } from '../../errors/cursor.js';\nimport { decodeAbiParameters } from './decodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nconst docsPath = '/docs/contract/decodeEventLog';\nexport function decodeEventLog(parameters) {\n  const {\n    abi,\n    data,\n    strict: strict_,\n    topics\n  } = parameters;\n  const strict = strict_ ?? true;\n  const [signature, ...argTopics] = topics;\n  if (!signature) throw new AbiEventSignatureEmptyTopicsError({\n    docsPath\n  });\n  const abiItem = (() => {\n    if (abi.length === 1) return abi[0];\n    return abi.find(x => x.type === 'event' && signature === toEventSelector(formatAbiItem(x)));\n  })();\n  if (!(abiItem && 'name' in abiItem) || abiItem.type !== 'event') throw new AbiEventSignatureNotFoundError(signature, {\n    docsPath\n  });\n  const {\n    name,\n    inputs\n  } = abiItem;\n  const isUnnamed = inputs?.some(x => !('name' in x && x.name));\n  let args = isUnnamed ? [] : {};\n  // Decode topics (indexed args).\n  const indexedInputs = inputs.filter(x => 'indexed' in x && x.indexed);\n  for (let i = 0; i < indexedInputs.length; i++) {\n    const param = indexedInputs[i];\n    const topic = argTopics[i];\n    if (!topic) throw new DecodeLogTopicsMismatch({\n      abiItem,\n      param: param\n    });\n    args[isUnnamed ? i : param.name || i] = decodeTopic({\n      param,\n      value: topic\n    });\n  }\n  // Decode data (non-indexed args).\n  const nonIndexedInputs = inputs.filter(x => !('indexed' in x && x.indexed));\n  if (nonIndexedInputs.length > 0) {\n    if (data && data !== '0x') {\n      try {\n        const decodedData = decodeAbiParameters(nonIndexedInputs, data);\n        if (decodedData) {\n          if (isUnnamed) args = [...args, ...decodedData];else {\n            for (let i = 0; i < nonIndexedInputs.length; i++) {\n              args[nonIndexedInputs[i].name] = decodedData[i];\n            }\n          }\n        }\n      } catch (err) {\n        if (strict) {\n          if (err instanceof AbiDecodingDataSizeTooSmallError || err instanceof PositionOutOfBoundsError) throw new DecodeLogDataMismatch({\n            abiItem,\n            data: data,\n            params: nonIndexedInputs,\n            size: size(data)\n          });\n          throw err;\n        }\n      }\n    } else if (strict) {\n      throw new DecodeLogDataMismatch({\n        abiItem,\n        data: '0x',\n        params: nonIndexedInputs,\n        size: 0\n      });\n    }\n  }\n  return {\n    eventName: name,\n    args: Object.values(args).length > 0 ? args : undefined\n  };\n}\nfunction decodeTopic({\n  param,\n  value\n}) {\n  if (param.type === 'string' || param.type === 'bytes' || param.type === 'tuple' || param.type.match(/^(.*)\\[(\\d+)?\\]$/)) return value;\n  const decodedArg = decodeAbiParameters([param], value) || [];\n  return decodedArg[0];\n}","map":{"version":3,"names":["AbiDecodingDataSizeTooSmallError","AbiEventSignatureEmptyTopicsError","AbiEventSignatureNotFoundError","DecodeLogDataMismatch","DecodeLogTopicsMismatch","size","toEventSelector","PositionOutOfBoundsError","decodeAbiParameters","formatAbiItem","docsPath","decodeEventLog","parameters","abi","data","strict","strict_","topics","signature","argTopics","abiItem","length","find","x","type","name","inputs","isUnnamed","some","args","indexedInputs","filter","indexed","i","param","topic","decodeTopic","value","nonIndexedInputs","decodedData","err","params","eventName","Object","values","undefined","match","decodedArg"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\utils\\abi\\decodeEventLog.ts"],"sourcesContent":["import type { Abi, AbiParameter } from 'abitype'\n\nimport {\n  AbiDecodingDataSizeTooSmallError,\n  type AbiDecodingDataSizeTooSmallErrorType,\n  AbiEventSignatureEmptyTopicsError,\n  type AbiEventSignatureEmptyTopicsErrorType,\n  AbiEventSignatureNotFoundError,\n  type AbiEventSignatureNotFoundErrorType,\n  DecodeLogDataMismatch,\n  type DecodeLogDataMismatchErrorType,\n  DecodeLogTopicsMismatch,\n  type DecodeLogTopicsMismatchErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  ContractEventArgsFromTopics,\n  ContractEventName,\n  EventDefinition,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type {\n  IsNarrowable,\n  Prettify,\n  UnionEvaluate,\n} from '../../types/utils.js'\nimport { size } from '../data/size.js'\nimport {\n  type ToEventSelectorErrorType,\n  toEventSelector,\n} from '../hash/toEventSelector.js'\n\nimport { PositionOutOfBoundsError } from '../../errors/cursor.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeEventLogParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  topics extends Hex[] = Hex[],\n  data extends Hex | undefined = undefined,\n  strict extends boolean = true,\n> = {\n  abi: abi\n  data?: data | undefined\n  eventName?: eventName | ContractEventName<abi> | undefined\n  strict?: strict | boolean | undefined\n  topics: [signature: Hex, ...args: topics] | []\n}\n\nexport type DecodeEventLogReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  eventName extends ContractEventName<abi> | undefined = ContractEventName<abi>,\n  topics extends Hex[] = Hex[],\n  data extends Hex | undefined = undefined,\n  strict extends boolean = true,\n  ///\n  allEventNames extends\n    ContractEventName<abi> = eventName extends ContractEventName<abi>\n    ? eventName\n    : ContractEventName<abi>,\n> = IsNarrowable<abi, Abi> extends true\n  ? {\n      [name in allEventNames]: Prettify<\n        {\n          eventName: name\n        } & UnionEvaluate<\n          ContractEventArgsFromTopics<abi, name, strict> extends infer allArgs\n            ? topics extends readonly []\n              ? data extends undefined\n                ? { args?: undefined }\n                : { args?: allArgs | undefined }\n              : { args: allArgs }\n            : never\n        >\n      >\n    }[allEventNames]\n  : {\n      eventName: eventName\n      args: readonly unknown[] | undefined\n    }\n\nexport type DecodeEventLogErrorType =\n  | AbiDecodingDataSizeTooSmallErrorType\n  | AbiEventSignatureEmptyTopicsErrorType\n  | AbiEventSignatureNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | DecodeLogTopicsMismatchErrorType\n  | DecodeLogDataMismatchErrorType\n  | FormatAbiItemErrorType\n  | ToEventSelectorErrorType\n  | ErrorType\n\nconst docsPath = '/docs/contract/decodeEventLog'\n\nexport function decodeEventLog<\n  const abi extends Abi | readonly unknown[],\n  eventName extends ContractEventName<abi> | undefined = undefined,\n  topics extends Hex[] = Hex[],\n  data extends Hex | undefined = undefined,\n  strict extends boolean = true,\n>(\n  parameters: DecodeEventLogParameters<abi, eventName, topics, data, strict>,\n): DecodeEventLogReturnType<abi, eventName, topics, data, strict> {\n  const {\n    abi,\n    data,\n    strict: strict_,\n    topics,\n  } = parameters as DecodeEventLogParameters\n\n  const strict = strict_ ?? true\n  const [signature, ...argTopics] = topics\n  if (!signature) throw new AbiEventSignatureEmptyTopicsError({ docsPath })\n\n  const abiItem = (() => {\n    if (abi.length === 1) return abi[0]\n    return abi.find(\n      (x) =>\n        x.type === 'event' &&\n        signature === toEventSelector(formatAbiItem(x) as EventDefinition),\n    )\n  })()\n\n  if (!(abiItem && 'name' in abiItem) || abiItem.type !== 'event')\n    throw new AbiEventSignatureNotFoundError(signature, { docsPath })\n\n  const { name, inputs } = abiItem\n  const isUnnamed = inputs?.some((x) => !('name' in x && x.name))\n\n  let args: any = isUnnamed ? [] : {}\n\n  // Decode topics (indexed args).\n  const indexedInputs = inputs.filter((x) => 'indexed' in x && x.indexed)\n  for (let i = 0; i < indexedInputs.length; i++) {\n    const param = indexedInputs[i]\n    const topic = argTopics[i]\n    if (!topic)\n      throw new DecodeLogTopicsMismatch({\n        abiItem,\n        param: param as AbiParameter & { indexed: boolean },\n      })\n    args[isUnnamed ? i : param.name || i] = decodeTopic({ param, value: topic })\n  }\n\n  // Decode data (non-indexed args).\n  const nonIndexedInputs = inputs.filter((x) => !('indexed' in x && x.indexed))\n  if (nonIndexedInputs.length > 0) {\n    if (data && data !== '0x') {\n      try {\n        const decodedData = decodeAbiParameters(nonIndexedInputs, data)\n        if (decodedData) {\n          if (isUnnamed) args = [...args, ...decodedData]\n          else {\n            for (let i = 0; i < nonIndexedInputs.length; i++) {\n              args[nonIndexedInputs[i].name!] = decodedData[i]\n            }\n          }\n        }\n      } catch (err) {\n        if (strict) {\n          if (\n            err instanceof AbiDecodingDataSizeTooSmallError ||\n            err instanceof PositionOutOfBoundsError\n          )\n            throw new DecodeLogDataMismatch({\n              abiItem,\n              data: data,\n              params: nonIndexedInputs,\n              size: size(data),\n            })\n          throw err\n        }\n      }\n    } else if (strict) {\n      throw new DecodeLogDataMismatch({\n        abiItem,\n        data: '0x',\n        params: nonIndexedInputs,\n        size: 0,\n      })\n    }\n  }\n\n  return {\n    eventName: name,\n    args: Object.values(args).length > 0 ? args : undefined,\n  } as unknown as DecodeEventLogReturnType<abi, eventName, topics, data, strict>\n}\n\nfunction decodeTopic({ param, value }: { param: AbiParameter; value: Hex }) {\n  if (\n    param.type === 'string' ||\n    param.type === 'bytes' ||\n    param.type === 'tuple' ||\n    param.type.match(/^(.*)\\[(\\d+)?\\]$/)\n  )\n    return value\n  const decodedArg = decodeAbiParameters([param], value) || []\n  return decodedArg[0]\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}