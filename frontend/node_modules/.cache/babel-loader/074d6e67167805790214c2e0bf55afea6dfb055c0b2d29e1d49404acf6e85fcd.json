{"ast":null,"code":"import { hashTypedData } from './hashTypedData.js';\nimport { recoverAddress } from './recoverAddress.js';\nexport async function recoverTypedDataAddress(parameters) {\n  const {\n    domain,\n    message,\n    primaryType,\n    signature,\n    types\n  } = parameters;\n  return recoverAddress({\n    hash: hashTypedData({\n      domain,\n      message,\n      primaryType,\n      types\n    }),\n    signature\n  });\n}","map":{"version":3,"names":["hashTypedData","recoverAddress","recoverTypedDataAddress","parameters","domain","message","primaryType","signature","types","hash"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\@walletconnect\\utils\\node_modules\\viem\\utils\\signature\\recoverTypedDataAddress.ts"],"sourcesContent":["import type { Address, TypedData } from 'abitype'\n\nimport type { ByteArray, Hex, Signature } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type HashTypedDataErrorType, hashTypedData } from './hashTypedData.js'\nimport {\n  type RecoverAddressErrorType,\n  recoverAddress,\n} from './recoverAddress.js'\n\nexport type RecoverTypedDataAddressParameters<\n  typedData extends TypedData | Record<string, unknown> = TypedData,\n  primaryType extends keyof typedData | 'EIP712Domain' = keyof typedData,\n> = TypedDataDefinition<typedData, primaryType> & {\n  signature: Hex | ByteArray | Signature\n}\n\nexport type RecoverTypedDataAddressReturnType = Address\n\nexport type RecoverTypedDataAddressErrorType =\n  | RecoverAddressErrorType\n  | HashTypedDataErrorType\n  | ErrorType\n\nexport async function recoverTypedDataAddress<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(\n  parameters: RecoverTypedDataAddressParameters<typedData, primaryType>,\n): Promise<RecoverTypedDataAddressReturnType> {\n  const { domain, message, primaryType, signature, types } =\n    parameters as unknown as RecoverTypedDataAddressParameters\n  return recoverAddress({\n    hash: hashTypedData({\n      domain,\n      message,\n      primaryType,\n      types,\n    }),\n    signature,\n  })\n}\n"],"mappings":"AAMA,SAAsCA,aAAa,QAAQ,oBAAoB;AAC/E,SAEEC,cAAc,QACT,qBAAqB;AAgB5B,OAAO,eAAeC,uBAAuBA,CAI3CC,UAAqE;EAErE,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC,WAAW;IAAEC,SAAS;IAAEC;EAAK,CAAE,GACtDL,UAA0D;EAC5D,OAAOF,cAAc,CAAC;IACpBQ,IAAI,EAAET,aAAa,CAAC;MAClBI,MAAM;MACNC,OAAO;MACPC,WAAW;MACXE;KACD,CAAC;IACFD;GACD,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}