{"ast":null,"code":"import { LruMap } from '../lru.js';\nimport { checksumAddress } from './getAddress.js';\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\n/** @internal */\nexport const isAddressCache = /*#__PURE__*/new LruMap(8192);\nexport function isAddress(address, options) {\n  const {\n    strict = true\n  } = options ?? {};\n  const cacheKey = `${address}.${strict}`;\n  if (isAddressCache.has(cacheKey)) return isAddressCache.get(cacheKey);\n  const result = (() => {\n    if (!addressRegex.test(address)) return false;\n    if (address.toLowerCase() === address) return true;\n    if (strict) return checksumAddress(address) === address;\n    return true;\n  })();\n  isAddressCache.set(cacheKey, result);\n  return result;\n}","map":{"version":3,"names":["LruMap","checksumAddress","addressRegex","isAddressCache","isAddress","address","options","strict","cacheKey","has","get","result","test","toLowerCase","set"],"sources":["C:\\Users\\yyash\\Coding\\solana-brkout\\frontend\\node_modules\\viem\\utils\\address\\isAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { LruMap } from '../lru.js'\nimport { checksumAddress } from './getAddress.js'\n\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/\n\n/** @internal */\nexport const isAddressCache = /*#__PURE__*/ new LruMap<boolean>(8192)\n\nexport type IsAddressOptions = {\n  /**\n   * Enables strict mode. Whether or not to compare the address against its checksum.\n   *\n   * @default true\n   */\n  strict?: boolean | undefined\n}\n\nexport type IsAddressErrorType = ErrorType\n\nexport function isAddress(\n  address: string,\n  options?: IsAddressOptions | undefined,\n): address is Address {\n  const { strict = true } = options ?? {}\n  const cacheKey = `${address}.${strict}`\n\n  if (isAddressCache.has(cacheKey)) return isAddressCache.get(cacheKey)!\n\n  const result = (() => {\n    if (!addressRegex.test(address)) return false\n    if (address.toLowerCase() === address) return true\n    if (strict) return checksumAddress(address as Address) === address\n    return true\n  })()\n  isAddressCache.set(cacheKey, result)\n  return result\n}\n"],"mappings":"AAEA,SAASA,MAAM,QAAQ,WAAW;AAClC,SAASC,eAAe,QAAQ,iBAAiB;AAEjD,MAAMC,YAAY,GAAG,qBAAqB;AAE1C;AACA,OAAO,MAAMC,cAAc,GAAG,aAAc,IAAIH,MAAM,CAAU,IAAI,CAAC;AAarE,OAAM,SAAUI,SAASA,CACvBC,OAAe,EACfC,OAAsC;EAEtC,MAAM;IAAEC,MAAM,GAAG;EAAI,CAAE,GAAGD,OAAO,IAAI,EAAE;EACvC,MAAME,QAAQ,GAAG,GAAGH,OAAO,IAAIE,MAAM,EAAE;EAEvC,IAAIJ,cAAc,CAACM,GAAG,CAACD,QAAQ,CAAC,EAAE,OAAOL,cAAc,CAACO,GAAG,CAACF,QAAQ,CAAE;EAEtE,MAAMG,MAAM,GAAG,CAAC,MAAK;IACnB,IAAI,CAACT,YAAY,CAACU,IAAI,CAACP,OAAO,CAAC,EAAE,OAAO,KAAK;IAC7C,IAAIA,OAAO,CAACQ,WAAW,EAAE,KAAKR,OAAO,EAAE,OAAO,IAAI;IAClD,IAAIE,MAAM,EAAE,OAAON,eAAe,CAACI,OAAkB,CAAC,KAAKA,OAAO;IAClE,OAAO,IAAI;EACb,CAAC,EAAC,CAAE;EACJF,cAAc,CAACW,GAAG,CAACN,QAAQ,EAAEG,MAAM,CAAC;EACpC,OAAOA,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}