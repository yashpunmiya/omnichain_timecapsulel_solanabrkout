{"ast":null,"code":"function e(s, r, i = \"string\") {\n  if (!s[r] || typeof s[r] !== i) throw new Error(`Missing or invalid \"${r}\" param`);\n}\nfunction l(s, r) {\n  let i = !0;\n  return r.forEach(t => {\n    t in s || (i = !1);\n  }), i;\n}\nfunction f(s, r) {\n  return Array.isArray(s) ? s.length === r : Object.keys(s).length === r;\n}\nfunction w(s, r) {\n  return Array.isArray(s) ? s.length >= r : Object.keys(s).length >= r;\n}\nfunction u(s, r, i) {\n  return (i.length ? w(s, r.length) : f(s, r.length)) ? l(s, r) : !1;\n}\nfunction n(s, r, i = \"_\") {\n  const t = s.split(i);\n  return t[t.length - 1].trim().toLowerCase() === r.trim().toLowerCase();\n}\nfunction R(s) {\n  return b(s.method) && a(s.params);\n}\nfunction b(s) {\n  return n(s, \"subscribe\");\n}\nfunction a(s) {\n  return u(s, [\"topic\"], []);\n}\nfunction P(s) {\n  return c(s.method) && h(s.params);\n}\nfunction c(s) {\n  return n(s, \"publish\");\n}\nfunction h(s) {\n  return u(s, [\"message\", \"topic\", \"ttl\"], [\"prompt\", \"tag\"]);\n}\nfunction _(s) {\n  return o(s.method) && p(s.params);\n}\nfunction o(s) {\n  return n(s, \"unsubscribe\");\n}\nfunction p(s) {\n  return u(s, [\"id\", \"topic\"], []);\n}\nfunction S(s) {\n  return m(s.method) && d(s.params);\n}\nfunction m(s) {\n  return n(s, \"subscription\");\n}\nfunction d(s) {\n  return u(s, [\"id\", \"data\"], []);\n}\nfunction g(s) {\n  if (!b(s.method)) throw new Error(\"JSON-RPC Request has invalid subscribe method\");\n  if (!a(s.params)) throw new Error(\"JSON-RPC Request has invalid subscribe params\");\n  const r = s.params;\n  return e(r, \"topic\"), r;\n}\nfunction q(s) {\n  if (!c(s.method)) throw new Error(\"JSON-RPC Request has invalid publish method\");\n  if (!h(s.params)) throw new Error(\"JSON-RPC Request has invalid publish params\");\n  const r = s.params;\n  return e(r, \"topic\"), e(r, \"message\"), e(r, \"ttl\", \"number\"), r;\n}\nfunction E(s) {\n  if (!o(s.method)) throw new Error(\"JSON-RPC Request has invalid unsubscribe method\");\n  if (!p(s.params)) throw new Error(\"JSON-RPC Request has invalid unsubscribe params\");\n  const r = s.params;\n  return e(r, \"id\"), r;\n}\nfunction k(s) {\n  if (!m(s.method)) throw new Error(\"JSON-RPC Request has invalid subscription method\");\n  if (!d(s.params)) throw new Error(\"JSON-RPC Request has invalid subscription params\");\n  const r = s.params;\n  return e(r, \"id\"), e(r, \"data\"), r;\n}\nconst C = {\n  waku: {\n    publish: \"waku_publish\",\n    batchPublish: \"waku_batchPublish\",\n    subscribe: \"waku_subscribe\",\n    batchSubscribe: \"waku_batchSubscribe\",\n    subscription: \"waku_subscription\",\n    unsubscribe: \"waku_unsubscribe\",\n    batchUnsubscribe: \"waku_batchUnsubscribe\",\n    batchFetchMessages: \"waku_batchFetchMessages\"\n  },\n  irn: {\n    publish: \"irn_publish\",\n    batchPublish: \"irn_batchPublish\",\n    subscribe: \"irn_subscribe\",\n    batchSubscribe: \"irn_batchSubscribe\",\n    subscription: \"irn_subscription\",\n    unsubscribe: \"irn_unsubscribe\",\n    batchUnsubscribe: \"irn_batchUnsubscribe\",\n    batchFetchMessages: \"irn_batchFetchMessages\"\n  },\n  iridium: {\n    publish: \"iridium_publish\",\n    batchPublish: \"iridium_batchPublish\",\n    subscribe: \"iridium_subscribe\",\n    batchSubscribe: \"iridium_batchSubscribe\",\n    subscription: \"iridium_subscription\",\n    unsubscribe: \"iridium_unsubscribe\",\n    batchUnsubscribe: \"iridium_batchUnsubscribe\",\n    batchFetchMessages: \"iridium_batchFetchMessages\"\n  }\n};\nexport { C as RELAY_JSONRPC, c as isPublishMethod, h as isPublishParams, P as isPublishRequest, b as isSubscribeMethod, a as isSubscribeParams, R as isSubscribeRequest, m as isSubscriptionMethod, d as isSubscriptionParams, S as isSubscriptionRequest, o as isUnsubscribeMethod, p as isUnsubscribeParams, _ as isUnsubscribeRequest, q as parsePublishRequest, g as parseSubscribeRequest, k as parseSubscriptionRequest, E as parseUnsubscribeRequest };\n//# sourceMappingURL=index.es.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}