{"ast":null,"code":"import { numberToHex } from '../../utils/encoding/toHex.js';\nimport { formatProof } from '../../utils/formatters/proof.js';\n/**\n * Returns the account and storage values of the specified account including the Merkle-proof.\n *\n * - Docs: https://viem.sh/docs/actions/public/getProof\n * - JSON-RPC Methods:\n *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\n *\n * @param client - Client to use\n * @param parameters - {@link GetProofParameters}\n * @returns Proof data. {@link GetProofReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getProof } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getProof(client, {\n *  address: '0x...',\n *  storageKeys: ['0x...'],\n * })\n */\nexport async function getProof(client, {\n  address,\n  blockNumber,\n  blockTag: blockTag_,\n  storageKeys\n}) {\n  const blockTag = blockTag_ ?? 'latest';\n  const blockNumberHex = blockNumber !== undefined ? numberToHex(blockNumber) : undefined;\n  const proof = await client.request({\n    method: 'eth_getProof',\n    params: [address, storageKeys, blockNumberHex || blockTag]\n  });\n  return formatProof(proof);\n}\n//# sourceMappingURL=getProof.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}