{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport { colorStyles, elementStyles, resetStyles } from '../../utils/ThemeUtil.js';\nimport { customElement } from '../../utils/WebComponentsUtil.js';\nimport styles from './styles.js';\nlet WuiSwitch = class WuiSwitch extends LitElement {\n  constructor() {\n    super(...arguments);\n    this.inputElementRef = createRef();\n    this.checked = undefined;\n  }\n  render() {\n    return html`\n      <label>\n        <input\n          ${ref(this.inputElementRef)}\n          type=\"checkbox\"\n          ?checked=${ifDefined(this.checked)}\n          @change=${this.dispatchChangeEvent.bind(this)}\n        />\n        <span></span>\n      </label>\n    `;\n  }\n  dispatchChangeEvent() {\n    this.dispatchEvent(new CustomEvent('switchChange', {\n      detail: this.inputElementRef.value?.checked,\n      bubbles: true,\n      composed: true\n    }));\n  }\n};\nWuiSwitch.styles = [resetStyles, elementStyles, colorStyles, styles];\n__decorate([property({\n  type: Boolean\n})], WuiSwitch.prototype, \"checked\", void 0);\nWuiSwitch = __decorate([customElement('wui-switch')], WuiSwitch);\nexport { WuiSwitch };\n//# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}