{"ast":null,"code":"import { InvalidDefinitionTypeError } from '../../errors/abi.js';\nexport function formatAbiItem(abiItem, {\n  includeName = false\n} = {}) {\n  if (abiItem.type !== 'function' && abiItem.type !== 'event' && abiItem.type !== 'error') throw new InvalidDefinitionTypeError(abiItem.type);\n  return `${abiItem.name}(${formatAbiParams(abiItem.inputs, {\n    includeName\n  })})`;\n}\nexport function formatAbiParams(params, {\n  includeName = false\n} = {}) {\n  if (!params) return '';\n  return params.map(param => formatAbiParam(param, {\n    includeName\n  })).join(includeName ? ', ' : ',');\n}\nfunction formatAbiParam(param, {\n  includeName\n}) {\n  if (param.type.startsWith('tuple')) {\n    return `(${formatAbiParams(param.components, {\n      includeName\n    })})${param.type.slice('tuple'.length)}`;\n  }\n  return param.type + (includeName && param.name ? ` ${param.name}` : '');\n}\n//# sourceMappingURL=formatAbiItem.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}