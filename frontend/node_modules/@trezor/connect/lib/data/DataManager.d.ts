import type { ConnectSettings, LocalFirmwares } from '../types/settings';
type AssetCollection = {
    [key: string]: Record<string, any>;
};
export declare class DataManager {
    static assets: AssetCollection;
    private static settings;
    private static messages;
    private static localFirmwares;
    static load(settings: ConnectSettings, withAssets?: boolean): void;
    static getProtobufMessages(): Record<string, any>;
    static getSettings(key?: undefined): ConnectSettings;
    static getSettings<T extends keyof ConnectSettings>(key: T): ConnectSettings[T];
    static setLocalFirmwares(firmwares: LocalFirmwares): void;
    static getLocalFirmwares(): LocalFirmwares;
}
export {};
//# sourceMappingURL=DataManager.d.ts.map